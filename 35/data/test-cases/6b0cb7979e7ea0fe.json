{"uid":"6b0cb7979e7ea0fe","name":"test_filter_get_message_with_ephemeral","fullName":"tests.filter.test_get_messages.TestFilterGetMessages#test_filter_get_message_with_ephemeral","historyId":"f5f86d428f0208c7e8e1f0eb7dc4af58","time":{"start":1705579457395,"stop":1705579457626,"duration":231},"status":"failed","statusMessage":"AssertionError: Ephemeral that failed: [True, False]\nassert not [True, False]","statusTrace":"tests/filter/test_get_messages.py:53: in test_filter_get_message_with_ephemeral\n    assert not failed_ephemeral, f\"Ephemeral that failed: {failed_ephemeral}\"\nE   AssertionError: Ephemeral that failed: [True, False]\nE   assert not [True, False]","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"set_allure_env_variables","time":{"start":1705579374128,"stop":1705579374128,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"attach_logs_on_fail","time":{"start":1705579451785,"stop":1705579451785,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"test_setup","time":{"start":1705579451786,"stop":1705579451786,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"close_open_nodes","time":{"start":1705579451786,"stop":1705579451786,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"test_id","time":{"start":1705579451786,"stop":1705579451786,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"filter_setup","time":{"start":1705579451787,"stop":1705579451787,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_main_relay_node","time":{"start":1705579451787,"stop":1705579453423,"duration":1636},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_main_filter_node","time":{"start":1705579453424,"stop":1705579455156,"duration":1732},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"subscribe_main_nodes","time":{"start":1705579455156,"stop":1705579457394,"duration":2238},"status":"passed","steps":[{"name":"wait_for_subscriptions_on_main_nodes","time":{"start":1705579455157,"stop":1705579457394,"duration":2237},"status":"passed","steps":[{"name":"create_filter_subscription_with_retry","time":{"start":1705579455174,"stop":1705579457394,"duration":2220},"status":"passed","steps":[{"name":"create_filter_subscription","time":{"start":1705579455174,"stop":1705579457394,"duration":2220},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"subscription","value":"{'requestId': '5aee30e9-7c25-4738-878a-07b8fe9b9559', 'contentFilters': ['/test/1/waku-filter/proto'], 'pubsubTopic': '/waku/2/rs/0/1'}"},{"name":"node","value":"None"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"subscription","value":"{'requestId': '5aee30e9-7c25-4738-878a-07b8fe9b9559', 'contentFilters': ['/test/1/waku-filter/proto'], 'pubsubTopic': '/waku/2/rs/0/1'}"},{"name":"node","value":"None"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"content_topic_list","value":"['/test/1/waku-filter/proto']"},{"name":"pubsub_topic","value":"None"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Ephemeral that failed: [True, False]\nassert not [True, False]","statusTrace":"tests/filter/test_get_messages.py:53: in test_filter_get_message_with_ephemeral\n    assert not failed_ephemeral, f\"Ephemeral that failed: {failed_ephemeral}\"\nE   AssertionError: Ephemeral that failed: [True, False]\nE   assert not [True, False]","steps":[{"name":"create_message","time":{"start":1705579457396,"stop":1705579457396,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"ephemeral","value":"True"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"check_published_message_reaches_filter_peer","time":{"start":1705579457396,"stop":1705579457512,"duration":116},"status":"failed","statusMessage":"AssertionError: Incorrect field: ephemeral. Published: True Received: None\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/steps/filter.py\", line 99, in check_published_message_reaches_filter_peer\n    waku_message.assert_received_message(message)\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/waku_message.py\", line 46, in assert_received_message\n    assert str(message.ephemeral) == str(sent_message[\"ephemeral\"]), assert_fail_message(\"ephemeral\")\n","steps":[{"name":"get_filter_messages","time":{"start":1705579457503,"stop":1705579457511,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"content_topic","value":"'/test/1/waku-filter/proto'"},{"name":"pubsub_topic","value":"'/waku/2/rs/0/1'"},{"name":"node","value":"<src.node.waku_node.WakuNode object at 0x7f77d8279130>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"assert_received_message","time":{"start":1705579457511,"stop":1705579457511,"duration":0},"status":"failed","statusMessage":"AssertionError: Incorrect field: ephemeral. Published: True Received: None\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/waku_message.py\", line 46, in assert_received_message\n    assert str(message.ephemeral) == str(sent_message[\"ephemeral\"]), assert_fail_message(\"ephemeral\")\n","steps":[],"attachments":[],"parameters":[{"name":"sent_message","value":"{'payload': 'RmlsdGVyIHdvcmtzISE=', 'contentTopic': '/test/1/waku-filter/proto', 'timestamp': 1705579457395679744, 'ephemeral': True}"},{"name":"index","value":"0"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"message","value":"{'payload': 'RmlsdGVyIHdvcmtzISE=', 'contentTopic': '/test/1/waku-filter/proto', 'timestamp': 1705579457395679744, 'ephemeral': True}"},{"name":"pubsub_topic","value":"None"},{"name":"message_propagation_delay","value":"0.1"},{"name":"sender","value":"None"},{"name":"peer_list","value":"None"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"create_message","time":{"start":1705579457513,"stop":1705579457513,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"ephemeral","value":"False"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"check_published_message_reaches_filter_peer","time":{"start":1705579457513,"stop":1705579457625,"duration":112},"status":"failed","statusMessage":"AssertionError: Incorrect field: ephemeral. Published: False Received: None\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/steps/filter.py\", line 99, in check_published_message_reaches_filter_peer\n    waku_message.assert_received_message(message)\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/waku_message.py\", line 46, in assert_received_message\n    assert str(message.ephemeral) == str(sent_message[\"ephemeral\"]), assert_fail_message(\"ephemeral\")\n","steps":[{"name":"get_filter_messages","time":{"start":1705579457621,"stop":1705579457624,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"content_topic","value":"'/test/1/waku-filter/proto'"},{"name":"pubsub_topic","value":"'/waku/2/rs/0/1'"},{"name":"node","value":"<src.node.waku_node.WakuNode object at 0x7f77d8279130>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"assert_received_message","time":{"start":1705579457625,"stop":1705579457625,"duration":0},"status":"failed","statusMessage":"AssertionError: Incorrect field: ephemeral. Published: False Received: None\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/waku_message.py\", line 46, in assert_received_message\n    assert str(message.ephemeral) == str(sent_message[\"ephemeral\"]), assert_fail_message(\"ephemeral\")\n","steps":[],"attachments":[],"parameters":[{"name":"sent_message","value":"{'payload': 'RmlsdGVyIHdvcmtzISE=', 'contentTopic': '/test/1/waku-filter/proto', 'timestamp': 1705579457512531456, 'ephemeral': False}"},{"name":"index","value":"0"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"message","value":"{'payload': 'RmlsdGVyIHdvcmtzISE=', 'contentTopic': '/test/1/waku-filter/proto', 'timestamp': 1705579457512531456, 'ephemeral': False}"},{"name":"pubsub_topic","value":"None"},{"name":"message_propagation_delay","value":"0.1"},{"name":"sender","value":"None"},{"name":"peer_list","value":"None"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"99ca9d685689372d","name":"log","source":"99ca9d685689372d.txt","type":"text/plain","size":23150}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":8,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"test_setup::0","time":{"start":1705579457635,"stop":1705579457636,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"close_open_nodes::0","time":{"start":1705579457636,"stop":1705579462335,"duration":4699},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"attach_logs_on_fail::0","time":{"start":1705579462336,"stop":1705579462338,"duration":2},"status":"passed","steps":[],"attachments":[{"uid":"d327d0da0ab031df","name":"node1_2024-01-18_12-04-11__857d86f9-c501-4e85-9f30-7b1c1319fd30__harbor.status.im_wakuorg_go-waku:latest.log","source":"d327d0da0ab031df.txt","type":"text/plain","size":50515},{"uid":"48ee72afd9e6adc6","name":"node2_2024-01-18_12-04-11__857d86f9-c501-4e85-9f30-7b1c1319fd30__harbor.status.im_wakuorg_go-waku:latest.log","source":"48ee72afd9e6adc6.txt","type":"text/plain","size":52871}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},{"name":"set_allure_env_variables::0","time":{"start":1705579989107,"stop":1705579989107,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"@pytest.mark.usefixtures('setup_main_relay_node', 'setup_main_filter_node', 'subscribe_main_nodes')"},{"name":"parentSuite","value":"tests.filter"},{"name":"suite","value":"test_get_messages"},{"name":"subSuite","value":"TestFilterGetMessages"},{"name":"host","value":"fv-az891-717"},{"name":"thread","value":"2055-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.filter.test_get_messages"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"675045ab3d38f977","status":"failed","statusDetails":"AssertionError: Ephemeral that failed: [True, False]\nassert not [True, False]","time":{"start":1705579446938,"stop":1705579447161,"duration":223}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":8,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":8},"items":[{"uid":"692ccc695bfaab3b","reportUrl":"https://waku-org.github.io/waku-interop-tests/29//#testresult/692ccc695bfaab3b","status":"failed","statusDetails":"AssertionError: Ephemeral that failed: [True, False]\nassert not [True, False]","time":{"start":1705579445379,"stop":1705579445391,"duration":12}},{"uid":"7dedf5dc3f64d37f","reportUrl":"https://waku-org.github.io/waku-interop-tests/32//#testresult/7dedf5dc3f64d37f","status":"failed","statusDetails":"AssertionError: Ephemeral that failed: [True, False]\nassert not [True, False]","time":{"start":1705577080140,"stop":1705577080367,"duration":227}},{"uid":"b1e7f84b181b5556","reportUrl":"https://waku-org.github.io/waku-interop-tests/26//#testresult/b1e7f84b181b5556","status":"failed","statusDetails":"AssertionError: Ephemeral that failed: [True, False]\nassert not [True, False]","time":{"start":1705577054152,"stop":1705577054172,"duration":20}},{"uid":"37c6bf059176d357","reportUrl":"https://waku-org.github.io/waku-interop-tests/30//#testresult/37c6bf059176d357","status":"failed","statusDetails":"AssertionError: Ephemeral that failed: [True, False]\nassert not [True, False]","time":{"start":1705575424369,"stop":1705575424603,"duration":234}},{"uid":"ce78d661bb5b525","reportUrl":"https://waku-org.github.io/waku-interop-tests/24//#testresult/ce78d661bb5b525","status":"failed","statusDetails":"AssertionError: Ephemeral that failed: [True, False]\nassert not [True, False]","time":{"start":1705575392363,"stop":1705575392374,"duration":11}},{"uid":"8d9574b0627040de","reportUrl":"https://waku-org.github.io/waku-interop-tests/23//#testresult/8d9574b0627040de","status":"failed","statusDetails":"AssertionError: Ephemeral that failed: [True, False]\nassert not [True, False]","time":{"start":1705574101375,"stop":1705574101392,"duration":17}},{"uid":"cf9ac16fdf27af63","reportUrl":"https://waku-org.github.io/waku-interop-tests/29//#testresult/cf9ac16fdf27af63","status":"failed","statusDetails":"AssertionError: Ephemeral that failed: [True, False]\nassert not [True, False]","time":{"start":1705572934240,"stop":1705572934469,"duration":229}}]},"tags":["@pytest.mark.usefixtures('setup_main_relay_node', 'setup_main_filter_node', 'subscribe_main_nodes')"]},"source":"6b0cb7979e7ea0fe.json","parameterValues":[]}