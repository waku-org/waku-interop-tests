{"uid":"42330efaf7e92a21","name":"test_filter_get_message_with_meta","fullName":"tests.filter.test_get_messages.TestFilterGetMessages#test_filter_get_message_with_meta","historyId":"61930fb46854520e898f847d72c30086","time":{"start":1705587879908,"stop":1705587880017,"duration":109},"status":"failed","statusMessage":"AssertionError: Incorrect field: meta. Published: RmlsdGVyIHdvcmtzISE= Received: None","statusTrace":"tests/filter/test_get_messages.py:44: in test_filter_get_message_with_meta\n    self.check_published_message_reaches_filter_peer(self.create_message(meta=to_base64(self.test_payload)))\nsrc/steps/filter.py:99: in check_published_message_reaches_filter_peer\n    waku_message.assert_received_message(message)\nsrc/node/waku_message.py:44: in assert_received_message\n    assert str(message.meta) == str(sent_message[\"meta\"]), assert_fail_message(\"meta\")\nE   AssertionError: Incorrect field: meta. Published: RmlsdGVyIHdvcmtzISE= Received: None","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"set_allure_env_variables","time":{"start":1705587811148,"stop":1705587811148,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"attach_logs_on_fail","time":{"start":1705587876736,"stop":1705587876736,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"test_id","time":{"start":1705587876736,"stop":1705587876737,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"close_open_nodes","time":{"start":1705587876736,"stop":1705587876736,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_main_relay_node","time":{"start":1705587876737,"stop":1705587878319,"duration":1582},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"filter_setup","time":{"start":1705587876737,"stop":1705587876737,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"test_setup","time":{"start":1705587876737,"stop":1705587876737,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_main_filter_node","time":{"start":1705587878319,"stop":1705587879897,"duration":1578},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"subscribe_main_nodes","time":{"start":1705587879897,"stop":1705587879908,"duration":11},"status":"passed","steps":[{"name":"wait_for_subscriptions_on_main_nodes","time":{"start":1705587879898,"stop":1705587879908,"duration":10},"status":"passed","steps":[{"name":"create_filter_subscription_with_retry","time":{"start":1705587879901,"stop":1705587879908,"duration":7},"status":"passed","steps":[{"name":"create_filter_subscription","time":{"start":1705587879901,"stop":1705587879907,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"subscription","value":"{'requestId': '3a72966f-8e54-40df-a784-e1b846f45d3d', 'contentFilters': ['/test/1/waku-filter/proto'], 'pubsubTopic': '/waku/2/rs/0/1'}"},{"name":"node","value":"None"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"subscription","value":"{'requestId': '3a72966f-8e54-40df-a784-e1b846f45d3d', 'contentFilters': ['/test/1/waku-filter/proto'], 'pubsubTopic': '/waku/2/rs/0/1'}"},{"name":"node","value":"None"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"content_topic_list","value":"['/test/1/waku-filter/proto']"},{"name":"pubsub_topic","value":"None"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Incorrect field: meta. Published: RmlsdGVyIHdvcmtzISE= Received: None","statusTrace":"tests/filter/test_get_messages.py:44: in test_filter_get_message_with_meta\n    self.check_published_message_reaches_filter_peer(self.create_message(meta=to_base64(self.test_payload)))\nsrc/steps/filter.py:99: in check_published_message_reaches_filter_peer\n    waku_message.assert_received_message(message)\nsrc/node/waku_message.py:44: in assert_received_message\n    assert str(message.meta) == str(sent_message[\"meta\"]), assert_fail_message(\"meta\")\nE   AssertionError: Incorrect field: meta. Published: RmlsdGVyIHdvcmtzISE= Received: None","steps":[{"name":"create_message","time":{"start":1705587879908,"stop":1705587879908,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"meta","value":"'RmlsdGVyIHdvcmtzISE='"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"check_published_message_reaches_filter_peer","time":{"start":1705587879908,"stop":1705587880016,"duration":108},"status":"failed","statusMessage":"AssertionError: Incorrect field: meta. Published: RmlsdGVyIHdvcmtzISE= Received: None\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/steps/filter.py\", line 99, in check_published_message_reaches_filter_peer\n    waku_message.assert_received_message(message)\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/waku_message.py\", line 44, in assert_received_message\n    assert str(message.meta) == str(sent_message[\"meta\"]), assert_fail_message(\"meta\")\n","steps":[{"name":"get_filter_messages","time":{"start":1705587880012,"stop":1705587880016,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"content_topic","value":"'/test/1/waku-filter/proto'"},{"name":"pubsub_topic","value":"'/waku/2/rs/0/1'"},{"name":"node","value":"<src.node.waku_node.WakuNode object at 0x7f8effd7b3e0>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"assert_received_message","time":{"start":1705587880016,"stop":1705587880016,"duration":0},"status":"failed","statusMessage":"AssertionError: Incorrect field: meta. Published: RmlsdGVyIHdvcmtzISE= Received: None\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/waku_message.py\", line 44, in assert_received_message\n    assert str(message.meta) == str(sent_message[\"meta\"]), assert_fail_message(\"meta\")\n","steps":[],"attachments":[],"parameters":[{"name":"sent_message","value":"{'payload': 'RmlsdGVyIHdvcmtzISE=', 'contentTopic': '/test/1/waku-filter/proto', 'timestamp': 1705587879908307456, 'meta': 'RmlsdGVyIHdvcmtzISE='}"},{"name":"index","value":"0"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"message","value":"{'payload': 'RmlsdGVyIHdvcmtzISE=', 'contentTopic': '/test/1/waku-filter/proto', 'timestamp': 1705587879908307456, 'meta': 'RmlsdGVyIHdvcmtzISE='}"},{"name":"pubsub_topic","value":"None"},{"name":"message_propagation_delay","value":"0.1"},{"name":"sender","value":"None"},{"name":"peer_list","value":"None"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"f790cd2a4e4c7b70","name":"log","source":"f790cd2a4e4c7b70.txt","type":"text/plain","size":19560}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"test_setup::0","time":{"start":1705587880034,"stop":1705587880035,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"close_open_nodes::0","time":{"start":1705587880036,"stop":1705587887217,"duration":7181},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"attach_logs_on_fail::0","time":{"start":1705587887218,"stop":1705587887219,"duration":1},"status":"passed","steps":[],"attachments":[{"uid":"cae964c36370427e","name":"node1_2024-01-18_14-24-36__79a2a5ee-1598-4a9a-8142-3b497544f77b__harbor.status.im_wakuorg_go-waku:latest.log","source":"cae964c36370427e.txt","type":"text/plain","size":48246},{"uid":"9b567871c030f4d2","name":"node2_2024-01-18_14-24-36__79a2a5ee-1598-4a9a-8142-3b497544f77b__harbor.status.im_wakuorg_nwaku:latest.log","source":"9b567871c030f4d2.txt","type":"text/plain","size":124226}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},{"name":"set_allure_env_variables::0","time":{"start":1705588175304,"stop":1705588175304,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"@pytest.mark.xfail(False, reason='Bug reported: https://github.com/waku-org/nwaku/issues/2214')"},{"name":"tag","value":"@pytest.mark.usefixtures('setup_main_relay_node', 'setup_main_filter_node', 'subscribe_main_nodes')"},{"name":"parentSuite","value":"tests.filter"},{"name":"suite","value":"test_get_messages"},{"name":"subSuite","value":"TestFilterGetMessages"},{"name":"host","value":"fv-az1429-841"},{"name":"thread","value":"2054-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.filter.test_get_messages"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"444c139b7544c1b5","status":"failed","statusDetails":"AssertionError: Incorrect field: meta. Published: RmlsdGVyIHdvcmtzISE= Received: None","time":{"start":1705587870327,"stop":1705587870439,"duration":112}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":4,"skipped":0,"passed":4,"unknown":0,"total":9},"items":[{"uid":"674c9b6895194fdb","reportUrl":"https://waku-org.github.io/waku-interop-tests/35//#testresult/674c9b6895194fdb","status":"passed","time":{"start":1705579434544,"stop":1705579434655,"duration":111}},{"uid":"2e69690167e1afdf","reportUrl":"https://waku-org.github.io/waku-interop-tests/29//#testresult/2e69690167e1afdf","status":"broken","statusDetails":"Exception: Error: 400 Client Error: Bad Request for url: http://127.0.0.1:35412/relay/v1/messages/%2Fwaku%2F2%2Frs%2F0%2F1 with response: b'Invalid content body, could not decode. Unable to deserialize data'","time":{"start":1705579429062,"stop":1705579429071,"duration":9}},{"uid":"f1b5946d72ceae33","reportUrl":"https://waku-org.github.io/waku-interop-tests/32//#testresult/f1b5946d72ceae33","status":"passed","time":{"start":1705577051037,"stop":1705577051148,"duration":111}},{"uid":"47f3a5473fc2902","reportUrl":"https://waku-org.github.io/waku-interop-tests/26//#testresult/47f3a5473fc2902","status":"broken","statusDetails":"Exception: Error: 400 Client Error: Bad Request for url: http://127.0.0.1:9775/relay/v1/messages/%2Fwaku%2F2%2Frs%2F0%2F1 with response: b'Invalid content body, could not decode. Unable to deserialize data'","time":{"start":1705577040143,"stop":1705577040151,"duration":8}},{"uid":"a29daeef10072d73","reportUrl":"https://waku-org.github.io/waku-interop-tests/30//#testresult/a29daeef10072d73","status":"passed","time":{"start":1705575396701,"stop":1705575396809,"duration":108}},{"uid":"2a901dd477b4135d","reportUrl":"https://waku-org.github.io/waku-interop-tests/24//#testresult/2a901dd477b4135d","status":"broken","statusDetails":"Exception: Error: 400 Client Error: Bad Request for url: http://127.0.0.1:4704/relay/v1/messages/%2Fwaku%2F2%2Frs%2F0%2F1 with response: b'Invalid content body, could not decode. Unable to deserialize data'","time":{"start":1705575376144,"stop":1705575376158,"duration":14}},{"uid":"ec2a2bb85a54bb3e","reportUrl":"https://waku-org.github.io/waku-interop-tests/23//#testresult/ec2a2bb85a54bb3e","status":"broken","statusDetails":"Exception: Error: 400 Client Error: Bad Request for url: http://127.0.0.1:3379/relay/v1/messages/%2Fwaku%2F2%2Frs%2F0%2F1 with response: b'Invalid content body, could not decode. Unable to deserialize data'","time":{"start":1705574083209,"stop":1705574083217,"duration":8}},{"uid":"2b2f1098ae1536c6","reportUrl":"https://waku-org.github.io/waku-interop-tests/29//#testresult/2b2f1098ae1536c6","status":"passed","time":{"start":1705572906703,"stop":1705572906823,"duration":120}}]},"tags":["@pytest.mark.xfail(False, reason='Bug reported: https://github.com/waku-org/nwaku/issues/2214')","@pytest.mark.usefixtures('setup_main_relay_node', 'setup_main_filter_node', 'subscribe_main_nodes')"]},"source":"42330efaf7e92a21.json","parameterValues":[]}