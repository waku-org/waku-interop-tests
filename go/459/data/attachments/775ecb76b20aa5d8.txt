2025-02-09 03:09:31.345 DEBUG [tests.conftest] Running fixture setup: test_id
2025-02-09 03:09:31.346 DEBUG [tests.conftest] Running test: test_publish_with_invalid_timestamps with id: 2025-02-09_03-09-31__246a781a-03a3-417f-88b8-41ed7edcee87
2025-02-09 03:09:31.346 DEBUG [src.steps.common] Running fixture setup: common_setup
2025-02-09 03:09:31.346 DEBUG [src.steps.relay] Running fixture setup: relay_setup
2025-02-09 03:09:31.346 DEBUG [src.steps.relay] Running fixture setup: setup_main_relay_nodes
2025-02-09 03:09:31.353 DEBUG [src.node.docker_mananger] Docker client initialized with image wakuorg/nwaku:latest
2025-02-09 03:09:31.353 DEBUG [src.node.waku_node] WakuNode instance initialized with log path ./log/docker/node1_2025-02-09_03-09-31__246a781a-03a3-417f-88b8-41ed7edcee87__wakuorg_nwaku:latest.log
2025-02-09 03:09:31.353 DEBUG [src.node.waku_node] Starting Node...
2025-02-09 03:09:31.353 DEBUG [src.node.docker_mananger] Attempting to create or retrieve network waku
2025-02-09 03:09:31.355 DEBUG [src.node.docker_mananger] Network waku already exists
2025-02-09 03:09:31.355 DEBUG [src.node.docker_mananger] Generated random external IP 172.18.3.35
2025-02-09 03:09:31.355 DEBUG [src.node.docker_mananger] Generated ports ['49703', '49704', '49705', '49706', '49707']
2025-02-09 03:09:31.355 DEBUG [src.node.waku_node] RLN credentials were not set
2025-02-09 03:09:31.355 INFO [src.node.waku_node] RLN credentials not set or credential store not available, starting without RLN
2025-02-09 03:09:31.356 DEBUG [src.node.waku_node] Using volumes []
2025-02-09 03:09:31.356 DEBUG [src.node.docker_mananger] docker run -i -t -p 49703:49703 -p 49704:49704 -p 49705:49705 -p 49706:49706 -p 49707:49707 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=49705 --rest-port=49703 --tcp-port=49704 --discv5-udp-port=49706 --rest-address=0.0.0.0 --nat=extip:172.18.3.35 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=addedca3cbeb11dcfcb538017e7bac3c79de01ad5eeaae5ee1d351dce569314b --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=49707 --metrics-logging=true --relay=true
2025-02-09 03:09:31.585 DEBUG [src.node.docker_mananger] docker network connect --ip 172.18.3.35 waku 91ba01cc91c980063a3948f9a7d5b3e55a146a6eaa9053a7dd906a5c4d7d7b0c
2025-02-09 03:09:31.635 DEBUG [src.node.docker_mananger] Container started with ID 91ba01cc91c9. Setting up logs at ./log/docker/node1_2025-02-09_03-09-31__246a781a-03a3-417f-88b8-41ed7edcee87__wakuorg_nwaku:latest.log
2025-02-09 03:09:31.635 DEBUG [src.node.waku_node] Started container from image wakuorg/nwaku:latest. REST: 49703
2025-02-09 03:09:31.635 DEBUG [src.libs.common] Sleeping for 1 seconds
2025-02-09 03:09:32.135 ERROR [src.node.docker_mananger] Max retries reached for container 80bda88474f3. Exiting log stream.
2025-02-09 03:09:32.637 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:49703/health" -H "Content-Type: application/json" -d 'None'
2025-02-09 03:09:32.639 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
2025-02-09 03:09:32.639 INFO [src.node.waku_node] Node protocols are initialized !!
2025-02-09 03:09:32.640 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:49703/debug/v1/info" -H "Content-Type: application/json" -d 'None'
2025-02-09 03:09:32.642 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.3.35/tcp/49704/p2p/16Uiu2HAmJ4Uutbb6iq6J2TqVY4j498Z844bHykieDS7x8CQ5fkXJ","/ip4/172.18.3.35/tcp/49705/ws/p2p/16Uiu2HAmJ4Uutbb6iq6J2TqVY4j498Z844bHykieDS7x8CQ5fkXJ"],"enrUri":"enr:-L24QA7qYe5YoFzXmV5WG_0fKZhtN_lfl5j9slQHXDkUISGTX9hRubFF_jgD6m0LGeLKvsQcvo1pLo5o-fgzEslGyrMCgmlkgnY0gmlwhKwSAyOKbXVsdGlhZGRyc5YACASsEgMjBsIoAAoErBIDIwbCKd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDUE8WpvdtEqjchVWpmZCXUY8brKCCAGWJvtQjNT0NOLmDdGNwgsIog3VkcILCKoV3YWt1MgE"}'
2025-02-09 03:09:32.642 INFO [src.node.waku_node] REST service is ready !!
2025-02-09 03:09:32.648 DEBUG [src.node.docker_mananger] Docker client initialized with image wakuorg/go-waku:latest
2025-02-09 03:09:32.648 DEBUG [src.node.waku_node] WakuNode instance initialized with log path ./log/docker/node2_2025-02-09_03-09-31__246a781a-03a3-417f-88b8-41ed7edcee87__wakuorg_go-waku:latest.log
2025-02-09 03:09:32.648 DEBUG [src.node.waku_node] Starting Node...
2025-02-09 03:09:32.648 DEBUG [src.node.docker_mananger] Attempting to create or retrieve network waku
2025-02-09 03:09:32.650 DEBUG [src.node.docker_mananger] Network waku already exists
2025-02-09 03:09:32.650 DEBUG [src.node.docker_mananger] Generated random external IP 172.18.128.199
2025-02-09 03:09:32.650 DEBUG [src.node.docker_mananger] Generated ports ['64430', '64431', '64432', '64433', '64434']
2025-02-09 03:09:32.650 DEBUG [src.node.waku_node] RLN credentials were not set
2025-02-09 03:09:32.650 INFO [src.node.waku_node] RLN credentials not set or credential store not available, starting without RLN
2025-02-09 03:09:32.650 DEBUG [src.node.waku_node] Using volumes []
2025-02-09 03:09:32.651 DEBUG [src.node.docker_mananger] docker run -i -t -p 64430:64430 -p 64431:64431 -p 64432:64432 -p 64433:64433 -p 64434:64434 wakuorg/go-waku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=DEBUG --rest-relay-cache-capacity=100 --websocket-port=64432 --rest-port=64430 --tcp-port=64431 --discv5-udp-port=64433 --rest-address=0.0.0.0 --nat=extip:172.18.128.199 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=d0d9389ece31127fba407d50d41c46fcfc7ee3d5e5be3dd546bdae7a0de9fbcf --min-relay-peers-to-publish=1 --rest-filter-cache-capacity=50 --peer-store-capacity=10 --relay=true --discv5-bootstrap-node=enr:-L24QA7qYe5YoFzXmV5WG_0fKZhtN_lfl5j9slQHXDkUISGTX9hRubFF_jgD6m0LGeLKvsQcvo1pLo5o-fgzEslGyrMCgmlkgnY0gmlwhKwSAyOKbXVsdGlhZGRyc5YACASsEgMjBsIoAAoErBIDIwbCKd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDUE8WpvdtEqjchVWpmZCXUY8brKCCAGWJvtQjNT0NOLmDdGNwgsIog3VkcILCKoV3YWt1MgE
2025-02-09 03:09:32.877 DEBUG [src.node.docker_mananger] docker network connect --ip 172.18.128.199 waku 91c96d02ad9c4239af6de697d5319ca8d9b2dfb237d87a914f406893e424f746
2025-02-09 03:09:32.931 DEBUG [src.node.docker_mananger] Container started with ID 91c96d02ad9c. Setting up logs at ./log/docker/node2_2025-02-09_03-09-31__246a781a-03a3-417f-88b8-41ed7edcee87__wakuorg_go-waku:latest.log
2025-02-09 03:09:32.932 DEBUG [src.node.waku_node] Started container from image wakuorg/go-waku:latest. REST: 64430
2025-02-09 03:09:32.933 DEBUG [src.libs.common] Sleeping for 1 seconds
2025-02-09 03:09:33.934 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:64430/debug/v1/info" -H "Content-Type: application/json" -d 'None'
2025-02-09 03:09:33.937 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"enrUri":"enr:-J-4QJA9SiT7ZvixMOO59YIPgVI3VVGjbI0j0YIbZFSBz9zMIXrJs7i9AGFgnTWCRECFv3H9STdPOD9BwVg6YohjoHqGAZTorwl9gmlkgnY0gmlwhKwRAAOCcnODAAMAiXNlY3AyNTZrMaED79K_vlaBs4cXX_fIKhF6JjsUZo8rAXGdqfDd6EOFHcuDdGNwgvuvg3VkcIL7sYV3YWt1MgE","listenAddresses":["/ip4/127.0.0.1/tcp/64431/p2p/16Uiu2HAmUoABGdFg9utFaC6Ei8f7mJ7r4NsSJzd2Fkx3XRPfPkd8","/ip4/127.0.0.1/tcp/64432/ws/p2p/16Uiu2HAmUoABGdFg9utFaC6Ei8f7mJ7r4NsSJzd2Fkx3XRPfPkd8","/ip4/172.17.0.3/tcp/64431/p2p/16Uiu2HAmUoABGdFg9utFaC6Ei8f7mJ7r4NsSJzd2Fkx3XRPfPkd8","/ip4/172.17.0.3/tcp/64432/ws/p2p/16Uiu2HAmUoABGdFg9utFaC6Ei8f7mJ7r4NsSJzd2Fkx3XRPfPkd8"]}'
2025-02-09 03:09:33.937 INFO [src.node.waku_node] REST service is ready !!
2025-02-09 03:09:33.938 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:64430/admin/v1/peers" -H "Content-Type: application/json" -d '{"multiaddr": "/ip4/172.18.3.35/tcp/49704/p2p/16Uiu2HAmJ4Uutbb6iq6J2TqVY4j498Z844bHykieDS7x8CQ5fkXJ", "protocols": ["/vac/waku/relay/2.0.0"], "shards": [0, 1, 2, 3, 4, 5, 6, 7, 8]}'
2025-02-09 03:09:33.954 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'null'
2025-02-09 03:09:33.955 DEBUG [src.steps.relay] Running fixture setup: subscribe_main_relay_nodes
2025-02-09 03:09:33.956 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:49703/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
2025-02-09 03:09:33.980 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-09 03:09:33.980 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:64430/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
2025-02-09 03:09:33.982 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'true'
2025-02-09 03:09:33.984 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:49703/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-09 03:09:33.995 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-09 03:09:33.996 DEBUG [src.libs.common] Sleeping for 0.1 seconds
2025-02-09 03:09:34.096 DEBUG [src.steps.relay] Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
2025-02-09 03:09:34.097 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:49703/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
2025-02-09 03:09:34.099 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1739070573984080384,"ephemeral":false}]'
2025-02-09 03:09:34.101 DEBUG [src.steps.relay] Checking that peer NODE_2:wakuorg/go-waku:latest can find the published message
2025-02-09 03:09:34.101 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:64430/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
2025-02-09 03:09:34.103 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'null'
2025-02-09 03:09:35.103 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:49703/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-09 03:09:35.108 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-09 03:09:35.109 DEBUG [src.libs.common] Sleeping for 0.1 seconds
2025-02-09 03:09:35.209 DEBUG [src.steps.relay] Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
2025-02-09 03:09:35.209 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:49703/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
2025-02-09 03:09:35.211 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1739070575103691008,"ephemeral":false}]'
2025-02-09 03:09:35.213 DEBUG [src.steps.relay] Checking that peer NODE_2:wakuorg/go-waku:latest can find the published message
2025-02-09 03:09:35.213 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:64430/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
2025-02-09 03:09:35.215 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1739070575103691008,"ephemeral":false}]'
2025-02-09 03:09:35.216 INFO [src.steps.relay] WARM UP successful!!
2025-02-09 03:09:35.217 DEBUG [tests.relay.test_publish] Running test with timestamp Timestamp as string number
2025-02-09 03:09:35.217 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:49703/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-09 03:09:35.220 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:49703/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-09 03:09:35.220 DEBUG [tests.relay.test_publish] Running test with timestamp Invalid large number
2025-02-09 03:09:35.221 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:49703/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-09 03:09:35.223 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:49703/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-09 03:09:35.223 DEBUG [tests.relay.test_publish] Running test with timestamp Float number
2025-02-09 03:09:35.224 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:49703/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-09 03:09:35.226 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:49703/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-09 03:09:35.227 DEBUG [tests.relay.test_publish] Running test with timestamp Array instead of timestamp
2025-02-09 03:09:35.227 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:49703/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-09 03:09:35.229 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:49703/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-09 03:09:35.230 DEBUG [tests.relay.test_publish] Running test with timestamp Object instead of timestamp
2025-02-09 03:09:35.230 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:49703/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-09 03:09:35.233 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:49703/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-09 03:09:35.233 DEBUG [tests.relay.test_publish] Running test with timestamp ISO 8601 timestamp
2025-02-09 03:09:35.234 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:49703/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-09 03:09:35.236 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:49703/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-09 03:09:35.236 DEBUG [tests.relay.test_publish] Running test with timestamp Missing
2025-02-09 03:09:35.237 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:49703/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-09 03:09:35.239 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:49703/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-09 03:09:35.241 DEBUG [tests.conftest] Running fixture teardown: test_setup
2025-02-09 03:09:35.242 DEBUG [tests.conftest] Running fixture teardown: close_open_nodes
2025-02-09 03:09:35.242 DEBUG [src.node.waku_node] Stopping container with id 91ba01cc91c9
2025-02-09 03:09:35.799 DEBUG [src.node.waku_node] Container stopped.
2025-02-09 03:09:35.799 DEBUG [src.node.waku_node] Stopping container with id 91c96d02ad9c
2025-02-09 03:09:36.288 DEBUG [src.node.waku_node] Container stopped.
2025-02-09 03:09:36.291 DEBUG [tests.conftest] Running fixture teardown: check_waku_log_errors
2025-02-09 03:09:36.296 DEBUG [src.node.docker_mananger] No errors found in the waku logs.
2025-02-09 03:09:36.299 DEBUG [src.node.docker_mananger] No errors found in the waku logs.
