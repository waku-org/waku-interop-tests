[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_invalid_meta with id: 2024-12-25_03-15-29__672498f4-41b1-4eeb-b084-bb804c1bb08f
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-25_03-15-29__672498f4-41b1-4eeb-b084-bb804c1bb08f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.5.154
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['1651', '1652', '1653', '1654', '1655']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 1651:1651 -p 1652:1652 -p 1653:1653 -p 1654:1654 -p 1655:1655 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=1653 --rest-port=1651 --tcp-port=1652 --discv5-udp-port=1654 --rest-address=0.0.0.0 --nat=extip:172.18.5.154 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=4bcd2bf41ebebf8ef02c9b5fe2b437f8520c4ba4efada5ce7708d56676cd5e7b --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=1655 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.5.154 waku 18f7d075e44abccd126da642b7be02d06102b622610a5b403719b7915395e2df
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 18f7d075e44a. Setting up logs at ./log/docker/node1_2024-12-25_03-15-29__672498f4-41b1-4eeb-b084-bb804c1bb08f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 1651
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 7cef91906f86. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:1651/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:1651/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.5.154/tcp/1652/p2p/16Uiu2HAmMZbrTzFdxLMQavhAAJ2AkLCnaDCDApiaaFXyWJzgtR9x","/ip4/172.18.5.154/tcp/1653/ws/p2p/16Uiu2HAmMZbrTzFdxLMQavhAAJ2AkLCnaDCDApiaaFXyWJzgtR9x"],"enrUri":"enr:-L24QC2M7ZAy_PRUIx7J5rNSCH_rXKePYBebRbqPUt2hWJsaQsJUnVp3yKgfk36PASKhaXVRthZVV2c1LHToKrAUOZACgmlkgnY0gmlwhKwSBZqKbXVsdGlhZGRyc5YACASsEgWaBgZ0AAoErBIFmgYGdd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDhFfXRPwsA0C6tP2WC7tpeY6RPzSAFvszORUF0kfs0C-DdGNwggZ0g3VkcIIGdoV3YWt1MgE"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/go-waku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-25_03-15-29__672498f4-41b1-4eeb-b084-bb804c1bb08f__wakuorg_go-waku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.133.21
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['17499', '17500', '17501', '17502', '17503']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 17499:17499 -p 17500:17500 -p 17501:17501 -p 17502:17502 -p 17503:17503 wakuorg/go-waku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=DEBUG --rest-relay-cache-capacity=100 --websocket-port=17501 --rest-port=17499 --tcp-port=17500 --discv5-udp-port=17502 --rest-address=0.0.0.0 --nat=extip:172.18.133.21 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=5e1e99df0caa2bde2dee4a232d8c61ba7ad1dbe71da6157afdba0de43f201b47 --min-relay-peers-to-publish=1 --rest-filter-cache-capacity=50 --peer-store-capacity=10 --relay=true --discv5-bootstrap-node=enr:-L24QC2M7ZAy_PRUIx7J5rNSCH_rXKePYBebRbqPUt2hWJsaQsJUnVp3yKgfk36PASKhaXVRthZVV2c1LHToKrAUOZACgmlkgnY0gmlwhKwSBZqKbXVsdGlhZGRyc5YACASsEgWaBgZ0AAoErBIFmgYGdd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDhFfXRPwsA0C6tP2WC7tpeY6RPzSAFvszORUF0kfs0C-DdGNwggZ0g3VkcIIGdoV3YWt1MgE
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.133.21 waku a2e6fa628ebeea378dd478c8447641a6d239c5ffb3cc013780e71b2fd932e0f6
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID a2e6fa628ebe. Setting up logs at ./log/docker/node2_2024-12-25_03-15-29__672498f4-41b1-4eeb-b084-bb804c1bb08f__wakuorg_go-waku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/go-waku:latest. REST: 17499
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17499/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"enrUri":"enr:-J-4QNh7EDwHyeLiyzcVjtFcoDI7yKGiZASQEOnV3C1NLV7QEZo8pNZuEsqTttsj4IK0S1kVpE1IGYmPvV5A8tRVPz2GAZP7z_rSgmlkgnY0gmlwhKwRAAaCcnODAAMAiXNlY3AyNTZrMaECPikdQtL3HT5mspTWwjE5sVcfRAEAV74-V0dd8IDLJsODdGNwgkRcg3VkcIJEXoV3YWt1MgE","listenAddresses":["/ip4/127.0.0.1/tcp/17500/p2p/16Uiu2HAkycKcrRtbzBZVt2sjkj3gwmwTYp8ALo3KNShdKVPWcQC2","/ip4/127.0.0.1/tcp/17501/ws/p2p/16Uiu2HAkycKcrRtbzBZVt2sjkj3gwmwTYp8ALo3KNShdKVPWcQC2","/ip4/172.17.0.6/tcp/17500/p2p/16Uiu2HAkycKcrRtbzBZVt2sjkj3gwmwTYp8ALo3KNShdKVPWcQC2","/ip4/172.17.0.6/tcp/17501/ws/p2p/16Uiu2HAkycKcrRtbzBZVt2sjkj3gwmwTYp8ALo3KNShdKVPWcQC2"]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17499/admin/v1/peers" -H "Content-Type: application/json" -d '{"multiaddr": "/ip4/172.18.5.154/tcp/1652/p2p/16Uiu2HAmMZbrTzFdxLMQavhAAJ2AkLCnaDCDApiaaFXyWJzgtR9x", "protocols": ["/vac/waku/relay/2.0.0"], "shards": [0, 1, 2, 3, 4, 5, 6, 7, 8]}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'null'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:1651/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17499/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'true'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:1651/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:1651/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1735096532752586240,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/go-waku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17499/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1735096532752586240,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:1651/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)', "meta": "Relay works!!"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:1651/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Incorrect base64 string'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 18f7d075e44a
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id a2e6fa628ebe
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.