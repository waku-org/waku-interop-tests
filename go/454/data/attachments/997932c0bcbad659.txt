2025-02-04 17:29:39.228 DEBUG [tests.conftest] Running fixture setup: test_id
2025-02-04 17:29:39.229 DEBUG [tests.conftest] Running test: test_publish_with_invalid_meta with id: 2025-02-04_17-29-39__fbd39148-1f48-4312-b118-62de8a146f2e
2025-02-04 17:29:39.229 DEBUG [src.steps.common] Running fixture setup: common_setup
2025-02-04 17:29:39.229 DEBUG [src.steps.relay] Running fixture setup: relay_setup
2025-02-04 17:29:39.230 DEBUG [src.steps.relay] Running fixture setup: setup_main_relay_nodes
2025-02-04 17:29:39.236 DEBUG [src.node.docker_mananger] Docker client initialized with image wakuorg/nwaku:latest
2025-02-04 17:29:39.236 DEBUG [src.node.waku_node] WakuNode instance initialized with log path ./log/docker/node1_2025-02-04_17-29-39__fbd39148-1f48-4312-b118-62de8a146f2e__wakuorg_nwaku:latest.log
2025-02-04 17:29:39.236 DEBUG [src.node.waku_node] Starting Node...
2025-02-04 17:29:39.236 DEBUG [src.node.docker_mananger] Attempting to create or retrieve network waku
2025-02-04 17:29:39.238 DEBUG [src.node.docker_mananger] Network waku already exists
2025-02-04 17:29:39.238 DEBUG [src.node.docker_mananger] Generated random external IP 172.18.134.226
2025-02-04 17:29:39.238 DEBUG [src.node.docker_mananger] Generated ports ['32792', '32793', '32794', '32795', '32796']
2025-02-04 17:29:39.238 DEBUG [src.node.waku_node] RLN credentials were not set
2025-02-04 17:29:39.238 INFO [src.node.waku_node] RLN credentials not set or credential store not available, starting without RLN
2025-02-04 17:29:39.238 DEBUG [src.node.waku_node] Using volumes []
2025-02-04 17:29:39.239 DEBUG [src.node.docker_mananger] docker run -i -t -p 32792:32792 -p 32793:32793 -p 32794:32794 -p 32795:32795 -p 32796:32796 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=32794 --rest-port=32792 --tcp-port=32793 --discv5-udp-port=32795 --rest-address=0.0.0.0 --nat=extip:172.18.134.226 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b0a4cecceb9c00ffd9adedbb8fbdada361a7ee12500cabefe5dba74d1ca1d91e --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=32796 --metrics-logging=true --relay=true
2025-02-04 17:29:39.473 DEBUG [src.node.docker_mananger] docker network connect --ip 172.18.134.226 waku 7220e6b6c3e396c6bffd8fe51017b2207f2523123c8df7840f29347c10f82503
2025-02-04 17:29:39.503 ERROR [src.node.docker_mananger] Max retries reached for container 1b03f613900a. Exiting log stream.
2025-02-04 17:29:39.522 DEBUG [src.node.docker_mananger] Container started with ID 7220e6b6c3e3. Setting up logs at ./log/docker/node1_2025-02-04_17-29-39__fbd39148-1f48-4312-b118-62de8a146f2e__wakuorg_nwaku:latest.log
2025-02-04 17:29:39.523 DEBUG [src.node.waku_node] Started container from image wakuorg/nwaku:latest. REST: 32792
2025-02-04 17:29:39.523 DEBUG [src.libs.common] Sleeping for 1 seconds
2025-02-04 17:29:40.035 ERROR [src.node.docker_mananger] Max retries reached for container c2b5c042790c. Exiting log stream.
2025-02-04 17:29:40.524 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:32792/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:40.527 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
2025-02-04 17:29:40.527 INFO [src.node.waku_node] Node protocols are initialized !!
2025-02-04 17:29:40.527 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:32792/debug/v1/info" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:40.529 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.134.226/tcp/32793/p2p/16Uiu2HAmBTdreeyU5nuFfNFujnZfaHiTEUSnDH9dkPbdJYgNcxeL","/ip4/172.18.134.226/tcp/32794/ws/p2p/16Uiu2HAmBTdreeyU5nuFfNFujnZfaHiTEUSnDH9dkPbdJYgNcxeL"],"enrUri":"enr:-L24QMeJjMf9xgOYyxzQOs8lYm8AwhhlzlZrxsFlOzW_HfECbKfJ_5nVNOB6mcTWz5gqVMaFdqFNoA4CnJDCf4j3JKYCgmlkgnY0gmlwhKwShuKKbXVsdGlhZGRyc5YACASsEobiBoAZAAoErBKG4gaAGt0DgnJzhQADAQAAiXNlY3AyNTZrMaEC7jvAdBPArT1IZkoURs8E1qvtSYZBoOtf6rkN4W4vSJmDdGNwgoAZg3VkcIKAG4V3YWt1MgE"}'
2025-02-04 17:29:40.529 INFO [src.node.waku_node] REST service is ready !!
2025-02-04 17:29:40.536 DEBUG [src.node.docker_mananger] Docker client initialized with image wakuorg/go-waku:latest
2025-02-04 17:29:40.536 DEBUG [src.node.waku_node] WakuNode instance initialized with log path ./log/docker/node2_2025-02-04_17-29-39__fbd39148-1f48-4312-b118-62de8a146f2e__wakuorg_go-waku:latest.log
2025-02-04 17:29:40.537 DEBUG [src.node.waku_node] Starting Node...
2025-02-04 17:29:40.537 DEBUG [src.node.docker_mananger] Attempting to create or retrieve network waku
2025-02-04 17:29:40.538 DEBUG [src.node.docker_mananger] Network waku already exists
2025-02-04 17:29:40.538 DEBUG [src.node.docker_mananger] Generated random external IP 172.18.46.18
2025-02-04 17:29:40.539 DEBUG [src.node.docker_mananger] Generated ports ['19086', '19087', '19088', '19089', '19090']
2025-02-04 17:29:40.539 DEBUG [src.node.waku_node] RLN credentials were not set
2025-02-04 17:29:40.539 INFO [src.node.waku_node] RLN credentials not set or credential store not available, starting without RLN
2025-02-04 17:29:40.539 DEBUG [src.node.waku_node] Using volumes []
2025-02-04 17:29:40.539 DEBUG [src.node.docker_mananger] docker run -i -t -p 19086:19086 -p 19087:19087 -p 19088:19088 -p 19089:19089 -p 19090:19090 wakuorg/go-waku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=DEBUG --rest-relay-cache-capacity=100 --websocket-port=19088 --rest-port=19086 --tcp-port=19087 --discv5-udp-port=19089 --rest-address=0.0.0.0 --nat=extip:172.18.46.18 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=a2de66c4c55dffc1669d6ff4a9f3da4617e3b49e3a6caad05eddb9de98adeac8 --min-relay-peers-to-publish=1 --rest-filter-cache-capacity=50 --peer-store-capacity=10 --relay=true --discv5-bootstrap-node=enr:-L24QMeJjMf9xgOYyxzQOs8lYm8AwhhlzlZrxsFlOzW_HfECbKfJ_5nVNOB6mcTWz5gqVMaFdqFNoA4CnJDCf4j3JKYCgmlkgnY0gmlwhKwShuKKbXVsdGlhZGRyc5YACASsEobiBoAZAAoErBKG4gaAGt0DgnJzhQADAQAAiXNlY3AyNTZrMaEC7jvAdBPArT1IZkoURs8E1qvtSYZBoOtf6rkN4W4vSJmDdGNwgoAZg3VkcIKAG4V3YWt1MgE
2025-02-04 17:29:40.780 DEBUG [src.node.docker_mananger] docker network connect --ip 172.18.46.18 waku 7d91c10e258c52e5b8a4d78242f0f87f02e96128a0312be0231adcf2148cfba5
2025-02-04 17:29:40.836 DEBUG [src.node.docker_mananger] Container started with ID 7d91c10e258c. Setting up logs at ./log/docker/node2_2025-02-04_17-29-39__fbd39148-1f48-4312-b118-62de8a146f2e__wakuorg_go-waku:latest.log
2025-02-04 17:29:40.836 DEBUG [src.node.waku_node] Started container from image wakuorg/go-waku:latest. REST: 19086
2025-02-04 17:29:40.836 DEBUG [src.libs.common] Sleeping for 1 seconds
2025-02-04 17:29:41.838 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:19086/debug/v1/info" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:41.840 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"enrUri":"enr:-J-4QBkg8fEMqBqnrJl4PtazJbPhhgem4yi0TXHHyqVrnoYUJ0_RWKwmU9a-I1Tl1E5k6tQjA_8TmpcKA124IosbT2-GAZTSArbYgmlkgnY0gmlwhKwRAAOCcnODAAMAiXNlY3AyNTZrMaEClfh_0_0v9IdgoMGEqZMZ29CDgBu9TV27otUK_7p3prWDdGNwgkqPg3VkcIJKkYV3YWt1MgE","listenAddresses":["/ip4/127.0.0.1/tcp/19087/p2p/16Uiu2HAm5X6W1jHg5UNehmfPyMKyi8egBukfrFPjMzWoacVqek1a","/ip4/127.0.0.1/tcp/19088/ws/p2p/16Uiu2HAm5X6W1jHg5UNehmfPyMKyi8egBukfrFPjMzWoacVqek1a","/ip4/172.17.0.3/tcp/19087/p2p/16Uiu2HAm5X6W1jHg5UNehmfPyMKyi8egBukfrFPjMzWoacVqek1a","/ip4/172.17.0.3/tcp/19088/ws/p2p/16Uiu2HAm5X6W1jHg5UNehmfPyMKyi8egBukfrFPjMzWoacVqek1a"]}'
2025-02-04 17:29:41.841 INFO [src.node.waku_node] REST service is ready !!
2025-02-04 17:29:41.841 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:19086/admin/v1/peers" -H "Content-Type: application/json" -d '{"multiaddr": "/ip4/172.18.134.226/tcp/32793/p2p/16Uiu2HAmBTdreeyU5nuFfNFujnZfaHiTEUSnDH9dkPbdJYgNcxeL", "protocols": ["/vac/waku/relay/2.0.0"], "shards": [0, 1, 2, 3, 4, 5, 6, 7, 8]}'
2025-02-04 17:29:41.862 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'null'
2025-02-04 17:29:41.863 DEBUG [src.steps.relay] Running fixture setup: subscribe_main_relay_nodes
2025-02-04 17:29:41.863 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:32792/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
2025-02-04 17:29:41.884 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-04 17:29:41.885 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:19086/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
2025-02-04 17:29:41.887 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'true'
2025-02-04 17:29:41.888 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:32792/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-04 17:29:41.901 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-04 17:29:41.901 DEBUG [src.libs.common] Sleeping for 0.1 seconds
2025-02-04 17:29:42.003 DEBUG [src.steps.relay] Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
2025-02-04 17:29:42.004 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:32792/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:42.007 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1738690181888670976,"ephemeral":false}]'
2025-02-04 17:29:42.009 DEBUG [src.steps.relay] Checking that peer NODE_2:wakuorg/go-waku:latest can find the published message
2025-02-04 17:29:42.009 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:19086/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:42.011 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'null'
2025-02-04 17:29:43.012 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:32792/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-04 17:29:43.018 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-04 17:29:43.018 DEBUG [src.libs.common] Sleeping for 0.1 seconds
2025-02-04 17:29:43.118 DEBUG [src.steps.relay] Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
2025-02-04 17:29:43.118 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:32792/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:43.121 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1738690183012466432,"ephemeral":false}]'
2025-02-04 17:29:43.123 DEBUG [src.steps.relay] Checking that peer NODE_2:wakuorg/go-waku:latest can find the published message
2025-02-04 17:29:43.123 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:19086/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:43.124 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1738690183012466432,"ephemeral":false}]'
2025-02-04 17:29:43.126 INFO [src.steps.relay] WARM UP successful!!
2025-02-04 17:29:43.127 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:32792/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)', "meta": "Relay works!!"}'
2025-02-04 17:29:43.130 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:32792/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Incorrect base64 string'
2025-02-04 17:29:43.133 DEBUG [tests.conftest] Running fixture teardown: test_setup
2025-02-04 17:29:43.134 DEBUG [tests.conftest] Running fixture teardown: close_open_nodes
2025-02-04 17:29:43.134 DEBUG [src.node.waku_node] Stopping container with id 7220e6b6c3e3
2025-02-04 17:29:43.707 DEBUG [src.node.waku_node] Container stopped.
2025-02-04 17:29:43.707 DEBUG [src.node.waku_node] Stopping container with id 7d91c10e258c
2025-02-04 17:29:44.220 DEBUG [src.node.waku_node] Container stopped.
2025-02-04 17:29:44.221 DEBUG [tests.conftest] Running fixture teardown: check_waku_log_errors
2025-02-04 17:29:44.227 DEBUG [src.node.docker_mananger] No errors found in the waku logs.
2025-02-04 17:29:44.231 DEBUG [src.node.docker_mananger] No errors found in the waku logs.
