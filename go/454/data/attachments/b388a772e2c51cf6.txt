2025-02-04 17:28:43.781 ERROR [src.node.docker_mananger] Max retries reached for container 84c109d1628f. Exiting log stream.
2025-02-04 17:28:44.549 ERROR [src.node.docker_mananger] Max retries reached for container 6bc23d1d47c0. Exiting log stream.
2025-02-04 17:28:47.321 DEBUG [src.postgres_setup] Postgres container started
2025-02-04 17:28:47.322 DEBUG [tests.conftest] Running fixture setup: test_id
2025-02-04 17:28:47.323 DEBUG [tests.conftest] Running test: test_on_empty_postgress_db with id: 2025-02-04_17-28-47__78e68257-c90d-4efe-9713-3c6dcf759090
2025-02-04 17:28:47.323 DEBUG [src.steps.common] Running fixture setup: common_setup
2025-02-04 17:28:47.323 DEBUG [src.steps.store] Running fixture setup: store_setup
2025-02-04 17:28:47.330 DEBUG [src.node.docker_mananger] Docker client initialized with image wakuorg/nwaku:latest
2025-02-04 17:28:47.330 DEBUG [src.node.waku_node] WakuNode instance initialized with log path ./log/docker/publishing_node1_2025-02-04_17-28-47__78e68257-c90d-4efe-9713-3c6dcf759090__wakuorg_nwaku:latest.log
2025-02-04 17:28:47.330 DEBUG [src.node.waku_node] Starting Node...
2025-02-04 17:28:47.330 DEBUG [src.node.docker_mananger] Attempting to create or retrieve network waku
2025-02-04 17:28:47.332 DEBUG [src.node.docker_mananger] Network waku already exists
2025-02-04 17:28:47.332 DEBUG [src.node.docker_mananger] Generated random external IP 172.18.95.67
2025-02-04 17:28:47.332 DEBUG [src.node.docker_mananger] Generated ports ['30045', '30046', '30047', '30048', '30049']
2025-02-04 17:28:47.332 DEBUG [src.node.waku_node] RLN credentials were not set
2025-02-04 17:28:47.332 INFO [src.node.waku_node] RLN credentials not set or credential store not available, starting without RLN
2025-02-04 17:28:47.333 DEBUG [src.node.waku_node] Using volumes []
2025-02-04 17:28:47.333 DEBUG [src.node.docker_mananger] docker run -i -t -p 30045:30045 -p 30046:30046 -p 30047:30047 -p 30048:30048 -p 30049:30049 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=30047 --rest-port=30045 --tcp-port=30046 --discv5-udp-port=30048 --rest-address=0.0.0.0 --nat=extip:172.18.95.67 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=1ee01cf93dcab748ed4c4ade7c8c96d8f2781d75aaacb3ffbef615266228d96b --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=30049 --metrics-logging=true --store=true --relay=true --store-message-db-url=postgres://postgres:test123@postgres:5432/postgres
2025-02-04 17:28:47.578 DEBUG [src.node.docker_mananger] docker network connect --ip 172.18.95.67 waku 262f1b9d82fb26a73f33d9a02e83b483e6ef7a21ee876371140e27ead04fbcbc
2025-02-04 17:28:47.633 DEBUG [src.node.docker_mananger] Container started with ID 262f1b9d82fb. Setting up logs at ./log/docker/publishing_node1_2025-02-04_17-28-47__78e68257-c90d-4efe-9713-3c6dcf759090__wakuorg_nwaku:latest.log
2025-02-04 17:28:47.634 DEBUG [src.node.waku_node] Started container from image wakuorg/nwaku:latest. REST: 30045
2025-02-04 17:28:47.634 DEBUG [src.libs.common] Sleeping for 1 seconds
2025-02-04 17:28:48.635 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:48.736 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:48.838 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:48.939 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:49.041 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:49.056 ERROR [src.node.docker_mananger] Max retries reached for container 262f1b9d82fb. Exiting log stream.
2025-02-04 17:28:49.142 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:49.244 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:49.345 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:49.447 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:49.548 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:49.649 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:49.751 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:49.852 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:49.954 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:50.055 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:50.157 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:50.258 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:50.360 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:50.461 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:50.562 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:50.663 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:50.765 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:50.866 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:50.968 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:51.069 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:51.170 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:51.272 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:51.373 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:51.474 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:51.576 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:51.677 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:51.779 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:51.880 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:51.982 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:52.083 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:52.185 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:52.287 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:52.388 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:52.489 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:52.591 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:52.692 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:52.794 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:52.895 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:52.996 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:53.098 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:53.199 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:53.300 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:53.402 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:53.503 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:53.605 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:53.706 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:53.807 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:53.909 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:54.010 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:54.111 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:54.213 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:54.314 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:54.416 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:54.517 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:54.619 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:54.721 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:54.822 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:54.923 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:55.025 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:55.127 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:55.229 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:55.330 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:55.431 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:55.533 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:55.634 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:55.735 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:55.837 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:55.938 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:56.040 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:56.141 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:56.243 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:56.344 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:56.446 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:56.547 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:56.648 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:56.750 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:56.851 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:56.952 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:57.054 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:57.156 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:57.257 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:57.358 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:57.460 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:57.561 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:57.663 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:57.764 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:57.865 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:57.966 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:58.067 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:58.169 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:58.271 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:58.372 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:58.473 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:58.575 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:58.676 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:58.778 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:58.880 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:58.981 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:59.083 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:59.184 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:59.285 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:59.387 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:59.489 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:59.590 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:59.691 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:59.793 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:59.894 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:28:59.995 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:00.097 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:00.199 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:00.300 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:00.402 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:00.503 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:00.605 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:00.706 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:00.808 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:00.909 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:01.010 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:01.111 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:01.213 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:01.315 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:01.416 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:01.518 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:01.619 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:01.721 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:01.822 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:01.924 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:02.025 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:02.126 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:02.228 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:02.329 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:02.430 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:02.532 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:02.633 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:02.734 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:02.836 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:02.937 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:03.038 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:03.140 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:03.241 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:03.342 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:03.444 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:03.545 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:03.646 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:03.748 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:03.849 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:03.951 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:04.052 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:04.153 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:04.255 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:04.356 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:04.458 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:04.559 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:04.660 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:04.761 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:04.863 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:04.964 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:05.066 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:05.167 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:05.269 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:05.370 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:05.472 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:05.574 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:05.675 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:05.776 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:05.877 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:05.979 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:06.080 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:06.182 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:06.283 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:06.385 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:06.486 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:06.588 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:06.689 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:06.790 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:06.892 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:06.993 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:07.094 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:07.196 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:07.297 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:07.399 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:07.500 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:07.602 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:07.703 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:07.804 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:07.905 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:08.007 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:08.109 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:08.210 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:08.311 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:08.412 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:08.513 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:08.615 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:08.716 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30045/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:08.717 ERROR [src.node.waku_node] REST service did not become ready in time: HTTPConnectionPool(host='127.0.0.1', port=30045): Max retries exceeded with url: /health (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f6aa90f0680>: Failed to establish a new connection: [Errno 111] Connection refused'))
2025-02-04 17:29:08.817 DEBUG [src.node.waku_node] Starting Node...
2025-02-04 17:29:08.817 DEBUG [src.node.docker_mananger] Attempting to create or retrieve network waku
2025-02-04 17:29:08.819 DEBUG [src.node.docker_mananger] Network waku already exists
2025-02-04 17:29:08.819 DEBUG [src.node.docker_mananger] Generated random external IP 172.18.133.10
2025-02-04 17:29:08.820 DEBUG [src.node.docker_mananger] Generated ports ['42618', '42619', '42620', '42621', '42622']
2025-02-04 17:29:08.820 DEBUG [src.node.waku_node] RLN credentials were not set
2025-02-04 17:29:08.820 INFO [src.node.waku_node] RLN credentials not set or credential store not available, starting without RLN
2025-02-04 17:29:08.820 DEBUG [src.node.waku_node] Using volumes []
2025-02-04 17:29:08.820 DEBUG [src.node.docker_mananger] docker run -i -t -p 42618:42618 -p 42619:42619 -p 42620:42620 -p 42621:42621 -p 42622:42622 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=42620 --rest-port=42618 --tcp-port=42619 --discv5-udp-port=42621 --rest-address=0.0.0.0 --nat=extip:172.18.133.10 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=da7a5dea0148c219e10bd52a13b9efabc79727b2d2288c0080b3eedd0afab039 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=42622 --metrics-logging=true --store=true --relay=true --store-message-db-url=postgres://postgres:test123@postgres:5432/postgres
2025-02-04 17:29:09.046 DEBUG [src.node.docker_mananger] docker network connect --ip 172.18.133.10 waku 7d37a4e6892dc1dcecf1750eaac99af28bd3b64fefdd29ce1f1ddba3a2a68c0f
2025-02-04 17:29:09.093 DEBUG [src.node.docker_mananger] Container started with ID 7d37a4e6892d. Setting up logs at ./log/docker/publishing_node1_2025-02-04_17-28-47__78e68257-c90d-4efe-9713-3c6dcf759090__wakuorg_nwaku:latest.log
2025-02-04 17:29:09.093 DEBUG [src.node.waku_node] Started container from image wakuorg/nwaku:latest. REST: 42618
2025-02-04 17:29:09.094 DEBUG [src.libs.common] Sleeping for 1 seconds
2025-02-04 17:29:10.095 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:42618/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:29:30.117 ERROR [src.node.waku_node] REST service did not become ready in time: HTTPConnectionPool(host='127.0.0.1', port=42618): Read timed out. (read timeout=20)
2025-02-04 17:29:30.217 DEBUG [src.node.waku_node] Starting Node...
2025-02-04 17:29:30.218 DEBUG [src.node.docker_mananger] Attempting to create or retrieve network waku
2025-02-04 17:29:30.219 DEBUG [src.node.docker_mananger] Network waku already exists
2025-02-04 17:29:30.220 DEBUG [src.node.docker_mananger] Generated random external IP 172.18.254.8
2025-02-04 17:29:30.220 DEBUG [src.node.docker_mananger] Generated ports ['33595', '33596', '33597', '33598', '33599']
2025-02-04 17:29:30.220 DEBUG [src.node.waku_node] RLN credentials were not set
2025-02-04 17:29:30.220 INFO [src.node.waku_node] RLN credentials not set or credential store not available, starting without RLN
2025-02-04 17:29:30.220 DEBUG [src.node.waku_node] Using volumes []
2025-02-04 17:29:30.220 DEBUG [src.node.docker_mananger] docker run -i -t -p 33595:33595 -p 33596:33596 -p 33597:33597 -p 33598:33598 -p 33599:33599 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=33597 --rest-port=33595 --tcp-port=33596 --discv5-udp-port=33598 --rest-address=0.0.0.0 --nat=extip:172.18.254.8 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=41fcefc5e23dc0a9d8bd45e39b2bc70dcddcca4191d8be9b7b47bbd55175b2a0 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=33599 --metrics-logging=true --store=true --relay=true --store-message-db-url=postgres://postgres:test123@postgres:5432/postgres
2025-02-04 17:29:30.452 DEBUG [src.node.docker_mananger] docker network connect --ip 172.18.254.8 waku fb76e2f997ca30b1f166b5e7a845f8f25ad242724b93eb640dc2267edec97fff
2025-02-04 17:29:30.498 DEBUG [src.node.docker_mananger] Container started with ID fb76e2f997ca. Setting up logs at ./log/docker/publishing_node1_2025-02-04_17-28-47__78e68257-c90d-4efe-9713-3c6dcf759090__wakuorg_nwaku:latest.log
2025-02-04 17:29:30.499 DEBUG [src.node.waku_node] Started container from image wakuorg/nwaku:latest. REST: 33595
2025-02-04 17:29:30.499 DEBUG [src.libs.common] Sleeping for 1 seconds
2025-02-04 17:29:31.499 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:33595/health" -H "Content-Type: application/json" -d 'None'

+++++++++++++++++++++++++++++++++++ Timeout ++++++++++++++++++++++++++++++++++++

~~~~~~~~~ Stack of Thread-32 (_log_container_output) (140096097486528) ~~~~~~~~~
  File "/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/threading.py", line 1032, in _bootstrap
    self._bootstrap_inner()
  File "/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/threading.py", line 1075, in _bootstrap_inner
    self.run()
  File "/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/threading.py", line 1012, in run
    self._target(*self._args, **self._kwargs)
  File "/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/docker_mananger.py", line 76, in _log_container_output
    for chunk in container.logs(stream=True):
  File "/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/docker/types/daemon.py", line 29, in __next__
    return next(self._stream)
  File "/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/docker/api/client.py", line 392, in _multiplexed_response_stream_helper
    header = response.raw.read(STREAM_HEADER_SIZE_BYTES)
  File "/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/urllib3/response.py", line 949, in read
    data = self._raw_read(amt)
  File "/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/urllib3/response.py", line 873, in _raw_read
    data = self._fp_read(amt, read1=read1) if not fp_closed else b""
  File "/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/urllib3/response.py", line 856, in _fp_read
    return self._fp.read(amt) if amt is not None else self._fp.read()
  File "/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/http/client.py", line 473, in read
    return self._read_chunked(amt)
  File "/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/http/client.py", line 595, in _read_chunked
    while (chunk_left := self._get_chunk_left()) is not None:
  File "/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/http/client.py", line 579, in _get_chunk_left
    chunk_left = self._read_next_chunk_size()
  File "/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/http/client.py", line 539, in _read_next_chunk_size
    line = self.fp.readline(_MAXLINE + 1)
  File "/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/socket.py", line 720, in readinto
    return self._sock.recv_into(b)

~~~~~~~~~ Stack of Thread-31 (_log_container_output) (140096116360896) ~~~~~~~~~
  File "/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/threading.py", line 1032, in _bootstrap
    self._bootstrap_inner()
  File "/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/threading.py", line 1075, in _bootstrap_inner
    self.run()
  File "/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/threading.py", line 1012, in run
    self._target(*self._args, **self._kwargs)
  File "/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/docker_mananger.py", line 76, in _log_container_output
    for chunk in container.logs(stream=True):
  File "/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/docker/types/daemon.py", line 29, in __next__
    return next(self._stream)
  File "/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/docker/api/client.py", line 392, in _multiplexed_response_stream_helper
    header = response.raw.read(STREAM_HEADER_SIZE_BYTES)
  File "/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/urllib3/response.py", line 949, in read
    data = self._raw_read(amt)
  File "/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/urllib3/response.py", line 873, in _raw_read
    data = self._fp_read(amt, read1=read1) if not fp_closed else b""
  File "/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/urllib3/response.py", line 856, in _fp_read
    return self._fp.read(amt) if amt is not None else self._fp.read()
  File "/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/http/client.py", line 473, in read
    return self._read_chunked(amt)
  File "/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/http/client.py", line 595, in _read_chunked
    while (chunk_left := self._get_chunk_left()) is not None:
  File "/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/http/client.py", line 579, in _get_chunk_left
    chunk_left = self._read_next_chunk_size()
  File "/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/http/client.py", line 539, in _read_next_chunk_size
    line = self.fp.readline(_MAXLINE + 1)
  File "/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/socket.py", line 720, in readinto
    return self._sock.recv_into(b)

~~~~~~~~~~~~~~~ Stack of Thread-1 (run_server) (140096139429568) ~~~~~~~~~~~~~~~
  File "/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/threading.py", line 1032, in _bootstrap
    self._bootstrap_inner()
  File "/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/threading.py", line 1075, in _bootstrap_inner
    self.run()
  File "/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/threading.py", line 1012, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/pytest_rerunfailures.py", line 439, in run_server
    conn, _ = self.sock.accept()
  File "/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/socket.py", line 295, in accept
    fd, addr = self._accept()

+++++++++++++++++++++++++++++++++++ Timeout ++++++++++++++++++++++++++++++++++++
2025-02-04 17:29:43.951 DEBUG [tests.conftest] Running fixture teardown: test_setup
2025-02-04 17:29:43.952 DEBUG [tests.conftest] Running fixture teardown: close_open_nodes
2025-02-04 17:29:43.952 DEBUG [src.node.waku_node] Stopping container with id fb76e2f997ca
2025-02-04 17:29:54.459 DEBUG [src.node.waku_node] Container stopped.
2025-02-04 17:29:54.461 DEBUG [tests.conftest] Running fixture teardown: check_waku_log_errors
2025-02-04 17:29:54.462 DEBUG [src.node.docker_mananger] No errors found in the waku logs.
2025-02-04 17:29:54.464 DEBUG [src.node.docker_mananger] No errors found in the waku logs.
2025-02-04 17:29:54.465 DEBUG [src.node.docker_mananger] No errors found in the waku logs.
2025-02-04 17:29:54.469 DEBUG [tests.conftest] Running fixture setup: test_id
2025-02-04 17:29:54.469 DEBUG [tests.conftest] Running test: test_on_empty_postgress_db with id: 2025-02-04_17-29-54__301a722b-673f-4991-a667-d504c3d49b0d
2025-02-04 17:29:54.469 DEBUG [src.steps.common] Running fixture setup: common_setup
2025-02-04 17:29:54.469 DEBUG [src.steps.store] Running fixture setup: store_setup
2025-02-04 17:29:54.476 DEBUG [src.node.docker_mananger] Docker client initialized with image wakuorg/nwaku:latest
2025-02-04 17:29:54.476 DEBUG [src.node.waku_node] WakuNode instance initialized with log path ./log/docker/publishing_node1_2025-02-04_17-29-54__301a722b-673f-4991-a667-d504c3d49b0d__wakuorg_nwaku:latest.log
2025-02-04 17:29:54.476 DEBUG [src.node.waku_node] Starting Node...
2025-02-04 17:29:54.476 DEBUG [src.node.docker_mananger] Attempting to create or retrieve network waku
2025-02-04 17:29:54.478 DEBUG [src.node.docker_mananger] Network waku already exists
2025-02-04 17:29:54.478 DEBUG [src.node.docker_mananger] Generated random external IP 172.18.112.242
2025-02-04 17:29:54.478 DEBUG [src.node.docker_mananger] Generated ports ['18066', '18067', '18068', '18069', '18070']
2025-02-04 17:29:54.478 DEBUG [src.node.waku_node] RLN credentials were not set
2025-02-04 17:29:54.478 INFO [src.node.waku_node] RLN credentials not set or credential store not available, starting without RLN
2025-02-04 17:29:54.478 DEBUG [src.node.waku_node] Using volumes []
2025-02-04 17:29:54.478 DEBUG [src.node.docker_mananger] docker run -i -t -p 18066:18066 -p 18067:18067 -p 18068:18068 -p 18069:18069 -p 18070:18070 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=18068 --rest-port=18066 --tcp-port=18067 --discv5-udp-port=18069 --rest-address=0.0.0.0 --nat=extip:172.18.112.242 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=fdc0f029b7df71f7e7eed69d4fca9fd97cbfabbb1bad4fad4e53cb4067eb4167 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=18070 --metrics-logging=true --store=true --relay=true --store-message-db-url=postgres://postgres:test123@postgres:5432/postgres
2025-02-04 17:29:54.709 DEBUG [src.node.docker_mananger] docker network connect --ip 172.18.112.242 waku d3cd800bee224eb7e627641270ca000616a4d18be4d0febdc4771d6a8c1281fa
2025-02-04 17:29:54.762 DEBUG [src.node.docker_mananger] Container started with ID d3cd800bee22. Setting up logs at ./log/docker/publishing_node1_2025-02-04_17-29-54__301a722b-673f-4991-a667-d504c3d49b0d__wakuorg_nwaku:latest.log
2025-02-04 17:29:54.762 DEBUG [src.node.waku_node] Started container from image wakuorg/nwaku:latest. REST: 18066
2025-02-04 17:29:54.762 DEBUG [src.libs.common] Sleeping for 1 seconds
2025-02-04 17:29:55.275 ERROR [src.node.docker_mananger] Max retries reached for container fb76e2f997ca. Exiting log stream.
2025-02-04 17:29:55.763 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:18066/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:30:15.779 ERROR [src.node.waku_node] REST service did not become ready in time: HTTPConnectionPool(host='127.0.0.1', port=18066): Read timed out. (read timeout=20)
2025-02-04 17:30:15.880 DEBUG [src.node.waku_node] Starting Node...
2025-02-04 17:30:15.880 DEBUG [src.node.docker_mananger] Attempting to create or retrieve network waku
2025-02-04 17:30:15.882 DEBUG [src.node.docker_mananger] Network waku already exists
2025-02-04 17:30:15.882 DEBUG [src.node.docker_mananger] Generated random external IP 172.18.202.77
2025-02-04 17:30:15.882 DEBUG [src.node.docker_mananger] Generated ports ['36222', '36223', '36224', '36225', '36226']
2025-02-04 17:30:15.882 DEBUG [src.node.waku_node] RLN credentials were not set
2025-02-04 17:30:15.882 INFO [src.node.waku_node] RLN credentials not set or credential store not available, starting without RLN
2025-02-04 17:30:15.882 DEBUG [src.node.waku_node] Using volumes []
2025-02-04 17:30:15.882 DEBUG [src.node.docker_mananger] docker run -i -t -p 36222:36222 -p 36223:36223 -p 36224:36224 -p 36225:36225 -p 36226:36226 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=36224 --rest-port=36222 --tcp-port=36223 --discv5-udp-port=36225 --rest-address=0.0.0.0 --nat=extip:172.18.202.77 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=c1acae63251f23c41fce7428ce216fdfebb3ec7cbd7972b07aebd57be41ad6dd --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=36226 --metrics-logging=true --store=true --relay=true --store-message-db-url=postgres://postgres:test123@postgres:5432/postgres
2025-02-04 17:30:16.122 DEBUG [src.node.docker_mananger] docker network connect --ip 172.18.202.77 waku c90488e11519ebc99dd0532299bf6848b3a1f444772522ec80dae9d50c9d76a0
2025-02-04 17:30:16.171 DEBUG [src.node.docker_mananger] Container started with ID c90488e11519. Setting up logs at ./log/docker/publishing_node1_2025-02-04_17-29-54__301a722b-673f-4991-a667-d504c3d49b0d__wakuorg_nwaku:latest.log
2025-02-04 17:30:16.172 DEBUG [src.node.waku_node] Started container from image wakuorg/nwaku:latest. REST: 36222
2025-02-04 17:30:16.172 DEBUG [src.libs.common] Sleeping for 1 seconds
2025-02-04 17:30:17.172 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:36222/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:30:37.187 ERROR [src.node.waku_node] REST service did not become ready in time: HTTPConnectionPool(host='127.0.0.1', port=36222): Read timed out. (read timeout=20)
2025-02-04 17:30:37.287 DEBUG [src.node.waku_node] Starting Node...
2025-02-04 17:30:37.287 DEBUG [src.node.docker_mananger] Attempting to create or retrieve network waku
2025-02-04 17:30:37.289 DEBUG [src.node.docker_mananger] Network waku already exists
2025-02-04 17:30:37.289 DEBUG [src.node.docker_mananger] Generated random external IP 172.18.211.225
2025-02-04 17:30:37.289 DEBUG [src.node.docker_mananger] Generated ports ['23547', '23548', '23549', '23550', '23551']
2025-02-04 17:30:37.289 DEBUG [src.node.waku_node] RLN credentials were not set
2025-02-04 17:30:37.290 INFO [src.node.waku_node] RLN credentials not set or credential store not available, starting without RLN
2025-02-04 17:30:37.290 DEBUG [src.node.waku_node] Using volumes []
2025-02-04 17:30:37.290 DEBUG [src.node.docker_mananger] docker run -i -t -p 23547:23547 -p 23548:23548 -p 23549:23549 -p 23550:23550 -p 23551:23551 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=23549 --rest-port=23547 --tcp-port=23548 --discv5-udp-port=23550 --rest-address=0.0.0.0 --nat=extip:172.18.211.225 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=0b4a2ccf7eb46905efefdac7264c0bdb6d9ccafd38fa73f6dc68ba3b55cc53ce --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=23551 --metrics-logging=true --store=true --relay=true --store-message-db-url=postgres://postgres:test123@postgres:5432/postgres
2025-02-04 17:30:37.526 DEBUG [src.node.docker_mananger] docker network connect --ip 172.18.211.225 waku 492fb1fef5f1e8c776030dcac883204fe644ec568f967ea35988903a5988cab2
2025-02-04 17:30:37.578 DEBUG [src.node.docker_mananger] Container started with ID 492fb1fef5f1. Setting up logs at ./log/docker/publishing_node1_2025-02-04_17-29-54__301a722b-673f-4991-a667-d504c3d49b0d__wakuorg_nwaku:latest.log
2025-02-04 17:30:37.578 DEBUG [src.node.waku_node] Started container from image wakuorg/nwaku:latest. REST: 23547
2025-02-04 17:30:37.578 DEBUG [src.libs.common] Sleeping for 1 seconds
2025-02-04 17:30:38.579 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:23547/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:30:58.600 ERROR [src.node.waku_node] REST service did not become ready in time: HTTPConnectionPool(host='127.0.0.1', port=23547): Read timed out. (read timeout=20)
2025-02-04 17:30:58.782 DEBUG [tests.conftest] Running fixture teardown: test_setup
2025-02-04 17:30:58.783 DEBUG [tests.conftest] Running fixture teardown: close_open_nodes
2025-02-04 17:30:58.783 DEBUG [src.node.waku_node] Stopping container with id 492fb1fef5f1
2025-02-04 17:31:09.299 DEBUG [src.node.waku_node] Container stopped.
2025-02-04 17:31:09.301 DEBUG [tests.conftest] Running fixture teardown: check_waku_log_errors
2025-02-04 17:31:09.302 DEBUG [src.node.docker_mananger] No errors found in the waku logs.
2025-02-04 17:31:09.302 DEBUG [src.node.docker_mananger] No errors found in the waku logs.
2025-02-04 17:31:09.302 DEBUG [src.node.docker_mananger] No errors found in the waku logs.
2025-02-04 17:31:09.306 DEBUG [tests.conftest] Running fixture setup: test_id
2025-02-04 17:31:09.306 DEBUG [tests.conftest] Running test: test_on_empty_postgress_db with id: 2025-02-04_17-31-09__b7caa424-255c-4912-97f7-a0c4aecb09b7
2025-02-04 17:31:09.306 DEBUG [src.steps.common] Running fixture setup: common_setup
2025-02-04 17:31:09.307 DEBUG [src.steps.store] Running fixture setup: store_setup
2025-02-04 17:31:09.313 DEBUG [src.node.docker_mananger] Docker client initialized with image wakuorg/nwaku:latest
2025-02-04 17:31:09.313 DEBUG [src.node.waku_node] WakuNode instance initialized with log path ./log/docker/publishing_node1_2025-02-04_17-31-09__b7caa424-255c-4912-97f7-a0c4aecb09b7__wakuorg_nwaku:latest.log
2025-02-04 17:31:09.313 DEBUG [src.node.waku_node] Starting Node...
2025-02-04 17:31:09.313 DEBUG [src.node.docker_mananger] Attempting to create or retrieve network waku
2025-02-04 17:31:09.315 DEBUG [src.node.docker_mananger] Network waku already exists
2025-02-04 17:31:09.315 DEBUG [src.node.docker_mananger] Generated random external IP 172.18.196.178
2025-02-04 17:31:09.315 DEBUG [src.node.docker_mananger] Generated ports ['32570', '32571', '32572', '32573', '32574']
2025-02-04 17:31:09.315 DEBUG [src.node.waku_node] RLN credentials were not set
2025-02-04 17:31:09.315 INFO [src.node.waku_node] RLN credentials not set or credential store not available, starting without RLN
2025-02-04 17:31:09.315 DEBUG [src.node.waku_node] Using volumes []
2025-02-04 17:31:09.315 DEBUG [src.node.docker_mananger] docker run -i -t -p 32570:32570 -p 32571:32571 -p 32572:32572 -p 32573:32573 -p 32574:32574 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=32572 --rest-port=32570 --tcp-port=32571 --discv5-udp-port=32573 --rest-address=0.0.0.0 --nat=extip:172.18.196.178 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=5a4b3f6a4badb5b2e61aca2adc6febda1befcf0f8158a2ffd4a8cfc4cfeccc89 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=32574 --metrics-logging=true --store=true --relay=true --store-message-db-url=postgres://postgres:test123@postgres:5432/postgres
2025-02-04 17:31:09.537 DEBUG [src.node.docker_mananger] docker network connect --ip 172.18.196.178 waku d4a012b1bac1fcafff9cac0fbb9621e6718ab04cf9da5a7af9791dc65cc24049
2025-02-04 17:31:09.583 DEBUG [src.node.docker_mananger] Container started with ID d4a012b1bac1. Setting up logs at ./log/docker/publishing_node1_2025-02-04_17-31-09__b7caa424-255c-4912-97f7-a0c4aecb09b7__wakuorg_nwaku:latest.log
2025-02-04 17:31:09.584 DEBUG [src.node.waku_node] Started container from image wakuorg/nwaku:latest. REST: 32570
2025-02-04 17:31:09.584 DEBUG [src.libs.common] Sleeping for 1 seconds
2025-02-04 17:31:10.111 ERROR [src.node.docker_mananger] Max retries reached for container 492fb1fef5f1. Exiting log stream.
2025-02-04 17:31:10.584 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:32570/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:31:30.606 ERROR [src.node.waku_node] REST service did not become ready in time: HTTPConnectionPool(host='127.0.0.1', port=32570): Read timed out. (read timeout=20)
2025-02-04 17:31:30.706 DEBUG [src.node.waku_node] Starting Node...
2025-02-04 17:31:30.706 DEBUG [src.node.docker_mananger] Attempting to create or retrieve network waku
2025-02-04 17:31:30.708 DEBUG [src.node.docker_mananger] Network waku already exists
2025-02-04 17:31:30.708 DEBUG [src.node.docker_mananger] Generated random external IP 172.18.14.12
2025-02-04 17:31:30.708 DEBUG [src.node.docker_mananger] Generated ports ['42891', '42892', '42893', '42894', '42895']
2025-02-04 17:31:30.709 DEBUG [src.node.waku_node] RLN credentials were not set
2025-02-04 17:31:30.709 INFO [src.node.waku_node] RLN credentials not set or credential store not available, starting without RLN
2025-02-04 17:31:30.709 DEBUG [src.node.waku_node] Using volumes []
2025-02-04 17:31:30.709 DEBUG [src.node.docker_mananger] docker run -i -t -p 42891:42891 -p 42892:42892 -p 42893:42893 -p 42894:42894 -p 42895:42895 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=42893 --rest-port=42891 --tcp-port=42892 --discv5-udp-port=42894 --rest-address=0.0.0.0 --nat=extip:172.18.14.12 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e5311ada6b1a76cba89bc2da96eb18cd89ddbc4d847f9ee5fbd3eaa7bbdab5db --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=42895 --metrics-logging=true --store=true --relay=true --store-message-db-url=postgres://postgres:test123@postgres:5432/postgres
2025-02-04 17:31:30.944 DEBUG [src.node.docker_mananger] docker network connect --ip 172.18.14.12 waku 23f957ba2bcc3a10fb4891dcc5e1b19c71da6707459fd77ad8240869b45c4962
2025-02-04 17:31:30.989 DEBUG [src.node.docker_mananger] Container started with ID 23f957ba2bcc. Setting up logs at ./log/docker/publishing_node1_2025-02-04_17-31-09__b7caa424-255c-4912-97f7-a0c4aecb09b7__wakuorg_nwaku:latest.log
2025-02-04 17:31:30.989 DEBUG [src.node.waku_node] Started container from image wakuorg/nwaku:latest. REST: 42891
2025-02-04 17:31:30.990 DEBUG [src.libs.common] Sleeping for 1 seconds
2025-02-04 17:31:31.990 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:42891/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:31:52.012 ERROR [src.node.waku_node] REST service did not become ready in time: HTTPConnectionPool(host='127.0.0.1', port=42891): Read timed out. (read timeout=20)
2025-02-04 17:31:52.113 DEBUG [src.node.waku_node] Starting Node...
2025-02-04 17:31:52.113 DEBUG [src.node.docker_mananger] Attempting to create or retrieve network waku
2025-02-04 17:31:52.115 DEBUG [src.node.docker_mananger] Network waku already exists
2025-02-04 17:31:52.115 DEBUG [src.node.docker_mananger] Generated random external IP 172.18.238.160
2025-02-04 17:31:52.115 DEBUG [src.node.docker_mananger] Generated ports ['39567', '39568', '39569', '39570', '39571']
2025-02-04 17:31:52.115 DEBUG [src.node.waku_node] RLN credentials were not set
2025-02-04 17:31:52.115 INFO [src.node.waku_node] RLN credentials not set or credential store not available, starting without RLN
2025-02-04 17:31:52.115 DEBUG [src.node.waku_node] Using volumes []
2025-02-04 17:31:52.115 DEBUG [src.node.docker_mananger] docker run -i -t -p 39567:39567 -p 39568:39568 -p 39569:39569 -p 39570:39570 -p 39571:39571 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=39569 --rest-port=39567 --tcp-port=39568 --discv5-udp-port=39570 --rest-address=0.0.0.0 --nat=extip:172.18.238.160 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=94ca227b8adf2828bbff718124f8bcacfb5095afb59a94af4d6218b6d7f0e4cc --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=39571 --metrics-logging=true --store=true --relay=true --store-message-db-url=postgres://postgres:test123@postgres:5432/postgres
2025-02-04 17:31:52.349 DEBUG [src.node.docker_mananger] docker network connect --ip 172.18.238.160 waku ad24aef942fbc8e2e1536c5a9e96615698f5f3d3b2498a480f8b863275e8655e
2025-02-04 17:31:52.392 DEBUG [src.node.docker_mananger] Container started with ID ad24aef942fb. Setting up logs at ./log/docker/publishing_node1_2025-02-04_17-31-09__b7caa424-255c-4912-97f7-a0c4aecb09b7__wakuorg_nwaku:latest.log
2025-02-04 17:31:52.394 DEBUG [src.node.waku_node] Started container from image wakuorg/nwaku:latest. REST: 39567
2025-02-04 17:31:52.394 DEBUG [src.libs.common] Sleeping for 1 seconds
2025-02-04 17:31:53.394 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:39567/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:31:53.397 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
2025-02-04 17:31:53.397 INFO [src.node.waku_node] Node protocols are initialized !!
2025-02-04 17:31:53.398 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:39567/debug/v1/info" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:31:53.400 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.238.160/tcp/39568/p2p/16Uiu2HAkxLBsVBggX7HtKmZ48iRP1BNhTYkxBHRKYS1hNLGnqE8T","/ip4/172.18.238.160/tcp/39569/ws/p2p/16Uiu2HAkxLBsVBggX7HtKmZ48iRP1BNhTYkxBHRKYS1hNLGnqE8T"],"enrUri":"enr:-L24QBstYFRJ8VagH0Oy17H9Rm8nrc5Z1W_ymG6FhIKX4GyGczKl_4DphvkXz2gpcJPY7mXW7xgY2ieDfQae9pvgLKcCgmlkgnY0gmlwhKwS7qCKbXVsdGlhZGRyc5YACASsEu6gBpqQAAoErBLuoAaakd0DgnJzhQADAQAAiXNlY3AyNTZrMaECKytfw-f-i_cexW_LEsPR1y6gLIkhbqHUl9gERPZjG3SDdGNwgpqQg3VkcIKakoV3YWt1MgM"}'
2025-02-04 17:31:53.400 INFO [src.node.waku_node] REST service is ready !!
2025-02-04 17:31:53.406 DEBUG [src.node.docker_mananger] Docker client initialized with image wakuorg/go-waku:latest
2025-02-04 17:31:53.406 DEBUG [src.node.waku_node] WakuNode instance initialized with log path ./log/docker/store_node1_2025-02-04_17-31-09__b7caa424-255c-4912-97f7-a0c4aecb09b7__wakuorg_go-waku:latest.log
2025-02-04 17:31:53.407 DEBUG [src.node.waku_node] Starting Node...
2025-02-04 17:31:53.407 DEBUG [src.node.docker_mananger] Attempting to create or retrieve network waku
2025-02-04 17:31:53.408 DEBUG [src.node.docker_mananger] Network waku already exists
2025-02-04 17:31:53.408 DEBUG [src.node.docker_mananger] Generated random external IP 172.18.104.192
2025-02-04 17:31:53.408 DEBUG [src.node.docker_mananger] Generated ports ['50998', '50999', '51000', '51001', '51002']
2025-02-04 17:31:53.408 DEBUG [src.node.waku_node] RLN credentials were not set
2025-02-04 17:31:53.409 INFO [src.node.waku_node] RLN credentials not set or credential store not available, starting without RLN
2025-02-04 17:31:53.409 DEBUG [src.node.waku_node] Using volumes []
2025-02-04 17:31:53.409 DEBUG [src.node.docker_mananger] docker run -i -t -p 50998:50998 -p 50999:50999 -p 51000:51000 -p 51001:51001 -p 51002:51002 wakuorg/go-waku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=DEBUG --rest-relay-cache-capacity=100 --websocket-port=51000 --rest-port=50998 --tcp-port=50999 --discv5-udp-port=51001 --rest-address=0.0.0.0 --nat=extip:172.18.104.192 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=94e021ade137ffb5ba74d0091ae4aadfedea546cebffea6b6ae3dd3be2fc8aef --min-relay-peers-to-publish=1 --rest-filter-cache-capacity=50 --peer-store-capacity=10 --discv5-bootstrap-node=enr:-L24QBstYFRJ8VagH0Oy17H9Rm8nrc5Z1W_ymG6FhIKX4GyGczKl_4DphvkXz2gpcJPY7mXW7xgY2ieDfQae9pvgLKcCgmlkgnY0gmlwhKwS7qCKbXVsdGlhZGRyc5YACASsEu6gBpqQAAoErBLuoAaakd0DgnJzhQADAQAAiXNlY3AyNTZrMaECKytfw-f-i_cexW_LEsPR1y6gLIkhbqHUl9gERPZjG3SDdGNwgpqQg3VkcIKakoV3YWt1MgM --storenode=/ip4/172.18.238.160/tcp/39568/p2p/16Uiu2HAkxLBsVBggX7HtKmZ48iRP1BNhTYkxBHRKYS1hNLGnqE8T --store=false --relay=true
2025-02-04 17:31:53.639 DEBUG [src.node.docker_mananger] docker network connect --ip 172.18.104.192 waku 0aa998c2a2ab68b0f5507abe92a55a2165900427a48e5c14371df4fee32bfd41
2025-02-04 17:31:53.698 DEBUG [src.node.docker_mananger] Container started with ID 0aa998c2a2ab. Setting up logs at ./log/docker/store_node1_2025-02-04_17-31-09__b7caa424-255c-4912-97f7-a0c4aecb09b7__wakuorg_go-waku:latest.log
2025-02-04 17:31:53.698 DEBUG [src.node.waku_node] Started container from image wakuorg/go-waku:latest. REST: 50998
2025-02-04 17:31:53.699 DEBUG [src.libs.common] Sleeping for 1 seconds
2025-02-04 17:31:54.699 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:50998/debug/v1/info" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:31:54.702 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"enrUri":"enr:-J-4QIOBlgOPCOOTJfuYnQ4wPNMiSjHcFAjeIi_2AKZdbh3DOAtmL5yzfXRGPoco8ZoMHSqmRrc-7LbCA8aR3b_V3veGAZTSBL3UgmlkgnY0gmlwhKwRAAiCcnODAAMAiXNlY3AyNTZrMaEDMWEYpJ_S5ANewUxkIhhYkNNJPG3c9mAs9jljsa3OoCqDdGNwgsc3g3VkcILHOYV3YWt1MgE","listenAddresses":["/ip4/127.0.0.1/tcp/50999/p2p/16Uiu2HAmFykCZsntz1UTyHvjx8MZh3tb2LuZdXp8Hhxxx7Dru8x9","/ip4/127.0.0.1/tcp/51000/ws/p2p/16Uiu2HAmFykCZsntz1UTyHvjx8MZh3tb2LuZdXp8Hhxxx7Dru8x9","/ip4/172.17.0.8/tcp/50999/p2p/16Uiu2HAmFykCZsntz1UTyHvjx8MZh3tb2LuZdXp8Hhxxx7Dru8x9","/ip4/172.17.0.8/tcp/51000/ws/p2p/16Uiu2HAmFykCZsntz1UTyHvjx8MZh3tb2LuZdXp8Hhxxx7Dru8x9"]}'
2025-02-04 17:31:54.702 INFO [src.node.waku_node] REST service is ready !!
2025-02-04 17:31:54.703 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:50998/admin/v1/peers" -H "Content-Type: application/json" -d '{"multiaddr": "/ip4/172.18.238.160/tcp/39568/p2p/16Uiu2HAkxLBsVBggX7HtKmZ48iRP1BNhTYkxBHRKYS1hNLGnqE8T", "protocols": ["/vac/waku/relay/2.0.0"], "shards": [0, 1, 2, 3, 4, 5, 6, 7, 8]}'
2025-02-04 17:31:54.720 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'null'
2025-02-04 17:31:54.721 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:39567/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/0"]'
2025-02-04 17:31:54.729 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-04 17:31:54.729 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:50998/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/0"]'
2025-02-04 17:31:54.731 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'true'
2025-02-04 17:31:54.735 DEBUG [src.steps.store] Relaying message
2025-02-04 17:31:54.735 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:39567/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F0" -H "Content-Type: application/json" -d '{"payload": "U3RvcmUgd29ya3MhIQ==", "contentTopic": "/myapp/1/latest/proto", "timestamp": '$(date +%s%N)'}'
2025-02-04 17:31:54.762 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-04 17:31:54.762 DEBUG [src.libs.common] Sleeping for 0.2 seconds
2025-02-04 17:31:54.963 DEBUG [src.steps.store] Checking that peer wakuorg/nwaku:latest can find the stored messages
2025-02-04 17:31:54.963 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:39567/store/v3/messages?pubsubTopic=%2Fwaku%2F2%2Frs%2F3%2F0&pageSize=5&ascending=true" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:31:54.969 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"requestId":"","statusCode":200,"statusDesc":"OK","messages":[{"messageHash":"0x08d9f14732368bfd77570c8cd4d1e1a3f77877bfbe2adebddfa97b6a4f6bd1b9"}]}'
2025-02-04 17:31:54.970 DEBUG [src.steps.store] Checking that peer wakuorg/go-waku:latest can find the stored messages
2025-02-04 17:31:54.970 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:50998/store/v3/messages?pubsubTopic=%2Fwaku%2F2%2Frs%2F3%2F0&contentTopics=%2Fmyapp%2F1%2Flatest%2Fproto&pageSize=5&ascending=true" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:31:54.976 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"request_id":"6cc923d45f8e999e9ca123648fa5c5c3a589f89dbf60fd396b384543b3a100dd","status_code":200,"status_desc":"OK","messages":[{"message_hash":"CNnxRzI2i/13VwyM1NHho/d4d7++Kt6936l7ak9r0bk="}]}'
2025-02-04 17:31:54.979 DEBUG [tests.conftest] Running fixture teardown: test_setup
2025-02-04 17:31:54.980 DEBUG [tests.conftest] Running fixture teardown: close_open_nodes
2025-02-04 17:31:54.980 DEBUG [src.node.waku_node] Stopping container with id ad24aef942fb
2025-02-04 17:31:55.551 DEBUG [src.node.waku_node] Container stopped.
2025-02-04 17:31:55.551 DEBUG [src.node.waku_node] Stopping container with id 0aa998c2a2ab
2025-02-04 17:31:56.240 DEBUG [src.node.waku_node] Container stopped.
2025-02-04 17:31:56.242 DEBUG [tests.conftest] Running fixture teardown: check_waku_log_errors
2025-02-04 17:31:56.249 DEBUG [src.node.docker_mananger] No errors found in the waku logs.
2025-02-04 17:31:56.256 DEBUG [src.node.docker_mananger] No errors found in the waku logs.
2025-02-04 17:31:56.264 DEBUG [src.node.docker_mananger] No errors found in the waku logs.
2025-02-04 17:31:56.268 DEBUG [src.node.docker_mananger] No errors found in the waku logs.
2025-02-04 17:31:56.364 ERROR [src.node.docker_mananger] Max retries reached for container ad24aef942fb. Exiting log stream.
2025-02-04 17:31:56.406 DEBUG [src.postgres_setup] Postgres container stopped and removed.
