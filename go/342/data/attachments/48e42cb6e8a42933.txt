[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_relay_subscribe_with_invalid_pubsub_topic_format with id: 2024-11-07_03-17-50__88886233-22c1-49e5-b8c7-c31ee6acfa44
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-07_03-17-50__88886233-22c1-49e5-b8c7-c31ee6acfa44__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.129.66
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['35040', '35041', '35042', '35043', '35044']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 35040:35040 -p 35041:35041 -p 35042:35042 -p 35043:35043 -p 35044:35044 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=35042 --rest-port=35040 --tcp-port=35041 --discv5-udp-port=35043 --rest-address=0.0.0.0 --nat=extip:172.18.129.66 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=47dbdbe4771aff133956ae67b1ab8222d728dbf6b2bda3fb48ffff2fbf538fec --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=35044 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.129.66 waku b4d0f98e3b7b371e148aab8d327246b9d39dff4d0a287c299767ec47c63851ea
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container cd83a4a60972. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID b4d0f98e3b7b. Setting up logs at ./log/docker/node1_2024-11-07_03-17-50__88886233-22c1-49e5-b8c7-c31ee6acfa44__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 35040
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:35040/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:35040/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.129.66/tcp/35041/p2p/16Uiu2HAm8V5qEyAqAHtZ2jgyGpzPXnA84279t247SYAKedLRN3rb","/ip4/172.18.129.66/tcp/35042/ws/p2p/16Uiu2HAm8V5qEyAqAHtZ2jgyGpzPXnA84279t247SYAKedLRN3rb"],"enrUri":"enr:-L24QDIQsk5rl8psGUg1X2m92G_Sy8yVYdPm06FV0StxTDuFKHF-EMhAEWfHKrt3ZRKaMy3KKlFS8XeGdE02gesW92ICgmlkgnY0gmlwhKwSgUKKbXVsdGlhZGRyc5YACASsEoFCBojhAAoErBKBQgaI4t0DgnJzhQADAQAAiXNlY3AyNTZrMaECwgekg_ddwWcAcnYeCidYVVeCkQBWQvLH8x4X9nGSRKyDdGNwgojhg3VkcIKI44V3YWt1MgE"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/go-waku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-07_03-17-50__88886233-22c1-49e5-b8c7-c31ee6acfa44__wakuorg_go-waku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.12.211
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['35651', '35652', '35653', '35654', '35655']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 35651:35651 -p 35652:35652 -p 35653:35653 -p 35654:35654 -p 35655:35655 wakuorg/go-waku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=DEBUG --rest-relay-cache-capacity=100 --websocket-port=35653 --rest-port=35651 --tcp-port=35652 --discv5-udp-port=35654 --rest-address=0.0.0.0 --nat=extip:172.18.12.211 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ec3b15efbc6680cee6edfbc5bbffa5cba0facbbfb5c69aecdc2aa6e7de3faabf --min-relay-peers-to-publish=1 --rest-filter-cache-capacity=50 --peer-store-capacity=10 --relay=true --discv5-bootstrap-node=enr:-L24QDIQsk5rl8psGUg1X2m92G_Sy8yVYdPm06FV0StxTDuFKHF-EMhAEWfHKrt3ZRKaMy3KKlFS8XeGdE02gesW92ICgmlkgnY0gmlwhKwSgUKKbXVsdGlhZGRyc5YACASsEoFCBojhAAoErBKBQgaI4t0DgnJzhQADAQAAiXNlY3AyNTZrMaECwgekg_ddwWcAcnYeCidYVVeCkQBWQvLH8x4X9nGSRKyDdGNwgojhg3VkcIKI44V3YWt1MgE
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.12.211 waku 8350aea9584fbdd3ec12c86eeb8058b77c446723f34eb75f874a69fe71ca8fb2
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 8350aea9584f. Setting up logs at ./log/docker/node2_2024-11-07_03-17-50__88886233-22c1-49e5-b8c7-c31ee6acfa44__wakuorg_go-waku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/go-waku:latest. REST: 35651
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:35651/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"enrUri":"enr:-Ji4QFci3zPjQmcgB9xhumZGP1GqGQKRBH3EHbYTRgtn4jz7TyMiNeiwx7DOzviIfI7w2gqmwwJDFQVUlTNRCZ1TWLeGAZMEoODRgmlkgnY0gmlwhKwRAAiJc2VjcDI1NmsxoQIl2sqEdfQtR2rKL4sKfr33EMxkuQPuafLsiD2WGxsAooN0Y3CCi0SDdWRwgotGhXdha3UyAQ","listenAddresses":["/ip4/127.0.0.1/tcp/35652/p2p/16Uiu2HAkwySZi7Uj1ZYV3VSG6rrDduYehsJa2Cx8JEigX62xftQ1","/ip4/127.0.0.1/tcp/35653/ws/p2p/16Uiu2HAkwySZi7Uj1ZYV3VSG6rrDduYehsJa2Cx8JEigX62xftQ1","/ip4/172.17.0.8/tcp/35652/p2p/16Uiu2HAkwySZi7Uj1ZYV3VSG6rrDduYehsJa2Cx8JEigX62xftQ1","/ip4/172.17.0.8/tcp/35653/ws/p2p/16Uiu2HAkwySZi7Uj1ZYV3VSG6rrDduYehsJa2Cx8JEigX62xftQ1"]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:35651/admin/v1/peers" -H "Content-Type: application/json" -d '{"multiaddr": "/ip4/172.18.129.66/tcp/35041/p2p/16Uiu2HAm8V5qEyAqAHtZ2jgyGpzPXnA84279t247SYAKedLRN3rb", "protocols": ["/vac/waku/relay/2.0.0"], "shards": [0, 1, 2, 3, 4, 5, 6, 7, 8]}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'null'
[35mDEBUG   [0m tests.relay.test_subscribe:test_subscribe.py:37 Running test with payload /test/2/rs/0/1
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:35040/relay/v1/subscriptions" -H "Content-Type: application/json" -d '"/test/2/rs/0/1"'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:35040/relay/v1/subscriptions. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
[35mDEBUG   [0m tests.relay.test_subscribe:test_subscribe.py:37 Running test with payload /waku/3/rs/0/1
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:35040/relay/v1/subscriptions" -H "Content-Type: application/json" -d '"/waku/3/rs/0/1"'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:35040/relay/v1/subscriptions. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
[35mDEBUG   [0m tests.relay.test_subscribe:test_subscribe.py:37 Running test with payload /waku/2/test/0/1
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:35040/relay/v1/subscriptions" -H "Content-Type: application/json" -d '"/waku/2/test/0/1"'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:35040/relay/v1/subscriptions. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
[35mDEBUG   [0m tests.relay.test_subscribe:test_subscribe.py:37 Running test with payload /waku/2/rs/3/b
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:35040/relay/v1/subscriptions" -H "Content-Type: application/json" -d '"/waku/2/rs/3/b"'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:35040/relay/v1/subscriptions. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
[35mDEBUG   [0m tests.relay.test_subscribe:test_subscribe.py:37 Running test with payload /waku/2/rs/0
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:35040/relay/v1/subscriptions" -H "Content-Type: application/json" -d '"/waku/2/rs/0"'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:35040/relay/v1/subscriptions. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id b4d0f98e3b7b
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 8350aea9584f
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container b4d0f98e3b7b. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.