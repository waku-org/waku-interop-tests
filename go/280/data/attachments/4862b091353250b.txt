[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_extra_field with id: 2024-09-15_03-27-37__ef93fce5-fa40-4c4e-b64a-f8f0a1750ef2
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-09-15_03-27-37__ef93fce5-fa40-4c4e-b64a-f8f0a1750ef2__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.103.80
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['2067', '2068', '2069', '2070', '2071']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 2067:2067 -p 2068:2068 -p 2069:2069 -p 2070:2070 -p 2071:2071 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=2069 --rest-port=2067 --tcp-port=2068 --discv5-udp-port=2070 --rest-address=0.0.0.0 --nat=extip:172.18.103.80 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ecfdd5d1410b6333f2eab66ca4bdfb5ebe02fddfae4a7e76bcaeed750f85f28e --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=2071 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.103.80 waku b233375073239627ae3bde2254b4e8dcbd63aeea9bdcd8bb7c9a62724404379c
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID b23337507323. Setting up logs at ./log/docker/node1_2024-09-15_03-27-37__ef93fce5-fa40-4c4e-b64a-f8f0a1750ef2__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 2067
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:2067/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:2067/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.103.80/tcp/2068/p2p/16Uiu2HAm1C1bzNGDpg1eUAuisPVE3p3ReDygzeQRHz16cErNU8P2","/ip4/172.18.103.80/tcp/2069/ws/p2p/16Uiu2HAm1C1bzNGDpg1eUAuisPVE3p3ReDygzeQRHz16cErNU8P2"],"enrUri":"enr:-LO4QPtG9Z1MkuJYImCJPMcLJLQuiHAdG1oYLrebCfz3dVjhLknpl0RRzq2E9ebt1W5KVX7ZNmR2hVoMBfYlRT_oY_8BgmlkgnY0gmlwhKwSZ1CKbXVsdGlhZGRyc4wACgSsEmdQBggV3QOCcnOFAAMBAACJc2VjcDI1NmsxoQJVpi3i7q7a0sf4pGoqqmxcEKxqm6CKaY9l3IaCNDpC4YN0Y3CCCBSDdWRwgggWhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/go-waku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-09-15_03-27-37__ef93fce5-fa40-4c4e-b64a-f8f0a1750ef2__wakuorg_go-waku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.32.106
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['2426', '2427', '2428', '2429', '2430']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 2426:2426 -p 2427:2427 -p 2428:2428 -p 2429:2429 -p 2430:2430 wakuorg/go-waku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=DEBUG --rest-relay-cache-capacity=100 --websocket-port=2428 --rest-port=2426 --tcp-port=2427 --discv5-udp-port=2429 --rest-address=0.0.0.0 --nat=extip:172.18.32.106 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=14e6fc1cc21cec241d1ea52cc8cb1c5b5fecde3dab9e6cadaeb1f80aa5dbecbb --min-relay-peers-to-publish=1 --rest-filter-cache-capacity=50 --peer-store-capacity=10 --relay=true --discv5-bootstrap-node=enr:-LO4QPtG9Z1MkuJYImCJPMcLJLQuiHAdG1oYLrebCfz3dVjhLknpl0RRzq2E9ebt1W5KVX7ZNmR2hVoMBfYlRT_oY_8BgmlkgnY0gmlwhKwSZ1CKbXVsdGlhZGRyc4wACgSsEmdQBggV3QOCcnOFAAMBAACJc2VjcDI1NmsxoQJVpi3i7q7a0sf4pGoqqmxcEKxqm6CKaY9l3IaCNDpC4YN0Y3CCCBSDdWRwgggWhXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.32.106 waku eeda1557c6927473969e4c50a0f752b73712139bea906e9bc2c919f73c913bea
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID eeda1557c692. Setting up logs at ./log/docker/node2_2024-09-15_03-27-37__ef93fce5-fa40-4c4e-b64a-f8f0a1750ef2__wakuorg_go-waku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/go-waku:latest. REST: 2426
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:2426/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"enrUri":"enr:-Ji4QLI6Aa6ln9Xkuqk_HJw3GtnxKalwO2zn1GL8uBdhbxjDTUkeK_C39JkmLPxqp7m8rxdLcyHU7mc7w8P7ejAbJPuGAZHzuM81gmlkgnY0gmlwhKwRAAaJc2VjcDI1NmsxoQM9LJnr8AGWpCFc3j4Wfd9QWdbq9Bw-5HTFj8eUgWniHoN0Y3CCCXuDdWRwggl9hXdha3UyAQ","listenAddresses":["/ip4/127.0.0.1/tcp/2427/p2p/16Uiu2HAmGmnfZu89kV3QnLa3kk3ftgJi6HtXea2o2kK374hzLPpR","/ip4/127.0.0.1/tcp/2428/ws/p2p/16Uiu2HAmGmnfZu89kV3QnLa3kk3ftgJi6HtXea2o2kK374hzLPpR","/ip4/172.17.0.6/tcp/2427/p2p/16Uiu2HAmGmnfZu89kV3QnLa3kk3ftgJi6HtXea2o2kK374hzLPpR","/ip4/172.17.0.6/tcp/2428/ws/p2p/16Uiu2HAmGmnfZu89kV3QnLa3kk3ftgJi6HtXea2o2kK374hzLPpR"]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:2426/admin/v1/peers" -H "Content-Type: application/json" -d '{"multiaddr": "/ip4/172.18.103.80/tcp/2068/p2p/16Uiu2HAm1C1bzNGDpg1eUAuisPVE3p3ReDygzeQRHz16cErNU8P2", "protocols": ["/vac/waku/relay/2.0.0"], "shards": [0, 1, 2, 3, 4, 5, 6, 7, 8]}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'null'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:2067/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:2426/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'true'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:2067/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:2067/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1726370861972314624,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/go-waku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:2426/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'null'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:2067/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:2067/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1726370863091304704,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/go-waku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:2426/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1726370863091304704,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:2067/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)', "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:2067/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id b23337507323
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id eeda1557c692
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.