[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_missing_payload with id: 2024-09-15_03-27-43__8b143fba-f045-41c1-908b-9b2f2b53795a
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-09-15_03-27-43__8b143fba-f045-41c1-908b-9b2f2b53795a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.43.149
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['62369', '62370', '62371', '62372', '62373']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 62369:62369 -p 62370:62370 -p 62371:62371 -p 62372:62372 -p 62373:62373 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=62371 --rest-port=62369 --tcp-port=62370 --discv5-udp-port=62372 --rest-address=0.0.0.0 --nat=extip:172.18.43.149 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ef896dbdfe5bfb57ccab81a5fede62fe7c2fb9cf0caa59d2a6df6ec38ddb3d04 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=62373 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.43.149 waku d62a0114e31dcaba95155739c7208c00e95dd121ad8d4d44022c73e57200ee6d
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID d62a0114e31d. Setting up logs at ./log/docker/node1_2024-09-15_03-27-43__8b143fba-f045-41c1-908b-9b2f2b53795a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 62369
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:62369/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:62369/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.43.149/tcp/62370/p2p/16Uiu2HAmFxNXCEkNbpYHFrz4W1M5cnC8jqW5FPguixSyRv8kGowy","/ip4/172.18.43.149/tcp/62371/ws/p2p/16Uiu2HAmFxNXCEkNbpYHFrz4W1M5cnC8jqW5FPguixSyRv8kGowy"],"enrUri":"enr:-LO4QFX6I8w9szi58bZim7hJFa6xwXB4X7jUawbu4Id5gl27XoWUIfyymP7RLyII-WJdOQPPfzhpleQgp1CJMlZM96cBgmlkgnY0gmlwhKwSK5WKbXVsdGlhZGRyc4wACgSsEiuVBvOj3QOCcnOFAAMBAACJc2VjcDI1NmsxoQMxBwDLYStuUQW0KsFIlGNL-t7BbLkdwI1Ux1T6P5ZnlIN0Y3CC86KDdWRwgvOkhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/go-waku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-09-15_03-27-43__8b143fba-f045-41c1-908b-9b2f2b53795a__wakuorg_go-waku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.150.13
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['14888', '14889', '14890', '14891', '14892']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 14888:14888 -p 14889:14889 -p 14890:14890 -p 14891:14891 -p 14892:14892 wakuorg/go-waku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=DEBUG --rest-relay-cache-capacity=100 --websocket-port=14890 --rest-port=14888 --tcp-port=14889 --discv5-udp-port=14891 --rest-address=0.0.0.0 --nat=extip:172.18.150.13 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=99cfb1c8cabeecabea42adf4eea2ab006c18f163a461904c1adb704caefc4556 --min-relay-peers-to-publish=1 --rest-filter-cache-capacity=50 --peer-store-capacity=10 --relay=true --discv5-bootstrap-node=enr:-LO4QFX6I8w9szi58bZim7hJFa6xwXB4X7jUawbu4Id5gl27XoWUIfyymP7RLyII-WJdOQPPfzhpleQgp1CJMlZM96cBgmlkgnY0gmlwhKwSK5WKbXVsdGlhZGRyc4wACgSsEiuVBvOj3QOCcnOFAAMBAACJc2VjcDI1NmsxoQMxBwDLYStuUQW0KsFIlGNL-t7BbLkdwI1Ux1T6P5ZnlIN0Y3CC86KDdWRwgvOkhXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.150.13 waku dea42ceb9ccbd74914e27c4eae902e249aedf947d15c5c379fe182f8cf586f45
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID dea42ceb9ccb. Setting up logs at ./log/docker/node2_2024-09-15_03-27-43__8b143fba-f045-41c1-908b-9b2f2b53795a__wakuorg_go-waku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/go-waku:latest. REST: 14888
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:14888/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"enrUri":"enr:-Ji4QMOYLo89bhMc76q1yotjKkQz0H0g0KTZ3Wm_Bij8K4aMYjFBXViQTbiH8TQBVOGDaIn_0tAdpIaJubeToyGnCTqGAZHzuOOUgmlkgnY0gmlwhKwRAAWJc2VjcDI1NmsxoQLflHqwckz1l2EyHsfBPFmd3Fi-jzHsejxwAoTpAybiloN0Y3CCOimDdWRwgjorhXdha3UyAQ","listenAddresses":["/ip4/127.0.0.1/tcp/14889/p2p/16Uiu2HAmAUSDGnw7X8WnxKMdWjYrTbgwp4aq83JFMSgUatWEjjNm","/ip4/127.0.0.1/tcp/14890/ws/p2p/16Uiu2HAmAUSDGnw7X8WnxKMdWjYrTbgwp4aq83JFMSgUatWEjjNm","/ip4/172.17.0.5/tcp/14889/p2p/16Uiu2HAmAUSDGnw7X8WnxKMdWjYrTbgwp4aq83JFMSgUatWEjjNm","/ip4/172.17.0.5/tcp/14890/ws/p2p/16Uiu2HAmAUSDGnw7X8WnxKMdWjYrTbgwp4aq83JFMSgUatWEjjNm"]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:14888/admin/v1/peers" -H "Content-Type: application/json" -d '{"multiaddr": "/ip4/172.18.43.149/tcp/62370/p2p/16Uiu2HAmFxNXCEkNbpYHFrz4W1M5cnC8jqW5FPguixSyRv8kGowy", "protocols": ["/vac/waku/relay/2.0.0"], "shards": [0, 1, 2, 3, 4, 5, 6, 7, 8]}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'null'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:62369/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:14888/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'true'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:62369/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:62369/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1726370867202770432,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/go-waku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:14888/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'null'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:62369/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:62369/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1726370868321015552,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/go-waku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:14888/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1726370868321015552,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:62369/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:62369/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id d62a0114e31d
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id dea42ceb9ccb
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.