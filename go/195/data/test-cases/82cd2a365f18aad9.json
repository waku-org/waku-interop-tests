{"uid":"82cd2a365f18aad9","name":"test_main_node_only_lightpush__peer_only_lightpush","fullName":"tests.light_push.test_running_nodes.TestRunningNodes#test_main_node_only_lightpush__peer_only_lightpush","historyId":"4bfb1c2cf45e835824529e585e1980f9","time":{"start":1720669007878,"stop":1720669011796,"duration":3918},"status":"failed","statusMessage":"AssertionError: assert ('no waku relay found' in \"Error: 503 Server Error: Service Unavailable for url: http://127.0.0.1:21735/lightpush/v1/message with response: b'stream reset'\" or 'failed to negotiate protocol: protocols not supported' in \"Error: 503 Server Error: Service Unavailable for url: http://127.0.0.1:21735/lightpush/v1/message with response: b'stream reset'\")\n +  where \"Error: 503 Server Error: Service Unavailable for url: http://127.0.0.1:21735/lightpush/v1/message with response: b'stream reset'\" = str(Exception(\"Error: 503 Server Error: Service Unavailable for url: http://127.0.0.1:21735/lightpush/v1/message with response: b'stream reset'\"))\n +  and   \"Error: 503 Server Error: Service Unavailable for url: http://127.0.0.1:21735/lightpush/v1/message with response: b'stream reset'\" = str(Exception(\"Error: 503 Server Error: Service Unavailable for url: http://127.0.0.1:21735/lightpush/v1/message with response: b'stream reset'\"))","statusTrace":"src/node/api_clients/base_client.py:14: in make_request\n    response.raise_for_status()\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/requests/models.py:1021: in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\nE   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http://127.0.0.1:21735/lightpush/v1/message\n\nDuring handling of the above exception, another exception occurred:\ntests/light_push/test_running_nodes.py:10: in test_main_node_only_lightpush__peer_only_lightpush\n    self.light_push_node1.send_light_push_message(self.create_payload())\nsrc/node/waku_node.py:337: in send_light_push_message\n    return self._api.send_light_push_message(payload)\nsrc/node/api_clients/rest.py:57: in send_light_push_message\n    return self.rest_call(\"post\", \"lightpush/v1/message\", json.dumps(payload))\nsrc/node/api_clients/rest.py:16: in rest_call\n    return self.make_request(method, url, headers=headers, data=payload)\nsrc/node/api_clients/base_client.py:17: in make_request\n    raise Exception(f\"Error: {http_err} with response: {response.content}\")\nE   Exception: Error: 503 Server Error: Service Unavailable for url: http://127.0.0.1:21735/lightpush/v1/message with response: b'stream reset'\n\nDuring handling of the above exception, another exception occurred:\ntests/light_push/test_running_nodes.py:13: in test_main_node_only_lightpush__peer_only_lightpush\n    assert \"no waku relay found\" in str(ex) or \"failed to negotiate protocol: protocols not supported\" in str(ex)\nE   assert ('no waku relay found' in \"Error: 503 Server Error: Service Unavailable for url: http://127.0.0.1:21735/lightpush/v1/message with response: b'stream reset'\" or 'failed to negotiate protocol: protocols not supported' in \"Error: 503 Server Error: Service Unavailable for url: http://127.0.0.1:21735/lightpush/v1/message with response: b'stream reset'\")\nE    +  where \"Error: 503 Server Error: Service Unavailable for url: http://127.0.0.1:21735/lightpush/v1/message with response: b'stream reset'\" = str(Exception(\"Error: 503 Server Error: Service Unavailable for url: http://127.0.0.1:21735/lightpush/v1/message with response: b'stream reset'\"))\nE    +  and   \"Error: 503 Server Error: Service Unavailable for url: http://127.0.0.1:21735/lightpush/v1/message with response: b'stream reset'\" = str(Exception(\"Error: 503 Server Error: Service Unavailable for url: http://127.0.0.1:21735/lightpush/v1/message with response: b'stream reset'\"))","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"close_open_nodes","time":{"start":1720669007877,"stop":1720669007877,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"test_setup","time":{"start":1720669007877,"stop":1720669007877,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"common_setup","time":{"start":1720669007877,"stop":1720669007878,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"attach_logs_on_fail","time":{"start":1720669007877,"stop":1720669007877,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"test_id","time":{"start":1720669007877,"stop":1720669007877,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"light_push_setup","time":{"start":1720669007878,"stop":1720669007878,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert ('no waku relay found' in \"Error: 503 Server Error: Service Unavailable for url: http://127.0.0.1:21735/lightpush/v1/message with response: b'stream reset'\" or 'failed to negotiate protocol: protocols not supported' in \"Error: 503 Server Error: Service Unavailable for url: http://127.0.0.1:21735/lightpush/v1/message with response: b'stream reset'\")\n +  where \"Error: 503 Server Error: Service Unavailable for url: http://127.0.0.1:21735/lightpush/v1/message with response: b'stream reset'\" = str(Exception(\"Error: 503 Server Error: Service Unavailable for url: http://127.0.0.1:21735/lightpush/v1/message with response: b'stream reset'\"))\n +  and   \"Error: 503 Server Error: Service Unavailable for url: http://127.0.0.1:21735/lightpush/v1/message with response: b'stream reset'\" = str(Exception(\"Error: 503 Server Error: Service Unavailable for url: http://127.0.0.1:21735/lightpush/v1/message with response: b'stream reset'\"))","statusTrace":"src/node/api_clients/base_client.py:14: in make_request\n    response.raise_for_status()\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/requests/models.py:1021: in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\nE   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http://127.0.0.1:21735/lightpush/v1/message\n\nDuring handling of the above exception, another exception occurred:\ntests/light_push/test_running_nodes.py:10: in test_main_node_only_lightpush__peer_only_lightpush\n    self.light_push_node1.send_light_push_message(self.create_payload())\nsrc/node/waku_node.py:337: in send_light_push_message\n    return self._api.send_light_push_message(payload)\nsrc/node/api_clients/rest.py:57: in send_light_push_message\n    return self.rest_call(\"post\", \"lightpush/v1/message\", json.dumps(payload))\nsrc/node/api_clients/rest.py:16: in rest_call\n    return self.make_request(method, url, headers=headers, data=payload)\nsrc/node/api_clients/base_client.py:17: in make_request\n    raise Exception(f\"Error: {http_err} with response: {response.content}\")\nE   Exception: Error: 503 Server Error: Service Unavailable for url: http://127.0.0.1:21735/lightpush/v1/message with response: b'stream reset'\n\nDuring handling of the above exception, another exception occurred:\ntests/light_push/test_running_nodes.py:13: in test_main_node_only_lightpush__peer_only_lightpush\n    assert \"no waku relay found\" in str(ex) or \"failed to negotiate protocol: protocols not supported\" in str(ex)\nE   assert ('no waku relay found' in \"Error: 503 Server Error: Service Unavailable for url: http://127.0.0.1:21735/lightpush/v1/message with response: b'stream reset'\" or 'failed to negotiate protocol: protocols not supported' in \"Error: 503 Server Error: Service Unavailable for url: http://127.0.0.1:21735/lightpush/v1/message with response: b'stream reset'\")\nE    +  where \"Error: 503 Server Error: Service Unavailable for url: http://127.0.0.1:21735/lightpush/v1/message with response: b'stream reset'\" = str(Exception(\"Error: 503 Server Error: Service Unavailable for url: http://127.0.0.1:21735/lightpush/v1/message with response: b'stream reset'\"))\nE    +  and   \"Error: 503 Server Error: Service Unavailable for url: http://127.0.0.1:21735/lightpush/v1/message with response: b'stream reset'\" = str(Exception(\"Error: 503 Server Error: Service Unavailable for url: http://127.0.0.1:21735/lightpush/v1/message with response: b'stream reset'\"))","steps":[{"name":"setup_first_receiving_node","time":{"start":1720669007878,"stop":1720669009746,"duration":1868},"status":"passed","steps":[{"name":"start_receiving_node","time":{"start":1720669007878,"stop":1720669009746,"duration":1868},"status":"passed","steps":[{"name":"add_node_peer","time":{"start":1720669009746,"stop":1720669009746,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"args","value":"(<tests.light_push.test_running_nodes.TestRunningNodes object at 0x7fb8c4b72a50>, <src.node.waku_node.WakuNode object at 0x7fb8bed98380>, [])"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"image","value":"'harbor.status.im/wakuorg/nwaku:latest'"},{"name":"node_index","value":"1"},{"name":"lightpush","value":"'true'"},{"name":"relay","value":"'false'"},{"name":"nodekey","value":"'30348dd51465150e04a5d9d932c72864c8967f806cce60b5d26afeca1e77eb68'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"lightpush","value":"'true'"},{"name":"relay","value":"'false'"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"setup_first_lightpush_node","time":{"start":1720669009746,"stop":1720669011780,"duration":2034},"status":"passed","steps":[{"name":"setup_lightpush_node","time":{"start":1720669009746,"stop":1720669011780,"duration":2034},"status":"passed","steps":[{"name":"add_node_peer","time":{"start":1720669011770,"stop":1720669011780,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"args","value":"(<tests.light_push.test_running_nodes.TestRunningNodes object at 0x7fb8c4b72a50>, <src.node.waku_node.WakuNode object at 0x7fb8bed9bce0>, ['/ip4/172.18.97.2/tcp/26731/p2p/16Uiu2HAmGNtM2rQ8abySFNhqPDFY4cmfAEpfo9Z9fD3NekoFR2ip'])"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"image","value":"'harbor.status.im/wakuorg/go-waku:latest'"},{"name":"node_index","value":"1"},{"name":"lightpush","value":"'true'"},{"name":"relay","value":"'false'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"lightpush","value":"'true'"},{"name":"relay","value":"'false'"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"create_payload","time":{"start":1720669011780,"stop":1720669011781,"duration":1},"status":"passed","steps":[{"name":"create_message","time":{"start":1720669011781,"stop":1720669011781,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"pubsub_topic","value":"None"},{"name":"message","value":"None"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"b0f253aa5346087c","name":"log","source":"b0f253aa5346087c.txt","type":"text/plain","size":10096}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":8,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"test_setup::0","time":{"start":1720669011833,"stop":1720669011837,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"close_open_nodes::0","time":{"start":1720669011837,"stop":1720669014605,"duration":2768},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"attach_logs_on_fail::0","time":{"start":1720669014605,"stop":1720669014609,"duration":4},"status":"passed","steps":[],"attachments":[{"uid":"f3ddc0cf27213eff","name":"receiving_node1_2024-07-11_03-36-47__ff56e5e4-b8f2-40a5-9e92-ade4efb861a5__harbor.status.im_wakuorg_nwaku:latest.log","source":"f3ddc0cf27213eff.txt","type":"text/plain","size":143431},{"uid":"806be2ed747573ef","name":"lightpush_node1_2024-07-11_03-36-47__ff56e5e4-b8f2-40a5-9e92-ade4efb861a5__harbor.status.im_wakuorg_go-waku:latest.log","source":"806be2ed747573ef.txt","type":"text/plain","size":64321}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.light_push"},{"name":"suite","value":"test_running_nodes"},{"name":"subSuite","value":"TestRunningNodes"},{"name":"host","value":"fv-az1759-122"},{"name":"thread","value":"2064-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.light_push.test_running_nodes"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"82cd2a365f18aad9.json","parameterValues":[]}