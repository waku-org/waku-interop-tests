2025-02-14 03:08:17.256 DEBUG [tests.conftest] Running fixture setup: test_id
2025-02-14 03:08:17.256 DEBUG [tests.conftest] Running test: test_publish_with_invalid_timestamps with id: 2025-02-14_03-08-17__f421076c-6aaa-4af4-92a3-66c2a80ba1fe
2025-02-14 03:08:17.257 DEBUG [src.steps.common] Running fixture setup: common_setup
2025-02-14 03:08:17.257 DEBUG [src.steps.relay] Running fixture setup: relay_setup
2025-02-14 03:08:17.257 DEBUG [src.steps.relay] Running fixture setup: setup_main_relay_nodes
2025-02-14 03:08:17.263 DEBUG [src.node.docker_mananger] Docker client initialized with image wakuorg/nwaku:latest
2025-02-14 03:08:17.263 DEBUG [src.node.waku_node] WakuNode instance initialized with log path ./log/docker/node1_2025-02-14_03-08-17__f421076c-6aaa-4af4-92a3-66c2a80ba1fe__wakuorg_nwaku:latest.log
2025-02-14 03:08:17.263 DEBUG [src.node.waku_node] Starting Node...
2025-02-14 03:08:17.264 DEBUG [src.node.docker_mananger] Attempting to create or retrieve network waku
2025-02-14 03:08:17.265 DEBUG [src.node.docker_mananger] Network waku already exists
2025-02-14 03:08:17.265 DEBUG [src.node.docker_mananger] Generated random external IP 172.18.233.87
2025-02-14 03:08:17.265 DEBUG [src.node.docker_mananger] Generated ports ['41088', '41089', '41090', '41091', '41092']
2025-02-14 03:08:17.265 DEBUG [src.node.waku_node] RLN credentials were not set
2025-02-14 03:08:17.265 INFO [src.node.waku_node] RLN credentials not set or credential store not available, starting without RLN
2025-02-14 03:08:17.265 DEBUG [src.node.waku_node] Using volumes []
2025-02-14 03:08:17.266 DEBUG [src.node.docker_mananger] docker run -i -t -p 41088:41088 -p 41089:41089 -p 41090:41090 -p 41091:41091 -p 41092:41092 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=41090 --rest-port=41088 --tcp-port=41089 --discv5-udp-port=41091 --rest-address=0.0.0.0 --nat=extip:172.18.233.87 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=71acf0f0562c4ebc82dae36b8ddc3ecf5c8eaabf005b6f12590f8dad8fbca9fc --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=41092 --metrics-logging=true --relay=true
2025-02-14 03:08:17.490 DEBUG [src.node.docker_mananger] docker network connect --ip 172.18.233.87 waku 36c701d4713ad3c6def241b801b2e866a455da59760199c17ca4b51a02838dc3
2025-02-14 03:08:17.540 DEBUG [src.node.docker_mananger] Container started with ID 36c701d4713a. Setting up logs at ./log/docker/node1_2025-02-14_03-08-17__f421076c-6aaa-4af4-92a3-66c2a80ba1fe__wakuorg_nwaku:latest.log
2025-02-14 03:08:17.540 DEBUG [src.node.waku_node] Started container from image wakuorg/nwaku:latest. REST: 41088
2025-02-14 03:08:17.541 DEBUG [src.libs.common] Sleeping for 1 seconds
2025-02-14 03:08:18.039 ERROR [src.node.docker_mananger] Max retries reached for container 87e507586d5e. Exiting log stream.
2025-02-14 03:08:18.542 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:41088/health" -H "Content-Type: application/json" -d 'None'
2025-02-14 03:08:18.544 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
2025-02-14 03:08:18.545 INFO [src.node.waku_node] Node protocols are initialized !!
2025-02-14 03:08:18.545 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:41088/debug/v1/info" -H "Content-Type: application/json" -d 'None'
2025-02-14 03:08:18.547 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.233.87/tcp/41089/p2p/16Uiu2HAmNhtVcpqvQByTV1weWetYGb4ApSNUTARnQbPJeqdxhG6J","/ip4/172.18.233.87/tcp/41090/ws/p2p/16Uiu2HAmNhtVcpqvQByTV1weWetYGb4ApSNUTARnQbPJeqdxhG6J"],"enrUri":"enr:-L24QFwQ9DLDiJgc5ZTo0hRyUp1WY76WAEyxfz4rh3ztGyP6QWc40wxEbEI7So80WM5GlVquE0hKArJUc90Ed7jDd9ECgmlkgnY0gmlwhKwS6VeKbXVsdGlhZGRyc5YACASsEulXBqCBAAoErBLpVwaggt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDlVL9Zcq16b8ixCqQhcnMmZdKNmfy6lUh_kBrIRK3Av-DdGNwgqCBg3VkcIKgg4V3YWt1MgE"}'
2025-02-14 03:08:18.547 INFO [src.node.waku_node] REST service is ready !!
2025-02-14 03:08:18.553 DEBUG [src.node.docker_mananger] Docker client initialized with image wakuorg/go-waku:latest
2025-02-14 03:08:18.553 DEBUG [src.node.waku_node] WakuNode instance initialized with log path ./log/docker/node2_2025-02-14_03-08-17__f421076c-6aaa-4af4-92a3-66c2a80ba1fe__wakuorg_go-waku:latest.log
2025-02-14 03:08:18.554 DEBUG [src.node.waku_node] Starting Node...
2025-02-14 03:08:18.554 DEBUG [src.node.docker_mananger] Attempting to create or retrieve network waku
2025-02-14 03:08:18.555 DEBUG [src.node.docker_mananger] Network waku already exists
2025-02-14 03:08:18.555 DEBUG [src.node.docker_mananger] Generated random external IP 172.18.3.233
2025-02-14 03:08:18.555 DEBUG [src.node.docker_mananger] Generated ports ['53407', '53408', '53409', '53410', '53411']
2025-02-14 03:08:18.555 DEBUG [src.node.waku_node] RLN credentials were not set
2025-02-14 03:08:18.556 INFO [src.node.waku_node] RLN credentials not set or credential store not available, starting without RLN
2025-02-14 03:08:18.556 DEBUG [src.node.waku_node] Using volumes []
2025-02-14 03:08:18.556 DEBUG [src.node.docker_mananger] docker run -i -t -p 53407:53407 -p 53408:53408 -p 53409:53409 -p 53410:53410 -p 53411:53411 wakuorg/go-waku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=DEBUG --rest-relay-cache-capacity=100 --websocket-port=53409 --rest-port=53407 --tcp-port=53408 --discv5-udp-port=53410 --rest-address=0.0.0.0 --nat=extip:172.18.3.233 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=326f30a22e30f7caa6e0f5ee63e4fda3fe069d2cdc4ee1400fdbbbbbade5fa6f --min-relay-peers-to-publish=1 --rest-filter-cache-capacity=50 --peer-store-capacity=10 --relay=true --discv5-bootstrap-node=enr:-L24QFwQ9DLDiJgc5ZTo0hRyUp1WY76WAEyxfz4rh3ztGyP6QWc40wxEbEI7So80WM5GlVquE0hKArJUc90Ed7jDd9ECgmlkgnY0gmlwhKwS6VeKbXVsdGlhZGRyc5YACASsEulXBqCBAAoErBLpVwaggt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDlVL9Zcq16b8ixCqQhcnMmZdKNmfy6lUh_kBrIRK3Av-DdGNwgqCBg3VkcIKgg4V3YWt1MgE
2025-02-14 03:08:18.776 DEBUG [src.node.docker_mananger] docker network connect --ip 172.18.3.233 waku 864c2d3052ac8df634d50050378df5866fc58e07a19e380c906378108e526489
2025-02-14 03:08:18.836 DEBUG [src.node.docker_mananger] Container started with ID 864c2d3052ac. Setting up logs at ./log/docker/node2_2025-02-14_03-08-17__f421076c-6aaa-4af4-92a3-66c2a80ba1fe__wakuorg_go-waku:latest.log
2025-02-14 03:08:18.837 DEBUG [src.node.waku_node] Started container from image wakuorg/go-waku:latest. REST: 53407
2025-02-14 03:08:18.837 DEBUG [src.libs.common] Sleeping for 1 seconds
2025-02-14 03:08:19.837 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:53407/debug/v1/info" -H "Content-Type: application/json" -d 'None'
2025-02-14 03:08:19.840 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"enrUri":"enr:-J-4QPAKXgJJu9j3_PFvppyrox6zK32ya0MaPm11xJA1qq-RVxnz4ba6QXcNCE5Uet9baXSRD0t97AvExkN6xiwPzsiGAZUCbbQGgmlkgnY0gmlwhKwRAAOCcnODAAMAiXNlY3AyNTZrMaEC3gx8wa4FNh8qjyIrj6hVrRblg-_2_IQynwMHJqnlnouDdGNwgtCgg3VkcILQooV3YWt1MgE","listenAddresses":["/ip4/127.0.0.1/tcp/53408/p2p/16Uiu2HAmANTXrTzhWEUrjHBQyFC28P6PwmcJGVTKvo8NA2tbkD78","/ip4/127.0.0.1/tcp/53409/ws/p2p/16Uiu2HAmANTXrTzhWEUrjHBQyFC28P6PwmcJGVTKvo8NA2tbkD78","/ip4/172.17.0.3/tcp/53408/p2p/16Uiu2HAmANTXrTzhWEUrjHBQyFC28P6PwmcJGVTKvo8NA2tbkD78","/ip4/172.17.0.3/tcp/53409/ws/p2p/16Uiu2HAmANTXrTzhWEUrjHBQyFC28P6PwmcJGVTKvo8NA2tbkD78"]}'
2025-02-14 03:08:19.840 INFO [src.node.waku_node] REST service is ready !!
2025-02-14 03:08:19.841 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:53407/admin/v1/peers" -H "Content-Type: application/json" -d '{"multiaddr": "/ip4/172.18.233.87/tcp/41089/p2p/16Uiu2HAmNhtVcpqvQByTV1weWetYGb4ApSNUTARnQbPJeqdxhG6J", "protocols": ["/vac/waku/relay/2.0.0"], "shards": [0, 1, 2, 3, 4, 5, 6, 7, 8]}'
2025-02-14 03:08:19.857 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'null'
2025-02-14 03:08:19.857 DEBUG [src.steps.relay] Running fixture setup: subscribe_main_relay_nodes
2025-02-14 03:08:19.858 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:41088/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
2025-02-14 03:08:19.880 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-14 03:08:19.881 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:53407/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
2025-02-14 03:08:19.883 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'true'
2025-02-14 03:08:19.885 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:41088/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-14 03:08:19.892 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-14 03:08:19.893 DEBUG [src.libs.common] Sleeping for 0.1 seconds
2025-02-14 03:08:19.994 DEBUG [src.steps.relay] Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
2025-02-14 03:08:19.994 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:41088/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
2025-02-14 03:08:19.996 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1739502499884811008,"ephemeral":false}]'
2025-02-14 03:08:19.998 DEBUG [src.steps.relay] Checking that peer NODE_2:wakuorg/go-waku:latest can find the published message
2025-02-14 03:08:19.998 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:53407/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
2025-02-14 03:08:20.000 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'null'
2025-02-14 03:08:21.001 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:41088/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-14 03:08:21.005 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-14 03:08:21.006 DEBUG [src.libs.common] Sleeping for 0.1 seconds
2025-02-14 03:08:21.106 DEBUG [src.steps.relay] Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
2025-02-14 03:08:21.106 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:41088/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
2025-02-14 03:08:21.108 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1739502501000767232,"ephemeral":false}]'
2025-02-14 03:08:21.110 DEBUG [src.steps.relay] Checking that peer NODE_2:wakuorg/go-waku:latest can find the published message
2025-02-14 03:08:21.110 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:53407/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
2025-02-14 03:08:21.112 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1739502501000767232,"ephemeral":false}]'
2025-02-14 03:08:21.113 INFO [src.steps.relay] WARM UP successful!!
2025-02-14 03:08:21.114 DEBUG [tests.relay.test_publish] Running test with timestamp Timestamp as string number
2025-02-14 03:08:21.114 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:41088/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-14 03:08:21.117 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:41088/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-14 03:08:21.117 DEBUG [tests.relay.test_publish] Running test with timestamp Invalid large number
2025-02-14 03:08:21.118 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:41088/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-14 03:08:21.120 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:41088/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-14 03:08:21.121 DEBUG [tests.relay.test_publish] Running test with timestamp Float number
2025-02-14 03:08:21.121 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:41088/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-14 03:08:21.124 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:41088/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-14 03:08:21.124 DEBUG [tests.relay.test_publish] Running test with timestamp Array instead of timestamp
2025-02-14 03:08:21.125 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:41088/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-14 03:08:21.127 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:41088/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-14 03:08:21.128 DEBUG [tests.relay.test_publish] Running test with timestamp Object instead of timestamp
2025-02-14 03:08:21.128 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:41088/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-14 03:08:21.130 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:41088/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-14 03:08:21.131 DEBUG [tests.relay.test_publish] Running test with timestamp ISO 8601 timestamp
2025-02-14 03:08:21.131 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:41088/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-14 03:08:21.133 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:41088/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-14 03:08:21.134 DEBUG [tests.relay.test_publish] Running test with timestamp Missing
2025-02-14 03:08:21.134 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:41088/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-14 03:08:21.136 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:41088/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-14 03:08:21.139 DEBUG [tests.conftest] Running fixture teardown: test_setup
2025-02-14 03:08:21.140 DEBUG [tests.conftest] Running fixture teardown: close_open_nodes
2025-02-14 03:08:21.140 DEBUG [src.node.waku_node] Stopping container with id 36c701d4713a
2025-02-14 03:08:21.703 DEBUG [src.node.waku_node] Container stopped.
2025-02-14 03:08:21.703 DEBUG [src.node.waku_node] Stopping container with id 864c2d3052ac
2025-02-14 03:08:22.188 DEBUG [src.node.waku_node] Container stopped.
2025-02-14 03:08:22.190 DEBUG [tests.conftest] Running fixture teardown: check_waku_log_errors
2025-02-14 03:08:22.197 DEBUG [src.node.docker_mananger] No errors found in the waku logs.
2025-02-14 03:08:22.200 DEBUG [src.node.docker_mananger] No errors found in the waku logs.
