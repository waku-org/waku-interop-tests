2025-02-11 03:08:46.448 DEBUG [tests.conftest] Running fixture setup: test_id
2025-02-11 03:08:46.448 DEBUG [tests.conftest] Running test: test_publish_with_invalid_timestamps with id: 2025-02-11_03-08-46__b0517af8-a01c-4540-8f01-7706d04cb76d
2025-02-11 03:08:46.448 DEBUG [src.steps.common] Running fixture setup: common_setup
2025-02-11 03:08:46.449 DEBUG [src.steps.relay] Running fixture setup: relay_setup
2025-02-11 03:08:46.449 DEBUG [src.steps.relay] Running fixture setup: setup_main_relay_nodes
2025-02-11 03:08:46.455 DEBUG [src.node.docker_mananger] Docker client initialized with image wakuorg/nwaku:latest
2025-02-11 03:08:46.455 DEBUG [src.node.waku_node] WakuNode instance initialized with log path ./log/docker/node1_2025-02-11_03-08-46__b0517af8-a01c-4540-8f01-7706d04cb76d__wakuorg_nwaku:latest.log
2025-02-11 03:08:46.455 DEBUG [src.node.waku_node] Starting Node...
2025-02-11 03:08:46.455 DEBUG [src.node.docker_mananger] Attempting to create or retrieve network waku
2025-02-11 03:08:46.456 DEBUG [src.node.docker_mananger] Network waku already exists
2025-02-11 03:08:46.456 DEBUG [src.node.docker_mananger] Generated random external IP 172.18.189.76
2025-02-11 03:08:46.457 DEBUG [src.node.docker_mananger] Generated ports ['60565', '60566', '60567', '60568', '60569']
2025-02-11 03:08:46.457 DEBUG [src.node.waku_node] RLN credentials were not set
2025-02-11 03:08:46.457 INFO [src.node.waku_node] RLN credentials not set or credential store not available, starting without RLN
2025-02-11 03:08:46.457 DEBUG [src.node.waku_node] Using volumes []
2025-02-11 03:08:46.457 DEBUG [src.node.docker_mananger] docker run -i -t -p 60565:60565 -p 60566:60566 -p 60567:60567 -p 60568:60568 -p 60569:60569 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=60567 --rest-port=60565 --tcp-port=60566 --discv5-udp-port=60568 --rest-address=0.0.0.0 --nat=extip:172.18.189.76 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b7b7aaff42b0fcb8ee51d9e3b923d4fd91dddad1bbdaaecef632dfaefdddc062 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=60569 --metrics-logging=true --relay=true
2025-02-11 03:08:46.682 DEBUG [src.node.docker_mananger] docker network connect --ip 172.18.189.76 waku 493f651c9052caf65759f23374069ddc5b8d84753c679a76bd6533a823ab70b9
2025-02-11 03:08:46.729 DEBUG [src.node.docker_mananger] Container started with ID 493f651c9052. Setting up logs at ./log/docker/node1_2025-02-11_03-08-46__b0517af8-a01c-4540-8f01-7706d04cb76d__wakuorg_nwaku:latest.log
2025-02-11 03:08:46.730 DEBUG [src.node.waku_node] Started container from image wakuorg/nwaku:latest. REST: 60565
2025-02-11 03:08:46.730 DEBUG [src.libs.common] Sleeping for 1 seconds
2025-02-11 03:08:47.238 ERROR [src.node.docker_mananger] Max retries reached for container bfc75ca2f123. Exiting log stream.
2025-02-11 03:08:47.731 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:60565/health" -H "Content-Type: application/json" -d 'None'
2025-02-11 03:08:47.734 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
2025-02-11 03:08:47.734 INFO [src.node.waku_node] Node protocols are initialized !!
2025-02-11 03:08:47.734 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:60565/debug/v1/info" -H "Content-Type: application/json" -d 'None'
2025-02-11 03:08:47.736 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.189.76/tcp/60566/p2p/16Uiu2HAm7ekC5DLNoXvLkjfmgXvWPNV9ZrkG1nASJusfSjM4ZGvp","/ip4/172.18.189.76/tcp/60567/ws/p2p/16Uiu2HAm7ekC5DLNoXvLkjfmgXvWPNV9ZrkG1nASJusfSjM4ZGvp"],"enrUri":"enr:-L24QPYPZAbUMJuMhlNYqA6SJRbvXroRbsk9XeQ-MIVEQ9Zwbsd5tikU1O6nrTH0ho6i26ItzZX9MuHHyr3vyldJQMICgmlkgnY0gmlwhKwSvUyKbXVsdGlhZGRyc5YACASsEr1MBuyWAAoErBK9TAbsl90DgnJzhQADAQAAiXNlY3AyNTZrMaECtaWOS9PDLsredXXptMKzdni8HcHH4DprlDtt1MiNXP2DdGNwguyWg3VkcILsmIV3YWt1MgE"}'
2025-02-11 03:08:47.736 INFO [src.node.waku_node] REST service is ready !!
2025-02-11 03:08:47.742 DEBUG [src.node.docker_mananger] Docker client initialized with image wakuorg/go-waku:latest
2025-02-11 03:08:47.742 DEBUG [src.node.waku_node] WakuNode instance initialized with log path ./log/docker/node2_2025-02-11_03-08-46__b0517af8-a01c-4540-8f01-7706d04cb76d__wakuorg_go-waku:latest.log
2025-02-11 03:08:47.743 DEBUG [src.node.waku_node] Starting Node...
2025-02-11 03:08:47.743 DEBUG [src.node.docker_mananger] Attempting to create or retrieve network waku
2025-02-11 03:08:47.744 DEBUG [src.node.docker_mananger] Network waku already exists
2025-02-11 03:08:47.744 DEBUG [src.node.docker_mananger] Generated random external IP 172.18.70.93
2025-02-11 03:08:47.744 DEBUG [src.node.docker_mananger] Generated ports ['48363', '48364', '48365', '48366', '48367']
2025-02-11 03:08:47.745 DEBUG [src.node.waku_node] RLN credentials were not set
2025-02-11 03:08:47.745 INFO [src.node.waku_node] RLN credentials not set or credential store not available, starting without RLN
2025-02-11 03:08:47.745 DEBUG [src.node.waku_node] Using volumes []
2025-02-11 03:08:47.745 DEBUG [src.node.docker_mananger] docker run -i -t -p 48363:48363 -p 48364:48364 -p 48365:48365 -p 48366:48366 -p 48367:48367 wakuorg/go-waku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=DEBUG --rest-relay-cache-capacity=100 --websocket-port=48365 --rest-port=48363 --tcp-port=48364 --discv5-udp-port=48366 --rest-address=0.0.0.0 --nat=extip:172.18.70.93 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=4340dbbc40c4095960bab8dbfc351ac26a7fbda8d4aba4795ccef5ecffac80cb --min-relay-peers-to-publish=1 --rest-filter-cache-capacity=50 --peer-store-capacity=10 --relay=true --discv5-bootstrap-node=enr:-L24QPYPZAbUMJuMhlNYqA6SJRbvXroRbsk9XeQ-MIVEQ9Zwbsd5tikU1O6nrTH0ho6i26ItzZX9MuHHyr3vyldJQMICgmlkgnY0gmlwhKwSvUyKbXVsdGlhZGRyc5YACASsEr1MBuyWAAoErBK9TAbsl90DgnJzhQADAQAAiXNlY3AyNTZrMaECtaWOS9PDLsredXXptMKzdni8HcHH4DprlDtt1MiNXP2DdGNwguyWg3VkcILsmIV3YWt1MgE
2025-02-11 03:08:47.964 DEBUG [src.node.docker_mananger] docker network connect --ip 172.18.70.93 waku 305f9d453a413b26bb752ca7b48861b9b1f5f79dda34643f87a474d383ac79d2
2025-02-11 03:08:48.017 DEBUG [src.node.docker_mananger] Container started with ID 305f9d453a41. Setting up logs at ./log/docker/node2_2025-02-11_03-08-46__b0517af8-a01c-4540-8f01-7706d04cb76d__wakuorg_go-waku:latest.log
2025-02-11 03:08:48.017 DEBUG [src.node.waku_node] Started container from image wakuorg/go-waku:latest. REST: 48363
2025-02-11 03:08:48.018 DEBUG [src.libs.common] Sleeping for 1 seconds
2025-02-11 03:08:49.018 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:48363/debug/v1/info" -H "Content-Type: application/json" -d 'None'
2025-02-11 03:08:49.021 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"enrUri":"enr:-J-4QFUQzDBw3XvaEiuF0JSCFl6eGJZ5WvPOt0Ef7tJfgPcCIsWCpeUcYF7l_xwIs9Fei5NYWM7J79dE9zxGDCryvemGAZTy-xIHgmlkgnY0gmlwhKwRAAOCcnODAAMAiXNlY3AyNTZrMaECQldg2X3dpWJqO313D-r_8gbr4_y0D2sWFCnZ_vnh-QyDdGNwgrzsg3VkcIK87oV3YWt1MgE","listenAddresses":["/ip4/127.0.0.1/tcp/48364/p2p/16Uiu2HAkyteAaH7A36tFK5pAtVcE7uAHL2xFPH97LNoPGEGGu8bm","/ip4/127.0.0.1/tcp/48365/ws/p2p/16Uiu2HAkyteAaH7A36tFK5pAtVcE7uAHL2xFPH97LNoPGEGGu8bm","/ip4/172.17.0.3/tcp/48364/p2p/16Uiu2HAkyteAaH7A36tFK5pAtVcE7uAHL2xFPH97LNoPGEGGu8bm","/ip4/172.17.0.3/tcp/48365/ws/p2p/16Uiu2HAkyteAaH7A36tFK5pAtVcE7uAHL2xFPH97LNoPGEGGu8bm"]}'
2025-02-11 03:08:49.021 INFO [src.node.waku_node] REST service is ready !!
2025-02-11 03:08:49.022 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:48363/admin/v1/peers" -H "Content-Type: application/json" -d '{"multiaddr": "/ip4/172.18.189.76/tcp/60566/p2p/16Uiu2HAm7ekC5DLNoXvLkjfmgXvWPNV9ZrkG1nASJusfSjM4ZGvp", "protocols": ["/vac/waku/relay/2.0.0"], "shards": [0, 1, 2, 3, 4, 5, 6, 7, 8]}'
2025-02-11 03:08:49.037 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'null'
2025-02-11 03:08:49.038 DEBUG [src.steps.relay] Running fixture setup: subscribe_main_relay_nodes
2025-02-11 03:08:49.039 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:60565/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
2025-02-11 03:08:49.060 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-11 03:08:49.060 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:48363/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
2025-02-11 03:08:49.063 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'true'
2025-02-11 03:08:49.064 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:60565/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-11 03:08:49.077 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-11 03:08:49.077 DEBUG [src.libs.common] Sleeping for 0.1 seconds
2025-02-11 03:08:49.178 DEBUG [src.steps.relay] Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
2025-02-11 03:08:49.178 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:60565/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
2025-02-11 03:08:49.180 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1739243329064232704,"ephemeral":false}]'
2025-02-11 03:08:49.182 DEBUG [src.steps.relay] Checking that peer NODE_2:wakuorg/go-waku:latest can find the published message
2025-02-11 03:08:49.182 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:48363/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
2025-02-11 03:08:49.184 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'null'
2025-02-11 03:08:50.185 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:60565/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-11 03:08:50.189 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-11 03:08:50.190 DEBUG [src.libs.common] Sleeping for 0.1 seconds
2025-02-11 03:08:50.290 DEBUG [src.steps.relay] Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
2025-02-11 03:08:50.290 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:60565/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
2025-02-11 03:08:50.292 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1739243330184845056,"ephemeral":false}]'
2025-02-11 03:08:50.294 DEBUG [src.steps.relay] Checking that peer NODE_2:wakuorg/go-waku:latest can find the published message
2025-02-11 03:08:50.294 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:48363/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
2025-02-11 03:08:50.295 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1739243330184845056,"ephemeral":false}]'
2025-02-11 03:08:50.297 INFO [src.steps.relay] WARM UP successful!!
2025-02-11 03:08:50.298 DEBUG [tests.relay.test_publish] Running test with timestamp Timestamp as string number
2025-02-11 03:08:50.298 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:60565/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-11 03:08:50.300 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:60565/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-11 03:08:50.301 DEBUG [tests.relay.test_publish] Running test with timestamp Invalid large number
2025-02-11 03:08:50.302 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:60565/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-11 03:08:50.304 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:60565/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-11 03:08:50.305 DEBUG [tests.relay.test_publish] Running test with timestamp Float number
2025-02-11 03:08:50.305 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:60565/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-11 03:08:50.307 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:60565/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-11 03:08:50.308 DEBUG [tests.relay.test_publish] Running test with timestamp Array instead of timestamp
2025-02-11 03:08:50.309 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:60565/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-11 03:08:50.311 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:60565/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-11 03:08:50.311 DEBUG [tests.relay.test_publish] Running test with timestamp Object instead of timestamp
2025-02-11 03:08:50.312 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:60565/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-11 03:08:50.314 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:60565/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-11 03:08:50.315 DEBUG [tests.relay.test_publish] Running test with timestamp ISO 8601 timestamp
2025-02-11 03:08:50.315 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:60565/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-11 03:08:50.317 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:60565/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-11 03:08:50.318 DEBUG [tests.relay.test_publish] Running test with timestamp Missing
2025-02-11 03:08:50.318 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:60565/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-11 03:08:50.320 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:60565/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-11 03:08:50.323 DEBUG [tests.conftest] Running fixture teardown: test_setup
2025-02-11 03:08:50.324 DEBUG [tests.conftest] Running fixture teardown: close_open_nodes
2025-02-11 03:08:50.324 DEBUG [src.node.waku_node] Stopping container with id 493f651c9052
2025-02-11 03:08:50.887 DEBUG [src.node.waku_node] Container stopped.
2025-02-11 03:08:50.887 DEBUG [src.node.waku_node] Stopping container with id 305f9d453a41
2025-02-11 03:08:51.384 DEBUG [src.node.waku_node] Container stopped.
2025-02-11 03:08:51.386 DEBUG [tests.conftest] Running fixture teardown: check_waku_log_errors
2025-02-11 03:08:51.392 DEBUG [src.node.docker_mananger] No errors found in the waku logs.
2025-02-11 03:08:51.395 DEBUG [src.node.docker_mananger] No errors found in the waku logs.
