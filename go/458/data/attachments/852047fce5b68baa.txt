2025-02-08 03:07:19.288 DEBUG [tests.conftest] Running fixture setup: test_id
2025-02-08 03:07:19.288 DEBUG [tests.conftest] Running test: test_publish_with_invalid_timestamps with id: 2025-02-08_03-07-19__ae9616b5-1cec-4833-b4b3-4ca6c1dda12a
2025-02-08 03:07:19.288 DEBUG [src.steps.common] Running fixture setup: common_setup
2025-02-08 03:07:19.289 DEBUG [src.steps.relay] Running fixture setup: relay_setup
2025-02-08 03:07:19.289 DEBUG [src.steps.relay] Running fixture setup: setup_main_relay_nodes
2025-02-08 03:07:19.295 DEBUG [src.node.docker_mananger] Docker client initialized with image wakuorg/nwaku:latest
2025-02-08 03:07:19.295 DEBUG [src.node.waku_node] WakuNode instance initialized with log path ./log/docker/node1_2025-02-08_03-07-19__ae9616b5-1cec-4833-b4b3-4ca6c1dda12a__wakuorg_nwaku:latest.log
2025-02-08 03:07:19.295 DEBUG [src.node.waku_node] Starting Node...
2025-02-08 03:07:19.295 DEBUG [src.node.docker_mananger] Attempting to create or retrieve network waku
2025-02-08 03:07:19.297 DEBUG [src.node.docker_mananger] Network waku already exists
2025-02-08 03:07:19.297 DEBUG [src.node.docker_mananger] Generated random external IP 172.18.20.10
2025-02-08 03:07:19.297 DEBUG [src.node.docker_mananger] Generated ports ['5803', '5804', '5805', '5806', '5807']
2025-02-08 03:07:19.297 DEBUG [src.node.waku_node] RLN credentials were not set
2025-02-08 03:07:19.297 INFO [src.node.waku_node] RLN credentials not set or credential store not available, starting without RLN
2025-02-08 03:07:19.297 DEBUG [src.node.waku_node] Using volumes []
2025-02-08 03:07:19.298 DEBUG [src.node.docker_mananger] docker run -i -t -p 5803:5803 -p 5804:5804 -p 5805:5805 -p 5806:5806 -p 5807:5807 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=5805 --rest-port=5803 --tcp-port=5804 --discv5-udp-port=5806 --rest-address=0.0.0.0 --nat=extip:172.18.20.10 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e39a2ec2fd95e75a8f0ac2bba5f7adc4e7d6facb4ec9de43dcad42dcfc0fb899 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=5807 --metrics-logging=true --relay=true
2025-02-08 03:07:19.524 DEBUG [src.node.docker_mananger] docker network connect --ip 172.18.20.10 waku 51d4a79d284809f27777fd447d474d0f241da62aa472f91a75d370b3d46d8a4f
2025-02-08 03:07:19.575 DEBUG [src.node.docker_mananger] Container started with ID 51d4a79d2848. Setting up logs at ./log/docker/node1_2025-02-08_03-07-19__ae9616b5-1cec-4833-b4b3-4ca6c1dda12a__wakuorg_nwaku:latest.log
2025-02-08 03:07:19.577 DEBUG [src.node.waku_node] Started container from image wakuorg/nwaku:latest. REST: 5803
2025-02-08 03:07:19.577 DEBUG [src.libs.common] Sleeping for 1 seconds
2025-02-08 03:07:20.081 ERROR [src.node.docker_mananger] Max retries reached for container b6ce5ae22dfd. Exiting log stream.
2025-02-08 03:07:20.577 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:5803/health" -H "Content-Type: application/json" -d 'None'
2025-02-08 03:07:20.580 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
2025-02-08 03:07:20.580 INFO [src.node.waku_node] Node protocols are initialized !!
2025-02-08 03:07:20.580 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:5803/debug/v1/info" -H "Content-Type: application/json" -d 'None'
2025-02-08 03:07:20.583 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.20.10/tcp/5804/p2p/16Uiu2HAm7gEKZ8QFVfXmneQHq4GUVPxR3gMtDXsaL6AZkeHzxBHt","/ip4/172.18.20.10/tcp/5805/ws/p2p/16Uiu2HAm7gEKZ8QFVfXmneQHq4GUVPxR3gMtDXsaL6AZkeHzxBHt"],"enrUri":"enr:-L24QKFyMGbo2Xs9GyMeWaHQFyBVA0cuWxVAQP5Ckmais2SrelC_bkpqIzSQ1b7ZxSp0s6UNxuTXxFBv1VnPLTf9VjgCgmlkgnY0gmlwhKwSFAqKbXVsdGlhZGRyc5YACASsEhQKBhasAAoErBIUCgYWrd0DgnJzhQADAQAAiXNlY3AyNTZrMaECtgbxNB4oajqTn10-NhOouEGsr8JF4LsqIc22beUTuSODdGNwghasg3VkcIIWroV3YWt1MgE"}'
2025-02-08 03:07:20.583 INFO [src.node.waku_node] REST service is ready !!
2025-02-08 03:07:20.589 DEBUG [src.node.docker_mananger] Docker client initialized with image wakuorg/go-waku:latest
2025-02-08 03:07:20.589 DEBUG [src.node.waku_node] WakuNode instance initialized with log path ./log/docker/node2_2025-02-08_03-07-19__ae9616b5-1cec-4833-b4b3-4ca6c1dda12a__wakuorg_go-waku:latest.log
2025-02-08 03:07:20.590 DEBUG [src.node.waku_node] Starting Node...
2025-02-08 03:07:20.590 DEBUG [src.node.docker_mananger] Attempting to create or retrieve network waku
2025-02-08 03:07:20.591 DEBUG [src.node.docker_mananger] Network waku already exists
2025-02-08 03:07:20.591 DEBUG [src.node.docker_mananger] Generated random external IP 172.18.200.134
2025-02-08 03:07:20.591 DEBUG [src.node.docker_mananger] Generated ports ['33675', '33676', '33677', '33678', '33679']
2025-02-08 03:07:20.591 DEBUG [src.node.waku_node] RLN credentials were not set
2025-02-08 03:07:20.592 INFO [src.node.waku_node] RLN credentials not set or credential store not available, starting without RLN
2025-02-08 03:07:20.592 DEBUG [src.node.waku_node] Using volumes []
2025-02-08 03:07:20.592 DEBUG [src.node.docker_mananger] docker run -i -t -p 33675:33675 -p 33676:33676 -p 33677:33677 -p 33678:33678 -p 33679:33679 wakuorg/go-waku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=DEBUG --rest-relay-cache-capacity=100 --websocket-port=33677 --rest-port=33675 --tcp-port=33676 --discv5-udp-port=33678 --rest-address=0.0.0.0 --nat=extip:172.18.200.134 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=1cf9fe90d2fcf67cfffedcea0574326f32a4838049f203f5bbaba1bc5b48be1c --min-relay-peers-to-publish=1 --rest-filter-cache-capacity=50 --peer-store-capacity=10 --relay=true --discv5-bootstrap-node=enr:-L24QKFyMGbo2Xs9GyMeWaHQFyBVA0cuWxVAQP5Ckmais2SrelC_bkpqIzSQ1b7ZxSp0s6UNxuTXxFBv1VnPLTf9VjgCgmlkgnY0gmlwhKwSFAqKbXVsdGlhZGRyc5YACASsEhQKBhasAAoErBIUCgYWrd0DgnJzhQADAQAAiXNlY3AyNTZrMaECtgbxNB4oajqTn10-NhOouEGsr8JF4LsqIc22beUTuSODdGNwghasg3VkcIIWroV3YWt1MgE
2025-02-08 03:07:20.813 DEBUG [src.node.docker_mananger] docker network connect --ip 172.18.200.134 waku 161f77acf2fb6849aee3baeeffd32f83e7df3d35fa4d9dc44db8a5db07495bb4
2025-02-08 03:07:20.872 DEBUG [src.node.docker_mananger] Container started with ID 161f77acf2fb. Setting up logs at ./log/docker/node2_2025-02-08_03-07-19__ae9616b5-1cec-4833-b4b3-4ca6c1dda12a__wakuorg_go-waku:latest.log
2025-02-08 03:07:20.873 DEBUG [src.node.waku_node] Started container from image wakuorg/go-waku:latest. REST: 33675
2025-02-08 03:07:20.873 DEBUG [src.libs.common] Sleeping for 1 seconds
2025-02-08 03:07:21.874 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:33675/debug/v1/info" -H "Content-Type: application/json" -d 'None'
2025-02-08 03:07:21.876 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"enrUri":"enr:-J-4QNMqPor-iMVfVY2gx0sCqCMum4YNtZzCgiDnoHIrORJFEDEaxIJ0IpL-Nij-GOfYo8KudrSPhcDuvBY22JarENyGAZTjhqmcgmlkgnY0gmlwhKwRAAOCcnODAAMAiXNlY3AyNTZrMaEDu5Hq1U-LXa9nxBTeNlxxVO6IS7GKXwgUA-GCNKM1AG6DdGNwgoOMg3VkcIKDjoV3YWt1MgE","listenAddresses":["/ip4/127.0.0.1/tcp/33676/p2p/16Uiu2HAmRHBe5deSW4E1XEq92nu2kQzoJgPEy9MVvMtT5QJB4DdX","/ip4/127.0.0.1/tcp/33677/ws/p2p/16Uiu2HAmRHBe5deSW4E1XEq92nu2kQzoJgPEy9MVvMtT5QJB4DdX","/ip4/172.17.0.3/tcp/33676/p2p/16Uiu2HAmRHBe5deSW4E1XEq92nu2kQzoJgPEy9MVvMtT5QJB4DdX","/ip4/172.17.0.3/tcp/33677/ws/p2p/16Uiu2HAmRHBe5deSW4E1XEq92nu2kQzoJgPEy9MVvMtT5QJB4DdX"]}'
2025-02-08 03:07:21.877 INFO [src.node.waku_node] REST service is ready !!
2025-02-08 03:07:21.877 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:33675/admin/v1/peers" -H "Content-Type: application/json" -d '{"multiaddr": "/ip4/172.18.20.10/tcp/5804/p2p/16Uiu2HAm7gEKZ8QFVfXmneQHq4GUVPxR3gMtDXsaL6AZkeHzxBHt", "protocols": ["/vac/waku/relay/2.0.0"], "shards": [0, 1, 2, 3, 4, 5, 6, 7, 8]}'
2025-02-08 03:07:21.895 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'null'
2025-02-08 03:07:21.897 DEBUG [src.steps.relay] Running fixture setup: subscribe_main_relay_nodes
2025-02-08 03:07:21.898 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:5803/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
2025-02-08 03:07:21.922 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-08 03:07:21.922 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:33675/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
2025-02-08 03:07:21.924 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'true'
2025-02-08 03:07:21.926 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:5803/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-08 03:07:21.938 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-08 03:07:21.938 DEBUG [src.libs.common] Sleeping for 0.1 seconds
2025-02-08 03:07:22.038 DEBUG [src.steps.relay] Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
2025-02-08 03:07:22.039 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:5803/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
2025-02-08 03:07:22.041 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1738984041926120704,"ephemeral":false}]'
2025-02-08 03:07:22.043 DEBUG [src.steps.relay] Checking that peer NODE_2:wakuorg/go-waku:latest can find the published message
2025-02-08 03:07:22.043 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:33675/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
2025-02-08 03:07:22.045 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'null'
2025-02-08 03:07:23.046 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:5803/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-08 03:07:23.051 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-08 03:07:23.051 DEBUG [src.libs.common] Sleeping for 0.1 seconds
2025-02-08 03:07:23.151 DEBUG [src.steps.relay] Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
2025-02-08 03:07:23.151 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:5803/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
2025-02-08 03:07:23.154 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1738984043045965824,"ephemeral":false}]'
2025-02-08 03:07:23.155 DEBUG [src.steps.relay] Checking that peer NODE_2:wakuorg/go-waku:latest can find the published message
2025-02-08 03:07:23.156 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:33675/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
2025-02-08 03:07:23.157 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1738984043045965824,"ephemeral":false}]'
2025-02-08 03:07:23.159 INFO [src.steps.relay] WARM UP successful!!
2025-02-08 03:07:23.159 DEBUG [tests.relay.test_publish] Running test with timestamp Timestamp as string number
2025-02-08 03:07:23.160 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:5803/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-08 03:07:23.162 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:5803/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-08 03:07:23.163 DEBUG [tests.relay.test_publish] Running test with timestamp Invalid large number
2025-02-08 03:07:23.163 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:5803/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-08 03:07:23.165 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:5803/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-08 03:07:23.166 DEBUG [tests.relay.test_publish] Running test with timestamp Float number
2025-02-08 03:07:23.167 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:5803/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-08 03:07:23.169 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:5803/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-08 03:07:23.170 DEBUG [tests.relay.test_publish] Running test with timestamp Array instead of timestamp
2025-02-08 03:07:23.170 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:5803/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-08 03:07:23.172 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:5803/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-08 03:07:23.173 DEBUG [tests.relay.test_publish] Running test with timestamp Object instead of timestamp
2025-02-08 03:07:23.174 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:5803/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-08 03:07:23.176 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:5803/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-08 03:07:23.177 DEBUG [tests.relay.test_publish] Running test with timestamp ISO 8601 timestamp
2025-02-08 03:07:23.177 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:5803/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-08 03:07:23.179 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:5803/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-08 03:07:23.180 DEBUG [tests.relay.test_publish] Running test with timestamp Missing
2025-02-08 03:07:23.180 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:5803/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-08 03:07:23.182 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:5803/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-08 03:07:23.185 DEBUG [tests.conftest] Running fixture teardown: test_setup
2025-02-08 03:07:23.186 DEBUG [tests.conftest] Running fixture teardown: close_open_nodes
2025-02-08 03:07:23.186 DEBUG [src.node.waku_node] Stopping container with id 51d4a79d2848
2025-02-08 03:07:23.747 DEBUG [src.node.waku_node] Container stopped.
2025-02-08 03:07:23.747 DEBUG [src.node.waku_node] Stopping container with id 161f77acf2fb
2025-02-08 03:07:24.245 DEBUG [src.node.waku_node] Container stopped.
2025-02-08 03:07:24.247 DEBUG [tests.conftest] Running fixture teardown: check_waku_log_errors
2025-02-08 03:07:24.253 DEBUG [src.node.docker_mananger] No errors found in the waku logs.
2025-02-08 03:07:24.256 DEBUG [src.node.docker_mananger] No errors found in the waku logs.
