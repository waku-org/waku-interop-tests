2025-02-06 03:09:11.211 DEBUG [tests.conftest] Running fixture setup: test_id
2025-02-06 03:09:11.212 DEBUG [tests.conftest] Running test: test_publish_with_invalid_timestamps with id: 2025-02-06_03-09-11__65581bef-751f-4ef4-bbe6-b5c89350dc1c
2025-02-06 03:09:11.212 DEBUG [src.steps.common] Running fixture setup: common_setup
2025-02-06 03:09:11.212 DEBUG [src.steps.relay] Running fixture setup: relay_setup
2025-02-06 03:09:11.212 DEBUG [src.steps.relay] Running fixture setup: setup_main_relay_nodes
2025-02-06 03:09:11.218 DEBUG [src.node.docker_mananger] Docker client initialized with image wakuorg/nwaku:latest
2025-02-06 03:09:11.218 DEBUG [src.node.waku_node] WakuNode instance initialized with log path ./log/docker/node1_2025-02-06_03-09-11__65581bef-751f-4ef4-bbe6-b5c89350dc1c__wakuorg_nwaku:latest.log
2025-02-06 03:09:11.218 DEBUG [src.node.waku_node] Starting Node...
2025-02-06 03:09:11.218 DEBUG [src.node.docker_mananger] Attempting to create or retrieve network waku
2025-02-06 03:09:11.220 DEBUG [src.node.docker_mananger] Network waku already exists
2025-02-06 03:09:11.220 DEBUG [src.node.docker_mananger] Generated random external IP 172.18.3.205
2025-02-06 03:09:11.220 DEBUG [src.node.docker_mananger] Generated ports ['2382', '2383', '2384', '2385', '2386']
2025-02-06 03:09:11.220 DEBUG [src.node.waku_node] RLN credentials were not set
2025-02-06 03:09:11.220 INFO [src.node.waku_node] RLN credentials not set or credential store not available, starting without RLN
2025-02-06 03:09:11.220 DEBUG [src.node.waku_node] Using volumes []
2025-02-06 03:09:11.221 DEBUG [src.node.docker_mananger] docker run -i -t -p 2382:2382 -p 2383:2383 -p 2384:2384 -p 2385:2385 -p 2386:2386 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=2384 --rest-port=2382 --tcp-port=2383 --discv5-udp-port=2385 --rest-address=0.0.0.0 --nat=extip:172.18.3.205 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b8f37ed5fa4ed90bedd73fcb109e6ec86ad1e07888edae7c9e26c5ffafd1bce5 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=2386 --metrics-logging=true --relay=true
2025-02-06 03:09:11.443 DEBUG [src.node.docker_mananger] docker network connect --ip 172.18.3.205 waku 4f9249009e7ab9981712611c8451cdb2c13b175fe476cf7e2a1ca95ced5bde27
2025-02-06 03:09:11.494 DEBUG [src.node.docker_mananger] Container started with ID 4f9249009e7a. Setting up logs at ./log/docker/node1_2025-02-06_03-09-11__65581bef-751f-4ef4-bbe6-b5c89350dc1c__wakuorg_nwaku:latest.log
2025-02-06 03:09:11.494 DEBUG [src.node.waku_node] Started container from image wakuorg/nwaku:latest. REST: 2382
2025-02-06 03:09:11.495 DEBUG [src.libs.common] Sleeping for 1 seconds
2025-02-06 03:09:12.003 ERROR [src.node.docker_mananger] Max retries reached for container 6ba89cee8b90. Exiting log stream.
2025-02-06 03:09:12.496 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:2382/health" -H "Content-Type: application/json" -d 'None'
2025-02-06 03:09:12.498 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
2025-02-06 03:09:12.498 INFO [src.node.waku_node] Node protocols are initialized !!
2025-02-06 03:09:12.499 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:2382/debug/v1/info" -H "Content-Type: application/json" -d 'None'
2025-02-06 03:09:12.501 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.3.205/tcp/2383/p2p/16Uiu2HAmHKPso3EuzDFbfPELMgDnireiQFics82epaNYnHfoGFTo","/ip4/172.18.3.205/tcp/2384/ws/p2p/16Uiu2HAmHKPso3EuzDFbfPELMgDnireiQFics82epaNYnHfoGFTo"],"enrUri":"enr:-L24QL0ffx_y1j6Jm6oy9muNsDlBjN4gXC3Lz4RXOGylccKPcFFy7YFKsG0nIMj1_Eqq0EbzVYSNh6ol5An7M8xhKIACgmlkgnY0gmlwhKwSA82KbXVsdGlhZGRyc5YACASsEgPNBglPAAoErBIDzQYJUN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDRUVrWH94AeHt3dJR00tmwmWck4tEsn1t8YBFjF_DfoKDdGNwgglPg3VkcIIJUYV3YWt1MgE"}'
2025-02-06 03:09:12.501 INFO [src.node.waku_node] REST service is ready !!
2025-02-06 03:09:12.507 DEBUG [src.node.docker_mananger] Docker client initialized with image wakuorg/go-waku:latest
2025-02-06 03:09:12.507 DEBUG [src.node.waku_node] WakuNode instance initialized with log path ./log/docker/node2_2025-02-06_03-09-11__65581bef-751f-4ef4-bbe6-b5c89350dc1c__wakuorg_go-waku:latest.log
2025-02-06 03:09:12.508 DEBUG [src.node.waku_node] Starting Node...
2025-02-06 03:09:12.508 DEBUG [src.node.docker_mananger] Attempting to create or retrieve network waku
2025-02-06 03:09:12.509 DEBUG [src.node.docker_mananger] Network waku already exists
2025-02-06 03:09:12.509 DEBUG [src.node.docker_mananger] Generated random external IP 172.18.221.13
2025-02-06 03:09:12.509 DEBUG [src.node.docker_mananger] Generated ports ['1235', '1236', '1237', '1238', '1239']
2025-02-06 03:09:12.510 DEBUG [src.node.waku_node] RLN credentials were not set
2025-02-06 03:09:12.510 INFO [src.node.waku_node] RLN credentials not set or credential store not available, starting without RLN
2025-02-06 03:09:12.510 DEBUG [src.node.waku_node] Using volumes []
2025-02-06 03:09:12.510 DEBUG [src.node.docker_mananger] docker run -i -t -p 1235:1235 -p 1236:1236 -p 1237:1237 -p 1238:1238 -p 1239:1239 wakuorg/go-waku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=DEBUG --rest-relay-cache-capacity=100 --websocket-port=1237 --rest-port=1235 --tcp-port=1236 --discv5-udp-port=1238 --rest-address=0.0.0.0 --nat=extip:172.18.221.13 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=99ddc8abb8debff849bda9af9e572c9ee7cfa06eae8eacc7feb025911aeaca8b --min-relay-peers-to-publish=1 --rest-filter-cache-capacity=50 --peer-store-capacity=10 --relay=true --discv5-bootstrap-node=enr:-L24QL0ffx_y1j6Jm6oy9muNsDlBjN4gXC3Lz4RXOGylccKPcFFy7YFKsG0nIMj1_Eqq0EbzVYSNh6ol5An7M8xhKIACgmlkgnY0gmlwhKwSA82KbXVsdGlhZGRyc5YACASsEgPNBglPAAoErBIDzQYJUN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDRUVrWH94AeHt3dJR00tmwmWck4tEsn1t8YBFjF_DfoKDdGNwgglPg3VkcIIJUYV3YWt1MgE
2025-02-06 03:09:12.734 DEBUG [src.node.docker_mananger] docker network connect --ip 172.18.221.13 waku 1ff84056e66c40c8763cd852346c84b1203fa507974259ec4dd8d4630486ed6f
2025-02-06 03:09:12.791 DEBUG [src.node.docker_mananger] Container started with ID 1ff84056e66c. Setting up logs at ./log/docker/node2_2025-02-06_03-09-11__65581bef-751f-4ef4-bbe6-b5c89350dc1c__wakuorg_go-waku:latest.log
2025-02-06 03:09:12.791 DEBUG [src.node.waku_node] Started container from image wakuorg/go-waku:latest. REST: 1235
2025-02-06 03:09:12.791 DEBUG [src.libs.common] Sleeping for 1 seconds
2025-02-06 03:09:13.792 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:1235/debug/v1/info" -H "Content-Type: application/json" -d 'None'
2025-02-06 03:09:13.795 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"enrUri":"enr:-J-4QGQthIL7nSdM7vcdZNJRiaFSat2c7BB4ALohv-j9P1PBIEW5E7Nrcnf6wAcVV_1w34gRHMh_Z8SoZxrzU6w6vBOGAZTZO6bLgmlkgnY0gmlwhKwRAAOCcnODAAMAiXNlY3AyNTZrMaED4BhkTTcbJFb5Q5ytXqxTyLxRd6zdl8EfgLWvXrdVP_SDdGNwggTUg3VkcIIE1oV3YWt1MgE","listenAddresses":["/ip4/127.0.0.1/tcp/1236/p2p/16Uiu2HAmTjmFHhjLHirEm49Hg8N2Ua4yNgTRTaB7ULyPuSPUEBHu","/ip4/127.0.0.1/tcp/1237/ws/p2p/16Uiu2HAmTjmFHhjLHirEm49Hg8N2Ua4yNgTRTaB7ULyPuSPUEBHu","/ip4/172.17.0.3/tcp/1236/p2p/16Uiu2HAmTjmFHhjLHirEm49Hg8N2Ua4yNgTRTaB7ULyPuSPUEBHu","/ip4/172.17.0.3/tcp/1237/ws/p2p/16Uiu2HAmTjmFHhjLHirEm49Hg8N2Ua4yNgTRTaB7ULyPuSPUEBHu"]}'
2025-02-06 03:09:13.796 INFO [src.node.waku_node] REST service is ready !!
2025-02-06 03:09:13.796 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:1235/admin/v1/peers" -H "Content-Type: application/json" -d '{"multiaddr": "/ip4/172.18.3.205/tcp/2383/p2p/16Uiu2HAmHKPso3EuzDFbfPELMgDnireiQFics82epaNYnHfoGFTo", "protocols": ["/vac/waku/relay/2.0.0"], "shards": [0, 1, 2, 3, 4, 5, 6, 7, 8]}'
2025-02-06 03:09:13.812 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'null'
2025-02-06 03:09:13.813 DEBUG [src.steps.relay] Running fixture setup: subscribe_main_relay_nodes
2025-02-06 03:09:13.814 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:2382/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
2025-02-06 03:09:13.835 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-06 03:09:13.835 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:1235/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
2025-02-06 03:09:13.838 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'true'
2025-02-06 03:09:13.839 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:2382/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-06 03:09:13.851 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-06 03:09:13.851 DEBUG [src.libs.common] Sleeping for 0.1 seconds
2025-02-06 03:09:13.952 DEBUG [src.steps.relay] Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
2025-02-06 03:09:13.952 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:2382/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
2025-02-06 03:09:13.954 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1738811353838784512,"ephemeral":false}]'
2025-02-06 03:09:13.956 DEBUG [src.steps.relay] Checking that peer NODE_2:wakuorg/go-waku:latest can find the published message
2025-02-06 03:09:13.956 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:1235/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
2025-02-06 03:09:13.958 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'null'
2025-02-06 03:09:14.959 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:2382/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-06 03:09:14.963 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-06 03:09:14.964 DEBUG [src.libs.common] Sleeping for 0.1 seconds
2025-02-06 03:09:15.064 DEBUG [src.steps.relay] Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
2025-02-06 03:09:15.064 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:2382/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
2025-02-06 03:09:15.066 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1738811354958801152,"ephemeral":false}]'
2025-02-06 03:09:15.068 DEBUG [src.steps.relay] Checking that peer NODE_2:wakuorg/go-waku:latest can find the published message
2025-02-06 03:09:15.068 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:1235/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
2025-02-06 03:09:15.070 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1738811354958801152,"ephemeral":false}]'
2025-02-06 03:09:15.071 INFO [src.steps.relay] WARM UP successful!!
2025-02-06 03:09:15.072 DEBUG [tests.relay.test_publish] Running test with timestamp Timestamp as string number
2025-02-06 03:09:15.072 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:2382/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-06 03:09:15.075 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:2382/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-06 03:09:15.075 DEBUG [tests.relay.test_publish] Running test with timestamp Invalid large number
2025-02-06 03:09:15.076 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:2382/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-06 03:09:15.078 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:2382/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-06 03:09:15.079 DEBUG [tests.relay.test_publish] Running test with timestamp Float number
2025-02-06 03:09:15.079 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:2382/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-06 03:09:15.082 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:2382/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-06 03:09:15.082 DEBUG [tests.relay.test_publish] Running test with timestamp Array instead of timestamp
2025-02-06 03:09:15.083 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:2382/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-06 03:09:15.085 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:2382/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-06 03:09:15.086 DEBUG [tests.relay.test_publish] Running test with timestamp Object instead of timestamp
2025-02-06 03:09:15.086 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:2382/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-06 03:09:15.088 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:2382/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-06 03:09:15.089 DEBUG [tests.relay.test_publish] Running test with timestamp ISO 8601 timestamp
2025-02-06 03:09:15.089 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:2382/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-06 03:09:15.091 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:2382/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-06 03:09:15.092 DEBUG [tests.relay.test_publish] Running test with timestamp Missing
2025-02-06 03:09:15.092 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:2382/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-06 03:09:15.094 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:2382/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-06 03:09:15.097 DEBUG [tests.conftest] Running fixture teardown: test_setup
2025-02-06 03:09:15.098 DEBUG [tests.conftest] Running fixture teardown: close_open_nodes
2025-02-06 03:09:15.098 DEBUG [src.node.waku_node] Stopping container with id 4f9249009e7a
2025-02-06 03:09:15.635 DEBUG [src.node.waku_node] Container stopped.
2025-02-06 03:09:15.636 DEBUG [src.node.waku_node] Stopping container with id 1ff84056e66c
2025-02-06 03:09:16.140 DEBUG [src.node.waku_node] Container stopped.
2025-02-06 03:09:16.142 DEBUG [tests.conftest] Running fixture teardown: check_waku_log_errors
2025-02-06 03:09:16.148 DEBUG [src.node.docker_mananger] No errors found in the waku logs.
2025-02-06 03:09:16.151 DEBUG [src.node.docker_mananger] No errors found in the waku logs.
