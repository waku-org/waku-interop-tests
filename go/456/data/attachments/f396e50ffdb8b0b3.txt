2025-02-06 03:06:03.713 DEBUG [tests.conftest] Running fixture setup: test_id
2025-02-06 03:06:03.713 DEBUG [tests.conftest] Running test: test_publish_with_missing_payload with id: 2025-02-06_03-06-03__29a1defa-8ac8-4d61-860f-6f59d04d7028
2025-02-06 03:06:03.715 DEBUG [src.steps.common] Running fixture setup: common_setup
2025-02-06 03:06:03.715 DEBUG [src.steps.relay] Running fixture setup: relay_setup
2025-02-06 03:06:03.715 DEBUG [src.steps.relay] Running fixture setup: setup_main_relay_nodes
2025-02-06 03:06:03.722 DEBUG [src.node.docker_mananger] Docker client initialized with image wakuorg/nwaku:latest
2025-02-06 03:06:03.722 DEBUG [src.node.waku_node] WakuNode instance initialized with log path ./log/docker/node1_2025-02-06_03-06-03__29a1defa-8ac8-4d61-860f-6f59d04d7028__wakuorg_nwaku:latest.log
2025-02-06 03:06:03.722 DEBUG [src.node.waku_node] Starting Node...
2025-02-06 03:06:03.722 DEBUG [src.node.docker_mananger] Attempting to create or retrieve network waku
2025-02-06 03:06:03.724 DEBUG [src.node.docker_mananger] Network waku already exists
2025-02-06 03:06:03.724 DEBUG [src.node.docker_mananger] Generated random external IP 172.18.8.170
2025-02-06 03:06:03.724 DEBUG [src.node.docker_mananger] Generated ports ['43615', '43616', '43617', '43618', '43619']
2025-02-06 03:06:03.724 DEBUG [src.node.waku_node] RLN credentials were not set
2025-02-06 03:06:03.724 INFO [src.node.waku_node] RLN credentials not set or credential store not available, starting without RLN
2025-02-06 03:06:03.724 DEBUG [src.node.waku_node] Using volumes []
2025-02-06 03:06:03.725 DEBUG [src.node.docker_mananger] docker run -i -t -p 43615:43615 -p 43616:43616 -p 43617:43617 -p 43618:43618 -p 43619:43619 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=43617 --rest-port=43615 --tcp-port=43616 --discv5-udp-port=43618 --rest-address=0.0.0.0 --nat=extip:172.18.8.170 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=6d7bc1cda7a8dae16a1b7943e6aabfabe6186b1cc8d3fd2bbe8c13b91f71fe32 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=43619 --metrics-logging=true --relay=true
2025-02-06 03:06:03.946 DEBUG [src.node.docker_mananger] docker network connect --ip 172.18.8.170 waku 8ee5b4afe8ee507674c34d7314f91f21664aca8b80c13a1f28c3635386949212
2025-02-06 03:06:03.990 DEBUG [src.node.docker_mananger] Container started with ID 8ee5b4afe8ee. Setting up logs at ./log/docker/node1_2025-02-06_03-06-03__29a1defa-8ac8-4d61-860f-6f59d04d7028__wakuorg_nwaku:latest.log
2025-02-06 03:06:03.990 DEBUG [src.node.waku_node] Started container from image wakuorg/nwaku:latest. REST: 43615
2025-02-06 03:06:03.990 DEBUG [src.libs.common] Sleeping for 1 seconds
2025-02-06 03:06:04.005 ERROR [src.node.docker_mananger] Max retries reached for container b78ad141dfc8. Exiting log stream.
2025-02-06 03:06:04.529 ERROR [src.node.docker_mananger] Max retries reached for container e87260a74570. Exiting log stream.
2025-02-06 03:06:04.991 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:43615/health" -H "Content-Type: application/json" -d 'None'
2025-02-06 03:06:04.994 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
2025-02-06 03:06:04.994 INFO [src.node.waku_node] Node protocols are initialized !!
2025-02-06 03:06:04.994 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:43615/debug/v1/info" -H "Content-Type: application/json" -d 'None'
2025-02-06 03:06:04.996 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.8.170/tcp/43616/p2p/16Uiu2HAmJjSj2MhFFvAurSepMc5U4ad2v5RyKuYvvG6GSB81tpJe","/ip4/172.18.8.170/tcp/43617/ws/p2p/16Uiu2HAmJjSj2MhFFvAurSepMc5U4ad2v5RyKuYvvG6GSB81tpJe"],"enrUri":"enr:-L24QJJbSfn0itHEUnM8nOQQxB8WPVVHS4xi4pS_QEw6u1-xcR1GlLQT2CqwPPhBnxPfdvNOAGfEwgegxRGjHPpxjPwCgmlkgnY0gmlwhKwSCKqKbXVsdGlhZGRyc5YACASsEgiqBqpgAAoErBIIqgaqYd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDWkpETMerE4Tpvk4Y7KCmzlEoIbbqVGyK81-SNA2tRPODdGNwgqpgg3VkcIKqYoV3YWt1MgE"}'
2025-02-06 03:06:04.996 INFO [src.node.waku_node] REST service is ready !!
2025-02-06 03:06:05.002 DEBUG [src.node.docker_mananger] Docker client initialized with image wakuorg/go-waku:latest
2025-02-06 03:06:05.003 DEBUG [src.node.waku_node] WakuNode instance initialized with log path ./log/docker/node2_2025-02-06_03-06-03__29a1defa-8ac8-4d61-860f-6f59d04d7028__wakuorg_go-waku:latest.log
2025-02-06 03:06:05.003 DEBUG [src.node.waku_node] Starting Node...
2025-02-06 03:06:05.003 DEBUG [src.node.docker_mananger] Attempting to create or retrieve network waku
2025-02-06 03:06:05.004 DEBUG [src.node.docker_mananger] Network waku already exists
2025-02-06 03:06:05.004 DEBUG [src.node.docker_mananger] Generated random external IP 172.18.145.88
2025-02-06 03:06:05.004 DEBUG [src.node.docker_mananger] Generated ports ['52473', '52474', '52475', '52476', '52477']
2025-02-06 03:06:05.004 DEBUG [src.node.waku_node] RLN credentials were not set
2025-02-06 03:06:05.005 INFO [src.node.waku_node] RLN credentials not set or credential store not available, starting without RLN
2025-02-06 03:06:05.005 DEBUG [src.node.waku_node] Using volumes []
2025-02-06 03:06:05.005 DEBUG [src.node.docker_mananger] docker run -i -t -p 52473:52473 -p 52474:52474 -p 52475:52475 -p 52476:52476 -p 52477:52477 wakuorg/go-waku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=DEBUG --rest-relay-cache-capacity=100 --websocket-port=52475 --rest-port=52473 --tcp-port=52474 --discv5-udp-port=52476 --rest-address=0.0.0.0 --nat=extip:172.18.145.88 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=bf1ecae2a6af632a95a4e0cbb6ba21ab65ed4bfeddba368f2adba20ca549bcb4 --min-relay-peers-to-publish=1 --rest-filter-cache-capacity=50 --peer-store-capacity=10 --relay=true --discv5-bootstrap-node=enr:-L24QJJbSfn0itHEUnM8nOQQxB8WPVVHS4xi4pS_QEw6u1-xcR1GlLQT2CqwPPhBnxPfdvNOAGfEwgegxRGjHPpxjPwCgmlkgnY0gmlwhKwSCKqKbXVsdGlhZGRyc5YACASsEgiqBqpgAAoErBIIqgaqYd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDWkpETMerE4Tpvk4Y7KCmzlEoIbbqVGyK81-SNA2tRPODdGNwgqpgg3VkcIKqYoV3YWt1MgE
2025-02-06 03:06:05.241 DEBUG [src.node.docker_mananger] docker network connect --ip 172.18.145.88 waku 01c79b149f25ac3ab6d50627b39f329761c0cded007c3331dd8c03cef53acba4
2025-02-06 03:06:05.297 DEBUG [src.node.docker_mananger] Container started with ID 01c79b149f25. Setting up logs at ./log/docker/node2_2025-02-06_03-06-03__29a1defa-8ac8-4d61-860f-6f59d04d7028__wakuorg_go-waku:latest.log
2025-02-06 03:06:05.297 DEBUG [src.node.waku_node] Started container from image wakuorg/go-waku:latest. REST: 52473
2025-02-06 03:06:05.297 DEBUG [src.libs.common] Sleeping for 1 seconds
2025-02-06 03:06:06.298 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:52473/debug/v1/info" -H "Content-Type: application/json" -d 'None'
2025-02-06 03:06:06.300 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"enrUri":"enr:-J-4QHRetb3Fsx2Z_zpdG_ZKKz3aRp7gyzIUFnXeiNxHFCBIDMpeegiHkQpAz1BVodULypUMg4NSu1cFlboc95hx86mGAZTZOMpmgmlkgnY0gmlwhKwRAAOCcnODAAMAiXNlY3AyNTZrMaEDR3kCE68Ab6nwLqxFmIhWQyM4KgGtN3zOBA4GZ6saLKaDdGNwgsz6g3VkcILM_IV3YWt1MgE","listenAddresses":["/ip4/127.0.0.1/tcp/52474/p2p/16Uiu2HAmHTzKMqvPAGnKLyKaFPzpwPjJBNG2Dw275AzMDoAX8ZY9","/ip4/127.0.0.1/tcp/52475/ws/p2p/16Uiu2HAmHTzKMqvPAGnKLyKaFPzpwPjJBNG2Dw275AzMDoAX8ZY9","/ip4/172.17.0.3/tcp/52474/p2p/16Uiu2HAmHTzKMqvPAGnKLyKaFPzpwPjJBNG2Dw275AzMDoAX8ZY9","/ip4/172.17.0.3/tcp/52475/ws/p2p/16Uiu2HAmHTzKMqvPAGnKLyKaFPzpwPjJBNG2Dw275AzMDoAX8ZY9"]}'
2025-02-06 03:06:06.301 INFO [src.node.waku_node] REST service is ready !!
2025-02-06 03:06:06.302 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:52473/admin/v1/peers" -H "Content-Type: application/json" -d '{"multiaddr": "/ip4/172.18.8.170/tcp/43616/p2p/16Uiu2HAmJjSj2MhFFvAurSepMc5U4ad2v5RyKuYvvG6GSB81tpJe", "protocols": ["/vac/waku/relay/2.0.0"], "shards": [0, 1, 2, 3, 4, 5, 6, 7, 8]}'
2025-02-06 03:06:06.318 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'null'
2025-02-06 03:06:06.319 DEBUG [src.steps.relay] Running fixture setup: subscribe_main_relay_nodes
2025-02-06 03:06:06.320 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:43615/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
2025-02-06 03:06:06.345 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-06 03:06:06.346 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:52473/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
2025-02-06 03:06:06.348 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'true'
2025-02-06 03:06:06.349 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:43615/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-06 03:06:06.353 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-06 03:06:06.353 DEBUG [src.libs.common] Sleeping for 0.1 seconds
2025-02-06 03:06:06.454 DEBUG [src.steps.relay] Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
2025-02-06 03:06:06.454 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:43615/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
2025-02-06 03:06:06.456 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1738811166348919552,"ephemeral":false}]'
2025-02-06 03:06:06.458 DEBUG [src.steps.relay] Checking that peer NODE_2:wakuorg/go-waku:latest can find the published message
2025-02-06 03:06:06.458 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:52473/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
2025-02-06 03:06:06.460 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'null'
2025-02-06 03:06:07.461 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:43615/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-06 03:06:07.466 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-06 03:06:07.466 DEBUG [src.libs.common] Sleeping for 0.1 seconds
2025-02-06 03:06:07.566 DEBUG [src.steps.relay] Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
2025-02-06 03:06:07.566 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:43615/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
2025-02-06 03:06:07.569 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1738811167461163776,"ephemeral":false}]'
2025-02-06 03:06:07.570 DEBUG [src.steps.relay] Checking that peer NODE_2:wakuorg/go-waku:latest can find the published message
2025-02-06 03:06:07.570 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:52473/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
2025-02-06 03:06:07.572 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1738811167461163776,"ephemeral":false}]'
2025-02-06 03:06:07.573 INFO [src.steps.relay] WARM UP successful!!
2025-02-06 03:06:07.574 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:43615/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-06 03:06:07.577 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:43615/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-06 03:06:07.578 DEBUG [tests.conftest] Running fixture teardown: test_setup
2025-02-06 03:06:07.579 DEBUG [tests.conftest] Running fixture teardown: close_open_nodes
2025-02-06 03:06:07.579 DEBUG [src.node.waku_node] Stopping container with id 8ee5b4afe8ee
2025-02-06 03:06:08.162 DEBUG [src.node.waku_node] Container stopped.
2025-02-06 03:06:08.163 DEBUG [src.node.waku_node] Stopping container with id 01c79b149f25
2025-02-06 03:06:08.669 DEBUG [src.node.waku_node] Container stopped.
2025-02-06 03:06:08.671 DEBUG [tests.conftest] Running fixture teardown: check_waku_log_errors
2025-02-06 03:06:08.677 DEBUG [src.node.docker_mananger] No errors found in the waku logs.
2025-02-06 03:06:08.679 DEBUG [src.node.docker_mananger] No errors found in the waku logs.
