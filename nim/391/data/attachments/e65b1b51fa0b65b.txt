[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_add_a_new_pubsub_topic with id: 2024-10-14_04-17-45__fced4723-3a54-432f-8ee2-3eb5762aa4a7
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-10-14_04-17-45__fced4723-3a54-432f-8ee2-3eb5762aa4a7__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.87.152
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['27068', '27069', '27070', '27071', '27072']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 27068:27068 -p 27069:27069 -p 27070:27070 -p 27071:27071 -p 27072:27072 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=27070 --rest-port=27068 --tcp-port=27069 --discv5-udp-port=27071 --rest-address=0.0.0.0 --nat=extip:172.18.87.152 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=fb3b8e474f71facd3db1bf1d51edffe033c7eefe2cbed3b2d86b286de86514d5 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=27072 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.87.152 waku be9a3d606f026afc4c9eaff193801f568cd0a32122bf6fb15be23fae38daaf6d
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID be9a3d606f02. Setting up logs at ./log/docker/node1_2024-10-14_04-17-45__fced4723-3a54-432f-8ee2-3eb5762aa4a7__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 27068
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:27068/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:27068/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.87.152/tcp/27069/p2p/16Uiu2HAmBZu9QFMwu597C6yAgeaiiDzsWLvxCW4fFu22dvYedMcy","/ip4/172.18.87.152/tcp/27070/ws/p2p/16Uiu2HAmBZu9QFMwu597C6yAgeaiiDzsWLvxCW4fFu22dvYedMcy"],"enrUri":"enr:-LO4QBoQ9zSPa6CDwzsPCTth1obggswKE8hCw2rZ4LoF3NOmXUzJ9I-yaFkom7EEDgS3MWQo53afwS_pvuu3NX-awYQBgmlkgnY0gmlwhKwSV5iKbXVsdGlhZGRyc4wACgSsEleYBmm-3QOCcnOFAAMBAACJc2VjcDI1NmsxoQLv1oYUgKNBqhAdS2BP6o0daVX0JOPbJuezE8HEt5I-hoN0Y3CCab2DdWRwgmm_hXdha3UyBQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-10-14_04-17-45__fced4723-3a54-432f-8ee2-3eb5762aa4a7__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.142.211
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['46347', '46348', '46349', '46350', '46351']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 46347:46347 -p 46348:46348 -p 46349:46349 -p 46350:46350 -p 46351:46351 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=46349 --rest-port=46347 --tcp-port=46348 --discv5-udp-port=46350 --rest-address=0.0.0.0 --nat=extip:172.18.142.211 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b6aef695ffc1581cbfcc95e79bec4fcd0cc0f98bdcf49addefefaf730eec9dcf --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=46351 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-LO4QBoQ9zSPa6CDwzsPCTth1obggswKE8hCw2rZ4LoF3NOmXUzJ9I-yaFkom7EEDgS3MWQo53afwS_pvuu3NX-awYQBgmlkgnY0gmlwhKwSV5iKbXVsdGlhZGRyc4wACgSsEleYBmm-3QOCcnOFAAMBAACJc2VjcDI1NmsxoQLv1oYUgKNBqhAdS2BP6o0daVX0JOPbJuezE8HEt5I-hoN0Y3CCab2DdWRwgmm_hXdha3UyBQ --filternode=/ip4/172.18.87.152/tcp/27069/p2p/16Uiu2HAmBZu9QFMwu597C6yAgeaiiDzsWLvxCW4fFu22dvYedMcy
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.142.211 waku 7cf205864149eed297f4ace4cc9db49bb0085dbc477da618eeff2211d3c8f6cb
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 7cf205864149. Setting up logs at ./log/docker/node2_2024-10-14_04-17-45__fced4723-3a54-432f-8ee2-3eb5762aa4a7__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 46347
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:46347/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:46347/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.142.211/tcp/46348/p2p/16Uiu2HAm1DAHHtEHb38nhLtYT37c8ZajDNdiXiqZfZeaFMnvgdmv","/ip4/172.18.142.211/tcp/46349/ws/p2p/16Uiu2HAm1DAHHtEHb38nhLtYT37c8ZajDNdiXiqZfZeaFMnvgdmv"],"enrUri":"enr:-LO4QK8Kq53q7-rn0cHXVGkSQgfrjpt00i6xkxvmR5U7-tVRdY9xqNQ7NWVIYMmqTHJgQlEY1RG1DDSluJPtc0AQtZsBgmlkgnY0gmlwhKwSjtOKbXVsdGlhZGRyc4wACgSsEo7TBrUN3QOCcnOFAAMBAACJc2VjcDI1NmsxoQJV8ZJmFtA5coKIYEwEgd_UwL7XjoU_PAU8WmGe7OejxYN0Y3CCtQyDdWRwgrUOhXdha3UyAA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:46347/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.87.152/tcp/27069/p2p/16Uiu2HAmBZu9QFMwu597C6yAgeaiiDzsWLvxCW4fFu22dvYedMcy"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:27068/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:46347/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "9e1ab3d2-7727-47f0-badc-61eada53f476", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"9e1ab3d2-7727-47f0-badc-61eada53f476","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:46347/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto", "/test/2/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1000"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"1","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:27068/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1000"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:27068/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "RmlsdGVyIHdvcmtzISE=", "contentTopic": "/test/1/waku-filter/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.filter:filter.py:98 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:46347/filter/v2/messages/%2Ftest%2F1%2Fwaku-filter%2Fproto" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"RmlsdGVyIHdvcmtzISE=","contentTopic":"/test/1/waku-filter/proto","version":0,"timestamp":1728879468640728832,"ephemeral":false}]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:27068/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1000" -H "Content-Type: application/json" -d '{"payload": "RmlsdGVyIHdvcmtzISE=", "contentTopic": "/test/1/waku-filter/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.filter:filter.py:98 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:46347/filter/v2/messages/%2Ftest%2F1%2Fwaku-filter%2Fproto" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"RmlsdGVyIHdvcmtzISE=","contentTopic":"/test/1/waku-filter/proto","version":0,"timestamp":1728879468760427264,"ephemeral":false}]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:27068/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1000" -H "Content-Type: application/json" -d '{"payload": "RmlsdGVyIHdvcmtzISE=", "contentTopic": "/test/2/waku-filter/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.filter:filter.py:98 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:46347/filter/v2/messages/%2Ftest%2F2%2Fwaku-filter%2Fproto" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"RmlsdGVyIHdvcmtzISE=","contentTopic":"/test/2/waku-filter/proto","version":0,"timestamp":1728879468871251456,"ephemeral":false}]'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id be9a3d606f02
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 7cf205864149
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.