[35mDEBUG   [0m src.postgres_setup:postgres_setup.py:36 Postgres container started
[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_on_empty_postgress_db with id: 2024-10-14_04-35-02__731c56b3-f8e4-4cd7-b8c6-1296c0117268
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.store:store.py:31 Running fixture setup: store_setup
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/publishing_node1_2024-10-14_04-35-02__731c56b3-f8e4-4cd7-b8c6-1296c0117268__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.3.95
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['46530', '46531', '46532', '46533', '46534']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 46530:46530 -p 46531:46531 -p 46532:46532 -p 46533:46533 -p 46534:46534 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=46532 --rest-port=46530 --tcp-port=46531 --discv5-udp-port=46533 --rest-address=0.0.0.0 --nat=extip:172.18.3.95 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=badce34e8d3fbd2b7ff53ef38cc7efaacf0a3db8c976ef7ed0f52facbe5abaa5 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=46534 --metrics-logging=true --store=true --relay=true --store-message-db-url=postgres://postgres:test123@postgres:5432/postgres
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.3.95 waku d0f72e4990a0122bb14ca4974b5b764f1584cc4ba68a122384b46858a00232e4
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID d0f72e4990a0. Setting up logs at ./log/docker/publishing_node1_2024-10-14_04-35-02__731c56b3-f8e4-4cd7-b8c6-1296c0117268__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 46530
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:46530/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Initializing","protocolsHealth":[]}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:46530/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Initializing","protocolsHealth":[]}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:46530/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:46530/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.3.95/tcp/46531/p2p/16Uiu2HAkxzsGZcUob6MzjYabYAG2rZ82vRyNmwkDetBSt6N8etT2","/ip4/172.18.3.95/tcp/46532/ws/p2p/16Uiu2HAkxzsGZcUob6MzjYabYAG2rZ82vRyNmwkDetBSt6N8etT2"],"enrUri":"enr:-LO4QONXA47sptdaqoZuQGBmMQ8THxYVW7vHJWFbtnqi2hhBALTLj41IUoGwmL9_xlGZmQM0fOLaQsFL2G2sL4nupu8BgmlkgnY0gmlwhKwSA1-KbXVsdGlhZGRyc4wACgSsEgNfBrXE3QOCcnOFAAMBAACJc2VjcDI1NmsxoQI1E_381CPa7pOBAUo-2nOH13w-Q0uDWEEXIkpzjlG1KYN0Y3CCtcODdWRwgrXFhXdha3UyAw"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/store_node1_2024-10-14_04-35-02__731c56b3-f8e4-4cd7-b8c6-1296c0117268__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.176.176
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['55806', '55807', '55808', '55809', '55810']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 55806:55806 -p 55807:55807 -p 55808:55808 -p 55809:55809 -p 55810:55810 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=55808 --rest-port=55806 --tcp-port=55807 --discv5-udp-port=55809 --rest-address=0.0.0.0 --nat=extip:172.18.176.176 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=dbb6105ce5b2b26c6f0749a825bddcd46f1a1b2b71995f6a537d46ce2e9c7c3c --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=55810 --metrics-logging=true --discv5-bootstrap-node=enr:-LO4QONXA47sptdaqoZuQGBmMQ8THxYVW7vHJWFbtnqi2hhBALTLj41IUoGwmL9_xlGZmQM0fOLaQsFL2G2sL4nupu8BgmlkgnY0gmlwhKwSA1-KbXVsdGlhZGRyc4wACgSsEgNfBrXE3QOCcnOFAAMBAACJc2VjcDI1NmsxoQI1E_381CPa7pOBAUo-2nOH13w-Q0uDWEEXIkpzjlG1KYN0Y3CCtcODdWRwgrXFhXdha3UyAw --storenode=/ip4/172.18.3.95/tcp/46531/p2p/16Uiu2HAkxzsGZcUob6MzjYabYAG2rZ82vRyNmwkDetBSt6N8etT2 --store=false --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.176.176 waku ad421f2a585fce7a05ebf6bdf104453851202e4cf18c5e2efc6784ddc5182fa5
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID ad421f2a585f. Setting up logs at ./log/docker/store_node1_2024-10-14_04-35-02__731c56b3-f8e4-4cd7-b8c6-1296c0117268__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 55806
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:55806/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:55806/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.176.176/tcp/55807/p2p/16Uiu2HAmRQ5rhWwinwmEh5mq6Xwbututn25FnYmB9SUMEo74ec1e","/ip4/172.18.176.176/tcp/55808/ws/p2p/16Uiu2HAmRQ5rhWwinwmEh5mq6Xwbututn25FnYmB9SUMEo74ec1e"],"enrUri":"enr:-LO4QGd9Vgw30wpRyiHrj0iyYhg28JHcT9gXpkeh2MLI4ewSbh4-vsIg3lQZ4cfPL3gWL--oHlvcXJNeNUH96l58r-EBgmlkgnY0gmlwhKwSsLCKbXVsdGlhZGRyc4wACgSsErCwBtoA3QOCcnOFAAMBAACJc2VjcDI1NmsxoQO9VnHbwBWjo21EUSj0N-s9UOIXUgI4vEqgUUfCcbjayYN0Y3CC2f-DdWRwgtoBhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:55806/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.3.95/tcp/46531/p2p/16Uiu2HAkxzsGZcUob6MzjYabYAG2rZ82vRyNmwkDetBSt6N8etT2"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:46530/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/0"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:55806/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/0"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.store:store.py:132 Relaying message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:46530/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F0" -H "Content-Type: application/json" -d '{"payload": "U3RvcmUgd29ya3MhIQ==", "contentTopic": "/myapp/1/latest/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.2 seconds
[35mDEBUG   [0m src.steps.store:store.py:218 Checking that peer wakuorg/nwaku:latest can find the stored messages
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:46530/store/v3/messages?pubsubTopic=%2Fwaku%2F2%2Frs%2F3%2F0&pageSize=5&ascending=true" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"","statusCode":200,"statusDesc":"OK","messages":[{"messageHash":"zCHbByL6iKCtArL+dwXYsMS3A9A3Vk835hnDW4QcmPU="}]}'
[35mDEBUG   [0m src.steps.store:store.py:218 Checking that peer wakuorg/nwaku:latest can find the stored messages
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:55806/store/v3/messages?pubsubTopic=%2Fwaku%2F2%2Frs%2F3%2F0&pageSize=5&ascending=true" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"dd08079793576db47c2b","statusCode":200,"statusDesc":"OK","messages":[{"messageHash":"zCHbByL6iKCtArL+dwXYsMS3A9A3Vk835hnDW4QcmPU="}]}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id d0f72e4990a0
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id ad421f2a585f
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.postgres_setup:postgres_setup.py:44 Postgres container stopped and removed.