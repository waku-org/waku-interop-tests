[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2024-11-30_04-12-16__773fdd78-a3c0-4cbd-97c2-21bbb46b4b9a
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-30_04-12-16__773fdd78-a3c0-4cbd-97c2-21bbb46b4b9a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.176.175
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['37970', '37971', '37972', '37973', '37974']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 37970:37970 -p 37971:37971 -p 37972:37972 -p 37973:37973 -p 37974:37974 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=37972 --rest-port=37970 --tcp-port=37971 --discv5-udp-port=37973 --rest-address=0.0.0.0 --nat=extip:172.18.176.175 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=d9afeb54e6cda3d5246ac7b43dd6040fc52bfca83c6b1922dd5bf9fbda0fdfab --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=37974 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.176.175 waku 78b5c7696b9e7108f584ea6a6f55ecec87cc7ce93c033113fbaf8357743bb71f
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 78b5c7696b9e. Setting up logs at ./log/docker/node1_2024-11-30_04-12-16__773fdd78-a3c0-4cbd-97c2-21bbb46b4b9a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 37970
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 547a4b2d5cec. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:37970/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:37970/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.176.175/tcp/37971/p2p/16Uiu2HAm9tSmeetX1RzX9WKLa1Vsp2n8bUdF7krxYJ9baaNrEFYP","/ip4/172.18.176.175/tcp/37972/ws/p2p/16Uiu2HAm9tSmeetX1RzX9WKLa1Vsp2n8bUdF7krxYJ9baaNrEFYP"],"enrUri":"enr:-L24QKb7_T7bFNILcHdwGRhmtfWq6iOb0EKCbDbslLdC7fCDOLCSD-V8UWrCkClfrZ09X5aKAN11dopYtKIWcCP9TzYCgmlkgnY0gmlwhKwSsK-KbXVsdGlhZGRyc5YACASsErCvBpRTAAoErBKwrwaUVN0DgnJzhQADAQAAiXNlY3AyNTZrMaEC1t9c6Qf3uT8xK4HYE9aCth-rHG6OROWSS-cpmbI7oAyDdGNwgpRTg3VkcIKUVYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-30_04-12-16__773fdd78-a3c0-4cbd-97c2-21bbb46b4b9a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.184.123
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['33686', '33687', '33688', '33689', '33690']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 33686:33686 -p 33687:33687 -p 33688:33688 -p 33689:33689 -p 33690:33690 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=33688 --rest-port=33686 --tcp-port=33687 --discv5-udp-port=33689 --rest-address=0.0.0.0 --nat=extip:172.18.184.123 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=eba34b170a0c58dfcc3bf1adf1b8afccf6dcbb9e38c3d5bb91e89bced94dbefe --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=33690 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QKb7_T7bFNILcHdwGRhmtfWq6iOb0EKCbDbslLdC7fCDOLCSD-V8UWrCkClfrZ09X5aKAN11dopYtKIWcCP9TzYCgmlkgnY0gmlwhKwSsK-KbXVsdGlhZGRyc5YACASsErCvBpRTAAoErBKwrwaUVN0DgnJzhQADAQAAiXNlY3AyNTZrMaEC1t9c6Qf3uT8xK4HYE9aCth-rHG6OROWSS-cpmbI7oAyDdGNwgpRTg3VkcIKUVYV3YWt1MgU --filternode=/ip4/172.18.176.175/tcp/37971/p2p/16Uiu2HAm9tSmeetX1RzX9WKLa1Vsp2n8bUdF7krxYJ9baaNrEFYP
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.184.123 waku 11c87c68d07f085f34077254cf75dae4719830f5f809491fdab614dc231cadf9
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 11c87c68d07f. Setting up logs at ./log/docker/node2_2024-11-30_04-12-16__773fdd78-a3c0-4cbd-97c2-21bbb46b4b9a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 33686
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33686/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33686/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.184.123/tcp/33687/p2p/16Uiu2HAmKkNtzs9XGk1Y6GXb7zFnysNoDjaFsxUnv1X1AY5evsNy","/ip4/172.18.184.123/tcp/33688/ws/p2p/16Uiu2HAmKkNtzs9XGk1Y6GXb7zFnysNoDjaFsxUnv1X1AY5evsNy"],"enrUri":"enr:-L24QAHhEo8PGLRh0vlAGaMsk3Z-TyqIIeupdeDtLpn6tuNbOkmwVkhnTgSQ0TkV7ctaC9CQH_DB1wm0J2uQUI5t0sACgmlkgnY0gmlwhKwSuHuKbXVsdGlhZGRyc5YACASsErh7BoOXAAoErBK4ewaDmN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDaWM0xzluUe4kkBqhNF7ZNlmR2kzi80S2xTMdk3tq3lqDdGNwgoOXg3VkcIKDmYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:33686/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.176.175/tcp/37971/p2p/16Uiu2HAm9tSmeetX1RzX9WKLa1Vsp2n8bUdF7krxYJ9baaNrEFYP"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:37970/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:33686/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "4d3f769e-843c-46d3-95c9-3d5c159b3fdf", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"4d3f769e-843c-46d3-95c9-3d5c159b3fdf","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:33686/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:33686/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 78b5c7696b9e
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 11c87c68d07f
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 78b5c7696b9e. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.