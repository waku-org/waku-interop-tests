[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_invalid_request_id with id: 2024-11-30_04-12-15__514ef0c7-8d81-4cc0-9d50-7e1781ed606a
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-30_04-12-15__514ef0c7-8d81-4cc0-9d50-7e1781ed606a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.254.77
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['45588', '45589', '45590', '45591', '45592']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 45588:45588 -p 45589:45589 -p 45590:45590 -p 45591:45591 -p 45592:45592 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=45590 --rest-port=45588 --tcp-port=45589 --discv5-udp-port=45591 --rest-address=0.0.0.0 --nat=extip:172.18.254.77 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=c4f5fef1f8ea2de59ef5c654a2c6a0dc36c59c7baaaa8caf3d8e205039c9e0fe --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=45592 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.254.77 waku e095edd6ba580d0d5459960847423bff5372cb16bbf979d495babdde0724ec74
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID e095edd6ba58. Setting up logs at ./log/docker/node1_2024-11-30_04-12-15__514ef0c7-8d81-4cc0-9d50-7e1781ed606a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 45588
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 0866ab003555. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:45588/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:45588/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.254.77/tcp/45589/p2p/16Uiu2HAkxEzER5jfXYrHnPnTPBcNQx8TJpuZK8FsgmPprNnU5hLu","/ip4/172.18.254.77/tcp/45590/ws/p2p/16Uiu2HAkxEzER5jfXYrHnPnTPBcNQx8TJpuZK8FsgmPprNnU5hLu"],"enrUri":"enr:-L24QDfzC0g3fBXEY2cpemsekVfDhciLm2yS3w6Hi2vWHooEOxIop3SaErUtEmzJFAlnWMJpvfCEVqA31zz0s6jVG7UCgmlkgnY0gmlwhKwS_k2KbXVsdGlhZGRyc5YACASsEv5NBrIVAAoErBL-TQayFt0DgnJzhQADAQAAiXNlY3AyNTZrMaECKdZPQnq-SD_1OQkQjMG4QLjbJztidgIvDt1caBm0YVKDdGNwgrIVg3VkcIKyF4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-30_04-12-15__514ef0c7-8d81-4cc0-9d50-7e1781ed606a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.172.81
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['21888', '21889', '21890', '21891', '21892']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 21888:21888 -p 21889:21889 -p 21890:21890 -p 21891:21891 -p 21892:21892 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=21890 --rest-port=21888 --tcp-port=21889 --discv5-udp-port=21891 --rest-address=0.0.0.0 --nat=extip:172.18.172.81 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=bee379dfc161f9cb232cceb8696dd9edd0f6a4ccf9d3505fc32dd7dbd2386c90 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=21892 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QDfzC0g3fBXEY2cpemsekVfDhciLm2yS3w6Hi2vWHooEOxIop3SaErUtEmzJFAlnWMJpvfCEVqA31zz0s6jVG7UCgmlkgnY0gmlwhKwS_k2KbXVsdGlhZGRyc5YACASsEv5NBrIVAAoErBL-TQayFt0DgnJzhQADAQAAiXNlY3AyNTZrMaECKdZPQnq-SD_1OQkQjMG4QLjbJztidgIvDt1caBm0YVKDdGNwgrIVg3VkcIKyF4V3YWt1MgU --filternode=/ip4/172.18.254.77/tcp/45589/p2p/16Uiu2HAkxEzER5jfXYrHnPnTPBcNQx8TJpuZK8FsgmPprNnU5hLu
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.172.81 waku 1f48a5850a7987ff09a98548af013e4245f16533a2edd4c75fd15eea391512e5
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 1f48a5850a79. Setting up logs at ./log/docker/node2_2024-11-30_04-12-15__514ef0c7-8d81-4cc0-9d50-7e1781ed606a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 21888
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:21888/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:21888/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.172.81/tcp/21889/p2p/16Uiu2HAkuxQEVqj31yjjQxnKH4KwkQx6iHJY995WX1sBzdeJzPj1","/ip4/172.18.172.81/tcp/21890/ws/p2p/16Uiu2HAkuxQEVqj31yjjQxnKH4KwkQx6iHJY995WX1sBzdeJzPj1"],"enrUri":"enr:-L24QLJlNtCJu-Hm-zo5ln1YyOL1cn0CS9_wRxzSeQUpILqTBZP399GHyekT6iiespIkXwGaMto33ePOYAyT4Ao4xN8CgmlkgnY0gmlwhKwSrFGKbXVsdGlhZGRyc5YACASsEqxRBlWBAAoErBKsUQZVgt0DgnJzhQADAQAAiXNlY3AyNTZrMaECB98zUx8FJ2wRkkUb-xcKJbrzG7XdbGkMgATDKncXkTSDdGNwglWBg3VkcIJVg4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:21888/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.254.77/tcp/45589/p2p/16Uiu2HAkxEzER5jfXYrHnPnTPBcNQx8TJpuZK8FsgmPprNnU5hLu"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:45588/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:21888/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "204a2bf9-3f70-4b13-83d9-baeb885d7a8f", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"204a2bf9-3f70-4b13-83d9-baeb885d7a8f","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:21888/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:21888/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id e095edd6ba58
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 1f48a5850a79
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container e095edd6ba58. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.