[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2025-01-18_04-02-53__fb9a377f-b2c7-4f44-bbc6-ba0eab672f39
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-18_04-02-53__fb9a377f-b2c7-4f44-bbc6-ba0eab672f39__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.84.103
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['36751', '36752', '36753', '36754', '36755']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 36751:36751 -p 36752:36752 -p 36753:36753 -p 36754:36754 -p 36755:36755 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=36753 --rest-port=36751 --tcp-port=36752 --discv5-udp-port=36754 --rest-address=0.0.0.0 --nat=extip:172.18.84.103 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=95dbd1648adcffade74ef6ccb0072ce27d0adaccfe1aeffbfea2dffa2cbe2fdb --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=36755 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.84.103 waku fcf31bb990b93a81bc10b0a4eee099411934fc6bd004fa897ac4198b031b612f
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID fcf31bb990b9. Setting up logs at ./log/docker/node1_2025-01-18_04-02-53__fb9a377f-b2c7-4f44-bbc6-ba0eab672f39__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 36751
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 9e0d585403ef. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:36751/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:36751/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.84.103/tcp/36752/p2p/16Uiu2HAmGzVQ7e6ioP5Ek6e69T6bZPc6pJQ7NpJfDpHByLNf1K6T","/ip4/172.18.84.103/tcp/36753/ws/p2p/16Uiu2HAmGzVQ7e6ioP5Ek6e69T6bZPc6pJQ7NpJfDpHByLNf1K6T"],"enrUri":"enr:-L24QN9IqQOOEWCy0UD9BkpMppiwLjGKLH5kqwxxRI-Kl0rVXRQAoNisq4KpMLTd_alDk6q62ARBG_Jr0i2D0-9gKEwCgmlkgnY0gmlwhKwSVGeKbXVsdGlhZGRyc5YACASsElRnBo-QAAoErBJUZwaPkd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDQG2g6YqiZg4u5gsXfFbwk48t412dLvUsTHhJKrT1TQSDdGNwgo-Qg3VkcIKPkoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-18_04-02-53__fb9a377f-b2c7-4f44-bbc6-ba0eab672f39__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.224.113
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['32034', '32035', '32036', '32037', '32038']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 32034:32034 -p 32035:32035 -p 32036:32036 -p 32037:32037 -p 32038:32038 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=32036 --rest-port=32034 --tcp-port=32035 --discv5-udp-port=32037 --rest-address=0.0.0.0 --nat=extip:172.18.224.113 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=f79fca9feb2205a92fe56599cd96b4cf2aa8df17d9badbcbf9ad6cead012d6ff --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=32038 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QN9IqQOOEWCy0UD9BkpMppiwLjGKLH5kqwxxRI-Kl0rVXRQAoNisq4KpMLTd_alDk6q62ARBG_Jr0i2D0-9gKEwCgmlkgnY0gmlwhKwSVGeKbXVsdGlhZGRyc5YACASsElRnBo-QAAoErBJUZwaPkd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDQG2g6YqiZg4u5gsXfFbwk48t412dLvUsTHhJKrT1TQSDdGNwgo-Qg3VkcIKPkoV3YWt1MgU --filternode=/ip4/172.18.84.103/tcp/36752/p2p/16Uiu2HAmGzVQ7e6ioP5Ek6e69T6bZPc6pJQ7NpJfDpHByLNf1K6T
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.224.113 waku 0cb5105812fe7c3924dc7a42935246c67df55c7c306151bdb9aa0fe1bdafa252
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 0cb5105812fe. Setting up logs at ./log/docker/node2_2025-01-18_04-02-53__fb9a377f-b2c7-4f44-bbc6-ba0eab672f39__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 32034
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:32034/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:32034/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.224.113/tcp/32035/p2p/16Uiu2HAkzXNqcnDW4CFxBRmYb9qfTtinArJ4uPGsCDY5mFEYvjss","/ip4/172.18.224.113/tcp/32036/ws/p2p/16Uiu2HAkzXNqcnDW4CFxBRmYb9qfTtinArJ4uPGsCDY5mFEYvjss"],"enrUri":"enr:-L24QHkYJ8h0tLRtt-HTx3-aDU3XLjt-dL4ylYzfu7lLlLIWOygq5rYKfGDBYwGXZ1nFMaM5musk5UWIXkdTFN7NaRwCgmlkgnY0gmlwhKwS4HGKbXVsdGlhZGRyc5YACASsEuBxBn0jAAoErBLgcQZ9JN0DgnJzhQADAQAAiXNlY3AyNTZrMaECS8CJw3AFAJDKCcRxGho1RFosEGNW7DrqNwiYjeTnw0aDdGNwgn0jg3VkcIJ9JYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:32034/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.84.103/tcp/36752/p2p/16Uiu2HAmGzVQ7e6ioP5Ek6e69T6bZPc6pJQ7NpJfDpHByLNf1K6T"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:36751/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:32034/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "c5946f31-4b6b-4c6e-8aaa-f0e6bcd02df1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"c5946f31-4b6b-4c6e-8aaa-f0e6bcd02df1","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:32034/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:32034/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id fcf31bb990b9
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 0cb5105812fe
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container fcf31bb990b9. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.