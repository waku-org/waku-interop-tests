[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_no_content_topic with id: 2025-01-18_04-07-38__59f14980-b558-48a2-a328-592e767eb9e3
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-18_04-07-38__59f14980-b558-48a2-a328-592e767eb9e3__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.32.62
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['37473', '37474', '37475', '37476', '37477']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 37473:37473 -p 37474:37474 -p 37475:37475 -p 37476:37476 -p 37477:37477 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=37475 --rest-port=37473 --tcp-port=37474 --discv5-udp-port=37476 --rest-address=0.0.0.0 --nat=extip:172.18.32.62 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=facffa72fda6d9add9a9d7b576e0efe39925bc8ceaf7c5aaf9c8f5aeb44c99ee --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=37477 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.32.62 waku 5fed54e37160d9b23911757249db83490de32442a86e1ed8dd9eff33d8701593
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 5fed54e37160. Setting up logs at ./log/docker/node1_2025-01-18_04-07-38__59f14980-b558-48a2-a328-592e767eb9e3__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 37473
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 26efe7324ce2. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:37473/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:37473/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.32.62/tcp/37474/p2p/16Uiu2HAmHGy2FkTHuDN2Vd2hab8mGR6McrkbRNTrdEhsBVQ3mp48","/ip4/172.18.32.62/tcp/37475/ws/p2p/16Uiu2HAmHGy2FkTHuDN2Vd2hab8mGR6McrkbRNTrdEhsBVQ3mp48"],"enrUri":"enr:-L24QK0wYM0kowG7G7_o8WoVseeS0rMB-vpUW-650ykPgdm5AZrz-NDSuLdDKhd1t_3HUhLBBVyboeBa1cS6eILNAH8CgmlkgnY0gmlwhKwSID6KbXVsdGlhZGRyc5YACASsEiA-BpJiAAoErBIgPgaSY90DgnJzhQADAQAAiXNlY3AyNTZrMaEDRKYnsTgOeGBlNqlzNVF0vf4VYurBHsD6LCAKvAH2crGDdGNwgpJig3VkcIKSZIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-18_04-07-38__59f14980-b558-48a2-a328-592e767eb9e3__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.249.73
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['28565', '28566', '28567', '28568', '28569']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 28565:28565 -p 28566:28566 -p 28567:28567 -p 28568:28568 -p 28569:28569 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=28567 --rest-port=28565 --tcp-port=28566 --discv5-udp-port=28568 --rest-address=0.0.0.0 --nat=extip:172.18.249.73 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=be84b7cbbbc23b6a89b22fa5c20b1aaa5dcfc6aba118a6ad70b1ec34d81eac9a --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=28569 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QK0wYM0kowG7G7_o8WoVseeS0rMB-vpUW-650ykPgdm5AZrz-NDSuLdDKhd1t_3HUhLBBVyboeBa1cS6eILNAH8CgmlkgnY0gmlwhKwSID6KbXVsdGlhZGRyc5YACASsEiA-BpJiAAoErBIgPgaSY90DgnJzhQADAQAAiXNlY3AyNTZrMaEDRKYnsTgOeGBlNqlzNVF0vf4VYurBHsD6LCAKvAH2crGDdGNwgpJig3VkcIKSZIV3YWt1MgU --filternode=/ip4/172.18.32.62/tcp/37474/p2p/16Uiu2HAmHGy2FkTHuDN2Vd2hab8mGR6McrkbRNTrdEhsBVQ3mp48
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.249.73 waku 5ecaccb45cb4b8727d4c791921af0ae70ff7bd878fdd1edce32160f04a13e425
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 5ecaccb45cb4. Setting up logs at ./log/docker/node2_2025-01-18_04-07-38__59f14980-b558-48a2-a328-592e767eb9e3__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 28565
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:28565/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:28565/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.249.73/tcp/28566/p2p/16Uiu2HAmCytfhdz7B4AsrS57BnCG25X2NRWoVLS5DiVb1Y6ciEW1","/ip4/172.18.249.73/tcp/28567/ws/p2p/16Uiu2HAmCytfhdz7B4AsrS57BnCG25X2NRWoVLS5DiVb1Y6ciEW1"],"enrUri":"enr:-L24QCJ28-oldDldonCNCDWWQZSaVSEnbtao6B5yeauITct4OBLEqhpG3CQxLxgaOuSfnrV0qiUQPQ8BGRWr1QKpLocCgmlkgnY0gmlwhKwS-UmKbXVsdGlhZGRyc5YACASsEvlJBm-WAAoErBL5SQZvl90DgnJzhQADAQAAiXNlY3AyNTZrMaEDBNecLmFlrRIMaKd9YNqTflXydVvDG6MdkZa5gE_glt6DdGNwgm-Wg3VkcIJvmIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:28565/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.32.62/tcp/37474/p2p/16Uiu2HAmHGy2FkTHuDN2Vd2hab8mGR6McrkbRNTrdEhsBVQ3mp48"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:37473/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:28565/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "d6da2687-f1bb-4d09-99ef-3f382a2b4a8a", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"d6da2687-f1bb-4d09-99ef-3f382a2b4a8a","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:28565/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:28565/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 5fed54e37160
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 5ecaccb45cb4
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 5fed54e37160. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.