[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_invalid_version with id: 2024-10-15_04-23-00__d57a48c6-8b90-4428-bf69-ac58b7485f89
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-10-15_04-23-00__d57a48c6-8b90-4428-bf69-ac58b7485f89__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.39.113
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['12477', '12478', '12479', '12480', '12481']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 12477:12477 -p 12478:12478 -p 12479:12479 -p 12480:12480 -p 12481:12481 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=12479 --rest-port=12477 --tcp-port=12478 --discv5-udp-port=12480 --rest-address=0.0.0.0 --nat=extip:172.18.39.113 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=adace8676ba9cfefbedbf0e768c75ef6e30dcebcbb90b29323a7423a0bebe88b --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=12481 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.39.113 waku 76598ea1fd314bccc5e9eb8c91415d41bca76d4107d90e566380705d50efc315
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 76598ea1fd31. Setting up logs at ./log/docker/node1_2024-10-15_04-23-00__d57a48c6-8b90-4428-bf69-ac58b7485f89__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 12477
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:12477/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:12477/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.39.113/tcp/12478/p2p/16Uiu2HAmTv4cTc7EckTxNaGVLJAtmoHH5BBU9o5sPH4sRPHmutXa","/ip4/172.18.39.113/tcp/12479/ws/p2p/16Uiu2HAmTv4cTc7EckTxNaGVLJAtmoHH5BBU9o5sPH4sRPHmutXa"],"enrUri":"enr:-LO4QOZ4cYJWA0964ZWtsMdV2FLzSV4bOj2ftEjpuC8Gj4MILA7yMhyypsjroF3FF9tTwWjosMns25SKxKwGHv4bqTMBgmlkgnY0gmlwhKwSJ3GKbXVsdGlhZGRyc4wACgSsEidxBjC_3QOCcnOFAAMBAACJc2VjcDI1NmsxoQPiu9Wmzr_OthJRpaiTwGruS_bO0NHD1_mwiz15wvyDeYN0Y3CCML6DdWRwgjDAhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-10-15_04-23-00__d57a48c6-8b90-4428-bf69-ac58b7485f89__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.117.51
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['38024', '38025', '38026', '38027', '38028']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 38024:38024 -p 38025:38025 -p 38026:38026 -p 38027:38027 -p 38028:38028 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=38026 --rest-port=38024 --tcp-port=38025 --discv5-udp-port=38027 --rest-address=0.0.0.0 --nat=extip:172.18.117.51 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=30fd01fc6c4b6784e46ed2c4aaf83fc7fd868ac9c7eaf64141ea648072e97ab2 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=38028 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QOZ4cYJWA0964ZWtsMdV2FLzSV4bOj2ftEjpuC8Gj4MILA7yMhyypsjroF3FF9tTwWjosMns25SKxKwGHv4bqTMBgmlkgnY0gmlwhKwSJ3GKbXVsdGlhZGRyc4wACgSsEidxBjC_3QOCcnOFAAMBAACJc2VjcDI1NmsxoQPiu9Wmzr_OthJRpaiTwGruS_bO0NHD1_mwiz15wvyDeYN0Y3CCML6DdWRwgjDAhXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.117.51 waku 83adc6fbd5777e274832f05009d77c421ed7ddac353075b9ea4cca80575e6c22
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 83adc6fbd577. Setting up logs at ./log/docker/node2_2024-10-15_04-23-00__d57a48c6-8b90-4428-bf69-ac58b7485f89__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 38024
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38024/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38024/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.117.51/tcp/38025/p2p/16Uiu2HAmRYkvxEx474rfckpvFvx7sL6ApvTg9KE4sA4uD23CRmeT","/ip4/172.18.117.51/tcp/38026/ws/p2p/16Uiu2HAmRYkvxEx474rfckpvFvx7sL6ApvTg9KE4sA4uD23CRmeT"],"enrUri":"enr:-LO4QN1khu9KU1J0fKLY99IewmxPm69C7SPXUxn37pPqbzHPKNTokKlLydlhXCaCegPF8EnE9Xn3x4exjVdh3IuGYpMBgmlkgnY0gmlwhKwSdTOKbXVsdGlhZGRyc4wACgSsEnUzBpSK3QOCcnOFAAMBAACJc2VjcDI1NmsxoQO_j0WHqC4MQ4Kv3ojI2MSmLzxUaheTI2y1xM9ZwcxDnIN0Y3CClImDdWRwgpSLhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38024/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.39.113/tcp/12478/p2p/16Uiu2HAmTv4cTc7EckTxNaGVLJAtmoHH5BBU9o5sPH4sRPHmutXa"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:12477/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38024/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:12477/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:12477/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1728966183801843200,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38024/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1728966183801843200,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:12477/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)', "version": 2.1}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:12477/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 76598ea1fd31
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 83adc6fbd577
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.