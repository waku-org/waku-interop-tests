[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_valid_payloads_n1_with_rln_n2_without_rln_at_spam_rate with id: 2024-08-21_04-27-08__24163f11-7a33-4625-96b2-9c59333bcb27
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:17 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:84 WakuNode instance initialized with log path ./log/docker/node1_2024-08-21_04-27-08__24163f11-7a33-4625-96b2-9c59333bcb27__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:88 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:20 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:23 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:80 Generated random external IP 172.18.62.216
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:73 Generated ports ['3308', '3309', '3310', '3311', '3312']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:164 Using volumes ['/home/runner/work/waku-interop-tests/waku-interop-tests/rln_tree_ssso_1:/etc/rln_tree', '/home/runner/work/waku-interop-tests/waku-interop-tests/keystore_ssso_1:/keystore']
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:47 docker run -i -t -p 3308:3308 -p 3309:3309 -p 3310:3310 -p 3311:3311 -p 3312:3312 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=3310 --rest-port=3308 --tcp-port=3309 --discv5-udp-port=3311 --rest-address=0.0.0.0 --nat=extip:172.18.62.216 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ea6e1c5bff4ea75409ef84c1ebd81ece425fa5f93cb7bf60cdcd183f53956da3 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=3312 --metrics-logging=true --relay=true --rln-relay-membership-index=1 --rln-relay-user-message-limit=1 --rln-relay-epoch-sec=1 --rln-relay=true --rln-relay-cred-path=/keystore/keystore.json --rln-relay-cred-password=password
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:53 docker network connect --ip 172.18.62.216 waku 0efbfdb0560692084e479b497b1cb4acd99a2358d6d4e31fa6454c11db80232d
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:56 Container started with ID 0efbfdb05606. Setting up logs at ./log/docker/node1_2024-08-21_04-27-08__24163f11-7a33-4625-96b2-9c59333bcb27__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:176 Started container from image wakuorg/nwaku:latest. REST: 3308
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:3308/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Initializing","protocolsHealth":[{"Rln Relay":"Ready"}]}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:3308/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[{"Rln Relay":"Ready"}]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:276 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:3308/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.62.216/tcp/3309/p2p/16Uiu2HAmC7BWD9eX9ZLYudVpStGsKgMac4Fms7JPjCo3DPpkS8iA","/ip4/172.18.62.216/tcp/3310/ws/p2p/16Uiu2HAmC7BWD9eX9ZLYudVpStGsKgMac4Fms7JPjCo3DPpkS8iA"],"enrUri":"enr:-LO4QNzIjo5CW5jBcaQFydhtJYXDzunV5wQ6MLkejBl3zJynfoSpXdP5IsDSLgBHhVx33zRRrWKbmpLM1ns_jjMF-IIBgmlkgnY0gmlwhKwSPtiKbXVsdGlhZGRyc4wACgSsEj7YBgzu3QOCcnOFAAMBAACJc2VjcDI1NmsxoQL32gaXqEriVsLKnXq4wvPdLmdylJAdRRZKFh4gExNOx4N0Y3CCDO2DdWRwggzvhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:281 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:17 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:84 WakuNode instance initialized with log path ./log/docker/node2_2024-08-21_04-27-08__24163f11-7a33-4625-96b2-9c59333bcb27__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:88 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:20 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:23 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:80 Generated random external IP 172.18.178.189
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:73 Generated ports ['8039', '8040', '8041', '8042', '8043']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:430 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:162 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:164 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:47 docker run -i -t -p 8039:8039 -p 8040:8040 -p 8041:8041 -p 8042:8042 -p 8043:8043 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=8041 --rest-port=8039 --tcp-port=8040 --discv5-udp-port=8042 --rest-address=0.0.0.0 --nat=extip:172.18.178.189 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=61cd86390e5e03dcfe9b5cbeb1b6ea96613db601fde58e6c0bf9bcf5555f31ad --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=8043 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QNzIjo5CW5jBcaQFydhtJYXDzunV5wQ6MLkejBl3zJynfoSpXdP5IsDSLgBHhVx33zRRrWKbmpLM1ns_jjMF-IIBgmlkgnY0gmlwhKwSPtiKbXVsdGlhZGRyc4wACgSsEj7YBgzu3QOCcnOFAAMBAACJc2VjcDI1NmsxoQL32gaXqEriVsLKnXq4wvPdLmdylJAdRRZKFh4gExNOx4N0Y3CCDO2DdWRwggzvhXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:53 docker network connect --ip 172.18.178.189 waku 6df34b243a6082cb4345f38c32acb47a667768bde19d0ed2f483756b296dfd71
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:56 Container started with ID 6df34b243a60. Setting up logs at ./log/docker/node2_2024-08-21_04-27-08__24163f11-7a33-4625-96b2-9c59333bcb27__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:176 Started container from image wakuorg/nwaku:latest. REST: 8039
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8039/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:276 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8039/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.178.189/tcp/8040/p2p/16Uiu2HAmF7ynUF2yFsGyiFfEuH1T71u6nUmhHu7qfneAA1EeqS3x","/ip4/172.18.178.189/tcp/8041/ws/p2p/16Uiu2HAmF7ynUF2yFsGyiFfEuH1T71u6nUmhHu7qfneAA1EeqS3x"],"enrUri":"enr:-LO4QDOT2D18B3VYVesNbmPYshiQ5ff3g0piNg3tK-Mxm88GDSqQbWJ-yC1wp6vlGwlUCk3Pp-_wUv5UOR0DCIL_etABgmlkgnY0gmlwhKwSsr2KbXVsdGlhZGRyc4wACgSsErK9Bh9p3QOCcnOFAAMBAACJc2VjcDI1NmsxoQMkoWp3nhv28YZBhrmwNCH4wUOSOc6lYZLx21fHsEO6n4N0Y3CCH2iDdWRwgh9qhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:281 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8039/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.62.216/tcp/3309/p2p/16Uiu2HAmC7BWD9eX9ZLYudVpStGsKgMac4Fms7JPjCo3DPpkS8iA"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:3308/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/1/0"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8039/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/1/0"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m tests.relay.test_rln:test_rln.py:197 Running test with payload A simple string
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:3308/relay/v1/messages/%2Fwaku%2F2%2Frs%2F1%2F0" -H "Content-Type: application/json" -d '{"payload": "SGVsbG8gV29ybGQh", "contentTopic": "/test/1/waku-rln-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m tests.relay.test_rln:test_rln.py:197 Running test with payload An integer
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:3308/relay/v1/messages/%2Fwaku%2F2%2Frs%2F1%2F0" -H "Content-Type: application/json" -d '{"payload": "MTIzNDU2Nzg5MA==", "contentTopic": "/test/1/waku-rln-relay/proto", "timestamp": '$(date +%s%N)'}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 500 Server Error: Internal Server Error for url: http://127.0.0.1:3308/relay/v1/messages/%2Fwaku%2F2%2Frs%2F1%2F0. Response content: b'Failed to publish: error appending RLN proof to message: could not get new message id to generate an rln proof: NonceLimitReached: Nonce limit reached. Please wait for the next epoch. requested nonce: 1 & nonceLimit: 1'
[35mDEBUG   [0m tests.relay.test_rln:test_rln.py:197 Running test with payload A dictionary
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:3308/relay/v1/messages/%2Fwaku%2F2%2Frs%2F1%2F0" -H "Content-Type: application/json" -d '{"payload": "eyJrZXkiOiAidmFsdWUifQ==", "contentTopic": "/test/1/waku-rln-relay/proto", "timestamp": '$(date +%s%N)'}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 500 Server Error: Internal Server Error for url: http://127.0.0.1:3308/relay/v1/messages/%2Fwaku%2F2%2Frs%2F1%2F0. Response content: b'Failed to publish: error appending RLN proof to message: could not get new message id to generate an rln proof: NonceLimitReached: Nonce limit reached. Please wait for the next epoch. requested nonce: 2 & nonceLimit: 1'
[35mDEBUG   [0m tests.relay.test_rln:test_rln.py:197 Running test with payload Chinese characters
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:3308/relay/v1/messages/%2Fwaku%2F2%2Frs%2F1%2F0" -H "Content-Type: application/json" -d '{"payload": "6L+Z5piv5LiA5Lqb5Lit5paH", "contentTopic": "/test/1/waku-rln-relay/proto", "timestamp": '$(date +%s%N)'}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 500 Server Error: Internal Server Error for url: http://127.0.0.1:3308/relay/v1/messages/%2Fwaku%2F2%2Frs%2F1%2F0. Response content: b'Failed to publish: error appending RLN proof to message: could not get new message id to generate an rln proof: NonceLimitReached: Nonce limit reached. Please wait for the next epoch. requested nonce: 3 & nonceLimit: 1'
[35mDEBUG   [0m tests.relay.test_rln:test_rln.py:197 Running test with payload Emojis
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:3308/relay/v1/messages/%2Fwaku%2F2%2Frs%2F1%2F0" -H "Content-Type: application/json" -d '{"payload": "8J+agPCfjJ/inKg=", "contentTopic": "/test/1/waku-rln-relay/proto", "timestamp": '$(date +%s%N)'}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 500 Server Error: Internal Server Error for url: http://127.0.0.1:3308/relay/v1/messages/%2Fwaku%2F2%2Frs%2F1%2F0. Response content: b'Failed to publish: error appending RLN proof to message: could not get new message id to generate an rln proof: NonceLimitReached: Nonce limit reached. Please wait for the next epoch. requested nonce: 4 & nonceLimit: 1'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:220 Stopping container with id 0efbfdb05606
[35mDEBUG   [0m src.node.waku_node:waku_node.py:227 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:220 Stopping container with id 6df34b243a60
[35mDEBUG   [0m src.node.waku_node:waku_node.py:227 Container stopped.