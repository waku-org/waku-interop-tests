[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_no_request_id with id: 2024-08-21_04-19-06__ed33ba1e-606e-4bc0-814c-56569aba5653
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:17 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:84 WakuNode instance initialized with log path ./log/docker/node1_2024-08-21_04-19-06__ed33ba1e-606e-4bc0-814c-56569aba5653__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:88 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:20 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:23 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:80 Generated random external IP 172.18.41.91
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:73 Generated ports ['53701', '53702', '53703', '53704', '53705']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:430 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:162 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:164 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:47 docker run -i -t -p 53701:53701 -p 53702:53702 -p 53703:53703 -p 53704:53704 -p 53705:53705 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=53703 --rest-port=53701 --tcp-port=53702 --discv5-udp-port=53704 --rest-address=0.0.0.0 --nat=extip:172.18.41.91 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=fa48a1b195bf88c035dcae48e940b1d86ef8f35dda0feeefaaed085b774aff47 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=53705 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:53 docker network connect --ip 172.18.41.91 waku eec8a2bcd8687391beae90771314d75fc316ee554e12457a8858ded9eb44f244
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:56 Container started with ID eec8a2bcd868. Setting up logs at ./log/docker/node1_2024-08-21_04-19-06__ed33ba1e-606e-4bc0-814c-56569aba5653__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:176 Started container from image wakuorg/nwaku:latest. REST: 53701
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:53701/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:276 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:53701/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.41.91/tcp/53702/p2p/16Uiu2HAkuXGdCWQziJEGoGHb167b4KB5Thv3U6Gh6bmhk57mTuCT","/ip4/172.18.41.91/tcp/53703/ws/p2p/16Uiu2HAkuXGdCWQziJEGoGHb167b4KB5Thv3U6Gh6bmhk57mTuCT"],"enrUri":"enr:-LO4QERPCCwBQMAWoOEl7XVXmUk3eKeifNoXa6iDA70qMzVrLbCu0Woqa-_qL5T_7up0qbjhXr6bovpZT_-sejQmaecBgmlkgnY0gmlwhKwSKVuKbXVsdGlhZGRyc4wACgSsEilbBtHH3QOCcnOFAAMBAACJc2VjcDI1NmsxoQIBbxPClgx0ARORbCD6W-0nbX4vVSty0GdNsse2AE2i-IN0Y3CC0caDdWRwgtHIhXdha3UyBQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:281 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:17 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:84 WakuNode instance initialized with log path ./log/docker/node2_2024-08-21_04-19-06__ed33ba1e-606e-4bc0-814c-56569aba5653__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:88 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:20 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:23 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:80 Generated random external IP 172.18.25.64
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:73 Generated ports ['53272', '53273', '53274', '53275', '53276']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:430 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:162 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:164 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:47 docker run -i -t -p 53272:53272 -p 53273:53273 -p 53274:53274 -p 53275:53275 -p 53276:53276 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=53274 --rest-port=53272 --tcp-port=53273 --discv5-udp-port=53275 --rest-address=0.0.0.0 --nat=extip:172.18.25.64 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=2b5c6ea3ae8fa3d0ced5337a10d3decf7a7a823d59ac4aa7f242fffeefbf0fd6 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=53276 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-LO4QERPCCwBQMAWoOEl7XVXmUk3eKeifNoXa6iDA70qMzVrLbCu0Woqa-_qL5T_7up0qbjhXr6bovpZT_-sejQmaecBgmlkgnY0gmlwhKwSKVuKbXVsdGlhZGRyc4wACgSsEilbBtHH3QOCcnOFAAMBAACJc2VjcDI1NmsxoQIBbxPClgx0ARORbCD6W-0nbX4vVSty0GdNsse2AE2i-IN0Y3CC0caDdWRwgtHIhXdha3UyBQ --filternode=/ip4/172.18.41.91/tcp/53702/p2p/16Uiu2HAkuXGdCWQziJEGoGHb167b4KB5Thv3U6Gh6bmhk57mTuCT
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:53 docker network connect --ip 172.18.25.64 waku cc2de1f47aa76c8c29a98e535d0faf78a55c8c843b7c5adf0bcb863ee74adb6b
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:56 Container started with ID cc2de1f47aa7. Setting up logs at ./log/docker/node2_2024-08-21_04-19-06__ed33ba1e-606e-4bc0-814c-56569aba5653__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:176 Started container from image wakuorg/nwaku:latest. REST: 53272
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:53272/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:276 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:53272/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.25.64/tcp/53273/p2p/16Uiu2HAmTLjSJ6R5A6RB4rk5Gt34p8dA7abv5C6HzhavfThq9QcV","/ip4/172.18.25.64/tcp/53274/ws/p2p/16Uiu2HAmTLjSJ6R5A6RB4rk5Gt34p8dA7abv5C6HzhavfThq9QcV"],"enrUri":"enr:-LO4QMkls4DbjLvz0chSqLl9OGFK5Cgrg_rPdgPvF6g7qYIAacGfgn5wwIxZ48kocFzbuAVDDUPlkRd1YJ_y7box1l8BgmlkgnY0gmlwhKwSGUCKbXVsdGlhZGRyc4wACgSsEhlABtAa3QOCcnOFAAMBAACJc2VjcDI1NmsxoQPaMfyCQSswDnCZswGECBksSQKIb1vtIeeYINfc21SEBoN0Y3CC0BmDdWRwgtAbhXdha3UyAA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:281 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:53272/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.41.91/tcp/53702/p2p/16Uiu2HAkuXGdCWQziJEGoGHb167b4KB5Thv3U6Gh6bmhk57mTuCT"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:53701/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:53272/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "4c94e851-e2ff-43d2-ae2e-2d622ce517fc", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"4c94e851-e2ff-43d2-ae2e-2d622ce517fc","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:53272/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:53272/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:220 Stopping container with id eec8a2bcd868
[35mDEBUG   [0m src.node.waku_node:waku_node.py:227 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:220 Stopping container with id cc2de1f47aa7
[35mDEBUG   [0m src.node.waku_node:waku_node.py:227 Container stopped.