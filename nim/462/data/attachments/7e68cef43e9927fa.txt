[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_invalid_request_id with id: 2024-11-25_06-19-53__9c3c3fec-a2ef-4c24-bd0d-e388d387a8a0
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-25_06-19-53__9c3c3fec-a2ef-4c24-bd0d-e388d387a8a0__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.189.125
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['21106', '21107', '21108', '21109', '21110']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 21106:21106 -p 21107:21107 -p 21108:21108 -p 21109:21109 -p 21110:21110 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=21108 --rest-port=21106 --tcp-port=21107 --discv5-udp-port=21109 --rest-address=0.0.0.0 --nat=extip:172.18.189.125 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=728e140f444c1afe7a93da8efb2310f3fccfb8b2ca295baf3efdea8bf886a084 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=21110 --metrics-logging=true --relay=true --filter=true
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 73cd84f22602. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.189.125 waku 4f72728d8c3a2e02d560e9451e0710ae6c56d06eea41d2bbc19bd4795a98e0e0
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 4f72728d8c3a. Setting up logs at ./log/docker/node1_2024-11-25_06-19-53__9c3c3fec-a2ef-4c24-bd0d-e388d387a8a0__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 21106
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:21106/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:21106/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.189.125/tcp/21107/p2p/16Uiu2HAkxnh2NGyF64tBWCD8SuiMLNBxJ8QPwa7wgvGjMJLRKXWG","/ip4/172.18.189.125/tcp/21108/ws/p2p/16Uiu2HAkxnh2NGyF64tBWCD8SuiMLNBxJ8QPwa7wgvGjMJLRKXWG"],"enrUri":"enr:-L24QCKprankZmL5oDv_liejQGhlkKSxvCaH1CiTApmshWQnWwMLrcLT2YtQ8d9y39AKvmEDSOCTa6qyvlhTFX_zA2cCgmlkgnY0gmlwhKwSvX2KbXVsdGlhZGRyc5YACASsEr19BlJzAAoErBK9fQZSdN0DgnJzhQADAQAAiXNlY3AyNTZrMaECMfVwS7dWwi886ByjzDOJ19o2_qawIzlhTpLrutRgNEmDdGNwglJzg3VkcIJSdYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-25_06-19-53__9c3c3fec-a2ef-4c24-bd0d-e388d387a8a0__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.211.143
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['10549', '10550', '10551', '10552', '10553']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 10549:10549 -p 10550:10550 -p 10551:10551 -p 10552:10552 -p 10553:10553 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=10551 --rest-port=10549 --tcp-port=10550 --discv5-udp-port=10552 --rest-address=0.0.0.0 --nat=extip:172.18.211.143 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=8b7b2c8b0daea7275725216ac2fea1cedb7e6fdd0db361fc3f8fa0fadcdf5513 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=10553 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QCKprankZmL5oDv_liejQGhlkKSxvCaH1CiTApmshWQnWwMLrcLT2YtQ8d9y39AKvmEDSOCTa6qyvlhTFX_zA2cCgmlkgnY0gmlwhKwSvX2KbXVsdGlhZGRyc5YACASsEr19BlJzAAoErBK9fQZSdN0DgnJzhQADAQAAiXNlY3AyNTZrMaECMfVwS7dWwi886ByjzDOJ19o2_qawIzlhTpLrutRgNEmDdGNwglJzg3VkcIJSdYV3YWt1MgU --filternode=/ip4/172.18.189.125/tcp/21107/p2p/16Uiu2HAkxnh2NGyF64tBWCD8SuiMLNBxJ8QPwa7wgvGjMJLRKXWG
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.211.143 waku 1f580f4db7b79077bdf2055aabed8947d1213084b2fb47cc03878dbcaeff192e
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 1f580f4db7b7. Setting up logs at ./log/docker/node2_2024-11-25_06-19-53__9c3c3fec-a2ef-4c24-bd0d-e388d387a8a0__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 10549
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10549/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10549/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.211.143/tcp/10550/p2p/16Uiu2HAmSAMD88Nb9ST6uzGYccWc6815FHc2KQZrKcNMASNj4b3U","/ip4/172.18.211.143/tcp/10551/ws/p2p/16Uiu2HAmSAMD88Nb9ST6uzGYccWc6815FHc2KQZrKcNMASNj4b3U"],"enrUri":"enr:-L24QH6Kcr3bBR2JzqSOsprI98YRTr7sayUXuL_lWsu8fIKuTlLaJbVc10HSwn5moQz6enN209E85nDsABbTr0krBtUCgmlkgnY0gmlwhKwS04-KbXVsdGlhZGRyc5YACASsEtOPBik2AAoErBLTjwYpN90DgnJzhQADAQAAiXNlY3AyNTZrMaEDyK1b7NgllldaAsduXfDnsHpx1qjqTZhoTaFXjep21U-DdGNwgik2g3VkcIIpOIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:10549/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.189.125/tcp/21107/p2p/16Uiu2HAkxnh2NGyF64tBWCD8SuiMLNBxJ8QPwa7wgvGjMJLRKXWG"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:21106/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:10549/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "d25bd057-3cfa-4baf-a414-5dbd3a70dc3b", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"d25bd057-3cfa-4baf-a414-5dbd3a70dc3b","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:10549/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:10549/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 4f72728d8c3a
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 1f580f4db7b7
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 4f72728d8c3a. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.