[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_extra_field with id: 2024-11-25_06-19-55__7588d6f8-fe9b-46c4-9f19-f64d28ca6acd
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-25_06-19-55__7588d6f8-fe9b-46c4-9f19-f64d28ca6acd__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.173.152
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['57701', '57702', '57703', '57704', '57705']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 57701:57701 -p 57702:57702 -p 57703:57703 -p 57704:57704 -p 57705:57705 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=57703 --rest-port=57701 --tcp-port=57702 --discv5-udp-port=57704 --rest-address=0.0.0.0 --nat=extip:172.18.173.152 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b6cae08b4db3a70c41ccb4bcdbccf4f7c02ebd6cda5f08dcadf21e0aead93f7c --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=57705 --metrics-logging=true --relay=true --filter=true
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container c2c1652cd9b6. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.173.152 waku 447bc5600f75d4c78fd11d11fc8dbc92acac4fcc018535173369904317c8cde4
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 447bc5600f75. Setting up logs at ./log/docker/node1_2024-11-25_06-19-55__7588d6f8-fe9b-46c4-9f19-f64d28ca6acd__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 57701
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:57701/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:57701/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.173.152/tcp/57702/p2p/16Uiu2HAmLLVoCEYWtFDtjegrFZjRj9iFodgSWRnxvWWxpbysZHMg","/ip4/172.18.173.152/tcp/57703/ws/p2p/16Uiu2HAmLLVoCEYWtFDtjegrFZjRj9iFodgSWRnxvWWxpbysZHMg"],"enrUri":"enr:-L24QEsNSkdC9BjFk1-Kr5TarZNufod24OadjiFgeBmsdITKBGXYsMFEGmDvmz7mC_4Tx-dcjnRLSKAqKFZxXvxWg-8CgmlkgnY0gmlwhKwSrZiKbXVsdGlhZGRyc5YACASsEq2YBuFmAAoErBKtmAbhZ90DgnJzhQADAQAAiXNlY3AyNTZrMaEDciDBZTcT_b4Ms2bIPUpxcYpvJWgJDPTk7EKuMM8QWw-DdGNwguFmg3VkcILhaIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-25_06-19-55__7588d6f8-fe9b-46c4-9f19-f64d28ca6acd__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.185.47
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['18795', '18796', '18797', '18798', '18799']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 18795:18795 -p 18796:18796 -p 18797:18797 -p 18798:18798 -p 18799:18799 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=18797 --rest-port=18795 --tcp-port=18796 --discv5-udp-port=18798 --rest-address=0.0.0.0 --nat=extip:172.18.185.47 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e9f86fc0e7eeeb897f72abff225041e3e6f8dbe747dffccfbeebbe11ac2df1b0 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=18799 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QEsNSkdC9BjFk1-Kr5TarZNufod24OadjiFgeBmsdITKBGXYsMFEGmDvmz7mC_4Tx-dcjnRLSKAqKFZxXvxWg-8CgmlkgnY0gmlwhKwSrZiKbXVsdGlhZGRyc5YACASsEq2YBuFmAAoErBKtmAbhZ90DgnJzhQADAQAAiXNlY3AyNTZrMaEDciDBZTcT_b4Ms2bIPUpxcYpvJWgJDPTk7EKuMM8QWw-DdGNwguFmg3VkcILhaIV3YWt1MgU --filternode=/ip4/172.18.173.152/tcp/57702/p2p/16Uiu2HAmLLVoCEYWtFDtjegrFZjRj9iFodgSWRnxvWWxpbysZHMg
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.185.47 waku 06ba5d752f3732c5982fae3fb3c64f4030ebbe454707d7b0f20eaab53495f96a
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 06ba5d752f37. Setting up logs at ./log/docker/node2_2024-11-25_06-19-55__7588d6f8-fe9b-46c4-9f19-f64d28ca6acd__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 18795
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:18795/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:18795/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.185.47/tcp/18796/p2p/16Uiu2HAmPimcTkhwYsNfnyf6MSanZnuqC22wZkVcoXwhvSh6p8S6","/ip4/172.18.185.47/tcp/18797/ws/p2p/16Uiu2HAmPimcTkhwYsNfnyf6MSanZnuqC22wZkVcoXwhvSh6p8S6"],"enrUri":"enr:-L24QEjuNregelOvnPgC4ZAdf88yZTxftaE9hLkV6-FfUfVMYncB5L-kaV8_m7WiQDaENZO86uxqork5avkhfNlwy18CgmlkgnY0gmlwhKwSuS-KbXVsdGlhZGRyc5YACASsErkvBklsAAoErBK5LwZJbd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDpGh53w7bbV7l8hE2PYXqLpmpXQ1wWqKxjImMx9En1hODdGNwgklsg3VkcIJJboV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:18795/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.173.152/tcp/57702/p2p/16Uiu2HAmLLVoCEYWtFDtjegrFZjRj9iFodgSWRnxvWWxpbysZHMg"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:57701/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:18795/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "3a5a4301-42e8-481e-be13-c2e85a129b6f", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"3a5a4301-42e8-481e-be13-c2e85a129b6f","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:18795/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:18795/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 447bc5600f75
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 06ba5d752f37
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 447bc5600f75. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.