[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_invalid_request_id with id: 2024-11-25_06-21-02__17c66d75-fd59-4475-b338-67f4a9ae9027
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-25_06-21-02__17c66d75-fd59-4475-b338-67f4a9ae9027__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.58.138
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['10008', '10009', '10010', '10011', '10012']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 10008:10008 -p 10009:10009 -p 10010:10010 -p 10011:10011 -p 10012:10012 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=10010 --rest-port=10008 --tcp-port=10009 --discv5-udp-port=10011 --rest-address=0.0.0.0 --nat=extip:172.18.58.138 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=42adeca6ffa46ebaef3eb02b5d5afea72dccf33cfa2e0a5bdfd47e748120df7d --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=10012 --metrics-logging=true --relay=true --filter=true
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 91d576f89cb2. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.58.138 waku e48b74974ef8ff0d051ddf181e2f4aa7910c00099fe62e1ebfe8b350f52d0f35
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID e48b74974ef8. Setting up logs at ./log/docker/node1_2024-11-25_06-21-02__17c66d75-fd59-4475-b338-67f4a9ae9027__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 10008
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10008/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10008/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.58.138/tcp/10009/p2p/16Uiu2HAmENz1yXV39aPpW8uDwy1HYUALtSazbkdpdeSGvaYTv6AZ","/ip4/172.18.58.138/tcp/10010/ws/p2p/16Uiu2HAmENz1yXV39aPpW8uDwy1HYUALtSazbkdpdeSGvaYTv6AZ"],"enrUri":"enr:-L24QAgfYUd5NwNyYCAEQ9QNNACM35O1c6h9BGgmYzmlttdOdY1A_c_7_O2qdysVIt0AbXe5JpIPzfID0IE2kRQOpGICgmlkgnY0gmlwhKwSOoqKbXVsdGlhZGRyc5YACASsEjqKBicZAAoErBI6igYnGt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDGZ20Udfq0T1tqiv79F8j1jQ3Nk8AtBZu3O_uD-4MN-aDdGNwgicZg3VkcIInG4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-25_06-21-02__17c66d75-fd59-4475-b338-67f4a9ae9027__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.175.149
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['28882', '28883', '28884', '28885', '28886']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 28882:28882 -p 28883:28883 -p 28884:28884 -p 28885:28885 -p 28886:28886 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=28884 --rest-port=28882 --tcp-port=28883 --discv5-udp-port=28885 --rest-address=0.0.0.0 --nat=extip:172.18.175.149 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b08e6b1540296f7f2cfa30cbd9d82fd57e1653ecb0adcf52cd2b7363fa70fafe --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=28886 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QAgfYUd5NwNyYCAEQ9QNNACM35O1c6h9BGgmYzmlttdOdY1A_c_7_O2qdysVIt0AbXe5JpIPzfID0IE2kRQOpGICgmlkgnY0gmlwhKwSOoqKbXVsdGlhZGRyc5YACASsEjqKBicZAAoErBI6igYnGt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDGZ20Udfq0T1tqiv79F8j1jQ3Nk8AtBZu3O_uD-4MN-aDdGNwgicZg3VkcIInG4V3YWt1MgU --filternode=/ip4/172.18.58.138/tcp/10009/p2p/16Uiu2HAmENz1yXV39aPpW8uDwy1HYUALtSazbkdpdeSGvaYTv6AZ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.175.149 waku 4fcd47bdec3eed70028a96ec5ca2e97f8889154be11edabd64fc0a6b82942438
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 4fcd47bdec3e. Setting up logs at ./log/docker/node2_2024-11-25_06-21-02__17c66d75-fd59-4475-b338-67f4a9ae9027__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 28882
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:28882/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:28882/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.175.149/tcp/28883/p2p/16Uiu2HAmCGReN2DU1fSG9dUazJ2sgNu2V6FXfrXYnj1JdchMYzYr","/ip4/172.18.175.149/tcp/28884/ws/p2p/16Uiu2HAmCGReN2DU1fSG9dUazJ2sgNu2V6FXfrXYnj1JdchMYzYr"],"enrUri":"enr:-L24QHximNqqXuUNk5saLy2SioQ_XYHNc-or7lfF9WPfTcpaU7YdcrxzwVH0K-jah1puo1hJjc9uoUlxDhV9kgOYGT8CgmlkgnY0gmlwhKwSr5WKbXVsdGlhZGRyc5YACASsEq-VBnDTAAoErBKvlQZw1N0DgnJzhQADAQAAiXNlY3AyNTZrMaEC-jg96DwJctoL4lFzRsZCNYKQKC-9RtWM3oZMPYAC6xODdGNwgnDTg3VkcIJw1YV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:28882/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.58.138/tcp/10009/p2p/16Uiu2HAmENz1yXV39aPpW8uDwy1HYUALtSazbkdpdeSGvaYTv6AZ"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:10008/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:28882/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "ed4474cb-c5bd-4492-b68b-ea28fb47bc97", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"ed4474cb-c5bd-4492-b68b-ea28fb47bc97","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:28882/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:28882/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id e48b74974ef8
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 4fcd47bdec3e
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container e48b74974ef8. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.