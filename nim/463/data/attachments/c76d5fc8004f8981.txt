[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_content_topic_string_instead_of_list with id: 2024-11-25_07-33-08__dd393564-2c4d-47ce-8428-148126c63ec2
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-25_07-33-08__dd393564-2c4d-47ce-8428-148126c63ec2__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.110.201
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['17188', '17189', '17190', '17191', '17192']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 17188:17188 -p 17189:17189 -p 17190:17190 -p 17191:17191 -p 17192:17192 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=17190 --rest-port=17188 --tcp-port=17189 --discv5-udp-port=17191 --rest-address=0.0.0.0 --nat=extip:172.18.110.201 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=66d3e4c97be0e030cd6cfc2ce72ec9ef4a9e56912f60a6e4e6bd233cdded312f --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=17192 --metrics-logging=true --relay=true --filter=true
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 7bd0d357d8f0. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.110.201 waku c16dbe844a7ff60e7f4730e042549e93f16f2b3b5bf6733d18b0b2982ed76a51
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID c16dbe844a7f. Setting up logs at ./log/docker/node1_2024-11-25_07-33-08__dd393564-2c4d-47ce-8428-148126c63ec2__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 17188
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17188/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17188/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.110.201/tcp/17189/p2p/16Uiu2HAmQuv4mk4EtWxPyCMbDfdpnRFhzCepU751HzUAAzB6hnL8","/ip4/172.18.110.201/tcp/17190/ws/p2p/16Uiu2HAmQuv4mk4EtWxPyCMbDfdpnRFhzCepU751HzUAAzB6hnL8"],"enrUri":"enr:-L24QLWkew7KOMAIuSD29ppY6VOxIDb9KP8hpyyWIunq3Or-el6UOy9WdZVEZ5lM4PPSMXxgEhniiR8qoEgFstuctEcCgmlkgnY0gmlwhKwSbsmKbXVsdGlhZGRyc5YACASsEm7JBkMlAAoErBJuyQZDJt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDth8cRQiLJGoBeuOfgOFSfS9wsjbCdA5_vTzB0mfUcTmDdGNwgkMlg3VkcIJDJ4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-25_07-33-08__dd393564-2c4d-47ce-8428-148126c63ec2__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.197.11
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['37862', '37863', '37864', '37865', '37866']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 37862:37862 -p 37863:37863 -p 37864:37864 -p 37865:37865 -p 37866:37866 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=37864 --rest-port=37862 --tcp-port=37863 --discv5-udp-port=37865 --rest-address=0.0.0.0 --nat=extip:172.18.197.11 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=efd60c4eedb62c65eabe036eaf51cd05b7bb96c5c6bebdde74747df1afee28bf --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=37866 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QLWkew7KOMAIuSD29ppY6VOxIDb9KP8hpyyWIunq3Or-el6UOy9WdZVEZ5lM4PPSMXxgEhniiR8qoEgFstuctEcCgmlkgnY0gmlwhKwSbsmKbXVsdGlhZGRyc5YACASsEm7JBkMlAAoErBJuyQZDJt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDth8cRQiLJGoBeuOfgOFSfS9wsjbCdA5_vTzB0mfUcTmDdGNwgkMlg3VkcIJDJ4V3YWt1MgU --filternode=/ip4/172.18.110.201/tcp/17189/p2p/16Uiu2HAmQuv4mk4EtWxPyCMbDfdpnRFhzCepU751HzUAAzB6hnL8
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.197.11 waku e5640c7f28fa6f81c3d7b7b5b627cd55206e2dd93d333c60cf1b957dbf504608
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID e5640c7f28fa. Setting up logs at ./log/docker/node2_2024-11-25_07-33-08__dd393564-2c4d-47ce-8428-148126c63ec2__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 37862
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:37862/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:37862/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.197.11/tcp/37863/p2p/16Uiu2HAm8GkHVMLaXa8Z8eENuweQZsDZs2VgbYtPHEt1JCYsrXX1","/ip4/172.18.197.11/tcp/37864/ws/p2p/16Uiu2HAm8GkHVMLaXa8Z8eENuweQZsDZs2VgbYtPHEt1JCYsrXX1"],"enrUri":"enr:-L24QGLOgyDSCTHQBIVyONKaiTRsn8dzD1HxcLC3DMHJwUtkRvyJW5biiQcvQoIP3Qnwh7JGLKrFErsUhaXA14NfCIsCgmlkgnY0gmlwhKwSxQuKbXVsdGlhZGRyc5YACASsEsULBpPnAAoErBLFCwaT6N0DgnJzhQADAQAAiXNlY3AyNTZrMaECvt6SECYiyCCu8tR-WclnEDpOn6de8QYmIxHtYxsN12yDdGNwgpPng3VkcIKT6YV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:37862/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.110.201/tcp/17189/p2p/16Uiu2HAmQuv4mk4EtWxPyCMbDfdpnRFhzCepU751HzUAAzB6hnL8"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17188/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:37862/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "42707647-294e-4470-b448-3ee694686506", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"42707647-294e-4470-b448-3ee694686506","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:37862/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": "/test/1/waku-filter/proto", "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:37862/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id c16dbe844a7f
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id e5640c7f28fa
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container c16dbe844a7f. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.