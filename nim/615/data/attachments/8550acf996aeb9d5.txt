[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_invalid_pubsub_topic_format with id: 2025-01-13_04-02-39__8e391df5-262b-43a3-a494-f3f7b57c9ad6
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-13_04-02-39__8e391df5-262b-43a3-a494-f3f7b57c9ad6__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.72.230
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['46886', '46887', '46888', '46889', '46890']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 46886:46886 -p 46887:46887 -p 46888:46888 -p 46889:46889 -p 46890:46890 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=46888 --rest-port=46886 --tcp-port=46887 --discv5-udp-port=46889 --rest-address=0.0.0.0 --nat=extip:172.18.72.230 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=30bedeecadfcf5b32ec3daebf67d47bf0eba4c6bbf972cee0df6e8b9a0a4ab87 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=46890 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.72.230 waku 3636490e9c4fb2c455e43521fd37848d5f4e136d0f1d2a150b2664907dc64f28
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 3636490e9c4f. Setting up logs at ./log/docker/node1_2025-01-13_04-02-39__8e391df5-262b-43a3-a494-f3f7b57c9ad6__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 46886
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 86390eda174a. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:46886/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:46886/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.72.230/tcp/46887/p2p/16Uiu2HAm781x3YshgjQ9LcHHpHwVyauDKF2FaV4PdUC9o29i38Zq","/ip4/172.18.72.230/tcp/46888/ws/p2p/16Uiu2HAm781x3YshgjQ9LcHHpHwVyauDKF2FaV4PdUC9o29i38Zq"],"enrUri":"enr:-L24QC_tOz7SM5YyhIc1AtWrfNrglv1gkTBtSQoWN12PKz68S9AByzqfErZWh-q5i44-5QoX078S2qd7xGRPYVNi3TYCgmlkgnY0gmlwhKwSSOaKbXVsdGlhZGRyc5YACASsEkjmBrcnAAoErBJI5ga3KN0DgnJzhQADAQAAiXNlY3AyNTZrMaECrcZeWDTesx8pNF-BZKN34rTzyUdbxQBNbB_ZATI4d4yDdGNwgrcng3VkcIK3KYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-13_04-02-39__8e391df5-262b-43a3-a494-f3f7b57c9ad6__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.227.116
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['40546', '40547', '40548', '40549', '40550']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 40546:40546 -p 40547:40547 -p 40548:40548 -p 40549:40549 -p 40550:40550 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=40548 --rest-port=40546 --tcp-port=40547 --discv5-udp-port=40549 --rest-address=0.0.0.0 --nat=extip:172.18.227.116 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=0a5960efcb0dfebed5cbbbdeeaadf78bbba9879bfaaccfed7d64e9761ac1b5a5 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=40550 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QC_tOz7SM5YyhIc1AtWrfNrglv1gkTBtSQoWN12PKz68S9AByzqfErZWh-q5i44-5QoX078S2qd7xGRPYVNi3TYCgmlkgnY0gmlwhKwSSOaKbXVsdGlhZGRyc5YACASsEkjmBrcnAAoErBJI5ga3KN0DgnJzhQADAQAAiXNlY3AyNTZrMaECrcZeWDTesx8pNF-BZKN34rTzyUdbxQBNbB_ZATI4d4yDdGNwgrcng3VkcIK3KYV3YWt1MgU --filternode=/ip4/172.18.72.230/tcp/46887/p2p/16Uiu2HAm781x3YshgjQ9LcHHpHwVyauDKF2FaV4PdUC9o29i38Zq
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.227.116 waku 307e77022574dff08f736888c70907c53f19f63effe153c6c258997851a280d2
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 307e77022574. Setting up logs at ./log/docker/node2_2025-01-13_04-02-39__8e391df5-262b-43a3-a494-f3f7b57c9ad6__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 40546
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:40546/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:40546/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.227.116/tcp/40547/p2p/16Uiu2HAmCbnX6STh3yfDNAwbqEnb7CuNuLod3rXRN4CxQdXn6vM2","/ip4/172.18.227.116/tcp/40548/ws/p2p/16Uiu2HAmCbnX6STh3yfDNAwbqEnb7CuNuLod3rXRN4CxQdXn6vM2"],"enrUri":"enr:-L24QP_dlETMPt6rI0PN7TmepyOCBx92UQCsUqv8Gs9DpnU_F-MaZdlFwP7Q-_tzry4zQFJesq51AMyy6bklDAb3HikCgmlkgnY0gmlwhKwS43SKbXVsdGlhZGRyc5YACASsEuN0Bp5jAAoErBLjdAaeZN0DgnJzhQADAQAAiXNlY3AyNTZrMaEC_y3hWXbltUrhV3BLJxwtKDvvZKFFGb3ehVrvBks5j9WDdGNwgp5jg3VkcIKeZYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:40546/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.72.230/tcp/46887/p2p/16Uiu2HAm781x3YshgjQ9LcHHpHwVyauDKF2FaV4PdUC9o29i38Zq"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:46886/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:40546/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "f0f49c0d-e1d6-49a0-82e3-efa1f526c2d7", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"f0f49c0d-e1d6-49a0-82e3-efa1f526c2d7","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:40546/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": ["/waku/2/rs/3/1"]}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:40546/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 3636490e9c4f
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 307e77022574
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 3636490e9c4f. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.