[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_no_request_id with id: 2024-11-05_04-08-07__4b177eee-0743-4f31-a003-f2aa0566e920
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-05_04-08-07__4b177eee-0743-4f31-a003-f2aa0566e920__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.67.245
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['21261', '21262', '21263', '21264', '21265']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 21261:21261 -p 21262:21262 -p 21263:21263 -p 21264:21264 -p 21265:21265 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=21263 --rest-port=21261 --tcp-port=21262 --discv5-udp-port=21264 --rest-address=0.0.0.0 --nat=extip:172.18.67.245 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ab62e6bfaf32e4bb0c439dc2f7389cf3bdc7ad9fef8bf7aa06bbdc9cdde4c2cc --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=21265 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.67.245 waku 19a827e1752c3741265769e303e93411ebc2459c02d64d7dd53fd795c1fd0a11
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 19a827e1752c. Setting up logs at ./log/docker/node1_2024-11-05_04-08-07__4b177eee-0743-4f31-a003-f2aa0566e920__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 21261
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 27cfd20a414d. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:21261/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:21261/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.67.245/tcp/21262/p2p/16Uiu2HAm3nLfT1SqgczLwroyPMEDeU34E4QMjPxn2oAa6wvqAuWG","/ip4/172.18.67.245/tcp/21263/ws/p2p/16Uiu2HAm3nLfT1SqgczLwroyPMEDeU34E4QMjPxn2oAa6wvqAuWG"],"enrUri":"enr:-L24QAWE7Ughqr1MltwRrDtCSN1z9GAtBDeCmR1Ta3c9VLICGMDH31jn3ifpgrLGYyl8LwCyPrdlw_8X0EqFV9vBCFUCgmlkgnY0gmlwhKwSQ_WKbXVsdGlhZGRyc5YACASsEkP1BlMOAAoErBJD9QZTD90DgnJzhQADAQAAiXNlY3AyNTZrMaECfCjZ9jLw_WyvvsWJCS9IUIUtBZ3ytLImGcK0Gjwoy3mDdGNwglMOg3VkcIJTEIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-05_04-08-07__4b177eee-0743-4f31-a003-f2aa0566e920__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.113.72
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['28449', '28450', '28451', '28452', '28453']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 28449:28449 -p 28450:28450 -p 28451:28451 -p 28452:28452 -p 28453:28453 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=28451 --rest-port=28449 --tcp-port=28450 --discv5-udp-port=28452 --rest-address=0.0.0.0 --nat=extip:172.18.113.72 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=c27d7dce17f388ec2aae6ffe1ecf5acad5a2b42c3eb0ad34a96cbab28effbda7 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=28453 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QAWE7Ughqr1MltwRrDtCSN1z9GAtBDeCmR1Ta3c9VLICGMDH31jn3ifpgrLGYyl8LwCyPrdlw_8X0EqFV9vBCFUCgmlkgnY0gmlwhKwSQ_WKbXVsdGlhZGRyc5YACASsEkP1BlMOAAoErBJD9QZTD90DgnJzhQADAQAAiXNlY3AyNTZrMaECfCjZ9jLw_WyvvsWJCS9IUIUtBZ3ytLImGcK0Gjwoy3mDdGNwglMOg3VkcIJTEIV3YWt1MgU --filternode=/ip4/172.18.67.245/tcp/21262/p2p/16Uiu2HAm3nLfT1SqgczLwroyPMEDeU34E4QMjPxn2oAa6wvqAuWG
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.113.72 waku ea9f8d983b8d5789efe6ddf1036b47f5fee237375343f4ecd00fd55a238dc709
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID ea9f8d983b8d. Setting up logs at ./log/docker/node2_2024-11-05_04-08-07__4b177eee-0743-4f31-a003-f2aa0566e920__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 28449
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:28449/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:28449/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.113.72/tcp/28450/p2p/16Uiu2HAm3xKnwtafcCfSx3UGK6qYbFdWYejVK5mEkEoYXPAFid5y","/ip4/172.18.113.72/tcp/28451/ws/p2p/16Uiu2HAm3xKnwtafcCfSx3UGK6qYbFdWYejVK5mEkEoYXPAFid5y"],"enrUri":"enr:-L24QLe8l3cuya9JVe_sazPHE1j5O0S29c5VC9Ge8D8a0nwdU8bulKPCwBQFRY-OxNHWfdAI-kH_Fpx0bUvjTuM1S-YCgmlkgnY0gmlwhKwScUiKbXVsdGlhZGRyc5YACASsEnFIBm8iAAoErBJxSAZvI90DgnJzhQADAQAAiXNlY3AyNTZrMaECfresyvbA86oAvCsDZUqPMPZgX2mRh6iePYMpc4xRT5iDdGNwgm8ig3VkcIJvJIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:28449/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.67.245/tcp/21262/p2p/16Uiu2HAm3nLfT1SqgczLwroyPMEDeU34E4QMjPxn2oAa6wvqAuWG"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:21261/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:28449/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "9638525e-8b48-402d-8d4d-241f7e37ac61", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"9638525e-8b48-402d-8d4d-241f7e37ac61","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:28449/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:28449/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 19a827e1752c
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id ea9f8d983b8d
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 19a827e1752c. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.