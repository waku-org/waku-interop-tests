[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2024-11-05_04-08-13__ff035973-4303-4089-b10c-a0b08edcbb5c
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-05_04-08-13__ff035973-4303-4089-b10c-a0b08edcbb5c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.165.64
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['18035', '18036', '18037', '18038', '18039']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 18035:18035 -p 18036:18036 -p 18037:18037 -p 18038:18038 -p 18039:18039 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=18037 --rest-port=18035 --tcp-port=18036 --discv5-udp-port=18038 --rest-address=0.0.0.0 --nat=extip:172.18.165.64 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b15edffa57abdbf447eddbcfb970ddd1c5c1bd97e1c96c587c5e5da40cbdba00 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=18039 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.165.64 waku cffad04dd8d9d8c0de1930146d79386fc68a304192fcdac5b8bd58acdd21a6ba
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID cffad04dd8d9. Setting up logs at ./log/docker/node1_2024-11-05_04-08-13__ff035973-4303-4089-b10c-a0b08edcbb5c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 18035
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 44f9f849bc8c. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:18035/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:18035/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.165.64/tcp/18036/p2p/16Uiu2HAmHCFmT7aUGk2SjsTJeKf2T9VoLemRGw2hgDfAAkxAg6GB","/ip4/172.18.165.64/tcp/18037/ws/p2p/16Uiu2HAmHCFmT7aUGk2SjsTJeKf2T9VoLemRGw2hgDfAAkxAg6GB"],"enrUri":"enr:-L24QPIV0sfmmcvVzLemSE99o2N35YijhUYlsDOZjMNZNoyYCm9nvNxgrqrPBNn3zvQVBgxeLzpUcywG_kFMueOIs1QCgmlkgnY0gmlwhKwSpUCKbXVsdGlhZGRyc5YACASsEqVABkZ0AAoErBKlQAZGdd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDQ3EvMjqI2-URT359U1j_AErMds98ghfdiwtix6tVFGyDdGNwgkZ0g3VkcIJGdoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-05_04-08-13__ff035973-4303-4089-b10c-a0b08edcbb5c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.39.164
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['25902', '25903', '25904', '25905', '25906']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 25902:25902 -p 25903:25903 -p 25904:25904 -p 25905:25905 -p 25906:25906 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=25904 --rest-port=25902 --tcp-port=25903 --discv5-udp-port=25905 --rest-address=0.0.0.0 --nat=extip:172.18.39.164 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ccbdcaed0d878f8c6dfb59fba8bbbfff49e1e9be3ad024cdb8d26b5bca4b178f --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=25906 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QPIV0sfmmcvVzLemSE99o2N35YijhUYlsDOZjMNZNoyYCm9nvNxgrqrPBNn3zvQVBgxeLzpUcywG_kFMueOIs1QCgmlkgnY0gmlwhKwSpUCKbXVsdGlhZGRyc5YACASsEqVABkZ0AAoErBKlQAZGdd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDQ3EvMjqI2-URT359U1j_AErMds98ghfdiwtix6tVFGyDdGNwgkZ0g3VkcIJGdoV3YWt1MgU --filternode=/ip4/172.18.165.64/tcp/18036/p2p/16Uiu2HAmHCFmT7aUGk2SjsTJeKf2T9VoLemRGw2hgDfAAkxAg6GB
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.39.164 waku 1f094cda380fecabe9d0b31ba0f188c44339639c61a8f8c22da1a13e79c4a7f1
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 1f094cda380f. Setting up logs at ./log/docker/node2_2024-11-05_04-08-13__ff035973-4303-4089-b10c-a0b08edcbb5c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 25902
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:25902/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:25902/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.39.164/tcp/25903/p2p/16Uiu2HAkxfC5UPWYx28gvYfQHFbugCrUD1mYiwW57ioJKxqjwMQo","/ip4/172.18.39.164/tcp/25904/ws/p2p/16Uiu2HAkxfC5UPWYx28gvYfQHFbugCrUD1mYiwW57ioJKxqjwMQo"],"enrUri":"enr:-L24QBDdXdarZI2ZtE9F0UQDPMcpc4V9YVXGE3dYCz88UFydSTHjzfeDE3OogaUYCt8GUe3pGh35n3cxFG-DKVYrEMkCgmlkgnY0gmlwhKwSJ6SKbXVsdGlhZGRyc5YACASsEiekBmUvAAoErBInpAZlMN0DgnJzhQADAQAAiXNlY3AyNTZrMaECMAmko_Eh_wvaS0LslS2bBoVZoKCSu4UcMQPvnMuDqQSDdGNwgmUvg3VkcIJlMYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:25902/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.165.64/tcp/18036/p2p/16Uiu2HAmHCFmT7aUGk2SjsTJeKf2T9VoLemRGw2hgDfAAkxAg6GB"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:18035/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:25902/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "5aad09da-3661-4f9d-bb0f-e823c29474fb", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"5aad09da-3661-4f9d-bb0f-e823c29474fb","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:25902/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:25902/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id cffad04dd8d9
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 1f094cda380f
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container cffad04dd8d9. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.