[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_invalid_request_id with id: 2024-11-05_04-07-35__61589d20-66e5-4809-8ad4-fd5551cf275e
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-05_04-07-35__61589d20-66e5-4809-8ad4-fd5551cf275e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.237.97
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['8685', '8686', '8687', '8688', '8689']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 8685:8685 -p 8686:8686 -p 8687:8687 -p 8688:8688 -p 8689:8689 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=8687 --rest-port=8685 --tcp-port=8686 --discv5-udp-port=8688 --rest-address=0.0.0.0 --nat=extip:172.18.237.97 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e3dceb3a4dcd4adadf882ebb79df05d1a76811ec9ae44aedab19de5dcf8d8e3d --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=8689 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.237.97 waku 8b623439fc4f85a373af31b9af520938d3601a8ec64a43390a0cd9a2b718de6a
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 8b623439fc4f. Setting up logs at ./log/docker/node1_2024-11-05_04-07-35__61589d20-66e5-4809-8ad4-fd5551cf275e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 8685
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 94c4fe364b5c. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8685/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8685/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.237.97/tcp/8686/p2p/16Uiu2HAkziLfZQEBWVGU4GdaSaRBC72uAkfDWVjVxGNF9fuWukWX","/ip4/172.18.237.97/tcp/8687/ws/p2p/16Uiu2HAkziLfZQEBWVGU4GdaSaRBC72uAkfDWVjVxGNF9fuWukWX"],"enrUri":"enr:-L24QOgctzjX-a2jd0btt4sm38O975kzJYA9XVyHLgt1xIVPd-PX4wY7t3cdhuR-SlBgg7tv2VsqbCjiHnC8u0NO1LkCgmlkgnY0gmlwhKwS7WGKbXVsdGlhZGRyc5YACASsEu1hBiHuAAoErBLtYQYh790DgnJzhQADAQAAiXNlY3AyNTZrMaECTo94NDApEVGhsklEOrT7Kc1-omnndGB3PqeK9vkTEKyDdGNwgiHug3VkcIIh8IV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-05_04-07-35__61589d20-66e5-4809-8ad4-fd5551cf275e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.238.92
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['27581', '27582', '27583', '27584', '27585']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 27581:27581 -p 27582:27582 -p 27583:27583 -p 27584:27584 -p 27585:27585 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=27583 --rest-port=27581 --tcp-port=27582 --discv5-udp-port=27584 --rest-address=0.0.0.0 --nat=extip:172.18.238.92 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=3cdd7ecfb3cea11d69adc27b3e328beb55c6ab5aeb073d9af086f56a22731d2c --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=27585 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QOgctzjX-a2jd0btt4sm38O975kzJYA9XVyHLgt1xIVPd-PX4wY7t3cdhuR-SlBgg7tv2VsqbCjiHnC8u0NO1LkCgmlkgnY0gmlwhKwS7WGKbXVsdGlhZGRyc5YACASsEu1hBiHuAAoErBLtYQYh790DgnJzhQADAQAAiXNlY3AyNTZrMaECTo94NDApEVGhsklEOrT7Kc1-omnndGB3PqeK9vkTEKyDdGNwgiHug3VkcIIh8IV3YWt1MgU --filternode=/ip4/172.18.237.97/tcp/8686/p2p/16Uiu2HAkziLfZQEBWVGU4GdaSaRBC72uAkfDWVjVxGNF9fuWukWX
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.238.92 waku 8c9f712c6fde94d9179119609f0e3e1d9ec5f73940a662d863178e3f83060bad
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 8c9f712c6fde. Setting up logs at ./log/docker/node2_2024-11-05_04-07-35__61589d20-66e5-4809-8ad4-fd5551cf275e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 27581
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:27581/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:27581/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.238.92/tcp/27582/p2p/16Uiu2HAmLoMSWmQRLfVvbpxWTR2q1sTBBUf6RzLAyceGhC613M9A","/ip4/172.18.238.92/tcp/27583/ws/p2p/16Uiu2HAmLoMSWmQRLfVvbpxWTR2q1sTBBUf6RzLAyceGhC613M9A"],"enrUri":"enr:-L24QBE5I-JQFsLkUSdex8p_044CAiqtd7Wei_Jx0FbvmLB2Hx_9tRBQkoyD7shF7iZnaCgM8s14wD2V6PE8NeMDQasCgmlkgnY0gmlwhKwS7lyKbXVsdGlhZGRyc5YACASsEu5cBmu-AAoErBLuXAZrv90DgnJzhQADAQAAiXNlY3AyNTZrMaEDeQH9Dorrc0ty502wTIkjBs5Oc67lQR3CRrNxm1ImPtmDdGNwgmu-g3VkcIJrwIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:27581/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.237.97/tcp/8686/p2p/16Uiu2HAkziLfZQEBWVGU4GdaSaRBC72uAkfDWVjVxGNF9fuWukWX"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8685/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:27581/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "c69b91f8-057e-4698-bc2a-2337ad86ffdd", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"c69b91f8-057e-4698-bc2a-2337ad86ffdd","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:27581/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:27581/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 8b623439fc4f
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 8c9f712c6fde
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 8b623439fc4f. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.