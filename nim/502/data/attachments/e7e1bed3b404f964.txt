[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_invalid_request_id with id: 2024-12-05_04-12-51__478c6e82-99e7-47c7-9c1d-902b9ead0dfd
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-05_04-12-51__478c6e82-99e7-47c7-9c1d-902b9ead0dfd__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.148.155
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['27147', '27148', '27149', '27150', '27151']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 27147:27147 -p 27148:27148 -p 27149:27149 -p 27150:27150 -p 27151:27151 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=27149 --rest-port=27147 --tcp-port=27148 --discv5-udp-port=27150 --rest-address=0.0.0.0 --nat=extip:172.18.148.155 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=fc741d05ef59798fad73b364f5d7e8620deeb3cda5dacef882ea71e7eb7a19a6 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=27151 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.148.155 waku feab635e103f7332db0b9a67d510a537950c020043b9454c0823f980fcaea5b0
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID feab635e103f. Setting up logs at ./log/docker/node1_2024-12-05_04-12-51__478c6e82-99e7-47c7-9c1d-902b9ead0dfd__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 27147
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 750b78cc60cf. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:27147/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:27147/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.148.155/tcp/27148/p2p/16Uiu2HAmHcgqyy751sNHvWdiJN74g6tVF64PGy5rMtn5vzEwD4Mr","/ip4/172.18.148.155/tcp/27149/ws/p2p/16Uiu2HAmHcgqyy751sNHvWdiJN74g6tVF64PGy5rMtn5vzEwD4Mr"],"enrUri":"enr:-L24QEqBqpYyhnJrWIzedDVoSWI_G6Z334MpgLiEL2WIhyCbbaQmW5rZPQ8OhcOB7jKHeCaPTY6KC8uOEic9yp-yrmkCgmlkgnY0gmlwhKwSlJuKbXVsdGlhZGRyc5YACASsEpSbBmoMAAoErBKUmwZqDd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDSbN6ztCJXvN6ttHp3W8XtrmQnJH3Q8Oz8ikFoY0Ew0WDdGNwgmoMg3VkcIJqDoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-05_04-12-51__478c6e82-99e7-47c7-9c1d-902b9ead0dfd__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.60.143
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['23008', '23009', '23010', '23011', '23012']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 23008:23008 -p 23009:23009 -p 23010:23010 -p 23011:23011 -p 23012:23012 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=23010 --rest-port=23008 --tcp-port=23009 --discv5-udp-port=23011 --rest-address=0.0.0.0 --nat=extip:172.18.60.143 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=1d0ffe89e5980aedd2accd63911a9be3fe4e052ebbfbd22b2bb6470ca5dce66b --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=23012 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QEqBqpYyhnJrWIzedDVoSWI_G6Z334MpgLiEL2WIhyCbbaQmW5rZPQ8OhcOB7jKHeCaPTY6KC8uOEic9yp-yrmkCgmlkgnY0gmlwhKwSlJuKbXVsdGlhZGRyc5YACASsEpSbBmoMAAoErBKUmwZqDd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDSbN6ztCJXvN6ttHp3W8XtrmQnJH3Q8Oz8ikFoY0Ew0WDdGNwgmoMg3VkcIJqDoV3YWt1MgU --filternode=/ip4/172.18.148.155/tcp/27148/p2p/16Uiu2HAmHcgqyy751sNHvWdiJN74g6tVF64PGy5rMtn5vzEwD4Mr
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.60.143 waku d268f1d7d24aac40c620a86f09a340011ccfd6360a9d9c49fd72b366a282457a
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID d268f1d7d24a. Setting up logs at ./log/docker/node2_2024-12-05_04-12-51__478c6e82-99e7-47c7-9c1d-902b9ead0dfd__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 23008
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:23008/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:23008/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.60.143/tcp/23009/p2p/16Uiu2HAm4hR7pVzo3QtMJJgqYQWAbQ1oUujeCzXHwpdPjUqhWJeh","/ip4/172.18.60.143/tcp/23010/ws/p2p/16Uiu2HAm4hR7pVzo3QtMJJgqYQWAbQ1oUujeCzXHwpdPjUqhWJeh"],"enrUri":"enr:-L24QByaz5sUT1JZvG7UqI_mCaCabszu9whQniFqLe1O-RaCDfQA5a_NyDrVVtuAxJz1rCBmCBHW23Q9nue-HhFGFlkCgmlkgnY0gmlwhKwSPI-KbXVsdGlhZGRyc5YACASsEjyPBlnhAAoErBI8jwZZ4t0DgnJzhQADAQAAiXNlY3AyNTZrMaECicGr07nODwtoUo7_Nhm37K5PdBdIHs2Zi9HpHppNYraDdGNwglnhg3VkcIJZ44V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:23008/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.148.155/tcp/27148/p2p/16Uiu2HAmHcgqyy751sNHvWdiJN74g6tVF64PGy5rMtn5vzEwD4Mr"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:27147/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:23008/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "48a481f4-dde5-47f1-b293-aa5093073184", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"48a481f4-dde5-47f1-b293-aa5093073184","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:23008/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:23008/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id feab635e103f
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id d268f1d7d24a
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container feab635e103f. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.