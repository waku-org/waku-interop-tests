[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_pubsub_topic_list_instead_of_string with id: 2024-12-05_04-11-56__c043ee82-7287-4651-9e43-f45af890a228
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-05_04-11-56__c043ee82-7287-4651-9e43-f45af890a228__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.64.145
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['6598', '6599', '6600', '6601', '6602']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 6598:6598 -p 6599:6599 -p 6600:6600 -p 6601:6601 -p 6602:6602 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=6600 --rest-port=6598 --tcp-port=6599 --discv5-udp-port=6601 --rest-address=0.0.0.0 --nat=extip:172.18.64.145 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e06d0b7c0fb7ce5a7fe4ff61d4819cbeb44208fe3f2eaf91ccc296cae6b1797f --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=6602 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.64.145 waku 905cabc6fe53e328b73382e34113113729c9a0fc45e1b8ac39df1279a61ecef9
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 905cabc6fe53. Setting up logs at ./log/docker/node1_2024-12-05_04-11-56__c043ee82-7287-4651-9e43-f45af890a228__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 6598
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 63797cac4a6a. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:6598/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:6598/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.64.145/tcp/6599/p2p/16Uiu2HAmJFLiwT7EfQr4LrpuXoBheJjPYYXWRLi5tQiFee9PiGsn","/ip4/172.18.64.145/tcp/6600/ws/p2p/16Uiu2HAmJFLiwT7EfQr4LrpuXoBheJjPYYXWRLi5tQiFee9PiGsn"],"enrUri":"enr:-L24QIY-gPlg-ldYUkhn_bHpk8c4nMZqvSyWX7rOusWh6NAndI5Alw7tn4r6OtJ-jKynzg5-bvqfJ_4ZDFSAUPPlNU0CgmlkgnY0gmlwhKwSQJGKbXVsdGlhZGRyc5YACASsEkCRBhnHAAoErBJAkQYZyN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDUxc34KYWSDkNkyAEPXWO0S16nVXZC2MRCfZ9HOibRSWDdGNwghnHg3VkcIIZyYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-05_04-11-56__c043ee82-7287-4651-9e43-f45af890a228__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.72.210
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['63400', '63401', '63402', '63403', '63404']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 63400:63400 -p 63401:63401 -p 63402:63402 -p 63403:63403 -p 63404:63404 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=63402 --rest-port=63400 --tcp-port=63401 --discv5-udp-port=63403 --rest-address=0.0.0.0 --nat=extip:172.18.72.210 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=1a58b8efb603d3fd8a0aeb95bff61ddd6cdc4451e59eab393efb05e792b99d8d --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=63404 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QIY-gPlg-ldYUkhn_bHpk8c4nMZqvSyWX7rOusWh6NAndI5Alw7tn4r6OtJ-jKynzg5-bvqfJ_4ZDFSAUPPlNU0CgmlkgnY0gmlwhKwSQJGKbXVsdGlhZGRyc5YACASsEkCRBhnHAAoErBJAkQYZyN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDUxc34KYWSDkNkyAEPXWO0S16nVXZC2MRCfZ9HOibRSWDdGNwghnHg3VkcIIZyYV3YWt1MgU --filternode=/ip4/172.18.64.145/tcp/6599/p2p/16Uiu2HAmJFLiwT7EfQr4LrpuXoBheJjPYYXWRLi5tQiFee9PiGsn
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.72.210 waku aa6ac1deec55b97f259d830b02be30cc847ac46370394762204be8ecfc2ba86f
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID aa6ac1deec55. Setting up logs at ./log/docker/node2_2024-12-05_04-11-56__c043ee82-7287-4651-9e43-f45af890a228__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 63400
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:63400/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:63400/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.72.210/tcp/63401/p2p/16Uiu2HAmSZA3cj1fr1SvqwtrsgzEfMVYGJdinR58r3KvWUsmD3Sp","/ip4/172.18.72.210/tcp/63402/ws/p2p/16Uiu2HAmSZA3cj1fr1SvqwtrsgzEfMVYGJdinR58r3KvWUsmD3Sp"],"enrUri":"enr:-L24QHLhPysdRXQd3c4py1lFR8MzkPpAVeZrxsem3Telv45tR2pqR-Qe7rYMdigangQL-pdL3eXRes9gSPLdi7-HzpYCgmlkgnY0gmlwhKwSSNKKbXVsdGlhZGRyc5YACASsEkjSBvepAAoErBJI0gb3qt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDzoUYOK905h5W22v72_klTe5m07nsf3hAHRna2jCItEGDdGNwgvepg3VkcIL3q4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:63400/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.64.145/tcp/6599/p2p/16Uiu2HAmJFLiwT7EfQr4LrpuXoBheJjPYYXWRLi5tQiFee9PiGsn"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:6598/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:63400/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "c2a196fd-2ce3-4687-8d73-72637e19e9bf", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"c2a196fd-2ce3-4687-8d73-72637e19e9bf","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:63400/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": ["/waku/2/rs/3/1"]}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:63400/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 905cabc6fe53
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id aa6ac1deec55
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 905cabc6fe53. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.