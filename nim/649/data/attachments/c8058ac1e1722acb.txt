[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_invalid_request_id with id: 2025-02-12_04-04-13__46cf799c-5b38-484a-bd5b-7e81ae6fe13d
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-02-12_04-04-13__46cf799c-5b38-484a-bd5b-7e81ae6fe13d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.64.204
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['52172', '52173', '52174', '52175', '52176']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 52172:52172 -p 52173:52173 -p 52174:52174 -p 52175:52175 -p 52176:52176 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=52174 --rest-port=52172 --tcp-port=52173 --discv5-udp-port=52175 --rest-address=0.0.0.0 --nat=extip:172.18.64.204 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=aaa5d0cfe2c9eda44dccd7fc45a49dfc7f371f0b7a74c460de3c9cbecd6d6c66 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=52176 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.64.204 waku 83b0cc244d02529da04a9c4c512fffe04008e08eae7638fde702d8abd38634d9
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 83b0cc244d02. Setting up logs at ./log/docker/node1_2025-02-12_04-04-13__46cf799c-5b38-484a-bd5b-7e81ae6fe13d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 52172
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container b612777d8e8d. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:52172/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:52172/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.64.204/tcp/52173/p2p/16Uiu2HAmHCuwdDNA9jPJejU7uJkHtnjJs2tf1hcjdj99QXxFMkZg","/ip4/172.18.64.204/tcp/52174/ws/p2p/16Uiu2HAmHCuwdDNA9jPJejU7uJkHtnjJs2tf1hcjdj99QXxFMkZg"],"enrUri":"enr:-L24QIdH6hLuqMRpTe6wWBgxnrdO8--qidsYw2AFYjzF1QkJK7ScYjnTIFr_UjG1B1qaoBhLIFllk3u5CDTLJ0ryW0QCgmlkgnY0gmlwhKwSQMyKbXVsdGlhZGRyc5YACASsEkDMBsvNAAoErBJAzAbLzt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDQ5xZdPOFeeDRVmR8qJtmyUawj8k5_-S-n2MB27rmcNODdGNwgsvNg3VkcILLz4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-02-12_04-04-13__46cf799c-5b38-484a-bd5b-7e81ae6fe13d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.91.169
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['20680', '20681', '20682', '20683', '20684']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 20680:20680 -p 20681:20681 -p 20682:20682 -p 20683:20683 -p 20684:20684 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=20682 --rest-port=20680 --tcp-port=20681 --discv5-udp-port=20683 --rest-address=0.0.0.0 --nat=extip:172.18.91.169 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=fea0cb4c912edc23ef7b7cf78dedfd46ca0fa38686b82a3e0fd5f07a6fcdcc1e --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=20684 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QIdH6hLuqMRpTe6wWBgxnrdO8--qidsYw2AFYjzF1QkJK7ScYjnTIFr_UjG1B1qaoBhLIFllk3u5CDTLJ0ryW0QCgmlkgnY0gmlwhKwSQMyKbXVsdGlhZGRyc5YACASsEkDMBsvNAAoErBJAzAbLzt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDQ5xZdPOFeeDRVmR8qJtmyUawj8k5_-S-n2MB27rmcNODdGNwgsvNg3VkcILLz4V3YWt1MgU --filternode=/ip4/172.18.64.204/tcp/52173/p2p/16Uiu2HAmHCuwdDNA9jPJejU7uJkHtnjJs2tf1hcjdj99QXxFMkZg
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.91.169 waku e8046f49066eeee3e2d7d88b0e809cf612d9b00420cdd43b25e090e52db39106
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID e8046f49066e. Setting up logs at ./log/docker/node2_2025-02-12_04-04-13__46cf799c-5b38-484a-bd5b-7e81ae6fe13d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 20680
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:20680/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:20680/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.91.169/tcp/20681/p2p/16Uiu2HAkzHoZCQAcd8KCRs3fwn9Lk6vLu8rjQtmn1mWED1pa35nC","/ip4/172.18.91.169/tcp/20682/ws/p2p/16Uiu2HAkzHoZCQAcd8KCRs3fwn9Lk6vLu8rjQtmn1mWED1pa35nC"],"enrUri":"enr:-L24QJtddeue3x14IEm3IURDUD2xlmkN5v9rPEf8wlFnE3hWKsi6vVTxqhUQbnw6_5Lu76e8fe7rtNy62a7WkeiGCCgCgmlkgnY0gmlwhKwSW6mKbXVsdGlhZGRyc5YACASsElupBlDJAAoErBJbqQZQyt0DgnJzhQADAQAAiXNlY3AyNTZrMaECSEZasqg0c3lwc_66QWmi7GBTUCMzdOV8JbYp2TclF42DdGNwglDJg3VkcIJQy4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:20680/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.64.204/tcp/52173/p2p/16Uiu2HAmHCuwdDNA9jPJejU7uJkHtnjJs2tf1hcjdj99QXxFMkZg"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:52172/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:20680/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "4fc6ea00-e5e7-4138-a970-cd69c14e43e9", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"4fc6ea00-e5e7-4138-a970-cd69c14e43e9","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:20680/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:20680/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 83b0cc244d02
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id e8046f49066e
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.