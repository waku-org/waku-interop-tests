[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2024-12-15_04-11-05__c57b3119-5e40-4ab0-ba32-fbb5d31dae28
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-15_04-11-05__c57b3119-5e40-4ab0-ba32-fbb5d31dae28__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.217.180
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['38177', '38178', '38179', '38180', '38181']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 38177:38177 -p 38178:38178 -p 38179:38179 -p 38180:38180 -p 38181:38181 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=38179 --rest-port=38177 --tcp-port=38178 --discv5-udp-port=38180 --rest-address=0.0.0.0 --nat=extip:172.18.217.180 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=dcb8bbe0ff9c6e9c8bdbee1c7c6a539cb1b94c0f308fcc4cca86a8ccb2e7a992 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=38181 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.217.180 waku d5c5b79e560aada65163cee406f652c59b4f110aa1e02823bf2b166682dda2b7
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID d5c5b79e560a. Setting up logs at ./log/docker/node1_2024-12-15_04-11-05__c57b3119-5e40-4ab0-ba32-fbb5d31dae28__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 38177
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container c69a069fa649. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38177/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38177/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.217.180/tcp/38178/p2p/16Uiu2HAmPquPSg4vkGosF3FBWuYeon8VVYx9FXC91JtUSNMhWXrt","/ip4/172.18.217.180/tcp/38179/ws/p2p/16Uiu2HAmPquPSg4vkGosF3FBWuYeon8VVYx9FXC91JtUSNMhWXrt"],"enrUri":"enr:-L24QL3JM0_SyXBT7oPc1rMMAHtbSKYPFVelnjWKJcxcm5GXZ35NDIEUdFKIbIz1MzRgaPnsmV8-QyqneBZOr8gak0MCgmlkgnY0gmlwhKwS2bSKbXVsdGlhZGRyc5YACASsEtm0BpUiAAoErBLZtAaVI90DgnJzhQADAQAAiXNlY3AyNTZrMaEDpjxVY-cYaGELn_9od5Zj9MEQPvHGl6tMqPbUPIAw_c2DdGNwgpUig3VkcIKVJIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-15_04-11-05__c57b3119-5e40-4ab0-ba32-fbb5d31dae28__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.60.225
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['7609', '7610', '7611', '7612', '7613']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 7609:7609 -p 7610:7610 -p 7611:7611 -p 7612:7612 -p 7613:7613 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=7611 --rest-port=7609 --tcp-port=7610 --discv5-udp-port=7612 --rest-address=0.0.0.0 --nat=extip:172.18.60.225 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=9ddec9beaa3ff7cd3c8c9596d79dcaaca28f2e7ddffbf7efca6bdd897bffdfc1 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=7613 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QL3JM0_SyXBT7oPc1rMMAHtbSKYPFVelnjWKJcxcm5GXZ35NDIEUdFKIbIz1MzRgaPnsmV8-QyqneBZOr8gak0MCgmlkgnY0gmlwhKwS2bSKbXVsdGlhZGRyc5YACASsEtm0BpUiAAoErBLZtAaVI90DgnJzhQADAQAAiXNlY3AyNTZrMaEDpjxVY-cYaGELn_9od5Zj9MEQPvHGl6tMqPbUPIAw_c2DdGNwgpUig3VkcIKVJIV3YWt1MgU --filternode=/ip4/172.18.217.180/tcp/38178/p2p/16Uiu2HAmPquPSg4vkGosF3FBWuYeon8VVYx9FXC91JtUSNMhWXrt
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.60.225 waku be55f767213b2be5fa1b9c9b21ccc5b917dfc6bb3facaa5ca5e73f547f0cbb54
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID be55f767213b. Setting up logs at ./log/docker/node2_2024-12-15_04-11-05__c57b3119-5e40-4ab0-ba32-fbb5d31dae28__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 7609
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7609/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7609/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.60.225/tcp/7610/p2p/16Uiu2HAmMtHdcCF9Yqrf62TRjVJF1Jvg8iY8nxawo9x81BbydxnN","/ip4/172.18.60.225/tcp/7611/ws/p2p/16Uiu2HAmMtHdcCF9Yqrf62TRjVJF1Jvg8iY8nxawo9x81BbydxnN"],"enrUri":"enr:-L24QLsoNX4AIEnl3l6UAvuta1NS2An9YZB9iORymdBXLmU_e8hHjkOPuadbYynU184nuqk-KUowF-I4195HVMCJEu8CgmlkgnY0gmlwhKwSPOGKbXVsdGlhZGRyc5YACASsEjzhBh26AAoErBI84QYdu90DgnJzhQADAQAAiXNlY3AyNTZrMaEDiSFF3qlZ_KAHuwUhVVwqd_X_-vsCalkVqtE1-6v5sOODdGNwgh26g3VkcIIdvIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:7609/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.217.180/tcp/38178/p2p/16Uiu2HAmPquPSg4vkGosF3FBWuYeon8VVYx9FXC91JtUSNMhWXrt"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38177/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:7609/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "3a651173-3fdb-4d0c-9682-0c9bf468384d", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"3a651173-3fdb-4d0c-9682-0c9bf468384d","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:7609/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:7609/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id d5c5b79e560a
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id be55f767213b
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container d5c5b79e560a. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.