[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_invalid_request_id with id: 2024-12-15_04-11-10__1ce5cacf-a5e6-48aa-9066-d3b557ab85ec
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-15_04-11-10__1ce5cacf-a5e6-48aa-9066-d3b557ab85ec__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.77.82
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['55876', '55877', '55878', '55879', '55880']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 55876:55876 -p 55877:55877 -p 55878:55878 -p 55879:55879 -p 55880:55880 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=55878 --rest-port=55876 --tcp-port=55877 --discv5-udp-port=55879 --rest-address=0.0.0.0 --nat=extip:172.18.77.82 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=eed7e8bdddc2895ef17f81ebecadf3a689f5debb8a909d15cf7ecafb9ef0e2e1 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=55880 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.77.82 waku 329de531e0af830fbea93ef95af941f48cd432a1b8146415feaedf7a0796dfc2
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 329de531e0af. Setting up logs at ./log/docker/node1_2024-12-15_04-11-10__1ce5cacf-a5e6-48aa-9066-d3b557ab85ec__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 55876
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 289e638a8bc1. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:55876/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:55876/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.77.82/tcp/55877/p2p/16Uiu2HAmNFDy8xCAT4jhyg8Yktm4HsX6GapDJTRRkDXxWWQtHJSj","/ip4/172.18.77.82/tcp/55878/ws/p2p/16Uiu2HAmNFDy8xCAT4jhyg8Yktm4HsX6GapDJTRRkDXxWWQtHJSj"],"enrUri":"enr:-L24QJ8_wHoORq9sb66Qv3ax5TcxuMCLH0xE5FJ6qr-8KFARbg6I8C2wI7OhM1BuX82pVbUmKIjm8p0czc9uxoA8LGMCgmlkgnY0gmlwhKwSTVKKbXVsdGlhZGRyc5YACASsEk1SBtpFAAoErBJNUgbaRt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDjn5T7bj9r4e1PmJfOgXaoEfoCHCklFOjeOw-xVyMRAiDdGNwgtpFg3VkcILaR4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-15_04-11-10__1ce5cacf-a5e6-48aa-9066-d3b557ab85ec__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.254.33
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['13332', '13333', '13334', '13335', '13336']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 13332:13332 -p 13333:13333 -p 13334:13334 -p 13335:13335 -p 13336:13336 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=13334 --rest-port=13332 --tcp-port=13333 --discv5-udp-port=13335 --rest-address=0.0.0.0 --nat=extip:172.18.254.33 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e466acd87b68882afe82e8b9a5ba3e1e0a0b7b77acadebf6fdced0a2e9abffff --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=13336 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QJ8_wHoORq9sb66Qv3ax5TcxuMCLH0xE5FJ6qr-8KFARbg6I8C2wI7OhM1BuX82pVbUmKIjm8p0czc9uxoA8LGMCgmlkgnY0gmlwhKwSTVKKbXVsdGlhZGRyc5YACASsEk1SBtpFAAoErBJNUgbaRt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDjn5T7bj9r4e1PmJfOgXaoEfoCHCklFOjeOw-xVyMRAiDdGNwgtpFg3VkcILaR4V3YWt1MgU --filternode=/ip4/172.18.77.82/tcp/55877/p2p/16Uiu2HAmNFDy8xCAT4jhyg8Yktm4HsX6GapDJTRRkDXxWWQtHJSj
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.254.33 waku 818902fb3e31248a5df73e62f26db969accc191c4dd89055b45bbbfb40246ae7
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 818902fb3e31. Setting up logs at ./log/docker/node2_2024-12-15_04-11-10__1ce5cacf-a5e6-48aa-9066-d3b557ab85ec__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 13332
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:13332/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:13332/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.254.33/tcp/13333/p2p/16Uiu2HAkwhHy8bvoLzdFEwTBCJxJqaZtXCSGzzwy77sYbpBCJWws","/ip4/172.18.254.33/tcp/13334/ws/p2p/16Uiu2HAkwhHy8bvoLzdFEwTBCJxJqaZtXCSGzzwy77sYbpBCJWws"],"enrUri":"enr:-L24QOGUuVrkJdje7cdrKbGGuGFiadLZCZmfIa1Zl-LgTrpTeMI8rIcZUTq52C0TWvkJx01LwfUDSgJaVsI9ixh5XgsCgmlkgnY0gmlwhKwS_iGKbXVsdGlhZGRyc5YACASsEv4hBjQVAAoErBL-IQY0Ft0DgnJzhQADAQAAiXNlY3AyNTZrMaECIbfHRoxeQNSQ7rgqLERz4__VBwqk33q4pMB8-C7Mc9qDdGNwgjQVg3VkcII0F4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:13332/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.77.82/tcp/55877/p2p/16Uiu2HAmNFDy8xCAT4jhyg8Yktm4HsX6GapDJTRRkDXxWWQtHJSj"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:55876/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:13332/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "b10e8566-7017-4616-b5ab-4f38b9b047f4", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"b10e8566-7017-4616-b5ab-4f38b9b047f4","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:13332/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:13332/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 329de531e0af
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 818902fb3e31
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 329de531e0af. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.