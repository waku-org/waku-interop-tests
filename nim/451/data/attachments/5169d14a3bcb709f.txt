[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_invalid_request_id with id: 2024-11-16_04-12-33__a09228d4-1cd8-4e67-b890-27ecb04669e2
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-16_04-12-33__a09228d4-1cd8-4e67-b890-27ecb04669e2__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.198.52
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['33671', '33672', '33673', '33674', '33675']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 33671:33671 -p 33672:33672 -p 33673:33673 -p 33674:33674 -p 33675:33675 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=33673 --rest-port=33671 --tcp-port=33672 --discv5-udp-port=33674 --rest-address=0.0.0.0 --nat=extip:172.18.198.52 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=dfeb37bf7124112c310fc34fddfe9a4938ef058272dd28ef70c9e8b42adceccd --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=33675 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.198.52 waku e15f40a19b7240e9e60f7ce727c09cc49189e280b25258c9eb8ca021fedae4b6
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID e15f40a19b72. Setting up logs at ./log/docker/node1_2024-11-16_04-12-33__a09228d4-1cd8-4e67-b890-27ecb04669e2__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 33671
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container c40aa62c2d74. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33671/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33671/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.198.52/tcp/33672/p2p/16Uiu2HAmDqaUkKjaQJP2Ubc84hHTRmekSUveH1gEjxFXbW3s7m4U","/ip4/172.18.198.52/tcp/33673/ws/p2p/16Uiu2HAmDqaUkKjaQJP2Ubc84hHTRmekSUveH1gEjxFXbW3s7m4U"],"enrUri":"enr:-L24QD1uM5NnUHJjdtPhI2P8rEaNGSsqgQqYPkNPAjGRBopZAFGF3xjDWktdzON73-ZpYPhwacjD7IbU7ZlY8YX4eP0CgmlkgnY0gmlwhKwSxjSKbXVsdGlhZGRyc5YACASsEsY0BoOIAAoErBLGNAaDid0DgnJzhQADAQAAiXNlY3AyNTZrMaEDEZIVlq0EeBwIm7qpDM-3-IdTfGs5hG433C3mUtLh2ImDdGNwgoOIg3VkcIKDioV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-16_04-12-33__a09228d4-1cd8-4e67-b890-27ecb04669e2__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.103.173
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['65141', '65142', '65143', '65144', '65145']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 65141:65141 -p 65142:65142 -p 65143:65143 -p 65144:65144 -p 65145:65145 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=65143 --rest-port=65141 --tcp-port=65142 --discv5-udp-port=65144 --rest-address=0.0.0.0 --nat=extip:172.18.103.173 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=9be99fe81e5d084ec5f5e32cbfcc290b51acd75febcac54bbf76136d4fceed04 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=65145 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QD1uM5NnUHJjdtPhI2P8rEaNGSsqgQqYPkNPAjGRBopZAFGF3xjDWktdzON73-ZpYPhwacjD7IbU7ZlY8YX4eP0CgmlkgnY0gmlwhKwSxjSKbXVsdGlhZGRyc5YACASsEsY0BoOIAAoErBLGNAaDid0DgnJzhQADAQAAiXNlY3AyNTZrMaEDEZIVlq0EeBwIm7qpDM-3-IdTfGs5hG433C3mUtLh2ImDdGNwgoOIg3VkcIKDioV3YWt1MgU --filternode=/ip4/172.18.198.52/tcp/33672/p2p/16Uiu2HAmDqaUkKjaQJP2Ubc84hHTRmekSUveH1gEjxFXbW3s7m4U
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.103.173 waku f658ffca53f315effcf64515a59b8b86479ff435e1b16af6d2a9917a8ee7fcb4
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID f658ffca53f3. Setting up logs at ./log/docker/node2_2024-11-16_04-12-33__a09228d4-1cd8-4e67-b890-27ecb04669e2__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 65141
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:65141/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:65141/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.103.173/tcp/65142/p2p/16Uiu2HAm6FNUmBXMH8QcLCyK2yyNvwunm99eP7iZiHowhYh8zGtn","/ip4/172.18.103.173/tcp/65143/ws/p2p/16Uiu2HAm6FNUmBXMH8QcLCyK2yyNvwunm99eP7iZiHowhYh8zGtn"],"enrUri":"enr:-L24QKMWbz0ZOw072lq7CYdvuadohwFvDu5GUDHhjwe-saCfY3Y3xNDAman-fG7rQQmbgf66XyeXiV6Cs8mw7Hzimp4CgmlkgnY0gmlwhKwSZ62KbXVsdGlhZGRyc5YACASsEmetBv52AAoErBJnrQb-d90DgnJzhQADAQAAiXNlY3AyNTZrMaECoMz1zoeVxbrc5TrezMNeWu5hSxz9C2NuJ4nihZ7Wj--DdGNwgv52g3VkcIL-eIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:65141/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.198.52/tcp/33672/p2p/16Uiu2HAmDqaUkKjaQJP2Ubc84hHTRmekSUveH1gEjxFXbW3s7m4U"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:33671/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:65141/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "7183b876-e209-4452-9cd2-16cdff24a6dc", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"7183b876-e209-4452-9cd2-16cdff24a6dc","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:65141/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:65141/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id e15f40a19b72
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id f658ffca53f3
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container e15f40a19b72. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.