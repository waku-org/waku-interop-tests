[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_invalid_request_id with id: 2024-11-02_04-07-49__99fbb5ec-8968-4ed5-bf77-e332def03a5c
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-02_04-07-49__99fbb5ec-8968-4ed5-bf77-e332def03a5c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.117.169
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['30769', '30770', '30771', '30772', '30773']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 30769:30769 -p 30770:30770 -p 30771:30771 -p 30772:30772 -p 30773:30773 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=30771 --rest-port=30769 --tcp-port=30770 --discv5-udp-port=30772 --rest-address=0.0.0.0 --nat=extip:172.18.117.169 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=60cc4583c51202bbc4bdc747a9eb7f07fee915d26b9e98ebfa8f1fca87de88ae --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=30773 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.117.169 waku 7c85cecbccf849ae63776892156348b8bb7a2989c09508fd8034a789e4dff07a
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container e0d1e491087a. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 7c85cecbccf8. Setting up logs at ./log/docker/node1_2024-11-02_04-07-49__99fbb5ec-8968-4ed5-bf77-e332def03a5c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 30769
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30769/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30769/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.117.169/tcp/30770/p2p/16Uiu2HAkzbTHUu1eGA4v9NfkufF49QMFWqcDkzNCMiSfnLjj8Kab","/ip4/172.18.117.169/tcp/30771/ws/p2p/16Uiu2HAkzbTHUu1eGA4v9NfkufF49QMFWqcDkzNCMiSfnLjj8Kab"],"enrUri":"enr:-L24QKcfeQw7MJAxNw7CU13IyFgEbnOw4e7qtwI9u3YLizbBOv_sZjeIVy9YQlIANozaqCsmdAbnu5SIEGng8E8lWvICgmlkgnY0gmlwhKwSdamKbXVsdGlhZGRyc5YACASsEnWpBngyAAoErBJ1qQZ4M90DgnJzhQADAQAAiXNlY3AyNTZrMaECTMvjbp6qGypp-LzdwtTL0j-Sd8wTg-iZeUSGPvm5j1yDdGNwgngyg3VkcIJ4NIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-02_04-07-49__99fbb5ec-8968-4ed5-bf77-e332def03a5c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.222.80
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['33519', '33520', '33521', '33522', '33523']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 33519:33519 -p 33520:33520 -p 33521:33521 -p 33522:33522 -p 33523:33523 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=33521 --rest-port=33519 --tcp-port=33520 --discv5-udp-port=33522 --rest-address=0.0.0.0 --nat=extip:172.18.222.80 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=bbe95cfa5e5bafafc3adb3fd4f7dafe4bf485de340c86bafbedaf5fee0de4f21 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=33523 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QKcfeQw7MJAxNw7CU13IyFgEbnOw4e7qtwI9u3YLizbBOv_sZjeIVy9YQlIANozaqCsmdAbnu5SIEGng8E8lWvICgmlkgnY0gmlwhKwSdamKbXVsdGlhZGRyc5YACASsEnWpBngyAAoErBJ1qQZ4M90DgnJzhQADAQAAiXNlY3AyNTZrMaECTMvjbp6qGypp-LzdwtTL0j-Sd8wTg-iZeUSGPvm5j1yDdGNwgngyg3VkcIJ4NIV3YWt1MgU --filternode=/ip4/172.18.117.169/tcp/30770/p2p/16Uiu2HAkzbTHUu1eGA4v9NfkufF49QMFWqcDkzNCMiSfnLjj8Kab
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.222.80 waku abe129348cd759d4b61b85ce2d23fd09aded7f6bc9080c18bab98a616c8eef75
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID abe129348cd7. Setting up logs at ./log/docker/node2_2024-11-02_04-07-49__99fbb5ec-8968-4ed5-bf77-e332def03a5c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 33519
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33519/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33519/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.222.80/tcp/33520/p2p/16Uiu2HAm3grxPCTsd9FBp4WLWM8xuubhiut1W1NyCRLtpe3sV2Vz","/ip4/172.18.222.80/tcp/33521/ws/p2p/16Uiu2HAm3grxPCTsd9FBp4WLWM8xuubhiut1W1NyCRLtpe3sV2Vz"],"enrUri":"enr:-L24QPe04Ge9m5PnE0JuZtcHII1hk4EqdPW0zT8T-O9vLrKkNBB1NV35g61MM6de5_0I-8e37KHZ_6JP6O-k8q3vuGwCgmlkgnY0gmlwhKwS3lCKbXVsdGlhZGRyc5YACASsEt5QBoLwAAoErBLeUAaC8d0DgnJzhQADAQAAiXNlY3AyNTZrMaECesGeKBWhF3OSdzMh71oYB8IKxI3oTqlZjWQ_siRn1jWDdGNwgoLwg3VkcIKC8oV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:33519/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.117.169/tcp/30770/p2p/16Uiu2HAkzbTHUu1eGA4v9NfkufF49QMFWqcDkzNCMiSfnLjj8Kab"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:30769/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:33519/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "36cf6996-b1c7-4bd8-aeea-b380704bf249", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"36cf6996-b1c7-4bd8-aeea-b380704bf249","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:33519/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:33519/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 7c85cecbccf8
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id abe129348cd7
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 7c85cecbccf8. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.