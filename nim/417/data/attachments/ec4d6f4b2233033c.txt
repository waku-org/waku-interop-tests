[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_payload_less_than_150_kb with id: 2024-11-02_04-13-50__5f6da461-a90a-4a20-83e8-5982a777f196
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-02_04-13-50__5f6da461-a90a-4a20-83e8-5982a777f196__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.38.90
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['30558', '30559', '30560', '30561', '30562']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 30558:30558 -p 30559:30559 -p 30560:30560 -p 30561:30561 -p 30562:30562 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=30560 --rest-port=30558 --tcp-port=30559 --discv5-udp-port=30561 --rest-address=0.0.0.0 --nat=extip:172.18.38.90 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=8ebfa7d92dc0e85e7009c5ba1fc004ffba147d1e15de2ecc2cbeaa54b34f0d99 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=30562 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.38.90 waku 0bffc811b14ace2a2e7ce2872342f324ecdbff61c360daadd0dd92c086eada2b
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container dbe62741e93d. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 0bffc811b14a. Setting up logs at ./log/docker/node1_2024-11-02_04-13-50__5f6da461-a90a-4a20-83e8-5982a777f196__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 30558
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30558/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30558/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.38.90/tcp/30559/p2p/16Uiu2HAmL9PuRPsUTTczHCM5t4SELmosNjsf7KpR5u7jLhr1yRJm","/ip4/172.18.38.90/tcp/30560/ws/p2p/16Uiu2HAmL9PuRPsUTTczHCM5t4SELmosNjsf7KpR5u7jLhr1yRJm"],"enrUri":"enr:-L24QNat2ba35enoteUQqqaw7S_xemMZFjS88N-_NhaSh6RTCv6OyqCqjK2gUE44hOzTo-aLVl_x5720ITeM8HipliACgmlkgnY0gmlwhKwSJlqKbXVsdGlhZGRyc5YACASsEiZaBndfAAoErBImWgZ3YN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDb0i0JyKDloAgcVOAuFT4WJaYodWHjJL6X1vgOOMSc0aDdGNwgndfg3VkcIJ3YYV3YWt1MgE"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-02_04-13-50__5f6da461-a90a-4a20-83e8-5982a777f196__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.44.73
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['46789', '46790', '46791', '46792', '46793']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 46789:46789 -p 46790:46790 -p 46791:46791 -p 46792:46792 -p 46793:46793 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=46791 --rest-port=46789 --tcp-port=46790 --discv5-udp-port=46792 --rest-address=0.0.0.0 --nat=extip:172.18.44.73 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=63bcf0b9ddc0538a8b2960c1ae0537fa1a5efed972afb8132a00dd2e7faab5b0 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=46793 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-L24QNat2ba35enoteUQqqaw7S_xemMZFjS88N-_NhaSh6RTCv6OyqCqjK2gUE44hOzTo-aLVl_x5720ITeM8HipliACgmlkgnY0gmlwhKwSJlqKbXVsdGlhZGRyc5YACASsEiZaBndfAAoErBImWgZ3YN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDb0i0JyKDloAgcVOAuFT4WJaYodWHjJL6X1vgOOMSc0aDdGNwgndfg3VkcIJ3YYV3YWt1MgE
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.44.73 waku a2ced65cb73aad643a304ff479956402cf955d81e48ae3586509091920848465
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID a2ced65cb73a. Setting up logs at ./log/docker/node2_2024-11-02_04-13-50__5f6da461-a90a-4a20-83e8-5982a777f196__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 46789
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:46789/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:46789/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.44.73/tcp/46790/p2p/16Uiu2HAm3nPUEM3kmpCcyrVi55NDPKATP7XyEpAs6VCW6mopf5q5","/ip4/172.18.44.73/tcp/46791/ws/p2p/16Uiu2HAm3nPUEM3kmpCcyrVi55NDPKATP7XyEpAs6VCW6mopf5q5"],"enrUri":"enr:-L24QF_a8yxolURpWDWOV2xBU8AaUU5d3fAthmsBXY1HKqlKTV3hgHEWEdutQFCJ3BPm8xT0rjv9bcy4gQuyV-EFqeECgmlkgnY0gmlwhKwSLEmKbXVsdGlhZGRyc5YACASsEixJBrbGAAoErBIsSQa2x90DgnJzhQADAQAAiXNlY3AyNTZrMaECfCwGWt4TncjmMRFsSc7EHO3JA_C4i4eu20xORZsb5JSDdGNwgrbGg3VkcIK2yIV3YWt1MgE"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:46789/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.38.90/tcp/30559/p2p/16Uiu2HAmL9PuRPsUTTczHCM5t4SELmosNjsf7KpR5u7jLhr1yRJm"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:30558/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:46789/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:30558/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30558/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1730520833671218432,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:46789/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1730520833671218432,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[35mDEBUG   [0m tests.relay.test_publish:test_publish.py:49 Running test with payload length of 102400 bytes
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 2 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30558/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:46789/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 0bffc811b14a
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id a2ced65cb73a
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 0bffc811b14a. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.