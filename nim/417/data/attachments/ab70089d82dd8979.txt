[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2024-11-02_04-07-06__c0c53a75-8f03-4375-b8d7-59d09978748e
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-02_04-07-06__c0c53a75-8f03-4375-b8d7-59d09978748e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.199.223
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['16604', '16605', '16606', '16607', '16608']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 16604:16604 -p 16605:16605 -p 16606:16606 -p 16607:16607 -p 16608:16608 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=16606 --rest-port=16604 --tcp-port=16605 --discv5-udp-port=16607 --rest-address=0.0.0.0 --nat=extip:172.18.199.223 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=2ef0bdffc1eedcfcae72c17bcbbeddc2c8b240d3ba86a310bcb4ffab76e2b1b8 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=16608 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.199.223 waku cc7924de6e813fd894ad24b7d14cb34bd6af3ce581757aff3a52d1a02abff58a
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID cc7924de6e81. Setting up logs at ./log/docker/node1_2024-11-02_04-07-06__c0c53a75-8f03-4375-b8d7-59d09978748e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 16604
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 32bbca524bab. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:16604/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:16604/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.199.223/tcp/16605/p2p/16Uiu2HAmR4aKr9YPnSjHZbDDMf8oiz5AmBQ2L1FocEX25nFreyS9","/ip4/172.18.199.223/tcp/16606/ws/p2p/16Uiu2HAmR4aKr9YPnSjHZbDDMf8oiz5AmBQ2L1FocEX25nFreyS9"],"enrUri":"enr:-L24QFgT3eg19aI8HUy4AiKT_BU01_a4Cm66_8cQaBn8p6Z9TNXGU-jce9GSB99Y7kyiBYiAv45q1o_KacoosrjLpo4CgmlkgnY0gmlwhKwSx9-KbXVsdGlhZGRyc5YACASsEsffBkDdAAoErBLH3wZA3t0DgnJzhQADAQAAiXNlY3AyNTZrMaEDuFcEfZ-5KWV4Zuuqjgzic1nakdHF6N4hFlqZVWcrWGqDdGNwgkDdg3VkcIJA34V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-02_04-07-06__c0c53a75-8f03-4375-b8d7-59d09978748e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.208.21
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['61952', '61953', '61954', '61955', '61956']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 61952:61952 -p 61953:61953 -p 61954:61954 -p 61955:61955 -p 61956:61956 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=61954 --rest-port=61952 --tcp-port=61953 --discv5-udp-port=61955 --rest-address=0.0.0.0 --nat=extip:172.18.208.21 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=a1be6d2761e749dd8915baddec04b12f8a6ecc5415d5bcf9004e714f8f9d37c2 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=61956 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QFgT3eg19aI8HUy4AiKT_BU01_a4Cm66_8cQaBn8p6Z9TNXGU-jce9GSB99Y7kyiBYiAv45q1o_KacoosrjLpo4CgmlkgnY0gmlwhKwSx9-KbXVsdGlhZGRyc5YACASsEsffBkDdAAoErBLH3wZA3t0DgnJzhQADAQAAiXNlY3AyNTZrMaEDuFcEfZ-5KWV4Zuuqjgzic1nakdHF6N4hFlqZVWcrWGqDdGNwgkDdg3VkcIJA34V3YWt1MgU --filternode=/ip4/172.18.199.223/tcp/16605/p2p/16Uiu2HAmR4aKr9YPnSjHZbDDMf8oiz5AmBQ2L1FocEX25nFreyS9
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.208.21 waku d0a734fc38181eef1c72eb7a7f3af8547a8ca3bee157ab93f81ebc2267b0ba05
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID d0a734fc3818. Setting up logs at ./log/docker/node2_2024-11-02_04-07-06__c0c53a75-8f03-4375-b8d7-59d09978748e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 61952
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:61952/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:61952/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.208.21/tcp/61953/p2p/16Uiu2HAm6XLF6vPrz3hwK562amom9rMqQrTDmYYpxA16MpjcAT5s","/ip4/172.18.208.21/tcp/61954/ws/p2p/16Uiu2HAm6XLF6vPrz3hwK562amom9rMqQrTDmYYpxA16MpjcAT5s"],"enrUri":"enr:-L24QHGfxoJXE-k2mbLZkDUMQYpzC6ane-UcezrHo-eGRfAQNxH4hLpdVK9ZIMPxi-A-HnbleN85rgNhbNX993dJaR8CgmlkgnY0gmlwhKwS0BWKbXVsdGlhZGRyc5YACASsEtAVBvIBAAoErBLQFQbyAt0DgnJzhQADAQAAiXNlY3AyNTZrMaECpOO5tZNpYyfJHaax7885MOoLVeJ-c8-C45tZmqEygFqDdGNwgvIBg3VkcILyA4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:61952/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.199.223/tcp/16605/p2p/16Uiu2HAmR4aKr9YPnSjHZbDDMf8oiz5AmBQ2L1FocEX25nFreyS9"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:16604/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:61952/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "afea7794-b4dd-474c-8295-4c3ebe8b99ae", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"afea7794-b4dd-474c-8295-4c3ebe8b99ae","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:61952/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:61952/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id cc7924de6e81
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id d0a734fc3818
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container cc7924de6e81. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.