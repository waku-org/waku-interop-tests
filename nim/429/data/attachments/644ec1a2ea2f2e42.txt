[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2024-11-06_23-06-46__8fdcded8-e7f1-4c39-bf89-2437ba281043
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-06_23-06-46__8fdcded8-e7f1-4c39-bf89-2437ba281043__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.170.108
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['11064', '11065', '11066', '11067', '11068']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 11064:11064 -p 11065:11065 -p 11066:11066 -p 11067:11067 -p 11068:11068 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=11066 --rest-port=11064 --tcp-port=11065 --discv5-udp-port=11067 --rest-address=0.0.0.0 --nat=extip:172.18.170.108 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=bfc2593eec5cd87b77dc02ccbca98abdb03ff103df6d9aaff542f289c674bac3 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=11068 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.170.108 waku 453c7475c2e7b0ad9db9f1238297db5ea1c53512ce34515fbe48a72d24d1d954
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 453c7475c2e7. Setting up logs at ./log/docker/node1_2024-11-06_23-06-46__8fdcded8-e7f1-4c39-bf89-2437ba281043__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 11064
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 86e09152d015. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:11064/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:11064/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.170.108/tcp/11065/p2p/16Uiu2HAkwHsgHgXW5gxYpFiFqimVkhaM9WLw87QYk5Vw2wusY3R9","/ip4/172.18.170.108/tcp/11066/ws/p2p/16Uiu2HAkwHsgHgXW5gxYpFiFqimVkhaM9WLw87QYk5Vw2wusY3R9"],"enrUri":"enr:-L24QGab00okt2DAfiBATTvun0X5fb-1t2KBgDV9TBzHwms2a4jRWE-i6W9bVouyXthQ4dMYfsG7Bw_GrEwh9L2l6aUCgmlkgnY0gmlwhKwSqmyKbXVsdGlhZGRyc5YACASsEqpsBis5AAoErBKqbAYrOt0DgnJzhQADAQAAiXNlY3AyNTZrMaECG7f0XkdtdP4yHm1h_c4PbSxSMdfTKJL4PLgyYQgWvjiDdGNwgis5g3VkcIIrO4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-06_23-06-46__8fdcded8-e7f1-4c39-bf89-2437ba281043__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.185.146
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['25536', '25537', '25538', '25539', '25540']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 25536:25536 -p 25537:25537 -p 25538:25538 -p 25539:25539 -p 25540:25540 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=25538 --rest-port=25536 --tcp-port=25537 --discv5-udp-port=25539 --rest-address=0.0.0.0 --nat=extip:172.18.185.146 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e7f48fda1e3b4fde5ea5bf6acadf9dad11eee5baedb1891603cdddf0a311d1c3 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=25540 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QGab00okt2DAfiBATTvun0X5fb-1t2KBgDV9TBzHwms2a4jRWE-i6W9bVouyXthQ4dMYfsG7Bw_GrEwh9L2l6aUCgmlkgnY0gmlwhKwSqmyKbXVsdGlhZGRyc5YACASsEqpsBis5AAoErBKqbAYrOt0DgnJzhQADAQAAiXNlY3AyNTZrMaECG7f0XkdtdP4yHm1h_c4PbSxSMdfTKJL4PLgyYQgWvjiDdGNwgis5g3VkcIIrO4V3YWt1MgU --filternode=/ip4/172.18.170.108/tcp/11065/p2p/16Uiu2HAkwHsgHgXW5gxYpFiFqimVkhaM9WLw87QYk5Vw2wusY3R9
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.185.146 waku 004df3d0b93c3ca402ecbe6aa97506fab1f3c0d1de8c14c076a09e231bfabdda
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 004df3d0b93c. Setting up logs at ./log/docker/node2_2024-11-06_23-06-46__8fdcded8-e7f1-4c39-bf89-2437ba281043__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 25536
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:25536/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:25536/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.185.146/tcp/25537/p2p/16Uiu2HAmKkDAU1Zgnfq4bYyARHQPvvhV7v9oHwAZWzdYbSYN3UHg","/ip4/172.18.185.146/tcp/25538/ws/p2p/16Uiu2HAmKkDAU1Zgnfq4bYyARHQPvvhV7v9oHwAZWzdYbSYN3UHg"],"enrUri":"enr:-L24QKcr2C6Nt-iT-OYQHSjpUCTQW6vjuCap-28oQP3-Q9waHtei86amZ-jZbeizy1UxrrmWngIzwSw-3xYoYuZukoACgmlkgnY0gmlwhKwSuZKKbXVsdGlhZGRyc5YACASsErmSBmPBAAoErBK5kgZjwt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDaVgzX4QD94gbuni70I9PK87LqxMy1eCpLDnhVC5LP9ODdGNwgmPBg3VkcIJjw4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:25536/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.170.108/tcp/11065/p2p/16Uiu2HAkwHsgHgXW5gxYpFiFqimVkhaM9WLw87QYk5Vw2wusY3R9"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:11064/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:25536/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "a0c67a01-30b9-4205-a003-da838cc4c489", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"a0c67a01-30b9-4205-a003-da838cc4c489","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:25536/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:25536/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 453c7475c2e7
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 004df3d0b93c
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 453c7475c2e7. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.