[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_content_topic_string_instead_of_list with id: 2024-11-06_23-07-14__8ec83bab-11e7-450c-9097-999fb05452f5
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-06_23-07-14__8ec83bab-11e7-450c-9097-999fb05452f5__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.152.189
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['23244', '23245', '23246', '23247', '23248']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 23244:23244 -p 23245:23245 -p 23246:23246 -p 23247:23247 -p 23248:23248 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=23246 --rest-port=23244 --tcp-port=23245 --discv5-udp-port=23247 --rest-address=0.0.0.0 --nat=extip:172.18.152.189 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=d9d0ca067ee1beaa79fd5bd215ae71fabe59ab771ad71b7c2f0184bb238dddae --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=23248 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.152.189 waku 624c20da8c1212d61e6d1b840f9753035d68c23d3f1dad9b43d5bdcf0bcf958d
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 624c20da8c12. Setting up logs at ./log/docker/node1_2024-11-06_23-07-14__8ec83bab-11e7-450c-9097-999fb05452f5__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 23244
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 19d2e8640173. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:23244/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:23244/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.152.189/tcp/23245/p2p/16Uiu2HAm9tD7MPzeKmWh15aJTGX9jGQ4JXtbS6CQEzVeM2RCUq2Q","/ip4/172.18.152.189/tcp/23246/ws/p2p/16Uiu2HAm9tD7MPzeKmWh15aJTGX9jGQ4JXtbS6CQEzVeM2RCUq2Q"],"enrUri":"enr:-L24QM3YiAoarnInO227XPme-oY2WRnmJSZdMov0O7RmexjATNz2WJ5zZXhFohQepOb154g45rrJW-igNuzsUoSxBTUCgmlkgnY0gmlwhKwSmL2KbXVsdGlhZGRyc5YACASsEpi9BlrNAAoErBKYvQZazt0DgnJzhQADAQAAiXNlY3AyNTZrMaEC1s_qzCl_4l266qBWfV9M5Dbu4xnVrM8D9BVkkV_QATmDdGNwglrNg3VkcIJaz4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-06_23-07-14__8ec83bab-11e7-450c-9097-999fb05452f5__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.80.78
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['35418', '35419', '35420', '35421', '35422']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 35418:35418 -p 35419:35419 -p 35420:35420 -p 35421:35421 -p 35422:35422 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=35420 --rest-port=35418 --tcp-port=35419 --discv5-udp-port=35421 --rest-address=0.0.0.0 --nat=extip:172.18.80.78 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=bddbba195b95170c97bdbb67adecd626ecfefbefadadf3a5c85fb90ddef95621 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=35422 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QM3YiAoarnInO227XPme-oY2WRnmJSZdMov0O7RmexjATNz2WJ5zZXhFohQepOb154g45rrJW-igNuzsUoSxBTUCgmlkgnY0gmlwhKwSmL2KbXVsdGlhZGRyc5YACASsEpi9BlrNAAoErBKYvQZazt0DgnJzhQADAQAAiXNlY3AyNTZrMaEC1s_qzCl_4l266qBWfV9M5Dbu4xnVrM8D9BVkkV_QATmDdGNwglrNg3VkcIJaz4V3YWt1MgU --filternode=/ip4/172.18.152.189/tcp/23245/p2p/16Uiu2HAm9tD7MPzeKmWh15aJTGX9jGQ4JXtbS6CQEzVeM2RCUq2Q
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.80.78 waku 9d9e1963d0f5ef81d628a15a35614d8779b81db59bafb4ad1b674b578edafd87
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 9d9e1963d0f5. Setting up logs at ./log/docker/node2_2024-11-06_23-07-14__8ec83bab-11e7-450c-9097-999fb05452f5__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 35418
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:35418/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:35418/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.80.78/tcp/35419/p2p/16Uiu2HAkurQtJ4BwB1C5mYUtjSfyBfGgU4u6sEKztq7fYzBxVBvq","/ip4/172.18.80.78/tcp/35420/ws/p2p/16Uiu2HAkurQtJ4BwB1C5mYUtjSfyBfGgU4u6sEKztq7fYzBxVBvq"],"enrUri":"enr:-L24QMpeI66tSqNr8tawkMF5h7vazRhkttAZHl8-5aXqScWSJkfPJw8Mzf46yNxSNgP-GNjj7Nd9RVK5IPl9xK2MCg4CgmlkgnY0gmlwhKwSUE6KbXVsdGlhZGRyc5YACASsElBOBopbAAoErBJQTgaKXN0DgnJzhQADAQAAiXNlY3AyNTZrMaECBlZz1YxtiX9uCqgopFtdukLW6iQpI1gNpC0IIPrd5mqDdGNwgopbg3VkcIKKXYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:35418/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.152.189/tcp/23245/p2p/16Uiu2HAm9tD7MPzeKmWh15aJTGX9jGQ4JXtbS6CQEzVeM2RCUq2Q"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:23244/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:35418/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "34e292fa-697f-4a56-a96d-d42783aeb199", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"34e292fa-697f-4a56-a96d-d42783aeb199","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:35418/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": "/test/1/waku-filter/proto", "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:35418/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 624c20da8c12
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 9d9e1963d0f5
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 624c20da8c12. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.