[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_missing_payload with id: 2024-08-29_12-40-15__9cf6ec1e-dc63-48d7-a5da-c1bde91a86a1
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-08-29_12-40-15__9cf6ec1e-dc63-48d7-a5da-c1bde91a86a1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.207.82
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['45140', '45141', '45142', '45143', '45144']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 45140:45140 -p 45141:45141 -p 45142:45142 -p 45143:45143 -p 45144:45144 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=45142 --rest-port=45140 --tcp-port=45141 --discv5-udp-port=45143 --rest-address=0.0.0.0 --nat=extip:172.18.207.82 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=a51b9cfececfc06c347e7478decebd8b6d8cbdb089d97bdc3c4b25f5f74c9500 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=45144 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.207.82 waku e8212e200877ae0cba5134e8d6a79cfd0e49723ab0cddf75459453828ddc5972
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID e8212e200877. Setting up logs at ./log/docker/node1_2024-08-29_12-40-15__9cf6ec1e-dc63-48d7-a5da-c1bde91a86a1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 45140
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:45140/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:45140/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.207.82/tcp/45141/p2p/16Uiu2HAmBRT8aaXZkaAB5gnLT9jQZKDEQJZf9sbjm8UvDvxb5Knp","/ip4/172.18.207.82/tcp/45142/ws/p2p/16Uiu2HAmBRT8aaXZkaAB5gnLT9jQZKDEQJZf9sbjm8UvDvxb5Knp"],"enrUri":"enr:-LO4QFFKdsK11ngju60VPQbeaZePBZzuuzAtpJ41pvFSmiQNdhSyNVfWEmNACUOGZZhpUdyeEHO15az74HhKV2FTt7oBgmlkgnY0gmlwhKwSz1KKbXVsdGlhZGRyc4wACgSsEs9SBrBW3QOCcnOFAAMBAACJc2VjcDI1NmsxoQLtrHaEoy7HfOc3UpQaILHGobBepr917X8DwIgZc4k5SYN0Y3CCsFWDdWRwgrBXhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-08-29_12-40-15__9cf6ec1e-dc63-48d7-a5da-c1bde91a86a1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.49.12
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['5407', '5408', '5409', '5410', '5411']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 5407:5407 -p 5408:5408 -p 5409:5409 -p 5410:5410 -p 5411:5411 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=5409 --rest-port=5407 --tcp-port=5408 --discv5-udp-port=5410 --rest-address=0.0.0.0 --nat=extip:172.18.49.12 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b0cf99133cdd2e8fd9b6143db95ae7ecf31da2d45a56abee843cdecf5ef4c594 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=5411 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QFFKdsK11ngju60VPQbeaZePBZzuuzAtpJ41pvFSmiQNdhSyNVfWEmNACUOGZZhpUdyeEHO15az74HhKV2FTt7oBgmlkgnY0gmlwhKwSz1KKbXVsdGlhZGRyc4wACgSsEs9SBrBW3QOCcnOFAAMBAACJc2VjcDI1NmsxoQLtrHaEoy7HfOc3UpQaILHGobBepr917X8DwIgZc4k5SYN0Y3CCsFWDdWRwgrBXhXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.49.12 waku c8142417a5cc488af5fdfec98a591057294bf13f60e77e15300b92e7ad873be7
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID c8142417a5cc. Setting up logs at ./log/docker/node2_2024-08-29_12-40-15__9cf6ec1e-dc63-48d7-a5da-c1bde91a86a1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 5407
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:5407/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:5407/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.49.12/tcp/5408/p2p/16Uiu2HAmBGCpCiD8JuTDit72nfozzGexZMxUK5ho8Z4A3DPzAS45","/ip4/172.18.49.12/tcp/5409/ws/p2p/16Uiu2HAmBGCpCiD8JuTDit72nfozzGexZMxUK5ho8Z4A3DPzAS45"],"enrUri":"enr:-LO4QEv36OG-4038XS7b5F-LsRDb9gYOPMgQuqCoC1LnCeydcoRSneLUdyGrypZdXCN3EJY2x_40jA9DkVyI0S8TkPABgmlkgnY0gmlwhKwSMQyKbXVsdGlhZGRyc4wACgSsEjEMBhUh3QOCcnOFAAMBAACJc2VjcDI1NmsxoQLrTgwtnzWUAwT-SVDUjauAfXOm7AsQ_gNJnEMJGQzn7oN0Y3CCFSCDdWRwghUihXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:5407/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.207.82/tcp/45141/p2p/16Uiu2HAmBRT8aaXZkaAB5gnLT9jQZKDEQJZf9sbjm8UvDvxb5Knp"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:45140/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:5407/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:45140/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:45140/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1724935218433496576,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:5407/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1724935218433496576,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:45140/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:45140/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id e8212e200877
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id c8142417a5cc
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.