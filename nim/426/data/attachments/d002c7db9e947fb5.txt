[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_invalid_request_id with id: 2024-11-06_21-24-54__3b55fe46-0084-4bb2-a412-dbe6471f570d
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-06_21-24-54__3b55fe46-0084-4bb2-a412-dbe6471f570d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.123.249
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['9056', '9057', '9058', '9059', '9060']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:435 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:164 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:166 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 9056:9056 -p 9057:9057 -p 9058:9058 -p 9059:9059 -p 9060:9060 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=9058 --rest-port=9056 --tcp-port=9057 --discv5-udp-port=9059 --rest-address=0.0.0.0 --nat=extip:172.18.123.249 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=47530cbbda394ad65e67d9722bb7faf15f15fc5e41e80e83d68f2511e1ad3b38 --max-connections=1000 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=9060 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.123.249 waku 527ea45403a9b1ab1bdae8a5f3d08b14fcffd672569f67eb19b97f973f088850
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container ab5350138c96. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 527ea45403a9. Setting up logs at ./log/docker/node1_2024-11-06_21-24-54__3b55fe46-0084-4bb2-a412-dbe6471f570d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:178 Started container from image wakuorg/nwaku:latest. REST: 9056
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:9056/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:278 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:9056/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.123.249/tcp/9057/p2p/16Uiu2HAm87K9ghD2doKRUbaW4NdqAj3PYT7P82dWYjoqB7ZcxTUG","/ip4/172.18.123.249/tcp/9058/ws/p2p/16Uiu2HAm87K9ghD2doKRUbaW4NdqAj3PYT7P82dWYjoqB7ZcxTUG"],"enrUri":"enr:-L24QBDeyUUb5GQkbcqKum9qh0AHSm4aSvJ9zN-2Y2ppnp2BWZ-7sUQ7QcP02zzjarKyJ4UJ04tslOv2auihfThGmGsCgmlkgnY0gmlwhKwSe_mKbXVsdGlhZGRyc5YACASsEnv5BiNhAAoErBJ7-QYjYt0DgnJzhQADAQAAiXNlY3AyNTZrMaECvHPsbSW8WEDbK2v17RKbz2GKrsoqb6RJRJpXbcDi8h2DdGNwgiNhg3VkcIIjY4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:283 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-06_21-24-54__3b55fe46-0084-4bb2-a412-dbe6471f570d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.0.52
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['36650', '36651', '36652', '36653', '36654']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:435 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:164 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:166 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 36650:36650 -p 36651:36651 -p 36652:36652 -p 36653:36653 -p 36654:36654 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=36652 --rest-port=36650 --tcp-port=36651 --discv5-udp-port=36653 --rest-address=0.0.0.0 --nat=extip:172.18.0.52 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=a68fd2a1ea11ac2e7d0f611fb5bb9d6e55f0bb3f50298f521aef9cfdaedfdaa6 --max-connections=1000 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=36654 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QBDeyUUb5GQkbcqKum9qh0AHSm4aSvJ9zN-2Y2ppnp2BWZ-7sUQ7QcP02zzjarKyJ4UJ04tslOv2auihfThGmGsCgmlkgnY0gmlwhKwSe_mKbXVsdGlhZGRyc5YACASsEnv5BiNhAAoErBJ7-QYjYt0DgnJzhQADAQAAiXNlY3AyNTZrMaECvHPsbSW8WEDbK2v17RKbz2GKrsoqb6RJRJpXbcDi8h2DdGNwgiNhg3VkcIIjY4V3YWt1MgU --filternode=/ip4/172.18.123.249/tcp/9057/p2p/16Uiu2HAm87K9ghD2doKRUbaW4NdqAj3PYT7P82dWYjoqB7ZcxTUG
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.0.52 waku 4b8e4d0a8c58a0b6db16941cc2c6bf5d8289da5fffaeb5894a92a5659c1b0c92
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 4b8e4d0a8c58. Setting up logs at ./log/docker/node2_2024-11-06_21-24-54__3b55fe46-0084-4bb2-a412-dbe6471f570d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:178 Started container from image wakuorg/nwaku:latest. REST: 36650
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:36650/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:278 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:36650/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.0.52/tcp/36651/p2p/16Uiu2HAmAXYfqAn9hcoEydEJNDPeNvUGUJCMDwjSeBxSAn5Wisc3","/ip4/172.18.0.52/tcp/36652/ws/p2p/16Uiu2HAmAXYfqAn9hcoEydEJNDPeNvUGUJCMDwjSeBxSAn5Wisc3"],"enrUri":"enr:-L24QDPTzt50X07y_6XyFhZFyy2CHoJV9PKS5CxzLBk9hSeiQ75E9A0fKtrdGnryoUmQysHzBNsU-qbg8HNEwe5LMNUCgmlkgnY0gmlwhKwSADSKbXVsdGlhZGRyc5YACASsEgA0Bo8rAAoErBIANAaPLN0DgnJzhQADAQAAiXNlY3AyNTZrMaEC4GCGDiOcBRh2fub3MYbKwp-xAH5F6yt-vJWYWTYfQXCDdGNwgo8rg3VkcIKPLYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:283 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:36650/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.123.249/tcp/9057/p2p/16Uiu2HAm87K9ghD2doKRUbaW4NdqAj3PYT7P82dWYjoqB7ZcxTUG"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:9056/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:36650/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "9a70f725-12bc-4ab1-b525-1ead8107daf0", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"9a70f725-12bc-4ab1-b525-1ead8107daf0","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:36650/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:36650/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:222 Stopping container with id 527ea45403a9
[35mDEBUG   [0m src.node.waku_node:waku_node.py:229 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:222 Stopping container with id 4b8e4d0a8c58
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 527ea45403a9. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:229 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.