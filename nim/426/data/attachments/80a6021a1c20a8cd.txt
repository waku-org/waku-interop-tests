[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_no_content_topic with id: 2024-11-06_21-24-42__6c4f2539-57f0-4f6e-8e38-baace906f40f
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-06_21-24-42__6c4f2539-57f0-4f6e-8e38-baace906f40f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.66.246
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['13603', '13604', '13605', '13606', '13607']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:435 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:164 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:166 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 13603:13603 -p 13604:13604 -p 13605:13605 -p 13606:13606 -p 13607:13607 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=13605 --rest-port=13603 --tcp-port=13604 --discv5-udp-port=13606 --rest-address=0.0.0.0 --nat=extip:172.18.66.246 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=bfa89b4987ef0008fa589fff3b328371271359eaabba9efb6c2ff79e3a48dccd --max-connections=1000 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=13607 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.66.246 waku 2ae84cdd6c6aef114b66f44d457ecfad2ab6afd5f2d95c2d6b6df2d40bf7080c
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 2ae84cdd6c6a. Setting up logs at ./log/docker/node1_2024-11-06_21-24-42__6c4f2539-57f0-4f6e-8e38-baace906f40f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:178 Started container from image wakuorg/nwaku:latest. REST: 13603
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 1a2aff7145f5. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:13603/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:278 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:13603/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.66.246/tcp/13604/p2p/16Uiu2HAmTb3WhvXrptiifBYeRjxK62UuiiEmYMJdG6hYskUGkebE","/ip4/172.18.66.246/tcp/13605/ws/p2p/16Uiu2HAmTb3WhvXrptiifBYeRjxK62UuiiEmYMJdG6hYskUGkebE"],"enrUri":"enr:-L24QOpENHHswyo527_7z6EqyAVpGwRkEVWZ5k7N5aoaw0yJY3-GbD8NzZvoUNzP9l7IwMFX63tljBrLZtYqTuT8S1wCgmlkgnY0gmlwhKwSQvaKbXVsdGlhZGRyc5YACASsEkL2BjUkAAoErBJC9gY1Jd0DgnJzhQADAQAAiXNlY3AyNTZrMaED3dyObIi8v3oB6qARnxk3FgTJp_wyM98ceaGRNxBA8z2DdGNwgjUkg3VkcII1JoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:283 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-06_21-24-42__6c4f2539-57f0-4f6e-8e38-baace906f40f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.57.52
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['37805', '37806', '37807', '37808', '37809']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:435 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:164 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:166 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 37805:37805 -p 37806:37806 -p 37807:37807 -p 37808:37808 -p 37809:37809 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=37807 --rest-port=37805 --tcp-port=37806 --discv5-udp-port=37808 --rest-address=0.0.0.0 --nat=extip:172.18.57.52 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=4b478f4e3200752ecccc7de6ca7ac3ce701feebab89e2ba04ee18ab2e1fb2411 --max-connections=1000 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=37809 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QOpENHHswyo527_7z6EqyAVpGwRkEVWZ5k7N5aoaw0yJY3-GbD8NzZvoUNzP9l7IwMFX63tljBrLZtYqTuT8S1wCgmlkgnY0gmlwhKwSQvaKbXVsdGlhZGRyc5YACASsEkL2BjUkAAoErBJC9gY1Jd0DgnJzhQADAQAAiXNlY3AyNTZrMaED3dyObIi8v3oB6qARnxk3FgTJp_wyM98ceaGRNxBA8z2DdGNwgjUkg3VkcII1JoV3YWt1MgU --filternode=/ip4/172.18.66.246/tcp/13604/p2p/16Uiu2HAmTb3WhvXrptiifBYeRjxK62UuiiEmYMJdG6hYskUGkebE
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.57.52 waku 1a43caa578e60b559616366057657ff229d21472b0cc18519e9f69adb946b0e9
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 1a43caa578e6. Setting up logs at ./log/docker/node2_2024-11-06_21-24-42__6c4f2539-57f0-4f6e-8e38-baace906f40f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:178 Started container from image wakuorg/nwaku:latest. REST: 37805
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:37805/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:278 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:37805/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.57.52/tcp/37806/p2p/16Uiu2HAm2ADayfncqUf4c1scGzWSaJqLvp5BZ3fixjmjq3DHBLyK","/ip4/172.18.57.52/tcp/37807/ws/p2p/16Uiu2HAm2ADayfncqUf4c1scGzWSaJqLvp5BZ3fixjmjq3DHBLyK"],"enrUri":"enr:-L24QAgEs7w-TP_xPdPqUY35d9uJpv8XAG1V84pNMojZ73tKVf39xqfQXmgYDDgZX82UAZxVcs8t_LrYoLN6W1_te4ACgmlkgnY0gmlwhKwSOTSKbXVsdGlhZGRyc5YACASsEjk0BpOuAAoErBI5NAaTr90DgnJzhQADAQAAiXNlY3AyNTZrMaECZAxA1gnbLcHfL_66Om_iOi3ic74tVxM-ob8_-IQIFv6DdGNwgpOug3VkcIKTsIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:283 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:37805/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.66.246/tcp/13604/p2p/16Uiu2HAmTb3WhvXrptiifBYeRjxK62UuiiEmYMJdG6hYskUGkebE"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:13603/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:37805/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "a232990e-0225-4ecc-a3f6-b7f1d20052d2", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"a232990e-0225-4ecc-a3f6-b7f1d20052d2","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:37805/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:37805/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:222 Stopping container with id 2ae84cdd6c6a
[35mDEBUG   [0m src.node.waku_node:waku_node.py:229 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:222 Stopping container with id 1a43caa578e6
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 2ae84cdd6c6a. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:229 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.