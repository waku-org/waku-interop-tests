[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_no_request_id with id: 2024-11-06_21-26-39__a694f3c1-4edc-4d01-9090-ffbe23efed3b
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-06_21-26-39__a694f3c1-4edc-4d01-9090-ffbe23efed3b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.192.16
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['58651', '58652', '58653', '58654', '58655']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:435 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:164 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:166 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 58651:58651 -p 58652:58652 -p 58653:58653 -p 58654:58654 -p 58655:58655 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=58653 --rest-port=58651 --tcp-port=58652 --discv5-udp-port=58654 --rest-address=0.0.0.0 --nat=extip:172.18.192.16 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b0ecc4e40ae36086177cf5c96ddddb5096e3bfe5bdf5e516f2b6adb61af3f4cb --max-connections=1000 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=58655 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.192.16 waku 1b383d58621f36b971180e40d933a34e9f2637ce65349c74a5b9cc839236655c
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 1b383d58621f. Setting up logs at ./log/docker/node1_2024-11-06_21-26-39__a694f3c1-4edc-4d01-9090-ffbe23efed3b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:178 Started container from image wakuorg/nwaku:latest. REST: 58651
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 80a324642a61. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:58651/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:278 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:58651/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.192.16/tcp/58652/p2p/16Uiu2HAmKJVtE8QsGdhcnRLmpsPPD4Aso9pjL2hETDjUSLurVGzE","/ip4/172.18.192.16/tcp/58653/ws/p2p/16Uiu2HAmKJVtE8QsGdhcnRLmpsPPD4Aso9pjL2hETDjUSLurVGzE"],"enrUri":"enr:-L24QF4r03uT4PDFo31TVqA087-ah0YVxf6mjBuTdpBWaMJ9P0zAKQ1mJTRlQ1jTk5T-haA3ysN1m3hvhgDjZPeCzJECgmlkgnY0gmlwhKwSwBCKbXVsdGlhZGRyc5YACASsEsAQBuUcAAoErBLAEAblHd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDYsIBSNCmQSLT3YrQ8rDlxFQSeEv7YYoUAr0-Rrcc_0ODdGNwguUcg3VkcILlHoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:283 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-06_21-26-39__a694f3c1-4edc-4d01-9090-ffbe23efed3b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.124.167
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['21582', '21583', '21584', '21585', '21586']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:435 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:164 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:166 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 21582:21582 -p 21583:21583 -p 21584:21584 -p 21585:21585 -p 21586:21586 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=21584 --rest-port=21582 --tcp-port=21583 --discv5-udp-port=21585 --rest-address=0.0.0.0 --nat=extip:172.18.124.167 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=adeaac38271798c00e7761be1ec4ef4ded6cacaee3aacbabdad8bccbe3f55bdd --max-connections=1000 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=21586 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QF4r03uT4PDFo31TVqA087-ah0YVxf6mjBuTdpBWaMJ9P0zAKQ1mJTRlQ1jTk5T-haA3ysN1m3hvhgDjZPeCzJECgmlkgnY0gmlwhKwSwBCKbXVsdGlhZGRyc5YACASsEsAQBuUcAAoErBLAEAblHd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDYsIBSNCmQSLT3YrQ8rDlxFQSeEv7YYoUAr0-Rrcc_0ODdGNwguUcg3VkcILlHoV3YWt1MgU --filternode=/ip4/172.18.192.16/tcp/58652/p2p/16Uiu2HAmKJVtE8QsGdhcnRLmpsPPD4Aso9pjL2hETDjUSLurVGzE
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.124.167 waku c115b5a2795546debc87fc03088eb2e2a775f338520f7eec2b5336f74ce44bfb
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID c115b5a27955. Setting up logs at ./log/docker/node2_2024-11-06_21-26-39__a694f3c1-4edc-4d01-9090-ffbe23efed3b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:178 Started container from image wakuorg/nwaku:latest. REST: 21582
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:21582/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:278 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:21582/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.124.167/tcp/21583/p2p/16Uiu2HAmGQjzazHE1GjmX3cp6zufX97kVbXL7sakAQzDWroB2XPd","/ip4/172.18.124.167/tcp/21584/ws/p2p/16Uiu2HAmGQjzazHE1GjmX3cp6zufX97kVbXL7sakAQzDWroB2XPd"],"enrUri":"enr:-L24QOU2qbpyy6vO0vi_aeT-eJsKSEk7KEtLkVIO__fxzs4MTsmxUeXFqABHlPmMFLYabyQsj6gVUr7Kf6e6YNRjoUMCgmlkgnY0gmlwhKwSfKeKbXVsdGlhZGRyc5YACASsEnynBlRPAAoErBJ8pwZUUN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDN8hiB0zDUmJgkez17jzN7uE8z_NuIXGrtOf4Yf3WO6CDdGNwglRPg3VkcIJUUYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:283 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:21582/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.192.16/tcp/58652/p2p/16Uiu2HAmKJVtE8QsGdhcnRLmpsPPD4Aso9pjL2hETDjUSLurVGzE"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:58651/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:21582/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "43a3888a-7565-406e-8e8a-1cbc5b2a13c7", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"43a3888a-7565-406e-8e8a-1cbc5b2a13c7","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:21582/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:21582/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:222 Stopping container with id 1b383d58621f
[35mDEBUG   [0m src.node.waku_node:waku_node.py:229 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:222 Stopping container with id c115b5a27955
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 1b383d58621f. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:229 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.