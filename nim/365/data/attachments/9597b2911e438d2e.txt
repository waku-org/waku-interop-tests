[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_message_with_ephemeral_true with id: 2024-09-19_04-28-51__4274bac6-aedc-4915-b5ea-b0dee23fce56
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.store:store.py:31 Running fixture setup: store_setup
[35mDEBUG   [0m src.steps.store:store.py:39 Running fixture setup: node_setup
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/publishing_node1_2024-09-19_04-28-51__4274bac6-aedc-4915-b5ea-b0dee23fce56__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.118.191
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['7703', '7704', '7705', '7706', '7707']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 7703:7703 -p 7704:7704 -p 7705:7705 -p 7706:7706 -p 7707:7707 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=7705 --rest-port=7703 --tcp-port=7704 --discv5-udp-port=7706 --rest-address=0.0.0.0 --nat=extip:172.18.118.191 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=1ff6a86d653aea08cbf2436dbc5ce96515c3da2a6abde8dc40e7c15156fecd04 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=7707 --metrics-logging=true --store=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.118.191 waku 91c8c663f61cee6626f34b7f783ffd4b8d8ebee1347b35638131bf13341c2b24
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 91c8c663f61c. Setting up logs at ./log/docker/publishing_node1_2024-09-19_04-28-51__4274bac6-aedc-4915-b5ea-b0dee23fce56__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 7703
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7703/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7703/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.118.191/tcp/7704/p2p/16Uiu2HAmJ9w4jpB6VReVnzprCkJcPBu8ZGJpQHsaGbL7dnRi9DL4","/ip4/172.18.118.191/tcp/7705/ws/p2p/16Uiu2HAmJ9w4jpB6VReVnzprCkJcPBu8ZGJpQHsaGbL7dnRi9DL4"],"enrUri":"enr:-LO4QBQKp0MNZl2f4HCLmRMrySuh_r47rz_kF8AohSYeRmJ7OxNAqGSsxDJOsXDPcqnKemdKFzhrhrzPJXFZS1nje50BgmlkgnY0gmlwhKwSdr-KbXVsdGlhZGRyc4wACgSsEna_Bh4Z3QOCcnOFAAMBAACJc2VjcDI1NmsxoQNRtJA2JQog51Q6MkFo0y46fxXMLu40ENuXOOuFJeapEYN0Y3CCHhiDdWRwgh4ahXdha3UyAw"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/store_node1_2024-09-19_04-28-51__4274bac6-aedc-4915-b5ea-b0dee23fce56__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.86.93
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['39103', '39104', '39105', '39106', '39107']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 39103:39103 -p 39104:39104 -p 39105:39105 -p 39106:39106 -p 39107:39107 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=39105 --rest-port=39103 --tcp-port=39104 --discv5-udp-port=39106 --rest-address=0.0.0.0 --nat=extip:172.18.86.93 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=d61ad9aee6bd8ff75c06de095e966c06cacc3bcc984bcd8bffef6cca715ee5d3 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=39107 --metrics-logging=true --discv5-bootstrap-node=enr:-LO4QBQKp0MNZl2f4HCLmRMrySuh_r47rz_kF8AohSYeRmJ7OxNAqGSsxDJOsXDPcqnKemdKFzhrhrzPJXFZS1nje50BgmlkgnY0gmlwhKwSdr-KbXVsdGlhZGRyc4wACgSsEna_Bh4Z3QOCcnOFAAMBAACJc2VjcDI1NmsxoQNRtJA2JQog51Q6MkFo0y46fxXMLu40ENuXOOuFJeapEYN0Y3CCHhiDdWRwgh4ahXdha3UyAw --storenode=/ip4/172.18.118.191/tcp/7704/p2p/16Uiu2HAmJ9w4jpB6VReVnzprCkJcPBu8ZGJpQHsaGbL7dnRi9DL4 --store=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.86.93 waku 41f9101ed83ddf14915af1d9db88f9985561fbb538537c121c105263edceb9b6
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 41f9101ed83d. Setting up logs at ./log/docker/store_node1_2024-09-19_04-28-51__4274bac6-aedc-4915-b5ea-b0dee23fce56__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 39103
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:39103/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:39103/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.86.93/tcp/39104/p2p/16Uiu2HAkwnaeXKjcrefnVt9wcaKNjnvC3UwmiCDCAV4XDH6wesar","/ip4/172.18.86.93/tcp/39105/ws/p2p/16Uiu2HAkwnaeXKjcrefnVt9wcaKNjnvC3UwmiCDCAV4XDH6wesar"],"enrUri":"enr:-LO4QI5uRWpHsNbrOtpMvOOBlJfOAfiRInrtIWKogYQ351LfSilF_40gc8xd6gsKqYZ3V3YLBaDItFLs6krkjfDNc20BgmlkgnY0gmlwhKwSVl2KbXVsdGlhZGRyc4wACgSsElZdBpjB3QOCcnOFAAMBAACJc2VjcDI1NmsxoQIjEoqqSYCOdKRb16lQ_USrj2xBLDhbcR0D2inU4B7D-4N0Y3CCmMCDdWRwgpjChXdha3UyAw"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:39103/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.118.191/tcp/7704/p2p/16Uiu2HAmJ9w4jpB6VReVnzprCkJcPBu8ZGJpQHsaGbL7dnRi9DL4"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:7703/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/0"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:39103/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/0"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.store:store.py:132 Relaying message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:7703/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F0" -H "Content-Type: application/json" -d '{"payload": "U3RvcmUgd29ya3MhIQ==", "contentTopic": "/myapp/1/latest/proto", "timestamp": '$(date +%s%N)', "ephemeral": true}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.2 seconds
[35mDEBUG   [0m src.steps.store:store.py:218 Checking that peer wakuorg/nwaku:latest can find the stored messages
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7703/store/v3/messages?pubsubTopic=%2Fwaku%2F2%2Frs%2F3%2F0&pageSize=5&ascending=true&pubsubTopic=%2Fwaku%2F2%2Frs%2F3%2F0" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"","statusCode":200,"statusDesc":"OK","messages":[]}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 91c8c663f61c
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 41f9101ed83d
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.