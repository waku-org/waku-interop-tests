[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_payload_equal_or_more_150_kb with id: 2024-09-19_04-21-30__46453622-19a1-489c-92f8-10f33d14879c
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-09-19_04-21-30__46453622-19a1-489c-92f8-10f33d14879c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.110.159
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['3970', '3971', '3972', '3973', '3974']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 3970:3970 -p 3971:3971 -p 3972:3972 -p 3973:3973 -p 3974:3974 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=3972 --rest-port=3970 --tcp-port=3971 --discv5-udp-port=3973 --rest-address=0.0.0.0 --nat=extip:172.18.110.159 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=2cbbfbdcdbd733bee77bea3a1f5da1bcc8befeba2a9c48650673ddaf232edf9a --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=3974 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.110.159 waku 10a2dec5e15e52fc3a2d6316355d0fbef4c4b5036af4b941041672f208fe2ff5
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 10a2dec5e15e. Setting up logs at ./log/docker/node1_2024-09-19_04-21-30__46453622-19a1-489c-92f8-10f33d14879c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 3970
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:3970/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:3970/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.110.159/tcp/3971/p2p/16Uiu2HAmCDiPFn9W3xFgS5tLGVc4ogvAKEGgUESgyprj5Vbne2yY","/ip4/172.18.110.159/tcp/3972/ws/p2p/16Uiu2HAmCDiPFn9W3xFgS5tLGVc4ogvAKEGgUESgyprj5Vbne2yY"],"enrUri":"enr:-LO4QNPYElQC5mcPfGcltwcLwL6K2FV0r7bXhmakurFYsL0DJmkfawbZDsSbDyoWroN0T7oidiyq7FUMdLCimJ4jaZYBgmlkgnY0gmlwhKwSbp-KbXVsdGlhZGRyc4wACgSsEm6fBg-E3QOCcnOFAAMBAACJc2VjcDI1NmsxoQL5hm1FNi65G53LDeRt_MBVd8ifEYwa8Je91QQKCtgVy4N0Y3CCD4ODdWRwgg-FhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-09-19_04-21-30__46453622-19a1-489c-92f8-10f33d14879c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.50.151
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['35013', '35014', '35015', '35016', '35017']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 35013:35013 -p 35014:35014 -p 35015:35015 -p 35016:35016 -p 35017:35017 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=35015 --rest-port=35013 --tcp-port=35014 --discv5-udp-port=35016 --rest-address=0.0.0.0 --nat=extip:172.18.50.151 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=1d7aa3fa251ebf512fde080d909653bd35de16acbe641274bb3ab3e3c4da1dc0 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=35017 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QNPYElQC5mcPfGcltwcLwL6K2FV0r7bXhmakurFYsL0DJmkfawbZDsSbDyoWroN0T7oidiyq7FUMdLCimJ4jaZYBgmlkgnY0gmlwhKwSbp-KbXVsdGlhZGRyc4wACgSsEm6fBg-E3QOCcnOFAAMBAACJc2VjcDI1NmsxoQL5hm1FNi65G53LDeRt_MBVd8ifEYwa8Je91QQKCtgVy4N0Y3CCD4ODdWRwgg-FhXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.50.151 waku 527c88933d1e1fecb8f7374e470a6d6a081c21f621ba99e26e18436680223c88
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 527c88933d1e. Setting up logs at ./log/docker/node2_2024-09-19_04-21-30__46453622-19a1-489c-92f8-10f33d14879c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 35013
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:35013/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:35013/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.50.151/tcp/35014/p2p/16Uiu2HAm1zgVgunzyTy9cnpCGNyjztbXaSfSbLrPvfRnJStPKuSR","/ip4/172.18.50.151/tcp/35015/ws/p2p/16Uiu2HAm1zgVgunzyTy9cnpCGNyjztbXaSfSbLrPvfRnJStPKuSR"],"enrUri":"enr:-LO4QItttMZQvgX33nLwwXZNqc5I4LgtlKXj6cP091na-dJgW_su93qqOJlpUCA_QHzlmzVRoz3xWLOkwmPPm_IlqJwBgmlkgnY0gmlwhKwSMpeKbXVsdGlhZGRyc4wACgSsEjKXBojH3QOCcnOFAAMBAACJc2VjcDI1NmsxoQJhmt7-IdFjP2D1sFKxnBm-J6uxMi_njnMQgfKF5hsB4oN0Y3CCiMaDdWRwgojIhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:35013/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.110.159/tcp/3971/p2p/16Uiu2HAmCDiPFn9W3xFgS5tLGVc4ogvAKEGgUESgyprj5Vbne2yY"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:3970/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:35013/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:3970/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:3970/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1726719694264100864,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:35013/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1726719694264100864,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[35mDEBUG   [0m tests.relay.test_publish:test_publish.py:55 Running test with payload length of 204800 bytes
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:3970/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
[35mDEBUG   [0m tests.relay.test_publish:test_publish.py:55 Running test with payload length of 1048576 bytes
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:3970/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Failed to publish: Message size exceeded maximum of 153600 bytes'
[35mDEBUG   [0m tests.relay.test_publish:test_publish.py:55 Running test with payload length of 10485760 bytes
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:3970/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Failed to publish: Message size exceeded maximum of 153600 bytes'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 10a2dec5e15e
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 527c88933d1e
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.