[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_no_request_id with id: 2024-09-19_04-16-02__a58ac5ac-0084-4090-bd7d-0fd16ea694c1
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-09-19_04-16-02__a58ac5ac-0084-4090-bd7d-0fd16ea694c1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.65.91
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['39280', '39281', '39282', '39283', '39284']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 39280:39280 -p 39281:39281 -p 39282:39282 -p 39283:39283 -p 39284:39284 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=39282 --rest-port=39280 --tcp-port=39281 --discv5-udp-port=39283 --rest-address=0.0.0.0 --nat=extip:172.18.65.91 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=db8af3ec3e4fdd2cad8ae88d3f9668d62ef88feab6cfb3d3cba7c2d15cce14b3 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=39284 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.65.91 waku 0120e30c0fca1f020ac9fc85c117bede4502f2157e30a04aa047d3231f783290
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 0120e30c0fca. Setting up logs at ./log/docker/node1_2024-09-19_04-16-02__a58ac5ac-0084-4090-bd7d-0fd16ea694c1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 39280
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:39280/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:39280/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.65.91/tcp/39281/p2p/16Uiu2HAkvgvLXRmuoiCoLppeyZuyWMpVqgUDYfHrQHYVJq9TR3s9","/ip4/172.18.65.91/tcp/39282/ws/p2p/16Uiu2HAkvgvLXRmuoiCoLppeyZuyWMpVqgUDYfHrQHYVJq9TR3s9"],"enrUri":"enr:-LO4QN8D5OoTGwK4Hc7Z_JaI6yzqYekTELiGaS8LHbi9d5BnGS5xVomEg9ouqrQeaSZaKOuOS1t2NqJeLyBKsxiewLUBgmlkgnY0gmlwhKwSQVuKbXVsdGlhZGRyc4wACgSsEkFbBply3QOCcnOFAAMBAACJc2VjcDI1NmsxoQISw6IRea4UjUX9zl8tTrMVjuZdOwxJNe9t0qyIPHGihIN0Y3CCmXGDdWRwgplzhXdha3UyBQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-09-19_04-16-02__a58ac5ac-0084-4090-bd7d-0fd16ea694c1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.89.159
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['41624', '41625', '41626', '41627', '41628']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 41624:41624 -p 41625:41625 -p 41626:41626 -p 41627:41627 -p 41628:41628 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=41626 --rest-port=41624 --tcp-port=41625 --discv5-udp-port=41627 --rest-address=0.0.0.0 --nat=extip:172.18.89.159 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b1a3cd8cf5adae1ccff952e6cdfe8f428b0beae3fdf641e8e29d5fccdb8c2b87 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=41628 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-LO4QN8D5OoTGwK4Hc7Z_JaI6yzqYekTELiGaS8LHbi9d5BnGS5xVomEg9ouqrQeaSZaKOuOS1t2NqJeLyBKsxiewLUBgmlkgnY0gmlwhKwSQVuKbXVsdGlhZGRyc4wACgSsEkFbBply3QOCcnOFAAMBAACJc2VjcDI1NmsxoQISw6IRea4UjUX9zl8tTrMVjuZdOwxJNe9t0qyIPHGihIN0Y3CCmXGDdWRwgplzhXdha3UyBQ --filternode=/ip4/172.18.65.91/tcp/39281/p2p/16Uiu2HAkvgvLXRmuoiCoLppeyZuyWMpVqgUDYfHrQHYVJq9TR3s9
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.89.159 waku c84d81f8f675cd444bc561d940b0dc94af905b31a7bc0305c0b130d11f59268d
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID c84d81f8f675. Setting up logs at ./log/docker/node2_2024-09-19_04-16-02__a58ac5ac-0084-4090-bd7d-0fd16ea694c1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 41624
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41624/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41624/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.89.159/tcp/41625/p2p/16Uiu2HAkvMpHYqpdz9jeuL8bFZcd8MPmdTsEs3r2sJpshqBS1Pfz","/ip4/172.18.89.159/tcp/41626/ws/p2p/16Uiu2HAkvMpHYqpdz9jeuL8bFZcd8MPmdTsEs3r2sJpshqBS1Pfz"],"enrUri":"enr:-LO4QPZRMhI6HEEsxhvggrQUfvDoeEpJuiUdwNoI_Fc-svjiamyrfApYT1BfK-dG7OCk-IHj_2JGtPVMzJ8NIGrNoAEBgmlkgnY0gmlwhKwSWZ-KbXVsdGlhZGRyc4wACgSsElmfBqKa3QOCcnOFAAMBAACJc2VjcDI1NmsxoQIN3sFm3mrSigpJTHcT3cFWX3KE1ksB9KPJO4D4Bd60vYN0Y3CCopmDdWRwgqKbhXdha3UyAA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:41624/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.65.91/tcp/39281/p2p/16Uiu2HAkvgvLXRmuoiCoLppeyZuyWMpVqgUDYfHrQHYVJq9TR3s9"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:39280/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:41624/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "d215bcdb-28fc-45e0-b7c7-ebf8d4c44d2e", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"d215bcdb-28fc-45e0-b7c7-ebf8d4c44d2e","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:41624/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:41624/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 0120e30c0fca
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id c84d81f8f675
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.