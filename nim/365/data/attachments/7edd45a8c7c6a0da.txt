[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_invalid_version with id: 2024-09-19_04-22-03__1dc5f669-9ac8-44d1-8374-0550bfb69801
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-09-19_04-22-03__1dc5f669-9ac8-44d1-8374-0550bfb69801__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.79.93
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['7964', '7965', '7966', '7967', '7968']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 7964:7964 -p 7965:7965 -p 7966:7966 -p 7967:7967 -p 7968:7968 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=7966 --rest-port=7964 --tcp-port=7965 --discv5-udp-port=7967 --rest-address=0.0.0.0 --nat=extip:172.18.79.93 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=2ff93071f26edc989acb3a8cdbfdfd13ed43bce7d07f5115c83d2eda9acc3eed --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=7968 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.79.93 waku b8d4174100759261ab5ee33354127907034ad7cc86f00a86f656047153c86e6b
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID b8d417410075. Setting up logs at ./log/docker/node1_2024-09-19_04-22-03__1dc5f669-9ac8-44d1-8374-0550bfb69801__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 7964
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7964/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7964/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.79.93/tcp/7965/p2p/16Uiu2HAmChEkd4SPg5CQxEXZ3MbMtbVQttJApiqodmoMzzG3hP8H","/ip4/172.18.79.93/tcp/7966/ws/p2p/16Uiu2HAmChEkd4SPg5CQxEXZ3MbMtbVQttJApiqodmoMzzG3hP8H"],"enrUri":"enr:-LO4QOgezvjtUXPILbP-_qYEShMc74LM8bGrWCF5Qy9UMwf9fw0moLO89gVdaaGJrboZDbScbVgjXcBmF8BcZ_dTe30BgmlkgnY0gmlwhKwST12KbXVsdGlhZGRyc4wACgSsEk9dBh8e3QOCcnOFAAMBAACJc2VjcDI1NmsxoQMAk3JDFQwpGab7i0M0grYnDLLise1jL6GkoNAvWk4iPoN0Y3CCHx2DdWRwgh8fhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-09-19_04-22-03__1dc5f669-9ac8-44d1-8374-0550bfb69801__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.112.91
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['30033', '30034', '30035', '30036', '30037']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 30033:30033 -p 30034:30034 -p 30035:30035 -p 30036:30036 -p 30037:30037 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=30035 --rest-port=30033 --tcp-port=30034 --discv5-udp-port=30036 --rest-address=0.0.0.0 --nat=extip:172.18.112.91 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=3cdac46d8bb9fc1166dd329bedf5417bbef5c50bae0585a8daffaff2ff6db335 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=30037 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QOgezvjtUXPILbP-_qYEShMc74LM8bGrWCF5Qy9UMwf9fw0moLO89gVdaaGJrboZDbScbVgjXcBmF8BcZ_dTe30BgmlkgnY0gmlwhKwST12KbXVsdGlhZGRyc4wACgSsEk9dBh8e3QOCcnOFAAMBAACJc2VjcDI1NmsxoQMAk3JDFQwpGab7i0M0grYnDLLise1jL6GkoNAvWk4iPoN0Y3CCHx2DdWRwgh8fhXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.112.91 waku f43e88c0600140108bde912e56ffa5d9a8fb1d8eb746f25f9871e4e3a98fa574
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID f43e88c06001. Setting up logs at ./log/docker/node2_2024-09-19_04-22-03__1dc5f669-9ac8-44d1-8374-0550bfb69801__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 30033
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30033/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30033/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.112.91/tcp/30034/p2p/16Uiu2HAm2AZzai6QrNa5827NgSnQEB32h5bvJv9dy9tAAJUkku8N","/ip4/172.18.112.91/tcp/30035/ws/p2p/16Uiu2HAm2AZzai6QrNa5827NgSnQEB32h5bvJv9dy9tAAJUkku8N"],"enrUri":"enr:-LO4QMsKitBxMCIo0ZdzByDkfJxFuLZRuet4jBH8----oUSFaAIU-VLkIrPybgifiIB1G7u7lDoSMueuObbuFxQUGtQBgmlkgnY0gmlwhKwScFuKbXVsdGlhZGRyc4wACgSsEnBbBnVT3QOCcnOFAAMBAACJc2VjcDI1NmsxoQJkI1PW6ZKbguo9XTz0EIjTHzqkPs--7DT7br51KVjLA4N0Y3CCdVKDdWRwgnVUhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:30033/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.79.93/tcp/7965/p2p/16Uiu2HAmChEkd4SPg5CQxEXZ3MbMtbVQttJApiqodmoMzzG3hP8H"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:7964/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:30033/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:7964/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7964/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1726719726673598976,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30033/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1726719726673598976,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:7964/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)', "version": 2.1}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:7964/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id b8d417410075
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id f43e88c06001
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.