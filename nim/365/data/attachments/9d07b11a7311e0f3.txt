[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_missing_payload with id: 2024-09-19_04-21-29__6829be1e-9e5a-453f-a44b-e02ed7e32fcc
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-09-19_04-21-29__6829be1e-9e5a-453f-a44b-e02ed7e32fcc__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.17.42
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['8812', '8813', '8814', '8815', '8816']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 8812:8812 -p 8813:8813 -p 8814:8814 -p 8815:8815 -p 8816:8816 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=8814 --rest-port=8812 --tcp-port=8813 --discv5-udp-port=8815 --rest-address=0.0.0.0 --nat=extip:172.18.17.42 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=bda8bcf51ab31bcc35ec73e4d2dfdbd4817dd9bda3cfc7b2dd6b5ec18fbcc08b --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=8816 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.17.42 waku be241deec90529986616606405304d152126d26bc55dc1f6c8d9aa36051588cf
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID be241deec905. Setting up logs at ./log/docker/node1_2024-09-19_04-21-29__6829be1e-9e5a-453f-a44b-e02ed7e32fcc__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 8812
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8812/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8812/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.17.42/tcp/8813/p2p/16Uiu2HAm296QuEpdGTh9VNdMkJhAwUxAAHKbN4xB3Xzi4t5k7fgF","/ip4/172.18.17.42/tcp/8814/ws/p2p/16Uiu2HAm296QuEpdGTh9VNdMkJhAwUxAAHKbN4xB3Xzi4t5k7fgF"],"enrUri":"enr:-LO4QMCqKGq20_rhvjzyxvj40bkijzMkuTFD8DQ6xhCSejHoE7sRsh54rh2mwWEkPi91Bncfj9Wjpprm1HbozP-axV8BgmlkgnY0gmlwhKwSESqKbXVsdGlhZGRyc4wACgSsEhEqBiJu3QOCcnOFAAMBAACJc2VjcDI1NmsxoQJjwo-j1K4yYD9B-_1ChaB_4Y2Woxky3w_9J6XvfGkanIN0Y3CCIm2DdWRwgiJvhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-09-19_04-21-29__6829be1e-9e5a-453f-a44b-e02ed7e32fcc__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.90.141
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['52279', '52280', '52281', '52282', '52283']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 52279:52279 -p 52280:52280 -p 52281:52281 -p 52282:52282 -p 52283:52283 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=52281 --rest-port=52279 --tcp-port=52280 --discv5-udp-port=52282 --rest-address=0.0.0.0 --nat=extip:172.18.90.141 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=feb8dcabee4c85ed2bf675153ccd37dddfdefdd941bfe8baffdd4bf39877e9ae --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=52283 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QMCqKGq20_rhvjzyxvj40bkijzMkuTFD8DQ6xhCSejHoE7sRsh54rh2mwWEkPi91Bncfj9Wjpprm1HbozP-axV8BgmlkgnY0gmlwhKwSESqKbXVsdGlhZGRyc4wACgSsEhEqBiJu3QOCcnOFAAMBAACJc2VjcDI1NmsxoQJjwo-j1K4yYD9B-_1ChaB_4Y2Woxky3w_9J6XvfGkanIN0Y3CCIm2DdWRwgiJvhXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.90.141 waku 655c38abfe5718e0486a7fc6c93804b653d191948f1bb5aa5fac6803d1f23b27
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 655c38abfe57. Setting up logs at ./log/docker/node2_2024-09-19_04-21-29__6829be1e-9e5a-453f-a44b-e02ed7e32fcc__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 52279
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:52279/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:52279/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.90.141/tcp/52280/p2p/16Uiu2HAmCRGCRgKvVaPw1n2zuumSrz8xuPi531DPLQgR9E8YbuxN","/ip4/172.18.90.141/tcp/52281/ws/p2p/16Uiu2HAmCRGCRgKvVaPw1n2zuumSrz8xuPi531DPLQgR9E8YbuxN"],"enrUri":"enr:-LO4QEPMuSd5R1wSCWEufMd-Sim3rpIZMbKSkimCj3_Jk15JF0-BhA2l74pOVFMZjj-gqpTERbHl0fHXtcj4a-GmvKkBgmlkgnY0gmlwhKwSWo2KbXVsdGlhZGRyc4wACgSsElqNBsw53QOCcnOFAAMBAACJc2VjcDI1NmsxoQL8e8mBwckeamnUwbQgxAvvqlyzZsCa0HPYZrXS2w_ku4N0Y3CCzDiDdWRwgsw6hXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:52279/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.17.42/tcp/8813/p2p/16Uiu2HAm296QuEpdGTh9VNdMkJhAwUxAAHKbN4xB3Xzi4t5k7fgF"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8812/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:52279/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8812/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8812/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1726719692886591232,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:52279/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1726719692886591232,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8812/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:8812/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id be241deec905
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 655c38abfe57
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.