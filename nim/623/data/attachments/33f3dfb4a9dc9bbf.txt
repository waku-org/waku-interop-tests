[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_invalid_request_id with id: 2025-01-21_04-06-39__b4367357-a490-4947-8b8c-0b3d1997d3b8
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-21_04-06-39__b4367357-a490-4947-8b8c-0b3d1997d3b8__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.203.125
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['33261', '33262', '33263', '33264', '33265']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 33261:33261 -p 33262:33262 -p 33263:33263 -p 33264:33264 -p 33265:33265 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=33263 --rest-port=33261 --tcp-port=33262 --discv5-udp-port=33264 --rest-address=0.0.0.0 --nat=extip:172.18.203.125 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=bf09424fe2cbdc36712dcdeb829fa053fa851effc5b0f73b52d76e66fb36a01b --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=33265 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.203.125 waku 3f4dd09fcc2416fbe2dfc3dbb0811bb77508d7486d0858418ad2edb6f9abd002
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 3f4dd09fcc24. Setting up logs at ./log/docker/node1_2025-01-21_04-06-39__b4367357-a490-4947-8b8c-0b3d1997d3b8__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 33261
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container a9ab3647727f. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33261/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33261/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.203.125/tcp/33262/p2p/16Uiu2HAkuzxtm62gjtjTS336PTcJ2YQNC4UnKZvzmUkreNhfJEPV","/ip4/172.18.203.125/tcp/33263/ws/p2p/16Uiu2HAkuzxtm62gjtjTS336PTcJ2YQNC4UnKZvzmUkreNhfJEPV"],"enrUri":"enr:-L24QKI1JObycNZpF5GId9AbPQRHmGJ2Oc20n0XPl83ihQ54eIg5fZMw9INIx-Mh6TWRG3CcCVIZD56Fcz2RJjq1fXECgmlkgnY0gmlwhKwSy32KbXVsdGlhZGRyc5YACASsEst9BoHuAAoErBLLfQaB790DgnJzhQADAQAAiXNlY3AyNTZrMaECCIdKYY4F8MdL_N-cKZNkcSw33JxP0RtuH8_aU1VCULSDdGNwgoHug3VkcIKB8IV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-21_04-06-39__b4367357-a490-4947-8b8c-0b3d1997d3b8__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.211.195
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['41578', '41579', '41580', '41581', '41582']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 41578:41578 -p 41579:41579 -p 41580:41580 -p 41581:41581 -p 41582:41582 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=41580 --rest-port=41578 --tcp-port=41579 --discv5-udp-port=41581 --rest-address=0.0.0.0 --nat=extip:172.18.211.195 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=bbd11d3eb56ed2c8542b86c9cddf65d112c8a8b1b3c9daedcced1e0bb2869936 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=41582 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QKI1JObycNZpF5GId9AbPQRHmGJ2Oc20n0XPl83ihQ54eIg5fZMw9INIx-Mh6TWRG3CcCVIZD56Fcz2RJjq1fXECgmlkgnY0gmlwhKwSy32KbXVsdGlhZGRyc5YACASsEst9BoHuAAoErBLLfQaB790DgnJzhQADAQAAiXNlY3AyNTZrMaECCIdKYY4F8MdL_N-cKZNkcSw33JxP0RtuH8_aU1VCULSDdGNwgoHug3VkcIKB8IV3YWt1MgU --filternode=/ip4/172.18.203.125/tcp/33262/p2p/16Uiu2HAkuzxtm62gjtjTS336PTcJ2YQNC4UnKZvzmUkreNhfJEPV
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.211.195 waku 1d3f2e4b55e064809b622ab08efccc2b55e0a2e11e219df84e21945906561fc6
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 1d3f2e4b55e0. Setting up logs at ./log/docker/node2_2025-01-21_04-06-39__b4367357-a490-4947-8b8c-0b3d1997d3b8__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 41578
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41578/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41578/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.211.195/tcp/41579/p2p/16Uiu2HAm8zTCJmxpsQ9Fse2hjn5BaciFU2DgmbHgut3jbrPRhX5n","/ip4/172.18.211.195/tcp/41580/ws/p2p/16Uiu2HAm8zTCJmxpsQ9Fse2hjn5BaciFU2DgmbHgut3jbrPRhX5n"],"enrUri":"enr:-L24QJ45BgiVNU0wVQKy-nBea32hIAcWmXAtfbzripr6vWM-RGDHSuxD5I1buKcbGkLHWWahDx65vrvlOoTwh95PraECgmlkgnY0gmlwhKwS08OKbXVsdGlhZGRyc5YACASsEtPDBqJrAAoErBLTwwaibN0DgnJzhQADAQAAiXNlY3AyNTZrMaECyY2kPJp5owZ4hmoRaEKyfHYBCzAkLFaBo31eqmy3iA2DdGNwgqJrg3VkcIKibYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:41578/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.203.125/tcp/33262/p2p/16Uiu2HAkuzxtm62gjtjTS336PTcJ2YQNC4UnKZvzmUkreNhfJEPV"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:33261/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:41578/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "d4d9fd4b-6336-4d51-a040-07c847e2bb9f", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"d4d9fd4b-6336-4d51-a040-07c847e2bb9f","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:41578/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:41578/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 3f4dd09fcc24
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 1d3f2e4b55e0
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 3f4dd09fcc24. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.