[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_invalid_request_id with id: 2025-01-21_04-06-47__2af7be48-e2b5-458d-a2a9-32b482c44761
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-21_04-06-47__2af7be48-e2b5-458d-a2a9-32b482c44761__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.232.209
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['43709', '43710', '43711', '43712', '43713']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 43709:43709 -p 43710:43710 -p 43711:43711 -p 43712:43712 -p 43713:43713 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=43711 --rest-port=43709 --tcp-port=43710 --discv5-udp-port=43712 --rest-address=0.0.0.0 --nat=extip:172.18.232.209 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ee22fe7827e84d8fbb4ee17aee47afc4bdcb6cdeab40beabaabcb06d68eb0e6e --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=43713 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.232.209 waku 19491e73b7bcffc06daf4881915f3857be2cfb67de0853b428bd92f71878ae14
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 19491e73b7bc. Setting up logs at ./log/docker/node1_2025-01-21_04-06-47__2af7be48-e2b5-458d-a2a9-32b482c44761__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 43709
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 6e2ee91cfb5e. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:43709/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:43709/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.232.209/tcp/43710/p2p/16Uiu2HAmLkDBERJhshCQ5gNzrs54JER7En6AjNGXrwyPSSwr9hn5","/ip4/172.18.232.209/tcp/43711/ws/p2p/16Uiu2HAmLkDBERJhshCQ5gNzrs54JER7En6AjNGXrwyPSSwr9hn5"],"enrUri":"enr:-L24QNdywZWfz0NZ0pmc6zgDldtehY0w3H2Cp1i6lwOPlxY0cx9FrTjyLfw3LbS1Vci8ARxdRyzaMa03FaxbagToV4gCgmlkgnY0gmlwhKwS6NGKbXVsdGlhZGRyc5YACASsEujRBqq-AAoErBLo0Qaqv90DgnJzhQADAQAAiXNlY3AyNTZrMaEDeDPnDCot0vB5Qz4QWvbSKCl368XWEV3p20Wb5ey6AaaDdGNwgqq-g3VkcIKqwIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-21_04-06-47__2af7be48-e2b5-458d-a2a9-32b482c44761__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.14.136
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['25437', '25438', '25439', '25440', '25441']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 25437:25437 -p 25438:25438 -p 25439:25439 -p 25440:25440 -p 25441:25441 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=25439 --rest-port=25437 --tcp-port=25438 --discv5-udp-port=25440 --rest-address=0.0.0.0 --nat=extip:172.18.14.136 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=af569f6eee33db5edcb3cf0ee499c95dbcaccc5e72688f7f5dcef4a5fb5bbfae --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=25441 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QNdywZWfz0NZ0pmc6zgDldtehY0w3H2Cp1i6lwOPlxY0cx9FrTjyLfw3LbS1Vci8ARxdRyzaMa03FaxbagToV4gCgmlkgnY0gmlwhKwS6NGKbXVsdGlhZGRyc5YACASsEujRBqq-AAoErBLo0Qaqv90DgnJzhQADAQAAiXNlY3AyNTZrMaEDeDPnDCot0vB5Qz4QWvbSKCl368XWEV3p20Wb5ey6AaaDdGNwgqq-g3VkcIKqwIV3YWt1MgU --filternode=/ip4/172.18.232.209/tcp/43710/p2p/16Uiu2HAmLkDBERJhshCQ5gNzrs54JER7En6AjNGXrwyPSSwr9hn5
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.14.136 waku d32769f7d6f9be8a7af7476487d08ae58d274a9f4576fd9e834e85dd19001e4a
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID d32769f7d6f9. Setting up logs at ./log/docker/node2_2025-01-21_04-06-47__2af7be48-e2b5-458d-a2a9-32b482c44761__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 25437
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:25437/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:25437/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.14.136/tcp/25438/p2p/16Uiu2HAmAvmLQA8mWzGG1REpVoavt3agZXFkV3D25tNbsqwcrFoa","/ip4/172.18.14.136/tcp/25439/ws/p2p/16Uiu2HAmAvmLQA8mWzGG1REpVoavt3agZXFkV3D25tNbsqwcrFoa"],"enrUri":"enr:-L24QIft2TWt5NuIRl7gTqZzT8tvv7hjDw4J-YD0zxXMzsafF_oOcGsULJZCiB4jamZujE42GwRTULPnHcX0PScFl2oCgmlkgnY0gmlwhKwSDoiKbXVsdGlhZGRyc5YACASsEg6IBmNeAAoErBIOiAZjX90DgnJzhQADAQAAiXNlY3AyNTZrMaEC5lMz3YruNmsaczD41qswdZESUV_nSclxi_QwqcGJ1h2DdGNwgmNeg3VkcIJjYIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:25437/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.232.209/tcp/43710/p2p/16Uiu2HAmLkDBERJhshCQ5gNzrs54JER7En6AjNGXrwyPSSwr9hn5"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:43709/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:25437/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "9b6085a3-9ede-4c80-8048-f23f8dafdd60", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"9b6085a3-9ede-4c80-8048-f23f8dafdd60","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:25437/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:25437/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 19491e73b7bc
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id d32769f7d6f9
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 19491e73b7bc. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.