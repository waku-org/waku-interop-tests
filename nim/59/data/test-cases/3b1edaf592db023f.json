{"uid":"3b1edaf592db023f","name":"test_filter_update_subscription_with_invalid_content_topic_format","fullName":"tests.filter.test_subscribe_update.TestFilterSubscribeUpdate#test_filter_update_subscription_with_invalid_content_topic_format","historyId":"2a02e8b65abfd27cfc925612aa51b4ba","time":{"start":1707624726488,"stop":1707624726514,"duration":26},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"set_allure_env_variables","time":{"start":1707624639603,"stop":1707624639603,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"close_open_nodes","time":{"start":1707624723056,"stop":1707624723056,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"attach_logs_on_fail","time":{"start":1707624723056,"stop":1707624723056,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"filter_setup","time":{"start":1707624723057,"stop":1707624723057,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"test_id","time":{"start":1707624723057,"stop":1707624723057,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"test_setup","time":{"start":1707624723057,"stop":1707624723057,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_main_relay_node","time":{"start":1707624723058,"stop":1707624724676,"duration":1618},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_main_filter_node","time":{"start":1707624724677,"stop":1707624726386,"duration":1709},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"subscribe_main_nodes","time":{"start":1707624726387,"stop":1707624726487,"duration":100},"status":"passed","steps":[{"name":"wait_for_subscriptions_on_main_nodes","time":{"start":1707624726387,"stop":1707624726487,"duration":100},"status":"passed","steps":[{"name":"create_filter_subscription_with_retry","time":{"start":1707624726419,"stop":1707624726487,"duration":68},"status":"passed","steps":[{"name":"create_filter_subscription","time":{"start":1707624726419,"stop":1707624726487,"duration":68},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"subscription","value":"{'requestId': '9dd08191-b4e7-49f7-8f76-512e5039fdd9', 'contentFilters': ['/test/1/waku-filter/proto'], 'pubsubTopic': '/waku/2/rs/0/1'}"},{"name":"node","value":"None"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"subscription","value":"{'requestId': '9dd08191-b4e7-49f7-8f76-512e5039fdd9', 'contentFilters': ['/test/1/waku-filter/proto'], 'pubsubTopic': '/waku/2/rs/0/1'}"},{"name":"node","value":"None"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"content_topic_list","value":"['/test/1/waku-filter/proto']"},{"name":"pubsub_topic","value":"None"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"passed","steps":[{"name":"update_filter_subscription","time":{"start":1707624726488,"stop":1707624726494,"duration":6},"status":"broken","statusMessage":"Exception: Error: 400 Client Error: Bad Request for url: http://127.0.0.1:7180/filter/v2/subscriptions with response: b'{\"requestId\":\"unknown\",\"statusCode\":400,\"statusDesc\":\"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\\\\"Invalid content body, could not decode. Unable to deserialize data\\\\\", contentType: \\\\\"text/plain\\\\\"))\"}'\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/steps/filter.py\", line 148, in update_filter_subscription\n    return node.update_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/waku_node.py\", line 150, in update_filter_subscriptions\n    return self._api.update_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 40, in update_filter_subscriptions\n    update_subscriptions_response = self.rest_call(\"put\", \"filter/v2/subscriptions\", json.dumps(subscription))\n                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 16, in rest_call\n    return self.make_request(method, url, headers=headers, data=payload)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/base_client.py\", line 17, in make_request\n    raise Exception(f\"Error: {http_err} with response: {response.content}\")\n","steps":[],"attachments":[],"parameters":[{"name":"subscription","value":"{'requestId': '1', 'contentFilters': [{'description': 'Empty string', 'value': ''}], 'pubsubTopic': '/waku/2/rs/0/1'}"},{"name":"node","value":"None"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"update_filter_subscription","time":{"start":1707624726495,"stop":1707624726499,"duration":4},"status":"broken","statusMessage":"Exception: Error: 400 Client Error: Bad Request for url: http://127.0.0.1:7180/filter/v2/subscriptions with response: b'{\"requestId\":\"unknown\",\"statusCode\":400,\"statusDesc\":\"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\\\\"Invalid content body, could not decode. Unable to deserialize data\\\\\", contentType: \\\\\"text/plain\\\\\"))\"}'\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/steps/filter.py\", line 148, in update_filter_subscription\n    return node.update_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/waku_node.py\", line 150, in update_filter_subscriptions\n    return self._api.update_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 40, in update_filter_subscriptions\n    update_subscriptions_response = self.rest_call(\"put\", \"filter/v2/subscriptions\", json.dumps(subscription))\n                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 16, in rest_call\n    return self.make_request(method, url, headers=headers, data=payload)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/base_client.py\", line 17, in make_request\n    raise Exception(f\"Error: {http_err} with response: {response.content}\")\n","steps":[],"attachments":[],"parameters":[{"name":"subscription","value":"{'requestId': '1', 'contentFilters': [{'description': 'A dictionary', 'value': {'key': 'YWFh'}}], 'pubsubTopic': '/waku/2/rs/0/1'}"},{"name":"node","value":"None"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"update_filter_subscription","time":{"start":1707624726500,"stop":1707624726503,"duration":3},"status":"broken","statusMessage":"Exception: Error: 400 Client Error: Bad Request for url: http://127.0.0.1:7180/filter/v2/subscriptions with response: b'{\"requestId\":\"unknown\",\"statusCode\":400,\"statusDesc\":\"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\\\\"Invalid content body, could not decode. Unable to deserialize data\\\\\", contentType: \\\\\"text/plain\\\\\"))\"}'\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/steps/filter.py\", line 148, in update_filter_subscription\n    return node.update_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/waku_node.py\", line 150, in update_filter_subscriptions\n    return self._api.update_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 40, in update_filter_subscriptions\n    update_subscriptions_response = self.rest_call(\"put\", \"filter/v2/subscriptions\", json.dumps(subscription))\n                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 16, in rest_call\n    return self.make_request(method, url, headers=headers, data=payload)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/base_client.py\", line 17, in make_request\n    raise Exception(f\"Error: {http_err} with response: {response.content}\")\n","steps":[],"attachments":[],"parameters":[{"name":"subscription","value":"{'requestId': '1', 'contentFilters': [{'description': 'An integer', 'value': 1234567890}], 'pubsubTopic': '/waku/2/rs/0/1'}"},{"name":"node","value":"None"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"update_filter_subscription","time":{"start":1707624726504,"stop":1707624726509,"duration":5},"status":"broken","statusMessage":"Exception: Error: 400 Client Error: Bad Request for url: http://127.0.0.1:7180/filter/v2/subscriptions with response: b'{\"requestId\":\"unknown\",\"statusCode\":400,\"statusDesc\":\"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\\\\"Invalid content body, could not decode. Unable to deserialize data\\\\\", contentType: \\\\\"text/plain\\\\\"))\"}'\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/steps/filter.py\", line 148, in update_filter_subscription\n    return node.update_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/waku_node.py\", line 150, in update_filter_subscriptions\n    return self._api.update_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 40, in update_filter_subscriptions\n    update_subscriptions_response = self.rest_call(\"put\", \"filter/v2/subscriptions\", json.dumps(subscription))\n                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 16, in rest_call\n    return self.make_request(method, url, headers=headers, data=payload)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/base_client.py\", line 17, in make_request\n    raise Exception(f\"Error: {http_err} with response: {response.content}\")\n","steps":[],"attachments":[],"parameters":[{"name":"subscription","value":"{'requestId': '1', 'contentFilters': [{'description': 'A list', 'value': ['YWFh']}], 'pubsubTopic': '/waku/2/rs/0/1'}"},{"name":"node","value":"None"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"update_filter_subscription","time":{"start":1707624726510,"stop":1707624726514,"duration":4},"status":"broken","statusMessage":"Exception: Error: 400 Client Error: Bad Request for url: http://127.0.0.1:7180/filter/v2/subscriptions with response: b'{\"requestId\":\"unknown\",\"statusCode\":400,\"statusDesc\":\"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\\\\"Invalid content body, could not decode. Unable to deserialize data\\\\\", contentType: \\\\\"text/plain\\\\\"))\"}'\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/steps/filter.py\", line 148, in update_filter_subscription\n    return node.update_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/waku_node.py\", line 150, in update_filter_subscriptions\n    return self._api.update_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 40, in update_filter_subscriptions\n    update_subscriptions_response = self.rest_call(\"put\", \"filter/v2/subscriptions\", json.dumps(subscription))\n                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 16, in rest_call\n    return self.make_request(method, url, headers=headers, data=payload)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/base_client.py\", line 17, in make_request\n    raise Exception(f\"Error: {http_err} with response: {response.content}\")\n","steps":[],"attachments":[],"parameters":[{"name":"subscription","value":"{'requestId': '1', 'contentFilters': [{'description': 'A bool', 'value': True}], 'pubsubTopic': '/waku/2/rs/0/1'}"},{"name":"node","value":"None"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"1316a8e85e64d6ec","name":"log","source":"1316a8e85e64d6ec.txt","type":"text/plain","size":12368}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":5,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"test_setup::0","time":{"start":1707624726516,"stop":1707624726517,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"close_open_nodes::0","time":{"start":1707624726517,"stop":1707624732006,"duration":5489},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"attach_logs_on_fail::0","time":{"start":1707624732007,"stop":1707624732007,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"set_allure_env_variables::0","time":{"start":1707625474942,"stop":1707625474942,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"@pytest.mark.usefixtures('setup_main_relay_node', 'setup_main_filter_node')"},{"name":"parentSuite","value":"tests.filter"},{"name":"suite","value":"test_subscribe_update"},{"name":"subSuite","value":"TestFilterSubscribeUpdate"},{"name":"host","value":"fv-az1456-627"},{"name":"thread","value":"2035-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.filter.test_subscribe_update"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":28,"unknown":0,"total":28},"items":[{"uid":"77aee0c7265d2acc","reportUrl":"https://waku-org.github.io/waku-interop-tests/58//#testresult/77aee0c7265d2acc","status":"passed","time":{"start":1707538280538,"stop":1707538280571,"duration":33}},{"uid":"efb3a80e16303874","reportUrl":"https://waku-org.github.io/waku-interop-tests/57//#testresult/efb3a80e16303874","status":"passed","time":{"start":1707451850178,"stop":1707451850206,"duration":28}},{"uid":"70c547543bc01a9e","reportUrl":"https://waku-org.github.io/waku-interop-tests/56//#testresult/70c547543bc01a9e","status":"passed","time":{"start":1707365506542,"stop":1707365506570,"duration":28}},{"uid":"f6fc3e403cbe2766","reportUrl":"https://waku-org.github.io/waku-interop-tests/55//#testresult/f6fc3e403cbe2766","status":"passed","time":{"start":1707279082415,"stop":1707279082442,"duration":27}},{"uid":"126311983e55e459","reportUrl":"https://waku-org.github.io/waku-interop-tests/54//#testresult/126311983e55e459","status":"passed","time":{"start":1707211694519,"stop":1707211694540,"duration":21}},{"uid":"d01f5e081d83ccd6","reportUrl":"https://waku-org.github.io/waku-interop-tests/53//#testresult/d01f5e081d83ccd6","status":"passed","time":{"start":1707210622391,"stop":1707210622412,"duration":21}},{"uid":"594b32cf7c241d5d","reportUrl":"https://waku-org.github.io/waku-interop-tests/52//#testresult/594b32cf7c241d5d","status":"passed","time":{"start":1707206102756,"stop":1707206102781,"duration":25}},{"uid":"5561a5f64c36d54c","reportUrl":"https://waku-org.github.io/waku-interop-tests/51//#testresult/5561a5f64c36d54c","status":"passed","time":{"start":1707192639238,"stop":1707192639260,"duration":22}},{"uid":"beaa75e094af3eea","reportUrl":"https://waku-org.github.io/waku-interop-tests/50//#testresult/beaa75e094af3eea","status":"passed","time":{"start":1707106327334,"stop":1707106327374,"duration":40}},{"uid":"987d627b1a90b721","reportUrl":"https://waku-org.github.io/waku-interop-tests/49//#testresult/987d627b1a90b721","status":"passed","time":{"start":1707019824405,"stop":1707019824424,"duration":19}},{"uid":"294a9a7f2a5daf3b","reportUrl":"https://waku-org.github.io/waku-interop-tests/48//#testresult/294a9a7f2a5daf3b","status":"passed","time":{"start":1706933421540,"stop":1706933421576,"duration":36}},{"uid":"851224a4738889aa","reportUrl":"https://waku-org.github.io/waku-interop-tests/47//#testresult/851224a4738889aa","status":"passed","time":{"start":1706847107471,"stop":1706847107509,"duration":38}},{"uid":"a8680002ea683950","reportUrl":"https://waku-org.github.io/waku-interop-tests/46//#testresult/a8680002ea683950","status":"passed","time":{"start":1706760775054,"stop":1706760775086,"duration":32}},{"uid":"f24149f30d97c1b3","reportUrl":"https://waku-org.github.io/waku-interop-tests/45//#testresult/f24149f30d97c1b3","status":"passed","time":{"start":1706693770985,"stop":1706693771011,"duration":26}},{"uid":"5a4e59935d2b5ac8","reportUrl":"https://waku-org.github.io/waku-interop-tests/44//#testresult/5a4e59935d2b5ac8","status":"passed","time":{"start":1706674287084,"stop":1706674287151,"duration":67}},{"uid":"a54275fcb7629610","reportUrl":"https://waku-org.github.io/waku-interop-tests/43//#testresult/a54275fcb7629610","status":"passed","time":{"start":1706587834651,"stop":1706587834678,"duration":27}},{"uid":"32ac4fee4d876523","reportUrl":"https://waku-org.github.io/waku-interop-tests/42//#testresult/32ac4fee4d876523","status":"passed","time":{"start":1706501451337,"stop":1706501451365,"duration":28}},{"uid":"8fc13b0b587730fd","reportUrl":"https://waku-org.github.io/waku-interop-tests/41//#testresult/8fc13b0b587730fd","status":"passed","time":{"start":1706415103530,"stop":1706415103564,"duration":34}},{"uid":"af460a6ab21b6efa","reportUrl":"https://waku-org.github.io/waku-interop-tests/40//#testresult/af460a6ab21b6efa","status":"passed","time":{"start":1706328623112,"stop":1706328623137,"duration":25}},{"uid":"57f867ca97b66b88","reportUrl":"https://waku-org.github.io/waku-interop-tests/39//#testresult/57f867ca97b66b88","status":"passed","time":{"start":1706242305922,"stop":1706242305945,"duration":23}}]},"tags":["@pytest.mark.usefixtures('setup_main_relay_node', 'setup_main_filter_node')"]},"source":"3b1edaf592db023f.json","parameterValues":[]}