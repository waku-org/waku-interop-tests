[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_invalid_pubsub_topic_format with id: 2024-12-25_04-11-02__1ee6fd4c-8951-4882-b280-d874cbc503a1
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-25_04-11-02__1ee6fd4c-8951-4882-b280-d874cbc503a1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.94.166
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['39792', '39793', '39794', '39795', '39796']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 39792:39792 -p 39793:39793 -p 39794:39794 -p 39795:39795 -p 39796:39796 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=39794 --rest-port=39792 --tcp-port=39793 --discv5-udp-port=39795 --rest-address=0.0.0.0 --nat=extip:172.18.94.166 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=1948c8bfeedda8eed1fdeeb71ff1fbb2b35ae3fbdfdcb1976b9719ad2d42c02b --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=39796 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.94.166 waku d67784a90e7e155c5d1a3e56e2c7c072b8ae73bac17f8922e3c127393742d471
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID d67784a90e7e. Setting up logs at ./log/docker/node1_2024-12-25_04-11-02__1ee6fd4c-8951-4882-b280-d874cbc503a1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 39792
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 9837572d778f. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:39792/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:39792/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.94.166/tcp/39793/p2p/16Uiu2HAmBG5TwHcn7rEJMG5SqsjDNbdGLv8WZj4j6uDBVgrEaRK7","/ip4/172.18.94.166/tcp/39794/ws/p2p/16Uiu2HAmBG5TwHcn7rEJMG5SqsjDNbdGLv8WZj4j6uDBVgrEaRK7"],"enrUri":"enr:-L24QM1379gHZPsi5g4v0uoWMdPuQH1kby10XQ9MtGil0jLRSpwvZp-dfZbzdlQUSTFYc7vVyYK8au0koMN5-M0DbQACgmlkgnY0gmlwhKwSXqaKbXVsdGlhZGRyc5YACASsEl6mBptxAAoErBJepgabct0DgnJzhQADAQAAiXNlY3AyNTZrMaEC60W80PtZupWTmQfOlEtYodw1Uz6qsA12UNatOvrYH9KDdGNwgptxg3VkcIKbc4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-25_04-11-02__1ee6fd4c-8951-4882-b280-d874cbc503a1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.39.49
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['17206', '17207', '17208', '17209', '17210']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 17206:17206 -p 17207:17207 -p 17208:17208 -p 17209:17209 -p 17210:17210 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=17208 --rest-port=17206 --tcp-port=17207 --discv5-udp-port=17209 --rest-address=0.0.0.0 --nat=extip:172.18.39.49 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=2f72acbf6fe8546e06ecf029f9a6edb41fcad5d5bf25e168a4b73fdbecedb371 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=17210 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QM1379gHZPsi5g4v0uoWMdPuQH1kby10XQ9MtGil0jLRSpwvZp-dfZbzdlQUSTFYc7vVyYK8au0koMN5-M0DbQACgmlkgnY0gmlwhKwSXqaKbXVsdGlhZGRyc5YACASsEl6mBptxAAoErBJepgabct0DgnJzhQADAQAAiXNlY3AyNTZrMaEC60W80PtZupWTmQfOlEtYodw1Uz6qsA12UNatOvrYH9KDdGNwgptxg3VkcIKbc4V3YWt1MgU --filternode=/ip4/172.18.94.166/tcp/39793/p2p/16Uiu2HAmBG5TwHcn7rEJMG5SqsjDNbdGLv8WZj4j6uDBVgrEaRK7
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.39.49 waku a935412325be82fdb83bd9d0a3609748aa1087fe44a296560f3af1d327861d56
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID a935412325be. Setting up logs at ./log/docker/node2_2024-12-25_04-11-02__1ee6fd4c-8951-4882-b280-d874cbc503a1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 17206
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17206/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17206/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.39.49/tcp/17207/p2p/16Uiu2HAmAF3a1Aeu22DSCTYTrv9wsJbERJAJk8PWrEVsBv312fLC","/ip4/172.18.39.49/tcp/17208/ws/p2p/16Uiu2HAmAF3a1Aeu22DSCTYTrv9wsJbERJAJk8PWrEVsBv312fLC"],"enrUri":"enr:-L24QGEY2b1A9gSS8arEG4VbYE8tCpFIFKpXD04Xjarn_cDlRz5X5HA0MulbscBO1GQK0Ef1ixBHXtRfSOf7cTvwaB8CgmlkgnY0gmlwhKwSJzGKbXVsdGlhZGRyc5YACASsEicxBkM3AAoErBInMQZDON0DgnJzhQADAQAAiXNlY3AyNTZrMaEC3CZTokJotp7iWvjeK15U2Rcn66n7sUJGhXv3RIvFh1mDdGNwgkM3g3VkcIJDOYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17206/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.94.166/tcp/39793/p2p/16Uiu2HAmBG5TwHcn7rEJMG5SqsjDNbdGLv8WZj4j6uDBVgrEaRK7"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:39792/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17206/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "21454bad-a59a-43d9-8207-ccd35cfe3aec", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"21454bad-a59a-43d9-8207-ccd35cfe3aec","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17206/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": ["/waku/2/rs/3/1"]}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:17206/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id d67784a90e7e
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id a935412325be
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container d67784a90e7e. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.