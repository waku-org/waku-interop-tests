[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2024-12-25_04-11-41__c7c11361-c4e6-4e7b-97a2-374b9fb85c3e
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-25_04-11-41__c7c11361-c4e6-4e7b-97a2-374b9fb85c3e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.44.64
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['50917', '50918', '50919', '50920', '50921']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 50917:50917 -p 50918:50918 -p 50919:50919 -p 50920:50920 -p 50921:50921 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=50919 --rest-port=50917 --tcp-port=50918 --discv5-udp-port=50920 --rest-address=0.0.0.0 --nat=extip:172.18.44.64 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=d95f10497a17ccac00e3cc87d510e900804ecfb30be6d28ade7b0a5d7f94f19e --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=50921 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.44.64 waku 94ddca5befe63e5235be7a5aa1729abdbc339dd7b9c6687e24ad6e6b0cdefc92
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 94ddca5befe6. Setting up logs at ./log/docker/node1_2024-12-25_04-11-41__c7c11361-c4e6-4e7b-97a2-374b9fb85c3e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 50917
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container abe2c7dc22b8. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:50917/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:50917/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.44.64/tcp/50918/p2p/16Uiu2HAm2ewUkpX6KrvMoDZKDJBbzDhF5pxs98zqVwdAo9q49gJS","/ip4/172.18.44.64/tcp/50919/ws/p2p/16Uiu2HAm2ewUkpX6KrvMoDZKDJBbzDhF5pxs98zqVwdAo9q49gJS"],"enrUri":"enr:-L24QP3kaWwt9S4D0oy4Xw3ZQkmrnHwmpcSg2aeO7YdodWmaCCieQp9BF73otzXkrotTwBsOn3sfTdUlJmqyinYo_ekCgmlkgnY0gmlwhKwSLECKbXVsdGlhZGRyc5YACASsEixABsbmAAoErBIsQAbG590DgnJzhQADAQAAiXNlY3AyNTZrMaECa2fiWdRhJydnBTQ39dSGHwIzpc3WrN4sD8A8AE7G6N-DdGNwgsbmg3VkcILG6IV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-25_04-11-41__c7c11361-c4e6-4e7b-97a2-374b9fb85c3e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.162.5
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['41829', '41830', '41831', '41832', '41833']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 41829:41829 -p 41830:41830 -p 41831:41831 -p 41832:41832 -p 41833:41833 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=41831 --rest-port=41829 --tcp-port=41830 --discv5-udp-port=41832 --rest-address=0.0.0.0 --nat=extip:172.18.162.5 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=aa0ade52eee9b13cbe1d69b4ffeb20c80405ff3bff0d5ccb6e2f3b11af5bc542 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=41833 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QP3kaWwt9S4D0oy4Xw3ZQkmrnHwmpcSg2aeO7YdodWmaCCieQp9BF73otzXkrotTwBsOn3sfTdUlJmqyinYo_ekCgmlkgnY0gmlwhKwSLECKbXVsdGlhZGRyc5YACASsEixABsbmAAoErBIsQAbG590DgnJzhQADAQAAiXNlY3AyNTZrMaECa2fiWdRhJydnBTQ39dSGHwIzpc3WrN4sD8A8AE7G6N-DdGNwgsbmg3VkcILG6IV3YWt1MgU --filternode=/ip4/172.18.44.64/tcp/50918/p2p/16Uiu2HAm2ewUkpX6KrvMoDZKDJBbzDhF5pxs98zqVwdAo9q49gJS
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.162.5 waku da40d70b65deb2e7300c448a9e5ae3cb456b400fd13cdc333597c146c1d6d8d2
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID da40d70b65de. Setting up logs at ./log/docker/node2_2024-12-25_04-11-41__c7c11361-c4e6-4e7b-97a2-374b9fb85c3e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 41829
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41829/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41829/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.162.5/tcp/41830/p2p/16Uiu2HAkwJSEPf3n49mtw3JDYPq74dsyTgYcPhtXiZmsopbumpi2","/ip4/172.18.162.5/tcp/41831/ws/p2p/16Uiu2HAkwJSEPf3n49mtw3JDYPq74dsyTgYcPhtXiZmsopbumpi2"],"enrUri":"enr:-L24QOVrBVBgkDeDYqMVdLy2jH-ElUa7YKqgLY8W2d32BvlYNhWeDrHvgNov1GzGm5VxC0d5EMoAr8jaD5YB_rNTj4oCgmlkgnY0gmlwhKwSogWKbXVsdGlhZGRyc5YACASsEqIFBqNmAAoErBKiBQajZ90DgnJzhQADAQAAiXNlY3AyNTZrMaECG9zDTvVDS4L6t0nJ36ogkO_OQJG4jL06ngtHxeRkcweDdGNwgqNmg3VkcIKjaIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:41829/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.44.64/tcp/50918/p2p/16Uiu2HAm2ewUkpX6KrvMoDZKDJBbzDhF5pxs98zqVwdAo9q49gJS"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:50917/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:41829/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "0d36162d-36ac-4123-a02c-a81583c8a0cc", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"0d36162d-36ac-4123-a02c-a81583c8a0cc","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:41829/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:41829/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 94ddca5befe6
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id da40d70b65de
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 94ddca5befe6. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.