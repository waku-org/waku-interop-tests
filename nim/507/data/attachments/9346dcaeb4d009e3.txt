[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_relay with id: 2024-12-08_04-02-34__383ec628-e6b1-468b-9363-62c4ec378f82
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.light_push:light_push.py:28 Running fixture setup: light_push_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.store:store.py:31 Running fixture setup: store_setup
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-08_04-02-34__383ec628-e6b1-468b-9363-62c4ec378f82__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:33 Network waku created
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.185.197
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['33886', '33887', '33888', '33889', '33890']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 33886:33886 -p 33887:33887 -p 33888:33888 -p 33889:33889 -p 33890:33890 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=33888 --rest-port=33886 --tcp-port=33887 --discv5-udp-port=33889 --rest-address=0.0.0.0 --nat=extip:172.18.185.197 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=bd31efc7eb2a6d76af77ee4f1a22430c775eeafdadd0ea8aeaa9d058aa7ed5ee --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=33890 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.185.197 waku 7aae9964424647c39c9e1bb6d58edbbf421c89388f6005dcc8262df23f2f13c2
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 7aae99644246. Setting up logs at ./log/docker/node1_2024-12-08_04-02-34__383ec628-e6b1-468b-9363-62c4ec378f82__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 33886
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33886/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33886/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.185.197/tcp/33887/p2p/16Uiu2HAmLE4HtUv5fM76PLp64LTiRbrCXNYzsJQ9QeXrxynovLNq","/ip4/172.18.185.197/tcp/33888/ws/p2p/16Uiu2HAmLE4HtUv5fM76PLp64LTiRbrCXNYzsJQ9QeXrxynovLNq"],"enrUri":"enr:-L24QC9EKN8Ew_bE4sq1g1LI_1WSvVYe2vR_gfkLd0_woqS6NukJqalUFVrQOrxuT5k8siOeXerlv6kLP8EAHLKth3gCgmlkgnY0gmlwhKwSucWKbXVsdGlhZGRyc5YACASsErnFBoRfAAoErBK5xQaEYN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDcHpugxGPkjnMojzg79psR0611myz3SqlKX30OtXN12aDdGNwgoRfg3VkcIKEYYV3YWt1MgE"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-08_04-02-34__383ec628-e6b1-468b-9363-62c4ec378f82__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.119.189
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['32201', '32202', '32203', '32204', '32205']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 32201:32201 -p 32202:32202 -p 32203:32203 -p 32204:32204 -p 32205:32205 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=32203 --rest-port=32201 --tcp-port=32202 --discv5-udp-port=32204 --rest-address=0.0.0.0 --nat=extip:172.18.119.189 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=dc76f1dcf52f423bcfd4672af2e10c5870e91ccc4caabe8c1ea77acbf0d63951 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=32205 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-L24QC9EKN8Ew_bE4sq1g1LI_1WSvVYe2vR_gfkLd0_woqS6NukJqalUFVrQOrxuT5k8siOeXerlv6kLP8EAHLKth3gCgmlkgnY0gmlwhKwSucWKbXVsdGlhZGRyc5YACASsErnFBoRfAAoErBK5xQaEYN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDcHpugxGPkjnMojzg79psR0611myz3SqlKX30OtXN12aDdGNwgoRfg3VkcIKEYYV3YWt1MgE
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.119.189 waku f090788cc4c2cccf075d91783f1bd645703413e9343f461599c8c0ac346e8ffe
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID f090788cc4c2. Setting up logs at ./log/docker/node1_2024-12-08_04-02-34__383ec628-e6b1-468b-9363-62c4ec378f82__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 32201
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:32201/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:32201/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.119.189/tcp/32202/p2p/16Uiu2HAm1PC464PuxJ8yeGnNnfiY2hAs4CfzUVm6YzhNh3yz7Fqm","/ip4/172.18.119.189/tcp/32203/ws/p2p/16Uiu2HAm1PC464PuxJ8yeGnNnfiY2hAs4CfzUVm6YzhNh3yz7Fqm"],"enrUri":"enr:-L24QLT9dzisDehc-sBTwi2VIBe9x8Si5cBJphPDTC4guseDPynm6vGvTgm2lBj5G_8GYg0--w_EDUf9JtHBYO8fvIMCgmlkgnY0gmlwhKwSd72KbXVsdGlhZGRyc5YACASsEne9Bn3KAAoErBJ3vQZ9y90DgnJzhQADAQAAiXNlY3AyNTZrMaECWINiSzYpqJMkYThs7AK_X0QF2YJfr6N6g5lwgLrlxQSDdGNwgn3Kg3VkcIJ9zIV3YWt1MgE"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:33886/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:32201/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:33886/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33886/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1733630561447407360,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:32201/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1733630561447407360,"ephemeral":false}]'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 7aae99644246
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id f090788cc4c2
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 7aae99644246. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.