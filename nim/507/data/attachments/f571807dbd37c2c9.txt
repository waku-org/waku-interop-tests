[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_invalid_request_id with id: 2024-12-09_01-35-07__68d9420b-166a-4392-9b91-4843d411180a
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-09_01-35-07__68d9420b-166a-4392-9b91-4843d411180a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.179.186
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['19831', '19832', '19833', '19834', '19835']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 19831:19831 -p 19832:19832 -p 19833:19833 -p 19834:19834 -p 19835:19835 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=19833 --rest-port=19831 --tcp-port=19832 --discv5-udp-port=19834 --rest-address=0.0.0.0 --nat=extip:172.18.179.186 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=08bf0ee6b9eb54731dca1ccff3c39a7b1e0b6f8b09bd6d861b6a37baa14d3c9d --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=19835 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.179.186 waku ecba910754c61e68155e2f5c479a930505ddbe7b1bc7e6ea2373e492fedb3e1c
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID ecba910754c6. Setting up logs at ./log/docker/node1_2024-12-09_01-35-07__68d9420b-166a-4392-9b91-4843d411180a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 19831
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 59516bf1602c. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:19831/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:19831/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.179.186/tcp/19832/p2p/16Uiu2HAkukwzsvTgL8uqU2EtCaVY2c732JueBAGeqMCRDrE2LMw1","/ip4/172.18.179.186/tcp/19833/ws/p2p/16Uiu2HAkukwzsvTgL8uqU2EtCaVY2c732JueBAGeqMCRDrE2LMw1"],"enrUri":"enr:-L24QHUhMQsz1WihaQ_id5ul5P0zimXtLrpoCCMIEPPqrDSBVGH06QkGP08rNoRXl3stk8_esTJqnPAgU6cdYwTF-LICgmlkgnY0gmlwhKwSs7qKbXVsdGlhZGRyc5YACASsErO6Bk14AAoErBKzugZNed0DgnJzhQADAQAAiXNlY3AyNTZrMaECBPAl1WCR8k-EEYUs0ALyE7wxaWtKI6cS2l-Lps658HSDdGNwgk14g3VkcIJNeoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-09_01-35-07__68d9420b-166a-4392-9b91-4843d411180a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.30.11
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['28867', '28868', '28869', '28870', '28871']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 28867:28867 -p 28868:28868 -p 28869:28869 -p 28870:28870 -p 28871:28871 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=28869 --rest-port=28867 --tcp-port=28868 --discv5-udp-port=28870 --rest-address=0.0.0.0 --nat=extip:172.18.30.11 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=eacf42a4ecb89ce5dc089cafcedc841ef3a8db38c13f1c90ad3deeb4ba7bd5d4 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=28871 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QHUhMQsz1WihaQ_id5ul5P0zimXtLrpoCCMIEPPqrDSBVGH06QkGP08rNoRXl3stk8_esTJqnPAgU6cdYwTF-LICgmlkgnY0gmlwhKwSs7qKbXVsdGlhZGRyc5YACASsErO6Bk14AAoErBKzugZNed0DgnJzhQADAQAAiXNlY3AyNTZrMaECBPAl1WCR8k-EEYUs0ALyE7wxaWtKI6cS2l-Lps658HSDdGNwgk14g3VkcIJNeoV3YWt1MgU --filternode=/ip4/172.18.179.186/tcp/19832/p2p/16Uiu2HAkukwzsvTgL8uqU2EtCaVY2c732JueBAGeqMCRDrE2LMw1
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.30.11 waku b4038b5059d9e6cba28649510aadbfbcd177f8f083fb290431903a50b0f44ce5
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID b4038b5059d9. Setting up logs at ./log/docker/node2_2024-12-09_01-35-07__68d9420b-166a-4392-9b91-4843d411180a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 28867
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:28867/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:28867/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.30.11/tcp/28868/p2p/16Uiu2HAm1AwDToEYcU3FTCZiwetkvfUfNDJeg3YaGv8eH3Jbnv4C","/ip4/172.18.30.11/tcp/28869/ws/p2p/16Uiu2HAm1AwDToEYcU3FTCZiwetkvfUfNDJeg3YaGv8eH3Jbnv4C"],"enrUri":"enr:-L24QC9qNmspS7wdY9Lh6aY1q1OFn_FnvLnNcxvRVHdXaZd-EuMO7EMqCQOgxpM1l1OkQHHFmvdjG2KcT3hVWyhPISUCgmlkgnY0gmlwhKwSHguKbXVsdGlhZGRyc5YACASsEh4LBnDEAAoErBIeCwZwxd0DgnJzhQADAQAAiXNlY3AyNTZrMaECVV-i7ugPJk1bHBi3GOm0ZcsLuQIEwBngo2oCA9oyiXWDdGNwgnDEg3VkcIJwxoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:28867/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.179.186/tcp/19832/p2p/16Uiu2HAkukwzsvTgL8uqU2EtCaVY2c732JueBAGeqMCRDrE2LMw1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:19831/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:28867/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "0c48a79d-69e0-4f84-bcac-933001ed3f4e", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"0c48a79d-69e0-4f84-bcac-933001ed3f4e","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:28867/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:28867/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id ecba910754c6
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id b4038b5059d9
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container ecba910754c6. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.