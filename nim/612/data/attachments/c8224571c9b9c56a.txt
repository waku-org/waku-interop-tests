[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_no_content_topic with id: 2025-01-10_04-07-45__a762e875-db74-45c2-a04f-a126eef6c31c
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-10_04-07-45__a762e875-db74-45c2-a04f-a126eef6c31c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.89.142
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['3717', '3718', '3719', '3720', '3721']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 3717:3717 -p 3718:3718 -p 3719:3719 -p 3720:3720 -p 3721:3721 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=3719 --rest-port=3717 --tcp-port=3718 --discv5-udp-port=3720 --rest-address=0.0.0.0 --nat=extip:172.18.89.142 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=cea4eb94f0608b3a1dd63dac22626d9d05caf1ccd1ce364c66ed2a413ede6cda --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=3721 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.89.142 waku bb539ee37a4a42be2a898d0dfed9a4e45d40089585141d40a6bb6f2bf83f19a9
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID bb539ee37a4a. Setting up logs at ./log/docker/node1_2025-01-10_04-07-45__a762e875-db74-45c2-a04f-a126eef6c31c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 3717
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 8108c0c15dc6. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:3717/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:3717/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.89.142/tcp/3718/p2p/16Uiu2HAmLYS64NfFVcK1ad6xg33WWrFUphYu8vM7kx3L8HVrCj1H","/ip4/172.18.89.142/tcp/3719/ws/p2p/16Uiu2HAmLYS64NfFVcK1ad6xg33WWrFUphYu8vM7kx3L8HVrCj1H"],"enrUri":"enr:-L24QKvfLZrXHden768UED1Apzq8FG7ksE74ICRWzYvagGIQUu2vT34qtUWRxmfwzuRUZXVKCAioyCdikHv-yT3dqV0CgmlkgnY0gmlwhKwSWY6KbXVsdGlhZGRyc5YACASsElmOBg6GAAoErBJZjgYOh90DgnJzhQADAQAAiXNlY3AyNTZrMaEDdS-H9z3q2bTs4DKlBu6R6XEGZcfhGhgD4FHPeAWdbcCDdGNwgg6Gg3VkcIIOiIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-10_04-07-45__a762e875-db74-45c2-a04f-a126eef6c31c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.117.183
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['8328', '8329', '8330', '8331', '8332']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 8328:8328 -p 8329:8329 -p 8330:8330 -p 8331:8331 -p 8332:8332 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=8330 --rest-port=8328 --tcp-port=8329 --discv5-udp-port=8331 --rest-address=0.0.0.0 --nat=extip:172.18.117.183 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ab1f4cd7cce77fafaec077c212e6d6434b4d18cba2d72ca5cb5dcef6d12e7c1c --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=8332 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QKvfLZrXHden768UED1Apzq8FG7ksE74ICRWzYvagGIQUu2vT34qtUWRxmfwzuRUZXVKCAioyCdikHv-yT3dqV0CgmlkgnY0gmlwhKwSWY6KbXVsdGlhZGRyc5YACASsElmOBg6GAAoErBJZjgYOh90DgnJzhQADAQAAiXNlY3AyNTZrMaEDdS-H9z3q2bTs4DKlBu6R6XEGZcfhGhgD4FHPeAWdbcCDdGNwgg6Gg3VkcIIOiIV3YWt1MgU --filternode=/ip4/172.18.89.142/tcp/3718/p2p/16Uiu2HAmLYS64NfFVcK1ad6xg33WWrFUphYu8vM7kx3L8HVrCj1H
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.117.183 waku cfec2a87f2bc17c609dce17b124811df7d6d31f09d0c579f00e4d08c0e12e3e0
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID cfec2a87f2bc. Setting up logs at ./log/docker/node2_2025-01-10_04-07-45__a762e875-db74-45c2-a04f-a126eef6c31c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 8328
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8328/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8328/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.117.183/tcp/8329/p2p/16Uiu2HAmBcP5o9MUofrMpAkdWa3tpXHCo4Y4KSJVMr5CaUxBTHN2","/ip4/172.18.117.183/tcp/8330/ws/p2p/16Uiu2HAmBcP5o9MUofrMpAkdWa3tpXHCo4Y4KSJVMr5CaUxBTHN2"],"enrUri":"enr:-L24QGteWfutRzC6i9KDqMXq2qZaxCFaqY1WNI6Z4_rQ3zrfWa24qjG-w1-VqyXmHGpB23GoMRsQTEexqcE5zHfPDhICgmlkgnY0gmlwhKwSdbeKbXVsdGlhZGRyc5YACASsEnW3BiCJAAoErBJ1twYgit0DgnJzhQADAQAAiXNlY3AyNTZrMaEC8HlGWFxpnEA1NZ2JdT1JYd1AMCYP_6Lke5HrJKCpgVODdGNwgiCJg3VkcIIgi4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8328/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.89.142/tcp/3718/p2p/16Uiu2HAmLYS64NfFVcK1ad6xg33WWrFUphYu8vM7kx3L8HVrCj1H"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:3717/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8328/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "9eb94b60-8573-4b29-b3bc-05dbae7aa45c", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"9eb94b60-8573-4b29-b3bc-05dbae7aa45c","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:8328/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:8328/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id bb539ee37a4a
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id cfec2a87f2bc
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container bb539ee37a4a. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.