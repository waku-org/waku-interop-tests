[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_extra_field with id: 2024-11-07_12-38-00__1f45334d-f992-419c-9f03-8e96e5cc4867
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-07_12-38-00__1f45334d-f992-419c-9f03-8e96e5cc4867__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.13.181
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['38701', '38702', '38703', '38704', '38705']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 38701:38701 -p 38702:38702 -p 38703:38703 -p 38704:38704 -p 38705:38705 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=38703 --rest-port=38701 --tcp-port=38702 --discv5-udp-port=38704 --rest-address=0.0.0.0 --nat=extip:172.18.13.181 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=eae0e813ae2bfd9c8a126bed479bfcb5c5daeb8a4fc299a3fe8bbc3bfc494159 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=38705 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.13.181 waku 539f8631d704004d8728da2a2779cdabbab9b142a0dc2e34d5dcc284bac90957
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 539f8631d704. Setting up logs at ./log/docker/node1_2024-11-07_12-38-00__1f45334d-f992-419c-9f03-8e96e5cc4867__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 38701
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container eeddf224524d. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38701/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38701/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.13.181/tcp/38702/p2p/16Uiu2HAm3dWwg6wUY9UxRZxGNRwF6GDZgoKwwxxRPDSXa6eufpQi","/ip4/172.18.13.181/tcp/38703/ws/p2p/16Uiu2HAm3dWwg6wUY9UxRZxGNRwF6GDZgoKwwxxRPDSXa6eufpQi"],"enrUri":"enr:-L24QLBlmJH5kDGC89WsQFkiFXF1WWmkAi4z4K_tA88z7Tu7Cff8Fj7IBlvEZhLi_yeFhFmsPlLrgGr6nKNrZ04me9gCgmlkgnY0gmlwhKwSDbWKbXVsdGlhZGRyc5YACASsEg21BpcuAAoErBINtQaXL90DgnJzhQADAQAAiXNlY3AyNTZrMaECeeY_W03OigzlkwDOvUmpFfXGTsIru2qL_RWdjKOFuguDdGNwgpcug3VkcIKXMIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-07_12-38-00__1f45334d-f992-419c-9f03-8e96e5cc4867__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.197.57
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['37411', '37412', '37413', '37414', '37415']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 37411:37411 -p 37412:37412 -p 37413:37413 -p 37414:37414 -p 37415:37415 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=37413 --rest-port=37411 --tcp-port=37412 --discv5-udp-port=37414 --rest-address=0.0.0.0 --nat=extip:172.18.197.57 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=db87148b7eca0528d29b479b0496ea5c1fe4f444aafb47aad734bacade81718c --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=37415 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QLBlmJH5kDGC89WsQFkiFXF1WWmkAi4z4K_tA88z7Tu7Cff8Fj7IBlvEZhLi_yeFhFmsPlLrgGr6nKNrZ04me9gCgmlkgnY0gmlwhKwSDbWKbXVsdGlhZGRyc5YACASsEg21BpcuAAoErBINtQaXL90DgnJzhQADAQAAiXNlY3AyNTZrMaECeeY_W03OigzlkwDOvUmpFfXGTsIru2qL_RWdjKOFuguDdGNwgpcug3VkcIKXMIV3YWt1MgU --filternode=/ip4/172.18.13.181/tcp/38702/p2p/16Uiu2HAm3dWwg6wUY9UxRZxGNRwF6GDZgoKwwxxRPDSXa6eufpQi
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.197.57 waku 8ea6390551067e425ab9181bfb15ab1aaa15879ef914e3d60af3bfa0243d90f7
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 8ea639055106. Setting up logs at ./log/docker/node2_2024-11-07_12-38-00__1f45334d-f992-419c-9f03-8e96e5cc4867__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 37411
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:37411/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:37411/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.197.57/tcp/37412/p2p/16Uiu2HAm74d6yiiEsyNZuGX6nD6nQkM1pJzT65tKivzMUDuNANYQ","/ip4/172.18.197.57/tcp/37413/ws/p2p/16Uiu2HAm74d6yiiEsyNZuGX6nD6nQkM1pJzT65tKivzMUDuNANYQ"],"enrUri":"enr:-L24QIO54W-CMC2Faojkll85szNcBTA4PehbCEc0iSaWKW__eS_zEKhu-9sEbYBzfuWnEM1t7bfNp88A-HXkEhtXJoQCgmlkgnY0gmlwhKwSxTmKbXVsdGlhZGRyc5YACASsEsU5BpIkAAoErBLFOQaSJd0DgnJzhQADAQAAiXNlY3AyNTZrMaECrOfLSXiWGQRO6SU839iAlzcMo7VQ92cFOYijDks-XcmDdGNwgpIkg3VkcIKSJoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:37411/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.13.181/tcp/38702/p2p/16Uiu2HAm3dWwg6wUY9UxRZxGNRwF6GDZgoKwwxxRPDSXa6eufpQi"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38701/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:37411/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "29b84904-8a11-4a53-8281-eeaecd6a2d8d", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"29b84904-8a11-4a53-8281-eeaecd6a2d8d","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:37411/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:37411/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 539f8631d704
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 8ea639055106
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 539f8631d704. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.