[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_extra_field with id: 2024-12-29_18-50-32__fbb69fe5-d46d-4b5b-a383-824f367b6b78
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-29_18-50-32__fbb69fe5-d46d-4b5b-a383-824f367b6b78__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.137.18
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['43406', '43407', '43408', '43409', '43410']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 43406:43406 -p 43407:43407 -p 43408:43408 -p 43409:43409 -p 43410:43410 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=43408 --rest-port=43406 --tcp-port=43407 --discv5-udp-port=43409 --rest-address=0.0.0.0 --nat=extip:172.18.137.18 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=9bb6fafe3c14b6dba8adf80ec54a921b1febdcfd8efcfe55c30223cf2f3b54ed --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=43410 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.137.18 waku 17191045b27012a7dbc21f4fdff6fe18aaaa10c8d9821d92fe72a42aaeffba08
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 17191045b270. Setting up logs at ./log/docker/node1_2024-12-29_18-50-32__fbb69fe5-d46d-4b5b-a383-824f367b6b78__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 43406
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 6ba3b9863cf8. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:43406/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:43406/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.137.18/tcp/43407/p2p/16Uiu2HAmVqTcp21STcqsSGh7tEyYsThBf8vWqgJLUKw2fXMw5GD8","/ip4/172.18.137.18/tcp/43408/ws/p2p/16Uiu2HAmVqTcp21STcqsSGh7tEyYsThBf8vWqgJLUKw2fXMw5GD8"],"enrUri":"enr:-L24QPIYTJxqGCGFiMK8IbabevwC2PeplYVAwhR1yzjpHBg2CFGE7N9emGuHaGAORf3i9LNtytEVQ1ftrZCiH4xEb50CgmlkgnY0gmlwhKwSiRKKbXVsdGlhZGRyc5YACASsEokSBqmPAAoErBKJEgapkN0DgnJzhQADAQAAiXNlY3AyNTZrMaED_0VRQvBEbjSS0UT88W33bRoXZvCwatAevNQkkyZC2duDdGNwgqmPg3VkcIKpkYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-29_18-50-32__fbb69fe5-d46d-4b5b-a383-824f367b6b78__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.199.114
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['11716', '11717', '11718', '11719', '11720']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 11716:11716 -p 11717:11717 -p 11718:11718 -p 11719:11719 -p 11720:11720 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=11718 --rest-port=11716 --tcp-port=11717 --discv5-udp-port=11719 --rest-address=0.0.0.0 --nat=extip:172.18.199.114 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=cc4fd0da4782e91f1615e497b86aacbbfdd1dcebd6c23922fad14cff4b3701cb --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=11720 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QPIYTJxqGCGFiMK8IbabevwC2PeplYVAwhR1yzjpHBg2CFGE7N9emGuHaGAORf3i9LNtytEVQ1ftrZCiH4xEb50CgmlkgnY0gmlwhKwSiRKKbXVsdGlhZGRyc5YACASsEokSBqmPAAoErBKJEgapkN0DgnJzhQADAQAAiXNlY3AyNTZrMaED_0VRQvBEbjSS0UT88W33bRoXZvCwatAevNQkkyZC2duDdGNwgqmPg3VkcIKpkYV3YWt1MgU --filternode=/ip4/172.18.137.18/tcp/43407/p2p/16Uiu2HAmVqTcp21STcqsSGh7tEyYsThBf8vWqgJLUKw2fXMw5GD8
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.199.114 waku 3a9794210398e66013d3d2d1151139d55e889259ea440f66b772af6fc2687acb
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 3a9794210398. Setting up logs at ./log/docker/node2_2024-12-29_18-50-32__fbb69fe5-d46d-4b5b-a383-824f367b6b78__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 11716
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:11716/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:11716/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.199.114/tcp/11717/p2p/16Uiu2HAmUcSKQeeBuEhBkiBv3acwdMjzbWQ8jbEK9p69ytMx1jLK","/ip4/172.18.199.114/tcp/11718/ws/p2p/16Uiu2HAmUcSKQeeBuEhBkiBv3acwdMjzbWQ8jbEK9p69ytMx1jLK"],"enrUri":"enr:-L24QOCmtaMK1liLE9II42tjkMq-d7sGYqOqyjVdt_EOWi4yDvwenFwMgXkslG7VjTJLJ2zSCxMU9ioZ1O2Q59y0z1wCgmlkgnY0gmlwhKwSx3KKbXVsdGlhZGRyc5YACASsEsdyBi3FAAoErBLHcgYtxt0DgnJzhQADAQAAiXNlY3AyNTZrMaED7ROcKb---hNX8CPf82yvh1z48GmppR0rabz3e3Jc-_iDdGNwgi3Fg3VkcIItx4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:11716/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.137.18/tcp/43407/p2p/16Uiu2HAmVqTcp21STcqsSGh7tEyYsThBf8vWqgJLUKw2fXMw5GD8"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:43406/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:11716/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "5114eb95-d0b7-4c20-8111-484ae06454e9", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"5114eb95-d0b7-4c20-8111-484ae06454e9","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:11716/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:11716/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 17191045b270
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 3a9794210398
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 17191045b270. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.