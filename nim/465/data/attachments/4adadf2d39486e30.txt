[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_pubsub_topic_string_instead_of_list with id: 2024-11-27_04-13-03__ec1e695d-627b-4e1f-8cc2-37c08bbdde76
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-27_04-13-03__ec1e695d-627b-4e1f-8cc2-37c08bbdde76__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.102.126
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['13449', '13450', '13451', '13452', '13453']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 13449:13449 -p 13450:13450 -p 13451:13451 -p 13452:13452 -p 13453:13453 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=13451 --rest-port=13449 --tcp-port=13450 --discv5-udp-port=13452 --rest-address=0.0.0.0 --nat=extip:172.18.102.126 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=aa93cc59bca42fe1fb9ba85f1fd3d68bec45dcbb0eb70bfdb8f66dad69bef053 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=13453 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.102.126 waku 393d63d772f5e5c2455d0f0a096c50987721aa43dec95622e91dfb1101c7d900
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 393d63d772f5. Setting up logs at ./log/docker/node1_2024-11-27_04-13-03__ec1e695d-627b-4e1f-8cc2-37c08bbdde76__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 13449
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 67cb63c8a667. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:13449/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:13449/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.102.126/tcp/13450/p2p/16Uiu2HAkuzBTtaTarYAtZCNFpAQc8oeaeBhgr74ypmsuprewcZRw","/ip4/172.18.102.126/tcp/13451/ws/p2p/16Uiu2HAkuzBTtaTarYAtZCNFpAQc8oeaeBhgr74ypmsuprewcZRw"],"enrUri":"enr:-L24QNNU6XLG0kEzBpccDNS9aHEYNlmbbzBqpqpZIsL8b8aZJVV4OuE842Ek-oWsx39SMXMxVEW67ayOtA250BG_eXkCgmlkgnY0gmlwhKwSZn6KbXVsdGlhZGRyc5YACASsEmZ-BjSKAAoErBJmfgY0i90DgnJzhQADAQAAiXNlY3AyNTZrMaECCFPsjYFFwesn7hsz2kBAiJjd5KhVtJqXYJwbwyZyLt6DdGNwgjSKg3VkcII0jIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-27_04-13-03__ec1e695d-627b-4e1f-8cc2-37c08bbdde76__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.14.36
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['61985', '61986', '61987', '61988', '61989']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 61985:61985 -p 61986:61986 -p 61987:61987 -p 61988:61988 -p 61989:61989 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=61987 --rest-port=61985 --tcp-port=61986 --discv5-udp-port=61988 --rest-address=0.0.0.0 --nat=extip:172.18.14.36 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=1bc7b4f3a39595befe1ddb2a2fba6fa8e56b7edf391da887e2ac7fc5fb1ca7c8 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=61989 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QNNU6XLG0kEzBpccDNS9aHEYNlmbbzBqpqpZIsL8b8aZJVV4OuE842Ek-oWsx39SMXMxVEW67ayOtA250BG_eXkCgmlkgnY0gmlwhKwSZn6KbXVsdGlhZGRyc5YACASsEmZ-BjSKAAoErBJmfgY0i90DgnJzhQADAQAAiXNlY3AyNTZrMaECCFPsjYFFwesn7hsz2kBAiJjd5KhVtJqXYJwbwyZyLt6DdGNwgjSKg3VkcII0jIV3YWt1MgU --filternode=/ip4/172.18.102.126/tcp/13450/p2p/16Uiu2HAkuzBTtaTarYAtZCNFpAQc8oeaeBhgr74ypmsuprewcZRw
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.14.36 waku 85e72b7b88e57066493defb467711c2aa3ce1ef11949dbad59a80e4729cb4a5c
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 85e72b7b88e5. Setting up logs at ./log/docker/node2_2024-11-27_04-13-03__ec1e695d-627b-4e1f-8cc2-37c08bbdde76__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 61985
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:61985/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:61985/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.14.36/tcp/61986/p2p/16Uiu2HAkz5huz5aKNxo3gtDStDDY9Qp8wB4YMX8EXcV29SPYazCV","/ip4/172.18.14.36/tcp/61987/ws/p2p/16Uiu2HAkz5huz5aKNxo3gtDStDDY9Qp8wB4YMX8EXcV29SPYazCV"],"enrUri":"enr:-L24QNIdxpWZMOoQE4zcfdlB_2mUJPxctYgpvhRl11XjYT-udqgoAHI1AniJFyVFhWoSm1eStpDmq0vpin4WMRa72G0CgmlkgnY0gmlwhKwSDiSKbXVsdGlhZGRyc5YACASsEg4kBvIiAAoErBIOJAbyI90DgnJzhQADAQAAiXNlY3AyNTZrMaECRS0Bb6Elv13KQPyaLFYyOr8uxzjJ7-59K0uE6BuLlLaDdGNwgvIig3VkcILyJIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:61985/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.102.126/tcp/13450/p2p/16Uiu2HAkuzBTtaTarYAtZCNFpAQc8oeaeBhgr74ypmsuprewcZRw"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:13449/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:61985/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "57a320f5-9530-4972-b512-39dcba55bccb", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"57a320f5-9530-4972-b512-39dcba55bccb","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:61985/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": "/test/1/waku-filter/proto", "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:61985/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 393d63d772f5
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 85e72b7b88e5
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 393d63d772f5. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.