[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2024-10-31_04-07-27__e1f1acdc-7ce2-47b9-812c-dfbbcbd23479
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-10-31_04-07-27__e1f1acdc-7ce2-47b9-812c-dfbbcbd23479__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.130.245
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['25654', '25655', '25656', '25657', '25658']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 25654:25654 -p 25655:25655 -p 25656:25656 -p 25657:25657 -p 25658:25658 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=25656 --rest-port=25654 --tcp-port=25655 --discv5-udp-port=25657 --rest-address=0.0.0.0 --nat=extip:172.18.130.245 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=7f5cab6b71ac7ef0cacad1822e4372bbac0eabccdabdb4e17fb52bec1a8888fa --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=25658 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.130.245 waku 7edd2418d87217ceb16d3851888c2be9bb3784427baa08b7320ee60b105156a4
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 7edd2418d872. Setting up logs at ./log/docker/node1_2024-10-31_04-07-27__e1f1acdc-7ce2-47b9-812c-dfbbcbd23479__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 25654
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 5a4038a75aa2. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:25654/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:25654/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.130.245/tcp/25655/p2p/16Uiu2HAm7BjyWGsJ7qENQWj8Qwjg6FEt8wPRVphSnM21tHASFa3P","/ip4/172.18.130.245/tcp/25656/ws/p2p/16Uiu2HAm7BjyWGsJ7qENQWj8Qwjg6FEt8wPRVphSnM21tHASFa3P"],"enrUri":"enr:-L24QNJjjZyNbdICFTjsivLtO_SyixAnwFkub-ZjTquM-JSXDiSluAajIB4-XlcM_Pc-DwTXubn-xonuXT17wv02tcECgmlkgnY0gmlwhKwSgvWKbXVsdGlhZGRyc5YACASsEoL1BmQ3AAoErBKC9QZkON0DgnJzhQADAQAAiXNlY3AyNTZrMaECrrqhBXK9oCevDDcHYlnpWnHa6SlZz8LAG1z3YnFaJw6DdGNwgmQ3g3VkcIJkOYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-10-31_04-07-27__e1f1acdc-7ce2-47b9-812c-dfbbcbd23479__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.204.30
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['25742', '25743', '25744', '25745', '25746']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 25742:25742 -p 25743:25743 -p 25744:25744 -p 25745:25745 -p 25746:25746 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=25744 --rest-port=25742 --tcp-port=25743 --discv5-udp-port=25745 --rest-address=0.0.0.0 --nat=extip:172.18.204.30 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=916ccd8cae74cccb2bd048e7995ae654dd02cb5d2ffa0adecd8d74dae540dabc --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=25746 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QNJjjZyNbdICFTjsivLtO_SyixAnwFkub-ZjTquM-JSXDiSluAajIB4-XlcM_Pc-DwTXubn-xonuXT17wv02tcECgmlkgnY0gmlwhKwSgvWKbXVsdGlhZGRyc5YACASsEoL1BmQ3AAoErBKC9QZkON0DgnJzhQADAQAAiXNlY3AyNTZrMaECrrqhBXK9oCevDDcHYlnpWnHa6SlZz8LAG1z3YnFaJw6DdGNwgmQ3g3VkcIJkOYV3YWt1MgU --filternode=/ip4/172.18.130.245/tcp/25655/p2p/16Uiu2HAm7BjyWGsJ7qENQWj8Qwjg6FEt8wPRVphSnM21tHASFa3P
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.204.30 waku 7fd691a2d00087da4b826867e1ba8b4011ab87ca97beefad3b10e3eff93faef0
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 7fd691a2d000. Setting up logs at ./log/docker/node2_2024-10-31_04-07-27__e1f1acdc-7ce2-47b9-812c-dfbbcbd23479__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 25742
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:25742/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:25742/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.204.30/tcp/25743/p2p/16Uiu2HAmU32p7R56QRDJXWui4gojwTANEoDsDWU6QK6d4hUhbFH4","/ip4/172.18.204.30/tcp/25744/ws/p2p/16Uiu2HAmU32p7R56QRDJXWui4gojwTANEoDsDWU6QK6d4hUhbFH4"],"enrUri":"enr:-L24QEtUGEeLGHCkIUnO2aqSh9LDU0l3VXKexhcKyOqKsu5QXQiF498gEi86Dh8pHOUwgNUu-zgJFywjonzd7PubOTQCgmlkgnY0gmlwhKwSzB6KbXVsdGlhZGRyc5YACASsEsweBmSPAAoErBLMHgZkkN0DgnJzhQADAQAAiXNlY3AyNTZrMaED5ITdsTSPHRCcbrZgpoaEE42eliIhNr-egvLxV7SvNsuDdGNwgmSPg3VkcIJkkYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:25742/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.130.245/tcp/25655/p2p/16Uiu2HAm7BjyWGsJ7qENQWj8Qwjg6FEt8wPRVphSnM21tHASFa3P"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:25654/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:25742/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "88961049-9a8b-43ea-9929-1a6821110c66", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"88961049-9a8b-43ea-9929-1a6821110c66","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:25742/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:25742/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 7edd2418d872
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 7fd691a2d000
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 7edd2418d872. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.