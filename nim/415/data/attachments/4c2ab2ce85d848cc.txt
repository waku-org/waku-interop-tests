[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_no_request_id with id: 2024-10-31_04-07-24__415f8186-6c5f-4a10-93c5-e9660da2eb39
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-10-31_04-07-24__415f8186-6c5f-4a10-93c5-e9660da2eb39__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.79.97
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['8442', '8443', '8444', '8445', '8446']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 8442:8442 -p 8443:8443 -p 8444:8444 -p 8445:8445 -p 8446:8446 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=8444 --rest-port=8442 --tcp-port=8443 --discv5-udp-port=8445 --rest-address=0.0.0.0 --nat=extip:172.18.79.97 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ec4bc098db1ebcff7f91be8aed3daaf7de91a4c69ad0157daf77e65e12e66903 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=8446 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.79.97 waku 55af072c2c7f9d98b6227e45ef267d8e8090fda25c903d83397686c62a1ce24e
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 55af072c2c7f. Setting up logs at ./log/docker/node1_2024-10-31_04-07-24__415f8186-6c5f-4a10-93c5-e9660da2eb39__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 8442
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container d2530a403722. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8442/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8442/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.79.97/tcp/8443/p2p/16Uiu2HAmH8ouR6u51CJJAcj8N3kfjdiRJd2EC8twXB2biW9QqbgK","/ip4/172.18.79.97/tcp/8444/ws/p2p/16Uiu2HAmH8ouR6u51CJJAcj8N3kfjdiRJd2EC8twXB2biW9QqbgK"],"enrUri":"enr:-L24QBPpARwMxKPQYUFMrlAXQHYhcX9AZiemcNAm1nPVxQnmDKdGFm9vnqniqn5LCQKUjc4OZ2PTH99qO4_KvjdA4i0CgmlkgnY0gmlwhKwST2GKbXVsdGlhZGRyc5YACASsEk9hBiD7AAoErBJPYQYg_N0DgnJzhQADAQAAiXNlY3AyNTZrMaEDQo8y7JBFe1Kgl1_GrasMqHYi3PdgNxcEJXnlbrqHAGCDdGNwgiD7g3VkcIIg_YV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-10-31_04-07-24__415f8186-6c5f-4a10-93c5-e9660da2eb39__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.15.111
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['11803', '11804', '11805', '11806', '11807']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 11803:11803 -p 11804:11804 -p 11805:11805 -p 11806:11806 -p 11807:11807 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=11805 --rest-port=11803 --tcp-port=11804 --discv5-udp-port=11806 --rest-address=0.0.0.0 --nat=extip:172.18.15.111 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=549a63ecdacd0d32b51afe3959b1abcfe8cae42b1aec69643be871cfabff66ce --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=11807 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QBPpARwMxKPQYUFMrlAXQHYhcX9AZiemcNAm1nPVxQnmDKdGFm9vnqniqn5LCQKUjc4OZ2PTH99qO4_KvjdA4i0CgmlkgnY0gmlwhKwST2GKbXVsdGlhZGRyc5YACASsEk9hBiD7AAoErBJPYQYg_N0DgnJzhQADAQAAiXNlY3AyNTZrMaEDQo8y7JBFe1Kgl1_GrasMqHYi3PdgNxcEJXnlbrqHAGCDdGNwgiD7g3VkcIIg_YV3YWt1MgU --filternode=/ip4/172.18.79.97/tcp/8443/p2p/16Uiu2HAmH8ouR6u51CJJAcj8N3kfjdiRJd2EC8twXB2biW9QqbgK
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.15.111 waku 97c541e8f1ffa9006daa4354513e04fdb23276358d8791ebd960de1653493807
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 97c541e8f1ff. Setting up logs at ./log/docker/node2_2024-10-31_04-07-24__415f8186-6c5f-4a10-93c5-e9660da2eb39__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 11803
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:11803/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:11803/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.15.111/tcp/11804/p2p/16Uiu2HAmCYvAKrqHPqJZQ8Xv2DMqQMLTTJziDBwT6yQvCU1JU9Ra","/ip4/172.18.15.111/tcp/11805/ws/p2p/16Uiu2HAmCYvAKrqHPqJZQ8Xv2DMqQMLTTJziDBwT6yQvCU1JU9Ra"],"enrUri":"enr:-L24QJ_ZTpu23-ifJbQWyHZfIUhuFbEeeu6BLEJjxBTrKx23WoNhcOBQWLi07cjjWdT8kXp8dFbJmbKeNghpWHuNgfYCgmlkgnY0gmlwhKwSD2-KbXVsdGlhZGRyc5YACASsEg9vBi4cAAoErBIPbwYuHd0DgnJzhQADAQAAiXNlY3AyNTZrMaEC_nHHUb7FHEzdxqMb2oqsoF4uWC5_9GszD3w52BDufjmDdGNwgi4cg3VkcIIuHoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:11803/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.79.97/tcp/8443/p2p/16Uiu2HAmH8ouR6u51CJJAcj8N3kfjdiRJd2EC8twXB2biW9QqbgK"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8442/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:11803/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "fa0e3943-827b-436b-8e4b-f7a2b19cd99e", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"fa0e3943-827b-436b-8e4b-f7a2b19cd99e","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:11803/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:11803/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 55af072c2c7f
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 97c541e8f1ff
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 55af072c2c7f. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.