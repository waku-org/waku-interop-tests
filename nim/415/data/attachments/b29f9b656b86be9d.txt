[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_invalid_pubsub_topic_format with id: 2024-10-31_04-06-41__406adeca-b43f-401a-95fb-d9b77b0598b8
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-10-31_04-06-41__406adeca-b43f-401a-95fb-d9b77b0598b8__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.35.235
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['48420', '48421', '48422', '48423', '48424']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 48420:48420 -p 48421:48421 -p 48422:48422 -p 48423:48423 -p 48424:48424 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=48422 --rest-port=48420 --tcp-port=48421 --discv5-udp-port=48423 --rest-address=0.0.0.0 --nat=extip:172.18.35.235 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=18ffb455e3a0d7b06d79acd4aaa0df1547acfb28e3affdcab1ec520bedebeaef --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=48424 --metrics-logging=true --relay=true --filter=true
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 7753edd9397c. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.35.235 waku d93d7bf14e441bf9ce57108fd21c872860293c7cdd20916504839bd0e478cd80
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID d93d7bf14e44. Setting up logs at ./log/docker/node1_2024-10-31_04-06-41__406adeca-b43f-401a-95fb-d9b77b0598b8__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 48420
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:48420/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:48420/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.35.235/tcp/48421/p2p/16Uiu2HAm1HEUVoZnfD8CSzgEA2FoxadjCMy7SZnQCXQoZRDmM6sH","/ip4/172.18.35.235/tcp/48422/ws/p2p/16Uiu2HAm1HEUVoZnfD8CSzgEA2FoxadjCMy7SZnQCXQoZRDmM6sH"],"enrUri":"enr:-L24QBXkUtsMH40Lhq_XKlpAyIUut9S89Z6FHALYS5DSIjDDKxSR6qjJjWxxnYua7ahghpoH7CiH1bEBSGcQvVg8d94CgmlkgnY0gmlwhKwSI-uKbXVsdGlhZGRyc5YACASsEiPrBr0lAAoErBIj6wa9Jt0DgnJzhQADAQAAiXNlY3AyNTZrMaECVvyi6ThrWIM09aQdLWNGl6x0RXXI9spjOF-RTE_U5HiDdGNwgr0lg3VkcIK9J4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-10-31_04-06-41__406adeca-b43f-401a-95fb-d9b77b0598b8__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.233.101
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['48030', '48031', '48032', '48033', '48034']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 48030:48030 -p 48031:48031 -p 48032:48032 -p 48033:48033 -p 48034:48034 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=48032 --rest-port=48030 --tcp-port=48031 --discv5-udp-port=48033 --rest-address=0.0.0.0 --nat=extip:172.18.233.101 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=88fafede2b4b58ace62d0caf01fdd7ffc9d4fcbb4c63191fa17e3d4cebc5fbf8 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=48034 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QBXkUtsMH40Lhq_XKlpAyIUut9S89Z6FHALYS5DSIjDDKxSR6qjJjWxxnYua7ahghpoH7CiH1bEBSGcQvVg8d94CgmlkgnY0gmlwhKwSI-uKbXVsdGlhZGRyc5YACASsEiPrBr0lAAoErBIj6wa9Jt0DgnJzhQADAQAAiXNlY3AyNTZrMaECVvyi6ThrWIM09aQdLWNGl6x0RXXI9spjOF-RTE_U5HiDdGNwgr0lg3VkcIK9J4V3YWt1MgU --filternode=/ip4/172.18.35.235/tcp/48421/p2p/16Uiu2HAm1HEUVoZnfD8CSzgEA2FoxadjCMy7SZnQCXQoZRDmM6sH
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.233.101 waku a8aebd53417db2c924e6594ebf0964f507a45d75ff6e3289f09f13d033039a0d
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID a8aebd53417d. Setting up logs at ./log/docker/node2_2024-10-31_04-06-41__406adeca-b43f-401a-95fb-d9b77b0598b8__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 48030
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:48030/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:48030/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.233.101/tcp/48031/p2p/16Uiu2HAkx2vD2v6MZayVfAjpJgTJgFDsGmpL7RRFNGcDgVzpzFsn","/ip4/172.18.233.101/tcp/48032/ws/p2p/16Uiu2HAkx2vD2v6MZayVfAjpJgTJgFDsGmpL7RRFNGcDgVzpzFsn"],"enrUri":"enr:-L24QHb7zzvzWR9IOQOH_7frEpuXZQRz9jrMDeNSz0llyY1beW1L-QF5Shpc9rNo02ir3qiBjmg1OMVaWeloR_g0TfECgmlkgnY0gmlwhKwS6WWKbXVsdGlhZGRyc5YACASsEullBrufAAoErBLpZQa7oN0DgnJzhQADAQAAiXNlY3AyNTZrMaECJr7KRpQLb1EPjCCm0n6AElmo7MrUBSmlEb-HCkj8U3GDdGNwgrufg3VkcIK7oYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:48030/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.35.235/tcp/48421/p2p/16Uiu2HAm1HEUVoZnfD8CSzgEA2FoxadjCMy7SZnQCXQoZRDmM6sH"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:48420/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:48030/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "198fd0af-8e73-4af1-80fe-0c80d2d04965", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"198fd0af-8e73-4af1-80fe-0c80d2d04965","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:48030/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": ["/waku/2/rs/3/1"]}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:48030/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id d93d7bf14e44
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id a8aebd53417d
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container d93d7bf14e44. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.