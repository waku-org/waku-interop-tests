[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_extra_field with id: 2024-12-07_04-12-34__99b5b03d-f414-4ca0-9d1b-fdbe712e8ea7
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-07_04-12-34__99b5b03d-f414-4ca0-9d1b-fdbe712e8ea7__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.130.217
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['12671', '12672', '12673', '12674', '12675']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 12671:12671 -p 12672:12672 -p 12673:12673 -p 12674:12674 -p 12675:12675 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=12673 --rest-port=12671 --tcp-port=12672 --discv5-udp-port=12674 --rest-address=0.0.0.0 --nat=extip:172.18.130.217 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=4f6fbd4be51e57aaf0d3b0dac75a6fe85bb2bb6cf35103b8721bfd93d2c5ffab --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=12675 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.130.217 waku 4972d03128dbeedb05863d20d03a1f4543b3c22ab47e3d51c0077f5689e80bec
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 4972d03128db. Setting up logs at ./log/docker/node1_2024-12-07_04-12-34__99b5b03d-f414-4ca0-9d1b-fdbe712e8ea7__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 12671
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 0d094336106b. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:12671/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:12671/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.130.217/tcp/12672/p2p/16Uiu2HAmLZxtyBHLCNiUZAqCA45Q8PVNCNNQPxhReDH7SQa4HSmv","/ip4/172.18.130.217/tcp/12673/ws/p2p/16Uiu2HAmLZxtyBHLCNiUZAqCA45Q8PVNCNNQPxhReDH7SQa4HSmv"],"enrUri":"enr:-L24QIdoKv02OZInwWSQHFtpOm_-FZze-OEY-LmPcg3E3TbmL-zMQEe_4rLM_tiuySIUJtkFAOgYTNyXe0_MHDKrqE8CgmlkgnY0gmlwhKwSgtmKbXVsdGlhZGRyc5YACASsEoLZBjGAAAoErBKC2QYxgd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDdZPykm5vv6Bl03EGQnonsxG8cC87tRb8djV8v8dBGkGDdGNwgjGAg3VkcIIxgoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-07_04-12-34__99b5b03d-f414-4ca0-9d1b-fdbe712e8ea7__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.123.61
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['46434', '46435', '46436', '46437', '46438']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 46434:46434 -p 46435:46435 -p 46436:46436 -p 46437:46437 -p 46438:46438 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=46436 --rest-port=46434 --tcp-port=46435 --discv5-udp-port=46437 --rest-address=0.0.0.0 --nat=extip:172.18.123.61 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=29a2a2eda23bce2d2ecb943d710b7b600ae8be73ebad10ca7ebbdc0aa7de5fbd --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=46438 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QIdoKv02OZInwWSQHFtpOm_-FZze-OEY-LmPcg3E3TbmL-zMQEe_4rLM_tiuySIUJtkFAOgYTNyXe0_MHDKrqE8CgmlkgnY0gmlwhKwSgtmKbXVsdGlhZGRyc5YACASsEoLZBjGAAAoErBKC2QYxgd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDdZPykm5vv6Bl03EGQnonsxG8cC87tRb8djV8v8dBGkGDdGNwgjGAg3VkcIIxgoV3YWt1MgU --filternode=/ip4/172.18.130.217/tcp/12672/p2p/16Uiu2HAmLZxtyBHLCNiUZAqCA45Q8PVNCNNQPxhReDH7SQa4HSmv
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.123.61 waku e8ee714d93d355f47be1bdc05e20ebb5095d1a4406163891555e88641af4848d
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID e8ee714d93d3. Setting up logs at ./log/docker/node2_2024-12-07_04-12-34__99b5b03d-f414-4ca0-9d1b-fdbe712e8ea7__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 46434
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:46434/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:46434/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.123.61/tcp/46435/p2p/16Uiu2HAm6EbvPMLy6EcaeM655mLi1bbVt3pgifsGsfP5dJEsZvdH","/ip4/172.18.123.61/tcp/46436/ws/p2p/16Uiu2HAm6EbvPMLy6EcaeM655mLi1bbVt3pgifsGsfP5dJEsZvdH"],"enrUri":"enr:-L24QDbPzsDgrkxcJBL-6dcAqzkzbKRN6jzfGMb1YH1HrlyTHD1_JE4mgN4-IhcwXQB6TA9Lv07D_ZiMS_sLOUUVJZMCgmlkgnY0gmlwhKwSez2KbXVsdGlhZGRyc5YACASsEns9BrVjAAoErBJ7PQa1ZN0DgnJzhQADAQAAiXNlY3AyNTZrMaECoJqT-xNnSfgzZmZHz4HP2Zy9Xff_wtu060cjnfjPaCyDdGNwgrVjg3VkcIK1ZYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:46434/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.130.217/tcp/12672/p2p/16Uiu2HAmLZxtyBHLCNiUZAqCA45Q8PVNCNNQPxhReDH7SQa4HSmv"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:12671/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:46434/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "4da6e7f3-327b-490b-8102-ae5848a2c5c5", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"4da6e7f3-327b-490b-8102-ae5848a2c5c5","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:46434/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:46434/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 4972d03128db
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id e8ee714d93d3
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 4972d03128db. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.