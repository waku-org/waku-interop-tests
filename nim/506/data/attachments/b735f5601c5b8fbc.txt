[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_no_request_id with id: 2024-12-07_04-12-27__a9bfb284-f919-47b2-8d72-7dcb43f4c592
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-07_04-12-27__a9bfb284-f919-47b2-8d72-7dcb43f4c592__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.173.121
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['46064', '46065', '46066', '46067', '46068']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 46064:46064 -p 46065:46065 -p 46066:46066 -p 46067:46067 -p 46068:46068 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=46066 --rest-port=46064 --tcp-port=46065 --discv5-udp-port=46067 --rest-address=0.0.0.0 --nat=extip:172.18.173.121 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=18bdadde28a5cc0276345dcb6d8ddffddfd1fddea07e8c2d495d1ce8d6af3aff --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=46068 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.173.121 waku 08c9a3ff53c407fc4a379b67afa2699771ad1e9b127b35f5cf8b90df36e88b14
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 08c9a3ff53c4. Setting up logs at ./log/docker/node1_2024-12-07_04-12-27__a9bfb284-f919-47b2-8d72-7dcb43f4c592__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 46064
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container ef7cf21b23da. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:46064/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:46064/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.173.121/tcp/46065/p2p/16Uiu2HAmEdF5pmoZQv8swDDj9FgMPWhcVek4mm6bMRP8fg2vS5wc","/ip4/172.18.173.121/tcp/46066/ws/p2p/16Uiu2HAmEdF5pmoZQv8swDDj9FgMPWhcVek4mm6bMRP8fg2vS5wc"],"enrUri":"enr:-L24QJfDUqud26jgwkPTWbJ1X2zvSJq5A0AP1uTbmOUqaoUrGVtiDxAb9ndm7P5Dlzr8iIOT5RJsLBhtL_53nRcmY7sCgmlkgnY0gmlwhKwSrXmKbXVsdGlhZGRyc5YACASsEq15BrPxAAoErBKteQaz8t0DgnJzhQADAQAAiXNlY3AyNTZrMaEDHUTfDQU6d5evsZpzgb49gJTZ9be3FMH2jPWpXA7cfoeDdGNwgrPxg3VkcIKz84V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-07_04-12-27__a9bfb284-f919-47b2-8d72-7dcb43f4c592__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.160.193
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['44524', '44525', '44526', '44527', '44528']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 44524:44524 -p 44525:44525 -p 44526:44526 -p 44527:44527 -p 44528:44528 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=44526 --rest-port=44524 --tcp-port=44525 --discv5-udp-port=44527 --rest-address=0.0.0.0 --nat=extip:172.18.160.193 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=af61d4a6cfa65543ac113de0aff0eccdf2e21f06df8ceab5c3fbe1b6c84fedbd --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=44528 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QJfDUqud26jgwkPTWbJ1X2zvSJq5A0AP1uTbmOUqaoUrGVtiDxAb9ndm7P5Dlzr8iIOT5RJsLBhtL_53nRcmY7sCgmlkgnY0gmlwhKwSrXmKbXVsdGlhZGRyc5YACASsEq15BrPxAAoErBKteQaz8t0DgnJzhQADAQAAiXNlY3AyNTZrMaEDHUTfDQU6d5evsZpzgb49gJTZ9be3FMH2jPWpXA7cfoeDdGNwgrPxg3VkcIKz84V3YWt1MgU --filternode=/ip4/172.18.173.121/tcp/46065/p2p/16Uiu2HAmEdF5pmoZQv8swDDj9FgMPWhcVek4mm6bMRP8fg2vS5wc
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.160.193 waku 67b67d6a32cec776aadd793413f9a62d2380b4882b2ea2adfe324b086cd8fd81
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 67b67d6a32ce. Setting up logs at ./log/docker/node2_2024-12-07_04-12-27__a9bfb284-f919-47b2-8d72-7dcb43f4c592__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 44524
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:44524/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:44524/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.160.193/tcp/44525/p2p/16Uiu2HAkwvj3oJau7ncCstw3UzWi8Mh9WaRFV82K2DB8EwtnJoGo","/ip4/172.18.160.193/tcp/44526/ws/p2p/16Uiu2HAkwvj3oJau7ncCstw3UzWi8Mh9WaRFV82K2DB8EwtnJoGo"],"enrUri":"enr:-L24QF6DOGIAbQ5_JnTTwtTlncu2Dkxdc7caDjVOtw8WIiWIWjI9Cv6VI5dUplVWy_57UT8sxsjqBet85S-84PLOwf4CgmlkgnY0gmlwhKwSoMGKbXVsdGlhZGRyc5YACASsEqDBBq3tAAoErBKgwQat7t0DgnJzhQADAQAAiXNlY3AyNTZrMaECJSiwAQyhigdsn4lHmgz0oChS8MqNOAxA-xPCE0cGVGSDdGNwgq3tg3VkcIKt74V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:44524/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.173.121/tcp/46065/p2p/16Uiu2HAmEdF5pmoZQv8swDDj9FgMPWhcVek4mm6bMRP8fg2vS5wc"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:46064/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:44524/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "065bcf7b-31eb-44dd-9c15-5b6b4674b76e", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"065bcf7b-31eb-44dd-9c15-5b6b4674b76e","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:44524/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:44524/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 08c9a3ff53c4
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 67b67d6a32ce
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 08c9a3ff53c4. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.