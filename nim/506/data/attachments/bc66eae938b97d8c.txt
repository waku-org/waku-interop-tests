[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_invalid_pubsub_topic_format with id: 2024-12-07_04-11-11__6187d9a0-9fc3-4acd-a057-f8bdd5e4d9d9
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-07_04-11-11__6187d9a0-9fc3-4acd-a057-f8bdd5e4d9d9__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.186.26
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['16836', '16837', '16838', '16839', '16840']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 16836:16836 -p 16837:16837 -p 16838:16838 -p 16839:16839 -p 16840:16840 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=16838 --rest-port=16836 --tcp-port=16837 --discv5-udp-port=16839 --rest-address=0.0.0.0 --nat=extip:172.18.186.26 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=703cde4484e35ead9e8bf9fe6d1fac7a138cb9199feff9d9e471e9cfeba5db7b --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=16840 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.186.26 waku b36e7e9ca4a745ef5304e13888b9c1268c9d8288d8e988bfc45334ba1a480854
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID b36e7e9ca4a7. Setting up logs at ./log/docker/node1_2024-12-07_04-11-11__6187d9a0-9fc3-4acd-a057-f8bdd5e4d9d9__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 16836
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container c2a0e7c1ebb8. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:16836/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:16836/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.186.26/tcp/16837/p2p/16Uiu2HAmH3JQ5WVe2ggJs4XsbwZLWwGMJoiauVUXC1xvjGgi73mn","/ip4/172.18.186.26/tcp/16838/ws/p2p/16Uiu2HAmH3JQ5WVe2ggJs4XsbwZLWwGMJoiauVUXC1xvjGgi73mn"],"enrUri":"enr:-L24QKg17YPxDBI8W6efquokxxRbegbiR2lpehmlWijCYClrKYg6Cv6aVRQC6J_mzTj-CBRvArgp2WXBqxFKnM4Ae4sCgmlkgnY0gmlwhKwSuhqKbXVsdGlhZGRyc5YACASsEroaBkHFAAoErBK6GgZBxt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDQSXuupowVFnOcJaDry1A0V9O3Og8cQLPOI5WMtEnHg2DdGNwgkHFg3VkcIJBx4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-07_04-11-11__6187d9a0-9fc3-4acd-a057-f8bdd5e4d9d9__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.84.154
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['30638', '30639', '30640', '30641', '30642']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 30638:30638 -p 30639:30639 -p 30640:30640 -p 30641:30641 -p 30642:30642 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=30640 --rest-port=30638 --tcp-port=30639 --discv5-udp-port=30641 --rest-address=0.0.0.0 --nat=extip:172.18.84.154 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ae7c28cd4cba7a7ec11c6f3dcf9c5b9cbed49efa35ddaa7cca9e54cdcac5b8dd --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=30642 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QKg17YPxDBI8W6efquokxxRbegbiR2lpehmlWijCYClrKYg6Cv6aVRQC6J_mzTj-CBRvArgp2WXBqxFKnM4Ae4sCgmlkgnY0gmlwhKwSuhqKbXVsdGlhZGRyc5YACASsEroaBkHFAAoErBK6GgZBxt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDQSXuupowVFnOcJaDry1A0V9O3Og8cQLPOI5WMtEnHg2DdGNwgkHFg3VkcIJBx4V3YWt1MgU --filternode=/ip4/172.18.186.26/tcp/16837/p2p/16Uiu2HAmH3JQ5WVe2ggJs4XsbwZLWwGMJoiauVUXC1xvjGgi73mn
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.84.154 waku 3db5dfbc22b745a19d9d7dd9e5463268b9da14f3d51f85a274bb88662f53a662
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 3db5dfbc22b7. Setting up logs at ./log/docker/node2_2024-12-07_04-11-11__6187d9a0-9fc3-4acd-a057-f8bdd5e4d9d9__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 30638
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30638/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30638/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.84.154/tcp/30639/p2p/16Uiu2HAm5C9Rpx9uSmqttUWrr5riMa1fT7er5NEHi2zbFX2tbiu4","/ip4/172.18.84.154/tcp/30640/ws/p2p/16Uiu2HAm5C9Rpx9uSmqttUWrr5riMa1fT7er5NEHi2zbFX2tbiu4"],"enrUri":"enr:-L24QEiMyOb4QgACfkinMNIKrBSz4uOV_S6VAJjik__whlm_U4xGK1zJjTS67z4BPyKRDgcC0u7svB9SaMC31wTGvq0CgmlkgnY0gmlwhKwSVJqKbXVsdGlhZGRyc5YACASsElSaBnevAAoErBJUmgZ3sN0DgnJzhQADAQAAiXNlY3AyNTZrMaECkR3GQ06wgQ_gEPemObGNRs8YEjYDa4KhGwWipKhG1i-DdGNwgnevg3VkcIJ3sYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:30638/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.186.26/tcp/16837/p2p/16Uiu2HAmH3JQ5WVe2ggJs4XsbwZLWwGMJoiauVUXC1xvjGgi73mn"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:16836/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:30638/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "d01a4e9f-9148-4daf-8f3a-54764fdf825f", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"d01a4e9f-9148-4daf-8f3a-54764fdf825f","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:30638/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": ["/waku/2/rs/3/1"]}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:30638/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id b36e7e9ca4a7
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 3db5dfbc22b7
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container b36e7e9ca4a7. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.