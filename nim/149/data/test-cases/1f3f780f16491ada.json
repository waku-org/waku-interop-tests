{"uid":"1f3f780f16491ada","name":"test_filter_update_subscription_with_invalid_content_topic_format","fullName":"tests.filter.test_subscribe_update.TestFilterSubscribeUpdate#test_filter_update_subscription_with_invalid_content_topic_format","historyId":"2a02e8b65abfd27cfc925612aa51b4ba","time":{"start":1713187074986,"stop":1713187075005,"duration":19},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"set_allure_env_variables","time":{"start":1713187048156,"stop":1713187048156,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"attach_logs_on_fail","time":{"start":1713187071609,"stop":1713187071609,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"test_setup","time":{"start":1713187071610,"stop":1713187071610,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"filter_setup","time":{"start":1713187071610,"stop":1713187071610,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"setup_main_relay_node","time":{"start":1713187071610,"stop":1713187073378,"duration":1768},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"close_open_nodes","time":{"start":1713187071610,"stop":1713187071610,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"test_id","time":{"start":1713187071610,"stop":1713187071610,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"setup_main_filter_node","time":{"start":1713187073378,"stop":1713187074956,"duration":1578},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"subscribe_main_nodes","time":{"start":1713187074956,"stop":1713187074985,"duration":29},"status":"passed","steps":[{"name":"wait_for_subscriptions_on_main_nodes","time":{"start":1713187074957,"stop":1713187074985,"duration":28},"status":"passed","steps":[{"name":"create_filter_subscription_with_retry","time":{"start":1713187074977,"stop":1713187074985,"duration":8},"status":"passed","steps":[{"name":"create_filter_subscription","time":{"start":1713187074977,"stop":1713187074985,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"subscription","value":"{'requestId': 'ec768672-af6f-4798-bafe-56ea1ad9d52c', 'contentFilters': ['/test/1/waku-filter/proto'], 'pubsubTopic': '/waku/2/rs/0/1'}"},{"name":"node","value":"None"}],"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0}],"attachments":[],"parameters":[{"name":"subscription","value":"{'requestId': 'ec768672-af6f-4798-bafe-56ea1ad9d52c', 'contentFilters': ['/test/1/waku-filter/proto'], 'pubsubTopic': '/waku/2/rs/0/1'}"},{"name":"node","value":"None"}],"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":1,"attachmentsCount":0}],"attachments":[],"parameters":[{"name":"content_topic_list","value":"['/test/1/waku-filter/proto']"},{"name":"pubsub_topic","value":"None"}],"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":2,"attachmentsCount":0}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":3,"attachmentsCount":0}],"testStage":{"status":"passed","steps":[{"name":"update_filter_subscription","time":{"start":1713187074986,"stop":1713187074989,"duration":3},"status":"broken","statusMessage":"Exception: Error: 400 Client Error: Bad Request for url: http://127.0.0.1:23710/filter/v2/subscriptions with response: b'{\"requestId\":\"unknown\",\"statusDesc\":\"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\\\\"Invalid content body, could not decode. Unable to deserialize data\\\\\", contentType: \\\\\"text/plain\\\\\"))\"}'\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/steps/filter.py\", line 163, in update_filter_subscription\n    return node.update_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/waku_node.py\", line 249, in update_filter_subscriptions\n    return self._api.update_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 63, in update_filter_subscriptions\n    update_subscriptions_response = self.rest_call(\"put\", \"filter/v2/subscriptions\", json.dumps(subscription))\n                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 16, in rest_call\n    return self.make_request(method, url, headers=headers, data=payload)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/base_client.py\", line 17, in make_request\n    raise Exception(f\"Error: {http_err} with response: {response.content}\")\n","steps":[],"attachments":[],"parameters":[{"name":"subscription","value":"{'requestId': '1', 'contentFilters': [{'description': 'Empty string', 'value': ''}], 'pubsubTopic': '/waku/2/rs/0/1'}"},{"name":"node","value":"None"}],"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"update_filter_subscription","time":{"start":1713187074991,"stop":1713187074993,"duration":2},"status":"broken","statusMessage":"Exception: Error: 400 Client Error: Bad Request for url: http://127.0.0.1:23710/filter/v2/subscriptions with response: b'{\"requestId\":\"unknown\",\"statusDesc\":\"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\\\\"Invalid content body, could not decode. Unable to deserialize data\\\\\", contentType: \\\\\"text/plain\\\\\"))\"}'\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/steps/filter.py\", line 163, in update_filter_subscription\n    return node.update_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/waku_node.py\", line 249, in update_filter_subscriptions\n    return self._api.update_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 63, in update_filter_subscriptions\n    update_subscriptions_response = self.rest_call(\"put\", \"filter/v2/subscriptions\", json.dumps(subscription))\n                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 16, in rest_call\n    return self.make_request(method, url, headers=headers, data=payload)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/base_client.py\", line 17, in make_request\n    raise Exception(f\"Error: {http_err} with response: {response.content}\")\n","steps":[],"attachments":[],"parameters":[{"name":"subscription","value":"{'requestId': '1', 'contentFilters': [{'description': 'A dictionary', 'value': {'key': 'YWFh'}}], 'pubsubTopic': '/waku/2/rs/0/1'}"},{"name":"node","value":"None"}],"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"update_filter_subscription","time":{"start":1713187074995,"stop":1713187074997,"duration":2},"status":"broken","statusMessage":"Exception: Error: 400 Client Error: Bad Request for url: http://127.0.0.1:23710/filter/v2/subscriptions with response: b'{\"requestId\":\"unknown\",\"statusDesc\":\"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\\\\"Invalid content body, could not decode. Unable to deserialize data\\\\\", contentType: \\\\\"text/plain\\\\\"))\"}'\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/steps/filter.py\", line 163, in update_filter_subscription\n    return node.update_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/waku_node.py\", line 249, in update_filter_subscriptions\n    return self._api.update_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 63, in update_filter_subscriptions\n    update_subscriptions_response = self.rest_call(\"put\", \"filter/v2/subscriptions\", json.dumps(subscription))\n                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 16, in rest_call\n    return self.make_request(method, url, headers=headers, data=payload)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/base_client.py\", line 17, in make_request\n    raise Exception(f\"Error: {http_err} with response: {response.content}\")\n","steps":[],"attachments":[],"parameters":[{"name":"subscription","value":"{'requestId': '1', 'contentFilters': [{'description': 'An integer', 'value': 1234567890}], 'pubsubTopic': '/waku/2/rs/0/1'}"},{"name":"node","value":"None"}],"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"update_filter_subscription","time":{"start":1713187074998,"stop":1713187075001,"duration":3},"status":"broken","statusMessage":"Exception: Error: 400 Client Error: Bad Request for url: http://127.0.0.1:23710/filter/v2/subscriptions with response: b'{\"requestId\":\"unknown\",\"statusDesc\":\"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\\\\"Invalid content body, could not decode. Unable to deserialize data\\\\\", contentType: \\\\\"text/plain\\\\\"))\"}'\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/steps/filter.py\", line 163, in update_filter_subscription\n    return node.update_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/waku_node.py\", line 249, in update_filter_subscriptions\n    return self._api.update_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 63, in update_filter_subscriptions\n    update_subscriptions_response = self.rest_call(\"put\", \"filter/v2/subscriptions\", json.dumps(subscription))\n                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 16, in rest_call\n    return self.make_request(method, url, headers=headers, data=payload)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/base_client.py\", line 17, in make_request\n    raise Exception(f\"Error: {http_err} with response: {response.content}\")\n","steps":[],"attachments":[],"parameters":[{"name":"subscription","value":"{'requestId': '1', 'contentFilters': [{'description': 'A list', 'value': ['YWFh']}], 'pubsubTopic': '/waku/2/rs/0/1'}"},{"name":"node","value":"None"}],"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"update_filter_subscription","time":{"start":1713187075002,"stop":1713187075004,"duration":2},"status":"broken","statusMessage":"Exception: Error: 400 Client Error: Bad Request for url: http://127.0.0.1:23710/filter/v2/subscriptions with response: b'{\"requestId\":\"unknown\",\"statusDesc\":\"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\\\\"Invalid content body, could not decode. Unable to deserialize data\\\\\", contentType: \\\\\"text/plain\\\\\"))\"}'\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/steps/filter.py\", line 163, in update_filter_subscription\n    return node.update_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/waku_node.py\", line 249, in update_filter_subscriptions\n    return self._api.update_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 63, in update_filter_subscriptions\n    update_subscriptions_response = self.rest_call(\"put\", \"filter/v2/subscriptions\", json.dumps(subscription))\n                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 16, in rest_call\n    return self.make_request(method, url, headers=headers, data=payload)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/base_client.py\", line 17, in make_request\n    raise Exception(f\"Error: {http_err} with response: {response.content}\")\n","steps":[],"attachments":[],"parameters":[{"name":"subscription","value":"{'requestId': '1', 'contentFilters': [{'description': 'A bool', 'value': True}], 'pubsubTopic': '/waku/2/rs/0/1'}"},{"name":"node","value":"None"}],"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0}],"attachments":[{"uid":"603c5f51f6cc0393","name":"log","source":"603c5f51f6cc0393.txt","type":"text/plain","size":13586}],"parameters":[],"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":5,"attachmentsCount":1},"afterStages":[{"name":"test_setup::0","time":{"start":1713187075007,"stop":1713187075007,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"close_open_nodes::0","time":{"start":1713187075008,"stop":1713187079500,"duration":4492},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"attach_logs_on_fail::0","time":{"start":1713187079501,"stop":1713187079501,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"set_allure_env_variables::0","time":{"start":1713187743374,"stop":1713187743374,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0}],"labels":[{"name":"tag","value":"@pytest.mark.usefixtures('setup_main_relay_node', 'setup_main_filter_node')"},{"name":"parentSuite","value":"tests.filter"},{"name":"suite","value":"test_subscribe_update"},{"name":"subSuite","value":"TestFilterSubscribeUpdate"},{"name":"host","value":"fv-az1393-121"},{"name":"thread","value":"2082-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.filter.test_subscribe_update"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":10,"unknown":0,"total":10},"items":[{"uid":"d613f710f7f7fda3","reportUrl":"https://waku-org.github.io/waku-interop-tests/nim/148//#testresult/d613f710f7f7fda3","status":"passed","time":{"start":1713155167809,"stop":1713155167831,"duration":22}},{"uid":"500a303254e862d","reportUrl":"https://waku-org.github.io/waku-interop-tests/nim/147//#testresult/500a303254e862d","status":"passed","time":{"start":1713069209549,"stop":1713069209569,"duration":20}},{"uid":"17dcdfc19eb16103","reportUrl":"https://waku-org.github.io/waku-interop-tests/nim/146//#testresult/17dcdfc19eb16103","status":"passed","time":{"start":1712981456814,"stop":1712981456831,"duration":17}},{"uid":"2df1776c5c9c8083","reportUrl":"https://waku-org.github.io/waku-interop-tests/nim/145//#testresult/2df1776c5c9c8083","status":"passed","time":{"start":1712895039150,"stop":1712895039165,"duration":15}},{"uid":"dcd8d11fbf6a4d15","reportUrl":"https://waku-org.github.io/waku-interop-tests/nim/144//#testresult/dcd8d11fbf6a4d15","status":"passed","time":{"start":1712822789394,"stop":1712822789425,"duration":31}},{"uid":"80a8b21055f9165b","reportUrl":"https://waku-org.github.io/waku-interop-tests/nim/143//#testresult/80a8b21055f9165b","status":"passed","time":{"start":1712818991544,"stop":1712818991560,"duration":16}},{"uid":"643571593c7a237f","reportUrl":"https://waku-org.github.io/waku-interop-tests/nim/142//#testresult/643571593c7a237f","status":"passed","time":{"start":1712808677131,"stop":1712808677151,"duration":20}},{"uid":"a0bfab525a0ecde9","reportUrl":"https://waku-org.github.io/waku-interop-tests/nim/141//#testresult/a0bfab525a0ecde9","status":"passed","time":{"start":1712722287244,"stop":1712722287266,"duration":22}},{"uid":"b7cb55eaf8de16e2","reportUrl":"https://waku-org.github.io/waku-interop-tests/nim/140//#testresult/b7cb55eaf8de16e2","status":"passed","time":{"start":1712669163097,"stop":1712669163113,"duration":16}}]},"tags":["@pytest.mark.usefixtures('setup_main_relay_node', 'setup_main_filter_node')"]},"source":"1f3f780f16491ada.json","parameterValues":[]}