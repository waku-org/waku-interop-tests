[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_invalid_request_id with id: 2024-11-07_04-08-12__ff41b3a5-fbce-4ab0-831f-a820818b3496
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-07_04-08-12__ff41b3a5-fbce-4ab0-831f-a820818b3496__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.191.158
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['7960', '7961', '7962', '7963', '7964']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 7960:7960 -p 7961:7961 -p 7962:7962 -p 7963:7963 -p 7964:7964 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=7962 --rest-port=7960 --tcp-port=7961 --discv5-udp-port=7963 --rest-address=0.0.0.0 --nat=extip:172.18.191.158 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=dd7a2a468eef8ca28acb0f8d92970cdb79dfa5ab126da27b756dff6bf8cf803c --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=7964 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.191.158 waku 6a7d677fc7f6a25b698b26b33fdcaa0737dbf67c966534c93b54666ba536ad4f
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 6a7d677fc7f6. Setting up logs at ./log/docker/node1_2024-11-07_04-08-12__ff41b3a5-fbce-4ab0-831f-a820818b3496__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 7960
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 1657561dbff1. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7960/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7960/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.191.158/tcp/7961/p2p/16Uiu2HAm7UEJYr6iTenfPa6Ts6kmUXQEpU3NEDuFwcNqDVvEznG5","/ip4/172.18.191.158/tcp/7962/ws/p2p/16Uiu2HAm7UEJYr6iTenfPa6Ts6kmUXQEpU3NEDuFwcNqDVvEznG5"],"enrUri":"enr:-L24QMRMLMp5lR7Gpi8I50lPr6qa7Kb_j-huNiXs11UTeASWKOGkeNCed4NCFR62lFb8ycvCLWc_CzkON_1kJ8OtocgCgmlkgnY0gmlwhKwSv56KbXVsdGlhZGRyc5YACASsEr-eBh8ZAAoErBK_ngYfGt0DgnJzhQADAQAAiXNlY3AyNTZrMaECsvPz8Xd7jzjUE72xhjwE0R_qTRh2BnrgXNSmZ6H9BJaDdGNwgh8Zg3VkcIIfG4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-07_04-08-12__ff41b3a5-fbce-4ab0-831f-a820818b3496__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.121.182
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['13266', '13267', '13268', '13269', '13270']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 13266:13266 -p 13267:13267 -p 13268:13268 -p 13269:13269 -p 13270:13270 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=13268 --rest-port=13266 --tcp-port=13267 --discv5-udp-port=13269 --rest-address=0.0.0.0 --nat=extip:172.18.121.182 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=d2dae7f2ae532b6bd47bff46ae6f3a6cf509d55a115eb2fdf885867d591bdc4a --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=13270 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QMRMLMp5lR7Gpi8I50lPr6qa7Kb_j-huNiXs11UTeASWKOGkeNCed4NCFR62lFb8ycvCLWc_CzkON_1kJ8OtocgCgmlkgnY0gmlwhKwSv56KbXVsdGlhZGRyc5YACASsEr-eBh8ZAAoErBK_ngYfGt0DgnJzhQADAQAAiXNlY3AyNTZrMaECsvPz8Xd7jzjUE72xhjwE0R_qTRh2BnrgXNSmZ6H9BJaDdGNwgh8Zg3VkcIIfG4V3YWt1MgU --filternode=/ip4/172.18.191.158/tcp/7961/p2p/16Uiu2HAm7UEJYr6iTenfPa6Ts6kmUXQEpU3NEDuFwcNqDVvEznG5
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.121.182 waku f70c6ab18658274459285b4c5e1d9f86a2bf497fb0f2dad7e50df3cd83acde75
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID f70c6ab18658. Setting up logs at ./log/docker/node2_2024-11-07_04-08-12__ff41b3a5-fbce-4ab0-831f-a820818b3496__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 13266
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:13266/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:13266/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.121.182/tcp/13267/p2p/16Uiu2HAmSQgw92KwXYM5fJauU8rgA8E3ioa4DEejYtydzNzfu574","/ip4/172.18.121.182/tcp/13268/ws/p2p/16Uiu2HAmSQgw92KwXYM5fJauU8rgA8E3ioa4DEejYtydzNzfu574"],"enrUri":"enr:-L24QARS_JvlYu2IMMhCZLKS3tqz-5Ft1_gLDa90BTAsP3CoRALm3kwdblJ_Aw5alxO2Lfwb0tEYZDSHmiDmmgyaC68CgmlkgnY0gmlwhKwSebaKbXVsdGlhZGRyc5YACASsEnm2BjPTAAoErBJ5tgYz1N0DgnJzhQADAQAAiXNlY3AyNTZrMaEDzFnK-S5WiRz0_wrkrjsOtLJyUBbpJGUdyQXsvWKsmM-DdGNwgjPTg3VkcIIz1YV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:13266/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.191.158/tcp/7961/p2p/16Uiu2HAm7UEJYr6iTenfPa6Ts6kmUXQEpU3NEDuFwcNqDVvEznG5"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:7960/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:13266/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "89347ef3-5c6e-49ea-aa31-b7a93369484a", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"89347ef3-5c6e-49ea-aa31-b7a93369484a","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:13266/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:13266/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 6a7d677fc7f6
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id f70c6ab18658
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 6a7d677fc7f6. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.