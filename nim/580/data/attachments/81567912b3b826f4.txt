[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_invalid_pubsub_topic_format with id: 2024-12-27_04-10-01__a8a1c97a-d348-47b0-a207-3db6254e7d54
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-27_04-10-01__a8a1c97a-d348-47b0-a207-3db6254e7d54__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.166.46
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['57677', '57678', '57679', '57680', '57681']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 57677:57677 -p 57678:57678 -p 57679:57679 -p 57680:57680 -p 57681:57681 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=57679 --rest-port=57677 --tcp-port=57678 --discv5-udp-port=57680 --rest-address=0.0.0.0 --nat=extip:172.18.166.46 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ca6edecf721cd2bde409ae6a2e05c3e04c25c8bc1a9e8ad0d32ddada0b92c5ab --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=57681 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.166.46 waku a0e7dd1b16d605986e3564b03a637b5df94a4bc656fa903bf5d51afaaf2abafa
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID a0e7dd1b16d6. Setting up logs at ./log/docker/node1_2024-12-27_04-10-01__a8a1c97a-d348-47b0-a207-3db6254e7d54__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 57677
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 0aa7f20822ca. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:57677/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:57677/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.166.46/tcp/57678/p2p/16Uiu2HAmVPrczWKMxC9DevPf9b9ACJf1LG8N1qmBaecE2kyuokZz","/ip4/172.18.166.46/tcp/57679/ws/p2p/16Uiu2HAmVPrczWKMxC9DevPf9b9ACJf1LG8N1qmBaecE2kyuokZz"],"enrUri":"enr:-L24QBdDEJhxCboVDua6MDBb6UhSSG9dhMQFaOnhayGIgNGwbjcWny3e11YELCB-8iRu0fDktpmyxPf-86ERjHUSTHECgmlkgnY0gmlwhKwSpi6KbXVsdGlhZGRyc5YACASsEqYuBuFOAAoErBKmLgbhT90DgnJzhQADAQAAiXNlY3AyNTZrMaED-LY54a4N6p0xBl3qKU0gOPYaMEYQmbrUX1N6_WOqADWDdGNwguFOg3VkcILhUIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-27_04-10-01__a8a1c97a-d348-47b0-a207-3db6254e7d54__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.70.62
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['17075', '17076', '17077', '17078', '17079']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 17075:17075 -p 17076:17076 -p 17077:17077 -p 17078:17078 -p 17079:17079 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=17077 --rest-port=17075 --tcp-port=17076 --discv5-udp-port=17078 --rest-address=0.0.0.0 --nat=extip:172.18.70.62 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=65bfa699d95fe4c9dc4feb2a55dac7be7c549c97bffd3b5a408f0cd5f58e5d75 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=17079 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QBdDEJhxCboVDua6MDBb6UhSSG9dhMQFaOnhayGIgNGwbjcWny3e11YELCB-8iRu0fDktpmyxPf-86ERjHUSTHECgmlkgnY0gmlwhKwSpi6KbXVsdGlhZGRyc5YACASsEqYuBuFOAAoErBKmLgbhT90DgnJzhQADAQAAiXNlY3AyNTZrMaED-LY54a4N6p0xBl3qKU0gOPYaMEYQmbrUX1N6_WOqADWDdGNwguFOg3VkcILhUIV3YWt1MgU --filternode=/ip4/172.18.166.46/tcp/57678/p2p/16Uiu2HAmVPrczWKMxC9DevPf9b9ACJf1LG8N1qmBaecE2kyuokZz
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.70.62 waku b2ef893a6146fc9a676593bd3c3701e7056cf23c4623622a45357ea56632f695
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID b2ef893a6146. Setting up logs at ./log/docker/node2_2024-12-27_04-10-01__a8a1c97a-d348-47b0-a207-3db6254e7d54__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 17075
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17075/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17075/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.70.62/tcp/17076/p2p/16Uiu2HAmTAstz59XALEWjaou8DbzDdk3VHEQwv8Rz9fAzNZ1sGzt","/ip4/172.18.70.62/tcp/17077/ws/p2p/16Uiu2HAmTAstz59XALEWjaou8DbzDdk3VHEQwv8Rz9fAzNZ1sGzt"],"enrUri":"enr:-L24QHvxf4wgG_vYJ6pqWKblbPFBD4OvLpFpv1si8MX_JcFJfH7uMyFWRjXStg4hNCqlNmitdiwin99m4w4KvvuSFc4CgmlkgnY0gmlwhKwSRj6KbXVsdGlhZGRyc5YACASsEkY-BkK0AAoErBJGPgZCtd0DgnJzhQADAQAAiXNlY3AyNTZrMaED16u-hDqNZzORTpPREdBxP7h2W8Nx-TKLkVyJwS7CaMmDdGNwgkK0g3VkcIJCtoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17075/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.166.46/tcp/57678/p2p/16Uiu2HAmVPrczWKMxC9DevPf9b9ACJf1LG8N1qmBaecE2kyuokZz"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:57677/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17075/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "27130b73-793a-4e6b-8af1-62e0a9797f2c", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"27130b73-793a-4e6b-8af1-62e0a9797f2c","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17075/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": ["/waku/2/rs/3/1"]}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:17075/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id a0e7dd1b16d6
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id b2ef893a6146
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container a0e7dd1b16d6. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.