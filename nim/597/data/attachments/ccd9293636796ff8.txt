[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_extra_field with id: 2024-12-30_13-25-22__14cd4f57-55d6-44c7-928c-62eb68c28674
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-30_13-25-22__14cd4f57-55d6-44c7-928c-62eb68c28674__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.138.162
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['17091', '17092', '17093', '17094', '17095']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 17091:17091 -p 17092:17092 -p 17093:17093 -p 17094:17094 -p 17095:17095 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=17093 --rest-port=17091 --tcp-port=17092 --discv5-udp-port=17094 --rest-address=0.0.0.0 --nat=extip:172.18.138.162 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=2a38922ade16daefcb79fed3afcbf1dd6ba6081ae487c27aedf6eaecf27a0902 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=17095 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.138.162 waku fed756b3cbf1546b37d847aa5ce46c87c5c6ec42dea96c90142218e3d9b2445f
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID fed756b3cbf1. Setting up logs at ./log/docker/node1_2024-12-30_13-25-22__14cd4f57-55d6-44c7-928c-62eb68c28674__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 17091
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 565dc4e8c3fa. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17091/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17091/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.138.162/tcp/17092/p2p/16Uiu2HAmDFDwjmyHBzTvoBg1nAYv4NwugTL2MixEPCxN8ihiAUNs","/ip4/172.18.138.162/tcp/17093/ws/p2p/16Uiu2HAmDFDwjmyHBzTvoBg1nAYv4NwugTL2MixEPCxN8ihiAUNs"],"enrUri":"enr:-L24QBFDF22j5YQNZA2EB0TNP5-EMIsBzF58VuboADIC6fo2DrEvShXSYeHybqJQT4AHl7YkHtls9CiuL0-NWH9xkhICgmlkgnY0gmlwhKwSiqKKbXVsdGlhZGRyc5YACASsEoqiBkLEAAoErBKKogZCxd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDCMUeQ-7hZ0FnMMNy9RClHDZ5GuByc2aQckaP904ObHiDdGNwgkLEg3VkcIJCxoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-30_13-25-22__14cd4f57-55d6-44c7-928c-62eb68c28674__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.154.14
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['2863', '2864', '2865', '2866', '2867']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 2863:2863 -p 2864:2864 -p 2865:2865 -p 2866:2866 -p 2867:2867 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=2865 --rest-port=2863 --tcp-port=2864 --discv5-udp-port=2866 --rest-address=0.0.0.0 --nat=extip:172.18.154.14 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b5e72cdd5c6ce0f2db9cba3004ad96bc6a7484939b8d30f085caccededcff357 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=2867 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QBFDF22j5YQNZA2EB0TNP5-EMIsBzF58VuboADIC6fo2DrEvShXSYeHybqJQT4AHl7YkHtls9CiuL0-NWH9xkhICgmlkgnY0gmlwhKwSiqKKbXVsdGlhZGRyc5YACASsEoqiBkLEAAoErBKKogZCxd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDCMUeQ-7hZ0FnMMNy9RClHDZ5GuByc2aQckaP904ObHiDdGNwgkLEg3VkcIJCxoV3YWt1MgU --filternode=/ip4/172.18.138.162/tcp/17092/p2p/16Uiu2HAmDFDwjmyHBzTvoBg1nAYv4NwugTL2MixEPCxN8ihiAUNs
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.154.14 waku 821080268baeb5506309a2fa5ad6efffde949e1ecf735f741610b887ce9acbc8
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 821080268bae. Setting up logs at ./log/docker/node2_2024-12-30_13-25-22__14cd4f57-55d6-44c7-928c-62eb68c28674__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 2863
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:2863/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:2863/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.154.14/tcp/2864/p2p/16Uiu2HAmPje9fFX6b7mZ12gtK1aEVUEY9gvvsy3f1dw6j4gmdtaY","/ip4/172.18.154.14/tcp/2865/ws/p2p/16Uiu2HAmPje9fFX6b7mZ12gtK1aEVUEY9gvvsy3f1dw6j4gmdtaY"],"enrUri":"enr:-L24QIXFj2fYQlmlyrzzbEJF-2naHjTdmk4uB7-6wsi4YUuRAgRE7M4QkHZgYOo2X3hLE3rGXgmmTb-kRNHUaU4ISSoCgmlkgnY0gmlwhKwSmg6KbXVsdGlhZGRyc5YACASsEpoOBgswAAoErBKaDgYLMd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDpKGelAJ0GzdVH-lqtn89__UoVKbG2bXcWPfRPiMKukWDdGNwggswg3VkcIILMoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:2863/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.138.162/tcp/17092/p2p/16Uiu2HAmDFDwjmyHBzTvoBg1nAYv4NwugTL2MixEPCxN8ihiAUNs"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17091/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:2863/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "93413488-86c2-40f4-86dc-9a716b916a47", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"93413488-86c2-40f4-86dc-9a716b916a47","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:2863/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:2863/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id fed756b3cbf1
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 821080268bae
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.