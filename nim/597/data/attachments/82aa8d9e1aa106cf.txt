[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_content_topic_string_instead_of_list with id: 2024-12-30_13-26-53__d0fb2df7-1c8e-4750-8790-1515a17ec35c
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-30_13-26-53__d0fb2df7-1c8e-4750-8790-1515a17ec35c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.195.255
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['21182', '21183', '21184', '21185', '21186']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 21182:21182 -p 21183:21183 -p 21184:21184 -p 21185:21185 -p 21186:21186 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=21184 --rest-port=21182 --tcp-port=21183 --discv5-udp-port=21185 --rest-address=0.0.0.0 --nat=extip:172.18.195.255 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=cc7e6d93285eaec5e9b8afc3aee96b5ff5754a91da2000cf1b69faca7d2cddba --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=21186 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.195.255 waku 5f9d7db1dc2fb9ea126c4e803f7fbce8f58a3cfc3b0d5d06f8e94d35ae2ce31a
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 5f9d7db1dc2f. Setting up logs at ./log/docker/node1_2024-12-30_13-26-53__d0fb2df7-1c8e-4750-8790-1515a17ec35c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 21182
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 8757cc069522. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:21182/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:21182/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.195.255/tcp/21183/p2p/16Uiu2HAkyTdkbPsEDUPsxYX2xcER7iowKf9YfPQ19QLgTGLvTezm","/ip4/172.18.195.255/tcp/21184/ws/p2p/16Uiu2HAkyTdkbPsEDUPsxYX2xcER7iowKf9YfPQ19QLgTGLvTezm"],"enrUri":"enr:-L24QKnIIaK_s1l1KKK0GxkkoXvRquIwaizx2irGU27ouYLdCbqYp2mYvIv5OnLRwcRZMTvx1vBOLc1OiVwa_575GvkCgmlkgnY0gmlwhKwSw_-KbXVsdGlhZGRyc5YACASsEsP_BlK_AAoErBLD_wZSwN0DgnJzhQADAQAAiXNlY3AyNTZrMaECO-9j_bAmGYFR29sZ27s6HlGqiagdpaMpPV1On2t_KkqDdGNwglK_g3VkcIJSwYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-30_13-26-53__d0fb2df7-1c8e-4750-8790-1515a17ec35c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.85.159
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['41006', '41007', '41008', '41009', '41010']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 41006:41006 -p 41007:41007 -p 41008:41008 -p 41009:41009 -p 41010:41010 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=41008 --rest-port=41006 --tcp-port=41007 --discv5-udp-port=41009 --rest-address=0.0.0.0 --nat=extip:172.18.85.159 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=77e4f10d8a6e1fc04a9ab5d2c9ac6ca3acde874c1c1373bf8add56e1b482c64d --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=41010 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QKnIIaK_s1l1KKK0GxkkoXvRquIwaizx2irGU27ouYLdCbqYp2mYvIv5OnLRwcRZMTvx1vBOLc1OiVwa_575GvkCgmlkgnY0gmlwhKwSw_-KbXVsdGlhZGRyc5YACASsEsP_BlK_AAoErBLD_wZSwN0DgnJzhQADAQAAiXNlY3AyNTZrMaECO-9j_bAmGYFR29sZ27s6HlGqiagdpaMpPV1On2t_KkqDdGNwglK_g3VkcIJSwYV3YWt1MgU --filternode=/ip4/172.18.195.255/tcp/21183/p2p/16Uiu2HAkyTdkbPsEDUPsxYX2xcER7iowKf9YfPQ19QLgTGLvTezm
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.85.159 waku b0527c953bf975a65fc7f3a3a711a66cd5bd5183bed5b2d746ae2bad1b097004
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID b0527c953bf9. Setting up logs at ./log/docker/node2_2024-12-30_13-26-53__d0fb2df7-1c8e-4750-8790-1515a17ec35c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 41006
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41006/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41006/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.85.159/tcp/41007/p2p/16Uiu2HAmDnCaEJhisrxNu4QpWJgFVvezn159Gq33E2JG5upesWEw","/ip4/172.18.85.159/tcp/41008/ws/p2p/16Uiu2HAmDnCaEJhisrxNu4QpWJgFVvezn159Gq33E2JG5upesWEw"],"enrUri":"enr:-L24QAKNmI45KJ0CJ0Cig5dYTyCUYPIoIxPA385kzJJdyd4iEvfq9ciUCBXklKK6r7aUVTqV4ic02Y9-Ex_rwEsXCGcCgmlkgnY0gmlwhKwSVZ-KbXVsdGlhZGRyc5YACASsElWfBqAvAAoErBJVnwagMN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDELSSxAcZ-AyQmDPo2MXX_XVmzGVJr57h5jyGOL8Tu7yDdGNwgqAvg3VkcIKgMYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:41006/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.195.255/tcp/21183/p2p/16Uiu2HAkyTdkbPsEDUPsxYX2xcER7iowKf9YfPQ19QLgTGLvTezm"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:21182/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:41006/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "b96eed9b-7b1f-4c56-8d25-3dd52678e47b", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"b96eed9b-7b1f-4c56-8d25-3dd52678e47b","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:41006/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": "/test/1/waku-filter/proto", "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:41006/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 5f9d7db1dc2f
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id b0527c953bf9
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 5f9d7db1dc2f. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.