[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_pubsub_topic_string_instead_of_list with id: 2024-11-13_04-12-11__623d0708-0937-4ac1-a858-d0ca80b0c124
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-13_04-12-11__623d0708-0937-4ac1-a858-d0ca80b0c124__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.78.70
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['33380', '33381', '33382', '33383', '33384']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 33380:33380 -p 33381:33381 -p 33382:33382 -p 33383:33383 -p 33384:33384 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=33382 --rest-port=33380 --tcp-port=33381 --discv5-udp-port=33383 --rest-address=0.0.0.0 --nat=extip:172.18.78.70 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=a84bb3afdb6cde6a59bb105ca9decca4e577fcc34be6e1bbf8dcc3f264b6ca05 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=33384 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.78.70 waku 1e358a536a3aee69684465a66bc48fd38193f0bce2b69c961b21978807957482
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 1e358a536a3a. Setting up logs at ./log/docker/node1_2024-11-13_04-12-11__623d0708-0937-4ac1-a858-d0ca80b0c124__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 33380
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 6b0345159b49. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33380/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33380/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.78.70/tcp/33381/p2p/16Uiu2HAm2NMXzTrHkg9z9PbNsTAPXCnv4tkcJHTRp5kt5vxriZJL","/ip4/172.18.78.70/tcp/33382/ws/p2p/16Uiu2HAm2NMXzTrHkg9z9PbNsTAPXCnv4tkcJHTRp5kt5vxriZJL"],"enrUri":"enr:-L24QHzupnKUFonDUtJd17wde1VfPYeZe691w3U6eU3_OliEZF9sHBx065TPgbSd-m2-9jiT1H88fEYmqYw98E28DIUCgmlkgnY0gmlwhKwSTkaKbXVsdGlhZGRyc5YACASsEk5GBoJlAAoErBJORgaCZt0DgnJzhQADAQAAiXNlY3AyNTZrMaECZyg129sNRcz2Uo2WTxCETIocQgZ6-oWqzxJ4qdUSrIWDdGNwgoJlg3VkcIKCZ4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-13_04-12-11__623d0708-0937-4ac1-a858-d0ca80b0c124__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.15.12
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['56366', '56367', '56368', '56369', '56370']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 56366:56366 -p 56367:56367 -p 56368:56368 -p 56369:56369 -p 56370:56370 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=56368 --rest-port=56366 --tcp-port=56367 --discv5-udp-port=56369 --rest-address=0.0.0.0 --nat=extip:172.18.15.12 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=c840b4c873a04cfd12cd83fabebe4f1ace0dbf28c67c65e435d42bf1ae7fe5fe --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=56370 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QHzupnKUFonDUtJd17wde1VfPYeZe691w3U6eU3_OliEZF9sHBx065TPgbSd-m2-9jiT1H88fEYmqYw98E28DIUCgmlkgnY0gmlwhKwSTkaKbXVsdGlhZGRyc5YACASsEk5GBoJlAAoErBJORgaCZt0DgnJzhQADAQAAiXNlY3AyNTZrMaECZyg129sNRcz2Uo2WTxCETIocQgZ6-oWqzxJ4qdUSrIWDdGNwgoJlg3VkcIKCZ4V3YWt1MgU --filternode=/ip4/172.18.78.70/tcp/33381/p2p/16Uiu2HAm2NMXzTrHkg9z9PbNsTAPXCnv4tkcJHTRp5kt5vxriZJL
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.15.12 waku 3fbd60d947045b8d7cdf7a23e8f81c518c4ca7ae8ba8e6560a71783fac4a4a81
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 3fbd60d94704. Setting up logs at ./log/docker/node2_2024-11-13_04-12-11__623d0708-0937-4ac1-a858-d0ca80b0c124__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 56366
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:56366/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:56366/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.15.12/tcp/56367/p2p/16Uiu2HAkzX6veNwTvDuMY8qd6pB12f9aAn6vQcQP86ysPYSX7YeH","/ip4/172.18.15.12/tcp/56368/ws/p2p/16Uiu2HAkzX6veNwTvDuMY8qd6pB12f9aAn6vQcQP86ysPYSX7YeH"],"enrUri":"enr:-L24QGVkaK3jRpzdW8qvJlQmSNAV4lbHTVa3ZsFi_9edYLGta-47A3c_GZZwgJYFU8Z9RfZ_9fLMM_ivp-eaTxnFzewCgmlkgnY0gmlwhKwSDwyKbXVsdGlhZGRyc5YACASsEg8MBtwvAAoErBIPDAbcMN0DgnJzhQADAQAAiXNlY3AyNTZrMaECS66LfhNXnrF4YoEW4wS2ckmgcqE7XlsiN_OdBembt_6DdGNwgtwvg3VkcILcMYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:56366/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.78.70/tcp/33381/p2p/16Uiu2HAm2NMXzTrHkg9z9PbNsTAPXCnv4tkcJHTRp5kt5vxriZJL"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:33380/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:56366/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "01a4a60d-48da-4448-92f2-6484bdf0a4d8", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"01a4a60d-48da-4448-92f2-6484bdf0a4d8","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:56366/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": "/test/1/waku-filter/proto", "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:56366/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 1e358a536a3a
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 3fbd60d94704
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 1e358a536a3a. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.