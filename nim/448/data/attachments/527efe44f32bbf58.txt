[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_invalid_request_id with id: 2024-11-13_04-11-37__3cd6d115-076c-47b6-a46c-d7f4025ec0fd
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-13_04-11-37__3cd6d115-076c-47b6-a46c-d7f4025ec0fd__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.22.242
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['45868', '45869', '45870', '45871', '45872']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 45868:45868 -p 45869:45869 -p 45870:45870 -p 45871:45871 -p 45872:45872 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=45870 --rest-port=45868 --tcp-port=45869 --discv5-udp-port=45871 --rest-address=0.0.0.0 --nat=extip:172.18.22.242 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=52add8bd721e592dbddb3efa74fc0bcacb71b730c730473b6c6dbb7ccfd1c62e --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=45872 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.22.242 waku 6f3ba6477681bf92055e11eb9cc54bf48c18ca522be4ff1c326b7991c4b19b13
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 6f3ba6477681. Setting up logs at ./log/docker/node1_2024-11-13_04-11-37__3cd6d115-076c-47b6-a46c-d7f4025ec0fd__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 45868
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 987b39285168. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:45868/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:45868/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.22.242/tcp/45869/p2p/16Uiu2HAmRS4NDE8iDpmHZMUiVZs13dPiaiYpvea7zrtKbr5k8E1j","/ip4/172.18.22.242/tcp/45870/ws/p2p/16Uiu2HAmRS4NDE8iDpmHZMUiVZs13dPiaiYpvea7zrtKbr5k8E1j"],"enrUri":"enr:-L24QM-HYEQSxllVxbRsCWd4xun6pjQJ1tg_r_s3HwkvgXLcS3DF99DkFaMq3iUUH8v2gVFSWFIiBh5knLDvcBFIZ5wCgmlkgnY0gmlwhKwSFvKKbXVsdGlhZGRyc5YACASsEhbyBrMtAAoErBIW8gazLt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDvdfrmVJ7lUJpGbCd9wswBMhw5cPPxDoaNlSUHj0eDYaDdGNwgrMtg3VkcIKzL4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-13_04-11-37__3cd6d115-076c-47b6-a46c-d7f4025ec0fd__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.33.36
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['38026', '38027', '38028', '38029', '38030']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 38026:38026 -p 38027:38027 -p 38028:38028 -p 38029:38029 -p 38030:38030 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=38028 --rest-port=38026 --tcp-port=38027 --discv5-udp-port=38029 --rest-address=0.0.0.0 --nat=extip:172.18.33.36 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=3999f3e14feca1a92bfd709bf3f262e679b6e56580e063bf1c8446ceae9e5cce --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=38030 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QM-HYEQSxllVxbRsCWd4xun6pjQJ1tg_r_s3HwkvgXLcS3DF99DkFaMq3iUUH8v2gVFSWFIiBh5knLDvcBFIZ5wCgmlkgnY0gmlwhKwSFvKKbXVsdGlhZGRyc5YACASsEhbyBrMtAAoErBIW8gazLt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDvdfrmVJ7lUJpGbCd9wswBMhw5cPPxDoaNlSUHj0eDYaDdGNwgrMtg3VkcIKzL4V3YWt1MgU --filternode=/ip4/172.18.22.242/tcp/45869/p2p/16Uiu2HAmRS4NDE8iDpmHZMUiVZs13dPiaiYpvea7zrtKbr5k8E1j
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.33.36 waku 1efdcfb236186ad571e67c750d9407f658144fc3709583bbff59b114f2d6c329
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 1efdcfb23618. Setting up logs at ./log/docker/node2_2024-11-13_04-11-37__3cd6d115-076c-47b6-a46c-d7f4025ec0fd__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 38026
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38026/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38026/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.33.36/tcp/38027/p2p/16Uiu2HAmNnbeDESXjTs3GQoVpdbYtKDNGHWVKzRBFVqedvV7ZEUd","/ip4/172.18.33.36/tcp/38028/ws/p2p/16Uiu2HAmNnbeDESXjTs3GQoVpdbYtKDNGHWVKzRBFVqedvV7ZEUd"],"enrUri":"enr:-L24QBMk45e9cS4hMFq_YU-8BBIYeEgS3daw44HgQrkCbcAsVBnzzlkFIExyV1Bu_JaNN3p5r0r5DoFVjh1jhYF8NUMCgmlkgnY0gmlwhKwSISSKbXVsdGlhZGRyc5YACASsEiEkBpSLAAoErBIhJAaUjN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDlofW5bOa6NEVDB8MM2C4oeQtkZUfHfpyAr6cjTSi7DaDdGNwgpSLg3VkcIKUjYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38026/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.22.242/tcp/45869/p2p/16Uiu2HAmRS4NDE8iDpmHZMUiVZs13dPiaiYpvea7zrtKbr5k8E1j"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:45868/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38026/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "45743c2c-2559-4784-adcd-7955bfaed726", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"45743c2c-2559-4784-adcd-7955bfaed726","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:38026/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:38026/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 6f3ba6477681
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 1efdcfb23618
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 6f3ba6477681. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.