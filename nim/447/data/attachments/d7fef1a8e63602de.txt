[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_pubsub_topic_list_instead_of_string with id: 2024-11-12_04-11-25__714c0475-7d0d-46b3-b2b1-158e1299418d
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-12_04-11-25__714c0475-7d0d-46b3-b2b1-158e1299418d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.181.133
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['6558', '6559', '6560', '6561', '6562']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 6558:6558 -p 6559:6559 -p 6560:6560 -p 6561:6561 -p 6562:6562 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=6560 --rest-port=6558 --tcp-port=6559 --discv5-udp-port=6561 --rest-address=0.0.0.0 --nat=extip:172.18.181.133 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=39fc7cf0df3bfbbb8c597faec15d06700ec24acb18cea8030f0cc4bd5b84ac1a --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=6562 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.181.133 waku 9e24d32240f54f4bd0dbe57fb0e0aec9e91230913acf5d3f67bef2af8aa36a11
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container a48d270ac6eb. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 9e24d32240f5. Setting up logs at ./log/docker/node1_2024-11-12_04-11-25__714c0475-7d0d-46b3-b2b1-158e1299418d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 6558
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:6558/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:6558/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.181.133/tcp/6559/p2p/16Uiu2HAmM8HrJN9vvHK8J4cUG91RnZQouvoDWd5yZaixtVYK9Zur","/ip4/172.18.181.133/tcp/6560/ws/p2p/16Uiu2HAmM8HrJN9vvHK8J4cUG91RnZQouvoDWd5yZaixtVYK9Zur"],"enrUri":"enr:-L24QL40xp0YK-yGosLeFcoXvECQhrJxAj9aOWVBuPsOakv6Vu2Dkf0ZtMf2HeahfEbEepvbSL0FzqBkE6MGGdj6bAUCgmlkgnY0gmlwhKwStYWKbXVsdGlhZGRyc5YACASsErWFBhmfAAoErBK1hQYZoN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDfdv2-zCWRymUJRyuTSz43wF2UC_kka-S4NIJGb9kFrmDdGNwghmfg3VkcIIZoYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-12_04-11-25__714c0475-7d0d-46b3-b2b1-158e1299418d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.27.54
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['30308', '30309', '30310', '30311', '30312']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 30308:30308 -p 30309:30309 -p 30310:30310 -p 30311:30311 -p 30312:30312 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=30310 --rest-port=30308 --tcp-port=30309 --discv5-udp-port=30311 --rest-address=0.0.0.0 --nat=extip:172.18.27.54 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=cc8e3ca593ffdab8d2c5068fad5fb0a8adf79afeddfda815ca755601429bbcf9 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=30312 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QL40xp0YK-yGosLeFcoXvECQhrJxAj9aOWVBuPsOakv6Vu2Dkf0ZtMf2HeahfEbEepvbSL0FzqBkE6MGGdj6bAUCgmlkgnY0gmlwhKwStYWKbXVsdGlhZGRyc5YACASsErWFBhmfAAoErBK1hQYZoN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDfdv2-zCWRymUJRyuTSz43wF2UC_kka-S4NIJGb9kFrmDdGNwghmfg3VkcIIZoYV3YWt1MgU --filternode=/ip4/172.18.181.133/tcp/6559/p2p/16Uiu2HAmM8HrJN9vvHK8J4cUG91RnZQouvoDWd5yZaixtVYK9Zur
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.27.54 waku 4d550de384b7d32cbc70044d4810a00fbb1da31084a2a987f99143c5766e0b3a
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 4d550de384b7. Setting up logs at ./log/docker/node2_2024-11-12_04-11-25__714c0475-7d0d-46b3-b2b1-158e1299418d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 30308
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30308/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30308/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.27.54/tcp/30309/p2p/16Uiu2HAmQzJHjQnkxQKdTBpiYguoJYTc91Nn6QL8hdiRL8nLxNYT","/ip4/172.18.27.54/tcp/30310/ws/p2p/16Uiu2HAmQzJHjQnkxQKdTBpiYguoJYTc91Nn6QL8hdiRL8nLxNYT"],"enrUri":"enr:-L24QPlIP-uLs5Vpx6S9JVum5vwgyQrlnuPKU1G9Njh7r3SuGm5nGyzNMLqRoWF6Lg8yErpIoENfeXYQDtTFkNfsGmsCgmlkgnY0gmlwhKwSGzaKbXVsdGlhZGRyc5YACASsEhs2BnZlAAoErBIbNgZ2Zt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDtz6P0bVR6a6TH9F2XAmV6QcHKKzDrrfRoz-9wI4pVDyDdGNwgnZlg3VkcIJ2Z4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:30308/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.181.133/tcp/6559/p2p/16Uiu2HAmM8HrJN9vvHK8J4cUG91RnZQouvoDWd5yZaixtVYK9Zur"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:6558/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:30308/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "fff217c3-5ba6-4f40-96fc-674ec8dfafce", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"fff217c3-5ba6-4f40-96fc-674ec8dfafce","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:30308/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": ["/waku/2/rs/3/1"]}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:30308/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 9e24d32240f5
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 4d550de384b7
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 9e24d32240f5. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.