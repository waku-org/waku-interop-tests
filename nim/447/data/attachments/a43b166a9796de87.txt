[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_all_with_invalid_request_id with id: 2024-11-12_04-12-40__4f1eace2-7d36-4361-ab2f-4286efec0de1
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-12_04-12-40__4f1eace2-7d36-4361-ab2f-4286efec0de1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.109.132
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['7798', '7799', '7800', '7801', '7802']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 7798:7798 -p 7799:7799 -p 7800:7800 -p 7801:7801 -p 7802:7802 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=7800 --rest-port=7798 --tcp-port=7799 --discv5-udp-port=7801 --rest-address=0.0.0.0 --nat=extip:172.18.109.132 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=0274fbe8adbd4ce8e6184a5d742c5c6d15deaebd2fdef378d3bd478bdd92e5be --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=7802 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.109.132 waku 5dc7ea1dd33c5a8aab41d0afaed94beeec4a88f0e6a9331b1a5344cb7a498d4d
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 5dc7ea1dd33c. Setting up logs at ./log/docker/node1_2024-11-12_04-12-40__4f1eace2-7d36-4361-ab2f-4286efec0de1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 7798
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 465bd3ff149c. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7798/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7798/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.109.132/tcp/7799/p2p/16Uiu2HAkvJaUEqw22efBpboyGGtLBkV5snAD8Uj69dmySuX9yEo9","/ip4/172.18.109.132/tcp/7800/ws/p2p/16Uiu2HAkvJaUEqw22efBpboyGGtLBkV5snAD8Uj69dmySuX9yEo9"],"enrUri":"enr:-L24QCaZh8wtRzVhzNFLnVgLOoWFLT2nVK9eIJ57ISw0Xc4AX7ouXsSrLm50_HIyAgSlvLQCqUyrnGhzuzZNzyQQ4dsCgmlkgnY0gmlwhKwSbYSKbXVsdGlhZGRyc5YACASsEm2EBh53AAoErBJthAYeeN0DgnJzhQADAQAAiXNlY3AyNTZrMaECDQpkP2fuPX2lT2m-2l9Y4pCxV-NJaZ30UfYT7GUR2siDdGNwgh53g3VkcIIeeYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-12_04-12-40__4f1eace2-7d36-4361-ab2f-4286efec0de1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.92.238
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['31998', '31999', '32000', '32001', '32002']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 31998:31998 -p 31999:31999 -p 32000:32000 -p 32001:32001 -p 32002:32002 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=32000 --rest-port=31998 --tcp-port=31999 --discv5-udp-port=32001 --rest-address=0.0.0.0 --nat=extip:172.18.92.238 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b4db9dbec38ac9a64a0d2b30a28fafaffc8dfaf36a843df14aed60dccaf48afa --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=32002 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QCaZh8wtRzVhzNFLnVgLOoWFLT2nVK9eIJ57ISw0Xc4AX7ouXsSrLm50_HIyAgSlvLQCqUyrnGhzuzZNzyQQ4dsCgmlkgnY0gmlwhKwSbYSKbXVsdGlhZGRyc5YACASsEm2EBh53AAoErBJthAYeeN0DgnJzhQADAQAAiXNlY3AyNTZrMaECDQpkP2fuPX2lT2m-2l9Y4pCxV-NJaZ30UfYT7GUR2siDdGNwgh53g3VkcIIeeYV3YWt1MgU --filternode=/ip4/172.18.109.132/tcp/7799/p2p/16Uiu2HAkvJaUEqw22efBpboyGGtLBkV5snAD8Uj69dmySuX9yEo9
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.92.238 waku 483266afc469caad408c1f72bc20b08f389e23bbab35d3193dd7f97e3e45acff
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 483266afc469. Setting up logs at ./log/docker/node2_2024-11-12_04-12-40__4f1eace2-7d36-4361-ab2f-4286efec0de1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 31998
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:31998/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:31998/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.92.238/tcp/31999/p2p/16Uiu2HAkxcJTymCn8GY3TuKf9LRTDNfW6xy6bxxXoJw2BhY3xmKB","/ip4/172.18.92.238/tcp/32000/ws/p2p/16Uiu2HAkxcJTymCn8GY3TuKf9LRTDNfW6xy6bxxXoJw2BhY3xmKB"],"enrUri":"enr:-L24QFr-OxVc47IjDn8ioIkd8_BwWvvoW5z6cVjl6aleJpMwITwxnOGqVpnNlL75REHmAxEPB2XmctGOuDMJkChCyZ8CgmlkgnY0gmlwhKwSXO6KbXVsdGlhZGRyc5YACASsElzuBnz_AAoErBJc7gZ9AN0DgnJzhQADAQAAiXNlY3AyNTZrMaECL0wfqZqD_8XqA0-s4UDEKWrwwiXWy4HZfuOpYbnt8WaDdGNwgnz_g3VkcIJ9AYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:31998/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.109.132/tcp/7799/p2p/16Uiu2HAkvJaUEqw22efBpboyGGtLBkV5snAD8Uj69dmySuX9yEo9"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:7798/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:31998/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "0ec23492-15cf-4924-94e1-15b00ebbb1f3", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"0ec23492-15cf-4924-94e1-15b00ebbb1f3","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:31998/filter/v2/subscriptions/all" -H "Content-Type: application/json" -d '{"requestId": 1}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:31998/filter/v2/subscriptions/all. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 5dc7ea1dd33c
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 483266afc469
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 5dc7ea1dd33c. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.