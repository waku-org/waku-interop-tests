[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2024-11-14_04-12-55__a73ffb02-e3bf-4d6f-8cfe-f45402afedc5
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-14_04-12-55__a73ffb02-e3bf-4d6f-8cfe-f45402afedc5__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.181.151
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['19348', '19349', '19350', '19351', '19352']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 19348:19348 -p 19349:19349 -p 19350:19350 -p 19351:19351 -p 19352:19352 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=19350 --rest-port=19348 --tcp-port=19349 --discv5-udp-port=19351 --rest-address=0.0.0.0 --nat=extip:172.18.181.151 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=fde4aeda2e2f6fa4854afcc774415f9fd08ff73b3e2eeb7ebabfbf508ab73fb3 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=19352 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.181.151 waku f6bae74b1b03ccb8200dd9415a818a15e8799ee77a1dfb707b7618d82edb8321
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID f6bae74b1b03. Setting up logs at ./log/docker/node1_2024-11-14_04-12-55__a73ffb02-e3bf-4d6f-8cfe-f45402afedc5__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 19348
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container da4ba0efea70. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:19348/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:19348/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.181.151/tcp/19349/p2p/16Uiu2HAmVmd5ucSJW3oHrhwJkJD5TTRwktvMPVrjaNDv1nK1W4Pk","/ip4/172.18.181.151/tcp/19350/ws/p2p/16Uiu2HAmVmd5ucSJW3oHrhwJkJD5TTRwktvMPVrjaNDv1nK1W4Pk"],"enrUri":"enr:-L24QCV0UL9mqGV0UywU0qzBxNB4vBIsen5DMX0qp3g2rfbNREzS6AEewSrV8CA-XuTeHH7_6ZG7hrgz_VcqzYg6hvICgmlkgnY0gmlwhKwStZeKbXVsdGlhZGRyc5YACASsErWXBkuVAAoErBK1lwZLlt0DgnJzhQADAQAAiXNlY3AyNTZrMaED_kmy4lLwMUu6XxO2eHjJF6RDg0rgpiJ8XLB4SBaC6puDdGNwgkuVg3VkcIJLl4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-14_04-12-55__a73ffb02-e3bf-4d6f-8cfe-f45402afedc5__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.190.181
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['38866', '38867', '38868', '38869', '38870']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 38866:38866 -p 38867:38867 -p 38868:38868 -p 38869:38869 -p 38870:38870 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=38868 --rest-port=38866 --tcp-port=38867 --discv5-udp-port=38869 --rest-address=0.0.0.0 --nat=extip:172.18.190.181 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=37276bdee92efe79b6a557df0702c5171e62f2aac4fa737c07f4dfa758beae7c --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=38870 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QCV0UL9mqGV0UywU0qzBxNB4vBIsen5DMX0qp3g2rfbNREzS6AEewSrV8CA-XuTeHH7_6ZG7hrgz_VcqzYg6hvICgmlkgnY0gmlwhKwStZeKbXVsdGlhZGRyc5YACASsErWXBkuVAAoErBK1lwZLlt0DgnJzhQADAQAAiXNlY3AyNTZrMaED_kmy4lLwMUu6XxO2eHjJF6RDg0rgpiJ8XLB4SBaC6puDdGNwgkuVg3VkcIJLl4V3YWt1MgU --filternode=/ip4/172.18.181.151/tcp/19349/p2p/16Uiu2HAmVmd5ucSJW3oHrhwJkJD5TTRwktvMPVrjaNDv1nK1W4Pk
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.190.181 waku 89cb593db7c88788d0d1d6fa8f5f0d4d108b50d6d86363c0edb356f8c5e4b66a
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 89cb593db7c8. Setting up logs at ./log/docker/node2_2024-11-14_04-12-55__a73ffb02-e3bf-4d6f-8cfe-f45402afedc5__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 38866
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38866/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38866/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.190.181/tcp/38867/p2p/16Uiu2HAmHwTPPHNdETPWk4GKY2g9iHdFAVHM9TpFsBehQHWXz7Xb","/ip4/172.18.190.181/tcp/38868/ws/p2p/16Uiu2HAmHwTPPHNdETPWk4GKY2g9iHdFAVHM9TpFsBehQHWXz7Xb"],"enrUri":"enr:-L24QJIwReUArk4ytTQDyqavIBB9p6TxVIHDK28EJzEp52WPILt6sIxIrWcYK2aRY0sfGP3aM8hfUCU_9DD-xu3d9ycCgmlkgnY0gmlwhKwSvrWKbXVsdGlhZGRyc5YACASsEr61BpfTAAoErBK-tQaX1N0DgnJzhQADAQAAiXNlY3AyNTZrMaEDToJMI5xqFh_lyQeBjdfCh-7p9LxdwrEY4Qv78oJr2y6DdGNwgpfTg3VkcIKX1YV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38866/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.181.151/tcp/19349/p2p/16Uiu2HAmVmd5ucSJW3oHrhwJkJD5TTRwktvMPVrjaNDv1nK1W4Pk"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:19348/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38866/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "5c7d7bf3-de80-4c86-9ae7-b9389ac2c5fc", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"5c7d7bf3-de80-4c86-9ae7-b9389ac2c5fc","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:38866/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:38866/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id f6bae74b1b03
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 89cb593db7c8
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container f6bae74b1b03. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.