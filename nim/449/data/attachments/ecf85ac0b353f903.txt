[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_extra_field with id: 2024-11-14_04-13-40__d59c238d-e543-4ea8-8232-d5765f982bdf
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-14_04-13-40__d59c238d-e543-4ea8-8232-d5765f982bdf__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.217.195
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['51651', '51652', '51653', '51654', '51655']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 51651:51651 -p 51652:51652 -p 51653:51653 -p 51654:51654 -p 51655:51655 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=51653 --rest-port=51651 --tcp-port=51652 --discv5-udp-port=51654 --rest-address=0.0.0.0 --nat=extip:172.18.217.195 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=f7fecafd367fd5ce0dc3253dba0b32e3dcca9f664f24bae72c7bbdee06fd88d3 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=51655 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.217.195 waku c24fcf114f9120d0872561a8792734380b0ccdcdc65fb96539701ee0fe23b9dc
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID c24fcf114f91. Setting up logs at ./log/docker/node1_2024-11-14_04-13-40__d59c238d-e543-4ea8-8232-d5765f982bdf__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 51651
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 71f01f3a374e. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:51651/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:51651/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.217.195/tcp/51652/p2p/16Uiu2HAmLQL5nJGxayFByLCazWpFYJKQWtX7XjosQB4bJixHXsFz","/ip4/172.18.217.195/tcp/51653/ws/p2p/16Uiu2HAmLQL5nJGxayFByLCazWpFYJKQWtX7XjosQB4bJixHXsFz"],"enrUri":"enr:-L24QKDA_C9wCxTzCcNvQBXpTrts08Aksd7Y-Qm_LCpRjjMVLIVovhlArfVhACZf8m7eYhShn-nIoeg3VFYs8oe7qc8CgmlkgnY0gmlwhKwS2cOKbXVsdGlhZGRyc5YACASsEtnDBsnEAAoErBLZwwbJxd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDcxwYUydWUdFwTzHYKx4agM4UqmPSxXuWVBGyR5rt3j2DdGNwgsnEg3VkcILJxoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-14_04-13-40__d59c238d-e543-4ea8-8232-d5765f982bdf__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.148.23
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['30281', '30282', '30283', '30284', '30285']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 30281:30281 -p 30282:30282 -p 30283:30283 -p 30284:30284 -p 30285:30285 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=30283 --rest-port=30281 --tcp-port=30282 --discv5-udp-port=30284 --rest-address=0.0.0.0 --nat=extip:172.18.148.23 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=eeddc1e22dd38aec6a6e0a8b54dc8a10bcebf7ac5f5e933fc6d2d25da47f856c --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=30285 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QKDA_C9wCxTzCcNvQBXpTrts08Aksd7Y-Qm_LCpRjjMVLIVovhlArfVhACZf8m7eYhShn-nIoeg3VFYs8oe7qc8CgmlkgnY0gmlwhKwS2cOKbXVsdGlhZGRyc5YACASsEtnDBsnEAAoErBLZwwbJxd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDcxwYUydWUdFwTzHYKx4agM4UqmPSxXuWVBGyR5rt3j2DdGNwgsnEg3VkcILJxoV3YWt1MgU --filternode=/ip4/172.18.217.195/tcp/51652/p2p/16Uiu2HAmLQL5nJGxayFByLCazWpFYJKQWtX7XjosQB4bJixHXsFz
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.148.23 waku 8cbb1ff70d5fd9bf1badc3cb7d188a7b369e3963fe961ab3cdccb197efac4190
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 8cbb1ff70d5f. Setting up logs at ./log/docker/node2_2024-11-14_04-13-40__d59c238d-e543-4ea8-8232-d5765f982bdf__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 30281
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30281/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30281/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.148.23/tcp/30282/p2p/16Uiu2HAmR6kPXcub5y8PTtc1ztyhejRQFoBMGGKMcChi5HzRQChK","/ip4/172.18.148.23/tcp/30283/ws/p2p/16Uiu2HAmR6kPXcub5y8PTtc1ztyhejRQFoBMGGKMcChi5HzRQChK"],"enrUri":"enr:-L24QIekud_0ByVg7eZGkTZrJUwoKfUysesr6UBaKnCavVdlMomwAGsi-Vrev4fZoMoao--3P8RAy80P2UMM4PX4uqUCgmlkgnY0gmlwhKwSlBeKbXVsdGlhZGRyc5YACASsEpQXBnZKAAoErBKUFwZ2S90DgnJzhQADAQAAiXNlY3AyNTZrMaEDuOWO1a1cRC0hZGokK8785pVJsrK9HBMu8hEkk3AkaGaDdGNwgnZKg3VkcIJ2TIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:30281/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.217.195/tcp/51652/p2p/16Uiu2HAmLQL5nJGxayFByLCazWpFYJKQWtX7XjosQB4bJixHXsFz"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:51651/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:30281/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "96e0cb01-e074-445f-9d81-50b1d332f731", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"96e0cb01-e074-445f-9d81-50b1d332f731","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:30281/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:30281/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id c24fcf114f91
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 8cbb1ff70d5f
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container c24fcf114f91. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.