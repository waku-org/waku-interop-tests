[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_invalid_pubsub_topic_format with id: 2024-11-14_04-12-05__5850728c-ebe9-4fa5-818d-c4e0ed91f9ef
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-14_04-12-05__5850728c-ebe9-4fa5-818d-c4e0ed91f9ef__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.219.35
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['59382', '59383', '59384', '59385', '59386']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 59382:59382 -p 59383:59383 -p 59384:59384 -p 59385:59385 -p 59386:59386 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=59384 --rest-port=59382 --tcp-port=59383 --discv5-udp-port=59385 --rest-address=0.0.0.0 --nat=extip:172.18.219.35 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=8faf853e33fe31ffa4dff53372cfacc29bd90a3f6ac9dd0cffb7fb8db04b2379 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=59386 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.219.35 waku 72bb4e7457c49c905d93a8628362d9d546a216a8fee5edb72a7330a2eba198c4
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 06e804d88686. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 72bb4e7457c4. Setting up logs at ./log/docker/node1_2024-11-14_04-12-05__5850728c-ebe9-4fa5-818d-c4e0ed91f9ef__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 59382
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:59382/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:59382/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.219.35/tcp/59383/p2p/16Uiu2HAmGSbEY3MQ1b4sqRMg9TfZUtFBEsvyi1UEEvmezX7X3XNL","/ip4/172.18.219.35/tcp/59384/ws/p2p/16Uiu2HAmGSbEY3MQ1b4sqRMg9TfZUtFBEsvyi1UEEvmezX7X3XNL"],"enrUri":"enr:-L24QKmZVrAUJtvtKhgGTw54QTgx9rihCTnvRCMj_uFOs3QDXLUNckRuywCuR7bvUVeiHGO9VpD5t1zTpQcRVRschtACgmlkgnY0gmlwhKwS2yOKbXVsdGlhZGRyc5YACASsEtsjBuf3AAoErBLbIwbn-N0DgnJzhQADAQAAiXNlY3AyNTZrMaEDOEGj4LTSyjfJZfF9Sa0MUsbR6SyeQvKAYJOTH-RN5_2DdGNwguf3g3VkcILn-YV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-14_04-12-05__5850728c-ebe9-4fa5-818d-c4e0ed91f9ef__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.199.162
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['65089', '65090', '65091', '65092', '65093']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 65089:65089 -p 65090:65090 -p 65091:65091 -p 65092:65092 -p 65093:65093 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=65091 --rest-port=65089 --tcp-port=65090 --discv5-udp-port=65092 --rest-address=0.0.0.0 --nat=extip:172.18.199.162 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ac40773bad7379273a22f403a6cdc294312e69ae0bdaf78e76aee0fbe3d0cf5d --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=65093 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QKmZVrAUJtvtKhgGTw54QTgx9rihCTnvRCMj_uFOs3QDXLUNckRuywCuR7bvUVeiHGO9VpD5t1zTpQcRVRschtACgmlkgnY0gmlwhKwS2yOKbXVsdGlhZGRyc5YACASsEtsjBuf3AAoErBLbIwbn-N0DgnJzhQADAQAAiXNlY3AyNTZrMaEDOEGj4LTSyjfJZfF9Sa0MUsbR6SyeQvKAYJOTH-RN5_2DdGNwguf3g3VkcILn-YV3YWt1MgU --filternode=/ip4/172.18.219.35/tcp/59383/p2p/16Uiu2HAmGSbEY3MQ1b4sqRMg9TfZUtFBEsvyi1UEEvmezX7X3XNL
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.199.162 waku fd1a49ca4355f6d957b504077d5bc67c14c77ae6b78e5ea0a30a80d113d930a3
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID fd1a49ca4355. Setting up logs at ./log/docker/node2_2024-11-14_04-12-05__5850728c-ebe9-4fa5-818d-c4e0ed91f9ef__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 65089
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:65089/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:65089/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.199.162/tcp/65090/p2p/16Uiu2HAkzGsuBkeXwf2fZ6vx4PpyEvJGxUno39d3mDB64duQCjk8","/ip4/172.18.199.162/tcp/65091/ws/p2p/16Uiu2HAkzGsuBkeXwf2fZ6vx4PpyEvJGxUno39d3mDB64duQCjk8"],"enrUri":"enr:-L24QGzf-JFaFH_pUIALUMwwsvAPq9LhKOLteHX_PaF4kbKWK5dYt3o0wIkckgaDTtaeLyB7MVnkDiBOc4oOB4rF0qgCgmlkgnY0gmlwhKwSx6KKbXVsdGlhZGRyc5YACASsEseiBv5CAAoErBLHogb-Q90DgnJzhQADAQAAiXNlY3AyNTZrMaECSAmvnAMMNQw7vyoS78pO199BSk21S3q771k8CLAY29WDdGNwgv5Cg3VkcIL-RIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:65089/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.219.35/tcp/59383/p2p/16Uiu2HAmGSbEY3MQ1b4sqRMg9TfZUtFBEsvyi1UEEvmezX7X3XNL"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:59382/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:65089/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "802c24b8-7a4d-481a-85c3-9d42e89b976a", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"802c24b8-7a4d-481a-85c3-9d42e89b976a","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:65089/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": ["/waku/2/rs/3/1"]}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:65089/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 72bb4e7457c4
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id fd1a49ca4355
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 72bb4e7457c4. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.