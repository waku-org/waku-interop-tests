[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_pubsub_topic_string_instead_of_list with id: 2025-01-05_04-11-35__e6150355-f32d-476f-aaa9-3a9b4a6cd8da
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-05_04-11-35__e6150355-f32d-476f-aaa9-3a9b4a6cd8da__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.50.57
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['45780', '45781', '45782', '45783', '45784']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 45780:45780 -p 45781:45781 -p 45782:45782 -p 45783:45783 -p 45784:45784 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=45782 --rest-port=45780 --tcp-port=45781 --discv5-udp-port=45783 --rest-address=0.0.0.0 --nat=extip:172.18.50.57 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=fcd89f1cefdc52ef53bdfff4c616344edea64b4eb30f3640bee402bfcd5baba7 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=45784 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.50.57 waku 3b3b60cb738412c54a2a55ec75e8c04b55e82389a64e08b88846957d4e407fa3
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 3b3b60cb7384. Setting up logs at ./log/docker/node1_2025-01-05_04-11-35__e6150355-f32d-476f-aaa9-3a9b4a6cd8da__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 45780
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 4fa8581c45d4. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:45780/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:45780/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.50.57/tcp/45781/p2p/16Uiu2HAkyP4JiLxXCTZeUK8pQ4jWsjsnm9Y3fMT2kLzY7Mp1VVVR","/ip4/172.18.50.57/tcp/45782/ws/p2p/16Uiu2HAkyP4JiLxXCTZeUK8pQ4jWsjsnm9Y3fMT2kLzY7Mp1VVVR"],"enrUri":"enr:-L24QJtVqXF-kQ3WnvOCSuCAY_NUoZXiAFibH4_P5OPsS88-KZTKbE93nNwH0xNs8uEgvod-snf0gBlcK2yssMFHUzYCgmlkgnY0gmlwhKwSMjmKbXVsdGlhZGRyc5YACASsEjI5BrLVAAoErBIyOQay1t0DgnJzhQADAQAAiXNlY3AyNTZrMaECOsM_5gCc4b01od0527MawPfm3M-PvCmVl3vIBg5xhCCDdGNwgrLVg3VkcIKy14V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-05_04-11-35__e6150355-f32d-476f-aaa9-3a9b4a6cd8da__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.188.77
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['45700', '45701', '45702', '45703', '45704']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 45700:45700 -p 45701:45701 -p 45702:45702 -p 45703:45703 -p 45704:45704 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=45702 --rest-port=45700 --tcp-port=45701 --discv5-udp-port=45703 --rest-address=0.0.0.0 --nat=extip:172.18.188.77 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e4ece5ebe14f1eba656dd841afbd2fde25eb0cdd05ce4abefdbf9e3ec10f494f --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=45704 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QJtVqXF-kQ3WnvOCSuCAY_NUoZXiAFibH4_P5OPsS88-KZTKbE93nNwH0xNs8uEgvod-snf0gBlcK2yssMFHUzYCgmlkgnY0gmlwhKwSMjmKbXVsdGlhZGRyc5YACASsEjI5BrLVAAoErBIyOQay1t0DgnJzhQADAQAAiXNlY3AyNTZrMaECOsM_5gCc4b01od0527MawPfm3M-PvCmVl3vIBg5xhCCDdGNwgrLVg3VkcIKy14V3YWt1MgU --filternode=/ip4/172.18.50.57/tcp/45781/p2p/16Uiu2HAkyP4JiLxXCTZeUK8pQ4jWsjsnm9Y3fMT2kLzY7Mp1VVVR
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.188.77 waku 8a7da08972c5d28bea929b4d6382e268bc87d06c05f76c5bca51f20a187a7db8
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 8a7da08972c5. Setting up logs at ./log/docker/node2_2025-01-05_04-11-35__e6150355-f32d-476f-aaa9-3a9b4a6cd8da__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 45700
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:45700/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:45700/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.188.77/tcp/45701/p2p/16Uiu2HAmBEWcLA8WYWXsDGuo8uYHe8B7QscyK1jBSj5SA3EjgkLm","/ip4/172.18.188.77/tcp/45702/ws/p2p/16Uiu2HAmBEWcLA8WYWXsDGuo8uYHe8B7QscyK1jBSj5SA3EjgkLm"],"enrUri":"enr:-L24QLgIO44Ta0RWvxaWuOv1ovHZraqusp98G7lY6GjctG3VIWQXcfJgMlz0D5aTA18YORD-0JilvExfSvFsioidV7oCgmlkgnY0gmlwhKwSvE2KbXVsdGlhZGRyc5YACASsErxNBrKFAAoErBK8TQayht0DgnJzhQADAQAAiXNlY3AyNTZrMaEC6t8B1rH0LnwqWi0MzFBi-djsKK8jYRmv-4V9yCqcD16DdGNwgrKFg3VkcIKyh4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:45700/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.50.57/tcp/45781/p2p/16Uiu2HAkyP4JiLxXCTZeUK8pQ4jWsjsnm9Y3fMT2kLzY7Mp1VVVR"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:45780/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:45700/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "4d141e45-ad12-4a84-9b6a-49aa3f51f056", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"4d141e45-ad12-4a84-9b6a-49aa3f51f056","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:45700/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": "/test/1/waku-filter/proto", "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:45700/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 3b3b60cb7384
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 8a7da08972c5
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 3b3b60cb7384. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.