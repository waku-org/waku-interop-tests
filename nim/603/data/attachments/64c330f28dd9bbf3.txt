[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_invalid_request_id with id: 2025-01-05_04-11-17__db617e6e-6457-41bb-8c45-1e06a482383b
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-05_04-11-17__db617e6e-6457-41bb-8c45-1e06a482383b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.207.195
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['14221', '14222', '14223', '14224', '14225']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 14221:14221 -p 14222:14222 -p 14223:14223 -p 14224:14224 -p 14225:14225 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=14223 --rest-port=14221 --tcp-port=14222 --discv5-udp-port=14224 --rest-address=0.0.0.0 --nat=extip:172.18.207.195 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=8d9dd0efdf5a1ff8963ae63cce774baaa2597c6e62cdf4f983b64ad4fd9feb9a --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=14225 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.207.195 waku 3ccf71929e371864233699d355b408d081c49f734bfbd93f8783e573fa333b21
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 3ccf71929e37. Setting up logs at ./log/docker/node1_2025-01-05_04-11-17__db617e6e-6457-41bb-8c45-1e06a482383b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 14221
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container dd558320f8ce. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:14221/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:14221/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.207.195/tcp/14222/p2p/16Uiu2HAm9jHE6956rXwf6zRvk8zM3k3qfS6qZjYVr9M7xwxDr3Ai","/ip4/172.18.207.195/tcp/14223/ws/p2p/16Uiu2HAm9jHE6956rXwf6zRvk8zM3k3qfS6qZjYVr9M7xwxDr3Ai"],"enrUri":"enr:-L24QB03D_6DzIJK7k91wLAnmnVgBIVz-pmQgKEOw921XF5LOPhnHsHjiwcDsG9k-lvO3RyAAaWxlq4RKsWbqsUxBjACgmlkgnY0gmlwhKwSz8OKbXVsdGlhZGRyc5YACASsEs_DBjeOAAoErBLPwwY3j90DgnJzhQADAQAAiXNlY3AyNTZrMaEC1IZYE24EiwH7QQtEdrHkA3_pfU29HtJv7JG0zxpBCUODdGNwgjeOg3VkcII3kIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-05_04-11-17__db617e6e-6457-41bb-8c45-1e06a482383b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.148.102
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['8374', '8375', '8376', '8377', '8378']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 8374:8374 -p 8375:8375 -p 8376:8376 -p 8377:8377 -p 8378:8378 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=8376 --rest-port=8374 --tcp-port=8375 --discv5-udp-port=8377 --rest-address=0.0.0.0 --nat=extip:172.18.148.102 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=d98677cbb102cb45e700066b64c61ed2fb78cfdd7fd06f918b26d5a7aa355ac5 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=8378 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QB03D_6DzIJK7k91wLAnmnVgBIVz-pmQgKEOw921XF5LOPhnHsHjiwcDsG9k-lvO3RyAAaWxlq4RKsWbqsUxBjACgmlkgnY0gmlwhKwSz8OKbXVsdGlhZGRyc5YACASsEs_DBjeOAAoErBLPwwY3j90DgnJzhQADAQAAiXNlY3AyNTZrMaEC1IZYE24EiwH7QQtEdrHkA3_pfU29HtJv7JG0zxpBCUODdGNwgjeOg3VkcII3kIV3YWt1MgU --filternode=/ip4/172.18.207.195/tcp/14222/p2p/16Uiu2HAm9jHE6956rXwf6zRvk8zM3k3qfS6qZjYVr9M7xwxDr3Ai
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.148.102 waku 716c824ab2fb9366e73c78e6e3c0e5f6d44b10cf0ed33df3b8c559dd2a8d83cc
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 716c824ab2fb. Setting up logs at ./log/docker/node2_2025-01-05_04-11-17__db617e6e-6457-41bb-8c45-1e06a482383b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 8374
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8374/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8374/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.148.102/tcp/8375/p2p/16Uiu2HAkwFAJN4P4ZV3wic65GrWg6LCUAFKgRR595fJnZLQqr7Xx","/ip4/172.18.148.102/tcp/8376/ws/p2p/16Uiu2HAkwFAJN4P4ZV3wic65GrWg6LCUAFKgRR595fJnZLQqr7Xx"],"enrUri":"enr:-L24QAzrp36hs8OLy7Aw6fiw2PdLQLnVtG2TjBAIWGnYIJ71J_Lt4QZp4rOUcPR3jcG455gkDIcW1xmApVQZ-q7JwBoCgmlkgnY0gmlwhKwSlGaKbXVsdGlhZGRyc5YACASsEpRmBiC3AAoErBKUZgYguN0DgnJzhQADAQAAiXNlY3AyNTZrMaECGwYBtdvEzOyzbrE3dI5kXhhqGMVPAFhzgojRKiqsAaODdGNwgiC3g3VkcIIguYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8374/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.207.195/tcp/14222/p2p/16Uiu2HAm9jHE6956rXwf6zRvk8zM3k3qfS6qZjYVr9M7xwxDr3Ai"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:14221/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8374/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "d0613e6e-212b-46d8-a037-d1a7fdf694e6", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"d0613e6e-212b-46d8-a037-d1a7fdf694e6","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:8374/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:8374/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 3ccf71929e37
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 716c824ab2fb
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 3ccf71929e37. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.