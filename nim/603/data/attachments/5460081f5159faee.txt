[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_payload_equal_or_more_150_kb with id: 2025-01-05_04-15-00__cfdd1ff1-fede-425c-a13d-96fab2227367
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-05_04-15-00__cfdd1ff1-fede-425c-a13d-96fab2227367__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.41.182
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['30007', '30008', '30009', '30010', '30011']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 30007:30007 -p 30008:30008 -p 30009:30009 -p 30010:30010 -p 30011:30011 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=30009 --rest-port=30007 --tcp-port=30008 --discv5-udp-port=30010 --rest-address=0.0.0.0 --nat=extip:172.18.41.182 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b15f35325863be2ad25a5f3b0a8a97e6f8c14d15c23690a0c9d99c2bf15fdcaf --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=30011 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.41.182 waku cc60c7abbe1caa127c42496cc33c22a1746f451d62b6c5c16f855c8a7de144be
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID cc60c7abbe1c. Setting up logs at ./log/docker/node1_2025-01-05_04-15-00__cfdd1ff1-fede-425c-a13d-96fab2227367__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 30007
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 8fce75ebee9f. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30007/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30007/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.41.182/tcp/30008/p2p/16Uiu2HAkyUxwjHYSSJz1TEEGB6nk6wmzb8J4s9PhCVjhbXUf8qU2","/ip4/172.18.41.182/tcp/30009/ws/p2p/16Uiu2HAkyUxwjHYSSJz1TEEGB6nk6wmzb8J4s9PhCVjhbXUf8qU2"],"enrUri":"enr:-L24QBR77stSP_rcT4KO-Bs6wvv7oSpk224FsYM2Drdxa0wXcrIaUDH53wktZNQLnccgkMlDtgmf03DCHvmZf3gOXQcCgmlkgnY0gmlwhKwSKbaKbXVsdGlhZGRyc5YACASsEim2BnU4AAoErBIptgZ1Od0DgnJzhQADAQAAiXNlY3AyNTZrMaECPEar_z0AfmjMDOsdvWJ44Yyu-g6KdOk6eGpg5S--4LeDdGNwgnU4g3VkcIJ1OoV3YWt1MgE"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-05_04-15-00__cfdd1ff1-fede-425c-a13d-96fab2227367__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.12.128
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['41253', '41254', '41255', '41256', '41257']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 41253:41253 -p 41254:41254 -p 41255:41255 -p 41256:41256 -p 41257:41257 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=41255 --rest-port=41253 --tcp-port=41254 --discv5-udp-port=41256 --rest-address=0.0.0.0 --nat=extip:172.18.12.128 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e4750dbfcbfef6dffc581fbdd066fcebc9c0cb91423fcb10ded59391dfac8f55 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=41257 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-L24QBR77stSP_rcT4KO-Bs6wvv7oSpk224FsYM2Drdxa0wXcrIaUDH53wktZNQLnccgkMlDtgmf03DCHvmZf3gOXQcCgmlkgnY0gmlwhKwSKbaKbXVsdGlhZGRyc5YACASsEim2BnU4AAoErBIptgZ1Od0DgnJzhQADAQAAiXNlY3AyNTZrMaECPEar_z0AfmjMDOsdvWJ44Yyu-g6KdOk6eGpg5S--4LeDdGNwgnU4g3VkcIJ1OoV3YWt1MgE
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.12.128 waku e9147b333e63e5b46645cd96c1233db3e14b8ae860939d4c5cba07697bec8771
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID e9147b333e63. Setting up logs at ./log/docker/node2_2025-01-05_04-15-00__cfdd1ff1-fede-425c-a13d-96fab2227367__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 41253
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41253/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41253/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.12.128/tcp/41254/p2p/16Uiu2HAm2Y8bRFEXFPCj6zbYJnK6YWrJRucmUqj7GaEdjiYdEJL4","/ip4/172.18.12.128/tcp/41255/ws/p2p/16Uiu2HAm2Y8bRFEXFPCj6zbYJnK6YWrJRucmUqj7GaEdjiYdEJL4"],"enrUri":"enr:-L24QDJsgkHAJ_KpU_xQzaZsgnr3O655-slkalBGAFLu3xluH_1VqxljkPavOgkgkQJ1Iuj-BuyHwkxbCF8zuRAw7poCgmlkgnY0gmlwhKwSDICKbXVsdGlhZGRyc5YACASsEgyABqEmAAoErBIMgAahJ90DgnJzhQADAQAAiXNlY3AyNTZrMaECaali2lvlWiLDGcYCtLz3ScQ4nO9XMjc24KKvdGdn952DdGNwgqEmg3VkcIKhKIV3YWt1MgE"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:41253/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.41.182/tcp/30008/p2p/16Uiu2HAkyUxwjHYSSJz1TEEGB6nk6wmzb8J4s9PhCVjhbXUf8qU2"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:30007/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:41253/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:30007/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30007/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1736050503323733760,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41253/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1736050503323733760,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[35mDEBUG   [0m tests.relay.test_publish:test_publish.py:55 Running test with payload length of 204800 bytes
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:30007/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Failed to publish: Message size exceeded maximum of 153600 bytes'
[35mDEBUG   [0m tests.relay.test_publish:test_publish.py:55 Running test with payload length of 1048576 bytes
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:30007/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Failed to publish: Message size exceeded maximum of 153600 bytes'
[35mDEBUG   [0m tests.relay.test_publish:test_publish.py:55 Running test with payload length of 10485760 bytes
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:30007/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Failed to publish: Message size exceeded maximum of 153600 bytes'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id cc60c7abbe1c
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id e9147b333e63
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container cc60c7abbe1c. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.