[35mDEBUG   [0m src.postgres_setup:postgres_setup.py:36 Postgres container started
[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_on_empty_postgress_db with id: 2024-10-23_08-24-20__f5c60e57-067f-4ce5-8022-9435e019d2ee
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.store:store.py:31 Running fixture setup: store_setup
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/publishing_node1_2024-10-23_08-24-20__f5c60e57-067f-4ce5-8022-9435e019d2ee__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.134.92
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['37823', '37824', '37825', '37826', '37827']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 37823:37823 -p 37824:37824 -p 37825:37825 -p 37826:37826 -p 37827:37827 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=37825 --rest-port=37823 --tcp-port=37824 --discv5-udp-port=37826 --rest-address=0.0.0.0 --nat=extip:172.18.134.92 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=becddec3a60c3ea64bedaeaad5fa7d8ea7badf7844edc62076444ad63abcfd83 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=37827 --metrics-logging=true --store=true --relay=true --store-message-db-url=postgres://postgres:test123@postgres:5432/postgres
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.134.92 waku 53461d19358ce9ed33c5cdc24efe6c522e4e3ca8060c2dac7b9d72590ff84ae5
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 53461d19358c. Setting up logs at ./log/docker/publishing_node1_2024-10-23_08-24-20__f5c60e57-067f-4ce5-8022-9435e019d2ee__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 37823
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:37823/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Initializing","protocolsHealth":[]}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:37823/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Initializing","protocolsHealth":[]}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:37823/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:37823/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.134.92/tcp/37824/p2p/16Uiu2HAmAcJ7YFAHNnh6VHo95SbPnJ64yRYjhmxn3vLoxmXrfPXC","/ip4/172.18.134.92/tcp/37825/ws/p2p/16Uiu2HAmAcJ7YFAHNnh6VHo95SbPnJ64yRYjhmxn3vLoxmXrfPXC"],"enrUri":"enr:-LO4QKDnfE-eJEwdz8HV5-9lZbMqkozsHDf4iCunWL_hl-qBFYgFr_t_g6_wRbFpRseqrm71UE3yG1NIrYae-C8R0-MBgmlkgnY0gmlwhKwShlyKbXVsdGlhZGRyc4wACgSsEoZcBpPB3QOCcnOFAAMBAACJc2VjcDI1NmsxoQLhl_fkBQ60WQMxSGhQauZGZSaqA_O1n9guj27vS65XL4N0Y3CCk8CDdWRwgpPChXdha3UyAw"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/store_node1_2024-10-23_08-24-20__f5c60e57-067f-4ce5-8022-9435e019d2ee__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.170.186
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['18443', '18444', '18445', '18446', '18447']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 18443:18443 -p 18444:18444 -p 18445:18445 -p 18446:18446 -p 18447:18447 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=18445 --rest-port=18443 --tcp-port=18444 --discv5-udp-port=18446 --rest-address=0.0.0.0 --nat=extip:172.18.170.186 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=2f61c72f5ffe47eff33cfa2539ab338bd4b844b05bd73be74cd4143fbda4cccf --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=18447 --metrics-logging=true --discv5-bootstrap-node=enr:-LO4QKDnfE-eJEwdz8HV5-9lZbMqkozsHDf4iCunWL_hl-qBFYgFr_t_g6_wRbFpRseqrm71UE3yG1NIrYae-C8R0-MBgmlkgnY0gmlwhKwShlyKbXVsdGlhZGRyc4wACgSsEoZcBpPB3QOCcnOFAAMBAACJc2VjcDI1NmsxoQLhl_fkBQ60WQMxSGhQauZGZSaqA_O1n9guj27vS65XL4N0Y3CCk8CDdWRwgpPChXdha3UyAw --storenode=/ip4/172.18.134.92/tcp/37824/p2p/16Uiu2HAmAcJ7YFAHNnh6VHo95SbPnJ64yRYjhmxn3vLoxmXrfPXC --store=false --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.170.186 waku 33e8c1eabf222df1bcdf9a91d12cce014279d43f77a3c64ba2b739870e6615cf
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 33e8c1eabf22. Setting up logs at ./log/docker/store_node1_2024-10-23_08-24-20__f5c60e57-067f-4ce5-8022-9435e019d2ee__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 18443
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:18443/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:18443/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.170.186/tcp/18444/p2p/16Uiu2HAmMQBTr1jTL6J6fHAVdrvY5hJPmQfRFwaUoHnuPtfVowj3","/ip4/172.18.170.186/tcp/18445/ws/p2p/16Uiu2HAmMQBTr1jTL6J6fHAVdrvY5hJPmQfRFwaUoHnuPtfVowj3"],"enrUri":"enr:-LO4QMa0DGoWmj2drtD2GkJQ1it9N7G4IwOKO8r4qf0KkMQMOWJh_3CMExEB6ZqPum71uvQufBv2h55ubtlEXrTcWUUBgmlkgnY0gmlwhKwSqrqKbXVsdGlhZGRyc4wACgSsEqq6BkgN3QOCcnOFAAMBAACJc2VjcDI1NmsxoQOB7gkm1zw2EAFldkSpWwD_uZHBNc4svK2wxYqurS9RjoN0Y3CCSAyDdWRwgkgOhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:18443/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.134.92/tcp/37824/p2p/16Uiu2HAmAcJ7YFAHNnh6VHo95SbPnJ64yRYjhmxn3vLoxmXrfPXC"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:37823/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/0"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:18443/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/0"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.store:store.py:132 Relaying message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:37823/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F0" -H "Content-Type: application/json" -d '{"payload": "U3RvcmUgd29ya3MhIQ==", "contentTopic": "/myapp/1/latest/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.2 seconds
[35mDEBUG   [0m src.steps.store:store.py:218 Checking that peer wakuorg/nwaku:latest can find the stored messages
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:37823/store/v3/messages?pubsubTopic=%2Fwaku%2F2%2Frs%2F3%2F0&pageSize=5&ascending=true" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"","statusCode":200,"statusDesc":"OK","messages":[{"messageHash":"fXy4+3cSrO4ZhtMrmiLMt28JAZRXFZL6p8WsGQ6Oq04="}]}'
[35mDEBUG   [0m src.steps.store:store.py:218 Checking that peer wakuorg/nwaku:latest can find the stored messages
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:18443/store/v3/messages?pubsubTopic=%2Fwaku%2F2%2Frs%2F3%2F0&pageSize=5&ascending=true" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"29e831fe4415e5011d0e","statusCode":200,"statusDesc":"OK","messages":[{"messageHash":"fXy4+3cSrO4ZhtMrmiLMt28JAZRXFZL6p8WsGQ6Oq04="}]}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 53461d19358c
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 33e8c1eabf22
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.postgres_setup:postgres_setup.py:44 Postgres container stopped and removed.