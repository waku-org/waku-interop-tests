[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_invalid_version with id: 2024-10-03_04-23-15__d95f2c43-82a9-461d-b80e-613103cf4f0e
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-10-03_04-23-15__d95f2c43-82a9-461d-b80e-613103cf4f0e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.37.248
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['18244', '18245', '18246', '18247', '18248']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 18244:18244 -p 18245:18245 -p 18246:18246 -p 18247:18247 -p 18248:18248 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=18246 --rest-port=18244 --tcp-port=18245 --discv5-udp-port=18247 --rest-address=0.0.0.0 --nat=extip:172.18.37.248 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=cecf0b47c7e9b8e34a23fe3fb5d6fcefa9fcbe21fa841ca54f8c5b19dcfe6d23 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=18248 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.37.248 waku c5709d5caf9492c634400c1eba65059d4a136c6ff19ba94cd51eb719ee6f36f1
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID c5709d5caf94. Setting up logs at ./log/docker/node1_2024-10-03_04-23-15__d95f2c43-82a9-461d-b80e-613103cf4f0e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 18244
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:18244/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:18244/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.37.248/tcp/18245/p2p/16Uiu2HAmHy3NoChTtCtFC1h3BZMLx4hgVTc7Cr7V3eYBzuZHHy3w","/ip4/172.18.37.248/tcp/18246/ws/p2p/16Uiu2HAmHy3NoChTtCtFC1h3BZMLx4hgVTc7Cr7V3eYBzuZHHy3w"],"enrUri":"enr:-LO4QMbufs4PMRLsdpsKbM5fb36tEBXtGH0igs2OpmWneHolZ28BxATOmcDo4QOfR6DvtNOnt1LlrhX289-wIc7ljooBgmlkgnY0gmlwhKwSJfiKbXVsdGlhZGRyc4wACgSsEiX4BkdG3QOCcnOFAAMBAACJc2VjcDI1NmsxoQNO6k-JszCcIt7tf6GAlItvdXwf0m0mQzuE5BLnQvUXioN0Y3CCR0WDdWRwgkdHhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-10-03_04-23-15__d95f2c43-82a9-461d-b80e-613103cf4f0e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.177.66
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['15945', '15946', '15947', '15948', '15949']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 15945:15945 -p 15946:15946 -p 15947:15947 -p 15948:15948 -p 15949:15949 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=15947 --rest-port=15945 --tcp-port=15946 --discv5-udp-port=15948 --rest-address=0.0.0.0 --nat=extip:172.18.177.66 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=26b39b7f5dea148afcc9d5cb4adacdc233b81065cccf2d0d14a256c82df48fec --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=15949 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QMbufs4PMRLsdpsKbM5fb36tEBXtGH0igs2OpmWneHolZ28BxATOmcDo4QOfR6DvtNOnt1LlrhX289-wIc7ljooBgmlkgnY0gmlwhKwSJfiKbXVsdGlhZGRyc4wACgSsEiX4BkdG3QOCcnOFAAMBAACJc2VjcDI1NmsxoQNO6k-JszCcIt7tf6GAlItvdXwf0m0mQzuE5BLnQvUXioN0Y3CCR0WDdWRwgkdHhXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.177.66 waku 03d7d7f58fd36535f67e699d06060a19a279ef2f73fe7b1312a62c06881842f9
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 03d7d7f58fd3. Setting up logs at ./log/docker/node2_2024-10-03_04-23-15__d95f2c43-82a9-461d-b80e-613103cf4f0e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 15945
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:15945/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:15945/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.177.66/tcp/15946/p2p/16Uiu2HAm2HUJyVK9PdGQHDWGp8QZnwyhCXpHxyvJzyNRTwVi6Aif","/ip4/172.18.177.66/tcp/15947/ws/p2p/16Uiu2HAm2HUJyVK9PdGQHDWGp8QZnwyhCXpHxyvJzyNRTwVi6Aif"],"enrUri":"enr:-LO4QN4fU3pFc7UaCJFWnCW3wM5oCRNSUBTjR_LyiPv3_PH6aBncJeP1cz3sMUBg8ppYQ0qM-XuxtdCd_2-ELX7TSTsBgmlkgnY0gmlwhKwSsUKKbXVsdGlhZGRyc4wACgSsErFCBj5L3QOCcnOFAAMBAACJc2VjcDI1NmsxoQJl5_euYjL5-42pIDCUrAhCCxDloJ-kBuEtG9bh-KLsDIN0Y3CCPkqDdWRwgj5MhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:15945/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.37.248/tcp/18245/p2p/16Uiu2HAmHy3NoChTtCtFC1h3BZMLx4hgVTc7Cr7V3eYBzuZHHy3w"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:18244/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:15945/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:18244/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:18244/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1727929399221663488,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:15945/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1727929399221663488,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:18244/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)', "version": 2.1}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:18244/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id c5709d5caf94
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 03d7d7f58fd3
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.