[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_invalid_request_id with id: 2024-12-30_04-10-40__0e9be1d6-fc3d-48bf-9aa5-cb80a63129e9
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-30_04-10-40__0e9be1d6-fc3d-48bf-9aa5-cb80a63129e9__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.244.120
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['27438', '27439', '27440', '27441', '27442']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 27438:27438 -p 27439:27439 -p 27440:27440 -p 27441:27441 -p 27442:27442 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=27440 --rest-port=27438 --tcp-port=27439 --discv5-udp-port=27441 --rest-address=0.0.0.0 --nat=extip:172.18.244.120 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ba5e4d64b0af38a3ccfa691e6298e50ba46b2a19abf298e0f09d6e1bddf39de0 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=27442 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.244.120 waku 12919b72f2d6e05f58b16b7aee0af64db91168e7dd9170a97bdd18668b68382c
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 12919b72f2d6. Setting up logs at ./log/docker/node1_2024-12-30_04-10-40__0e9be1d6-fc3d-48bf-9aa5-cb80a63129e9__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 27438
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 141cf4baf130. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:27438/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:27438/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.244.120/tcp/27439/p2p/16Uiu2HAm1LV9HixbSyxrpaJA8fXSddAtiqtxjvoTC2k1igVPvN3k","/ip4/172.18.244.120/tcp/27440/ws/p2p/16Uiu2HAm1LV9HixbSyxrpaJA8fXSddAtiqtxjvoTC2k1igVPvN3k"],"enrUri":"enr:-L24QPCMoRlWm-5mmUgAxwj2MT317ww3zsVfQ6SF5kQirFUgQE-bxXrKVhLj-kpJVP2lBP7p-huySf8XJtjC5v3hTfICgmlkgnY0gmlwhKwS9HiKbXVsdGlhZGRyc5YACASsEvR4BmsvAAoErBL0eAZrMN0DgnJzhQADAQAAiXNlY3AyNTZrMaECV9H3Av5f9yAAjqOv4kMgxH0vC_v-V9WLk5GRN6x5N_uDdGNwgmsvg3VkcIJrMYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-30_04-10-40__0e9be1d6-fc3d-48bf-9aa5-cb80a63129e9__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.143.13
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['17781', '17782', '17783', '17784', '17785']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 17781:17781 -p 17782:17782 -p 17783:17783 -p 17784:17784 -p 17785:17785 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=17783 --rest-port=17781 --tcp-port=17782 --discv5-udp-port=17784 --rest-address=0.0.0.0 --nat=extip:172.18.143.13 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=d4eab9475bdffefedfa6765870fca1cd6c51ba18715dc349bd8ff0cd7efdaf65 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=17785 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QPCMoRlWm-5mmUgAxwj2MT317ww3zsVfQ6SF5kQirFUgQE-bxXrKVhLj-kpJVP2lBP7p-huySf8XJtjC5v3hTfICgmlkgnY0gmlwhKwS9HiKbXVsdGlhZGRyc5YACASsEvR4BmsvAAoErBL0eAZrMN0DgnJzhQADAQAAiXNlY3AyNTZrMaECV9H3Av5f9yAAjqOv4kMgxH0vC_v-V9WLk5GRN6x5N_uDdGNwgmsvg3VkcIJrMYV3YWt1MgU --filternode=/ip4/172.18.244.120/tcp/27439/p2p/16Uiu2HAm1LV9HixbSyxrpaJA8fXSddAtiqtxjvoTC2k1igVPvN3k
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.143.13 waku 39b79a3861eab7e80295e3c3ea29e8e1164acbdb910348ee467dec893cb07858
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 39b79a3861ea. Setting up logs at ./log/docker/node2_2024-12-30_04-10-40__0e9be1d6-fc3d-48bf-9aa5-cb80a63129e9__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 17781
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17781/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17781/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.143.13/tcp/17782/p2p/16Uiu2HAkw7bf6cDRgLHZyHzV18MDY1iVZNsWPC9ctnsMpeRa1gSu","/ip4/172.18.143.13/tcp/17783/ws/p2p/16Uiu2HAkw7bf6cDRgLHZyHzV18MDY1iVZNsWPC9ctnsMpeRa1gSu"],"enrUri":"enr:-L24QOYk9kq77zQdZL5sv6Y6R9cdTq3sOHeOj5RN0YpRKTVBeOh_szXnxMJFl7I8NsH3E4XgnsLVrU3QO4HAcqexGrYCgmlkgnY0gmlwhKwSjw2KbXVsdGlhZGRyc5YACASsEo8NBkV2AAoErBKPDQZFd90DgnJzhQADAQAAiXNlY3AyNTZrMaECGRYIMQTswU7R1Nm15Vx38CmPwK5g972lT2_GfX7KVSqDdGNwgkV2g3VkcIJFeIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17781/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.244.120/tcp/27439/p2p/16Uiu2HAm1LV9HixbSyxrpaJA8fXSddAtiqtxjvoTC2k1igVPvN3k"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:27438/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17781/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "452d60d7-bdcf-4f30-a8c0-044a10ea6192", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"452d60d7-bdcf-4f30-a8c0-044a10ea6192","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:17781/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:17781/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 12919b72f2d6
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 39b79a3861ea
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 12919b72f2d6. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.