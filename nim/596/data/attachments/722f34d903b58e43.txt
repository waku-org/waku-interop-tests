[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_extra_field with id: 2024-12-30_04-10-02__6535d475-5656-4823-ac12-f172cc6e0c1b
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-30_04-10-02__6535d475-5656-4823-ac12-f172cc6e0c1b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.146.90
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['15079', '15080', '15081', '15082', '15083']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 15079:15079 -p 15080:15080 -p 15081:15081 -p 15082:15082 -p 15083:15083 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=15081 --rest-port=15079 --tcp-port=15080 --discv5-udp-port=15082 --rest-address=0.0.0.0 --nat=extip:172.18.146.90 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=f1faa1b4adfd30ad90f8ee9b13faf39d2ef8ca64101cd6b3deabc8f0a8a4af6f --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=15083 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.146.90 waku 287ca5fa48ab1ae2beeae9b73bdbb9929ff6963be377812a6d096bf36775dfd7
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 287ca5fa48ab. Setting up logs at ./log/docker/node1_2024-12-30_04-10-02__6535d475-5656-4823-ac12-f172cc6e0c1b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 15079
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 945882e7c65d. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:15079/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:15079/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.146.90/tcp/15080/p2p/16Uiu2HAm2hDjQT9gD6HBddPcYm6y8HmijCn588Gup6C8paZpH1jz","/ip4/172.18.146.90/tcp/15081/ws/p2p/16Uiu2HAm2hDjQT9gD6HBddPcYm6y8HmijCn588Gup6C8paZpH1jz"],"enrUri":"enr:-L24QHuPskH7jKvLz4955PYbIKnR9fwgXBEagNv-Yp0mF_xNenc6SNPCjgGFiLkfIfkpo6bKYZ6rheuTqFMhaS_vjZUCgmlkgnY0gmlwhKwSklqKbXVsdGlhZGRyc5YACASsEpJaBjroAAoErBKSWgY66d0DgnJzhQADAQAAiXNlY3AyNTZrMaECa_1sMeH3VoP7UG0TZJTC7XTpMcgk5BXTUNNWEdEdcu2DdGNwgjrog3VkcII66oV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-30_04-10-02__6535d475-5656-4823-ac12-f172cc6e0c1b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.229.158
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['51014', '51015', '51016', '51017', '51018']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 51014:51014 -p 51015:51015 -p 51016:51016 -p 51017:51017 -p 51018:51018 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=51016 --rest-port=51014 --tcp-port=51015 --discv5-udp-port=51017 --rest-address=0.0.0.0 --nat=extip:172.18.229.158 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=c71df43b4a2c64dee69b9703a9bca3df74f681c7ed3fc1f56847f74d3736ea2d --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=51018 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QHuPskH7jKvLz4955PYbIKnR9fwgXBEagNv-Yp0mF_xNenc6SNPCjgGFiLkfIfkpo6bKYZ6rheuTqFMhaS_vjZUCgmlkgnY0gmlwhKwSklqKbXVsdGlhZGRyc5YACASsEpJaBjroAAoErBKSWgY66d0DgnJzhQADAQAAiXNlY3AyNTZrMaECa_1sMeH3VoP7UG0TZJTC7XTpMcgk5BXTUNNWEdEdcu2DdGNwgjrog3VkcII66oV3YWt1MgU --filternode=/ip4/172.18.146.90/tcp/15080/p2p/16Uiu2HAm2hDjQT9gD6HBddPcYm6y8HmijCn588Gup6C8paZpH1jz
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.229.158 waku 61489f7a7cbf05fb8bf869bb81deb379039bbe866faf72404c7632bb666c950a
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 61489f7a7cbf. Setting up logs at ./log/docker/node2_2024-12-30_04-10-02__6535d475-5656-4823-ac12-f172cc6e0c1b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 51014
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:51014/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:51014/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.229.158/tcp/51015/p2p/16Uiu2HAm5MySz11M4n8YqwSSaGok8hz3mCYQg5aZhjoX1kCAW5dY","/ip4/172.18.229.158/tcp/51016/ws/p2p/16Uiu2HAm5MySz11M4n8YqwSSaGok8hz3mCYQg5aZhjoX1kCAW5dY"],"enrUri":"enr:-L24QJL2dray1V2cK6GNk5U2Q5J-yOY2eHTsZ-wbu4nBfW9XbIv37QIIg9VLZan4xVQCn_-mZqqU6ywy5i58KnNRlvQCgmlkgnY0gmlwhKwS5Z6KbXVsdGlhZGRyc5YACASsEuWeBsdHAAoErBLlngbHSN0DgnJzhQADAQAAiXNlY3AyNTZrMaECk6JMTWE3VVHiGYTmYndc9ObCCqsog83XPvh6cXzbdY-DdGNwgsdHg3VkcILHSYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:51014/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.146.90/tcp/15080/p2p/16Uiu2HAm2hDjQT9gD6HBddPcYm6y8HmijCn588Gup6C8paZpH1jz"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:15079/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:51014/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "6a2bd7cf-2daf-4f4a-a4d5-5855ca8294ee", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"6a2bd7cf-2daf-4f4a-a4d5-5855ca8294ee","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:51014/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:51014/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 287ca5fa48ab
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 61489f7a7cbf
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 287ca5fa48ab. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.