[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_invalid_request_id with id: 2024-12-30_04-10-28__3d2b1ac0-7fd3-4003-a602-084eac279825
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-30_04-10-28__3d2b1ac0-7fd3-4003-a602-084eac279825__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.134.221
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['6765', '6766', '6767', '6768', '6769']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 6765:6765 -p 6766:6766 -p 6767:6767 -p 6768:6768 -p 6769:6769 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=6767 --rest-port=6765 --tcp-port=6766 --discv5-udp-port=6768 --rest-address=0.0.0.0 --nat=extip:172.18.134.221 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=cd47d5fc7c23bc7ebcae7fe956aff6710603cbb10ae08bcb9b3db04be850da37 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=6769 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.134.221 waku 1c9e81fed1d81356ce0f99a1b9f26873915db495774c7ec680081293529137b8
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 1c9e81fed1d8. Setting up logs at ./log/docker/node1_2024-12-30_04-10-28__3d2b1ac0-7fd3-4003-a602-084eac279825__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 6765
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 7e774c18e5e7. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:6765/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:6765/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.134.221/tcp/6766/p2p/16Uiu2HAmQvRg6ijqA2EVwvF9gg9TAoo52iqysRshwUNSxBMhMrns","/ip4/172.18.134.221/tcp/6767/ws/p2p/16Uiu2HAmQvRg6ijqA2EVwvF9gg9TAoo52iqysRshwUNSxBMhMrns"],"enrUri":"enr:-L24QGWJ5hTv_Q0I6yC63nftxN8TLSI5J7lZnYWoDQsfMRqrPo-O6sLO0zMxt7SA9sGE0gf2bY-MJy79sRdFPaiQOYYCgmlkgnY0gmlwhKwSht2KbXVsdGlhZGRyc5YACASsEobdBhpuAAoErBKG3QYab90DgnJzhQADAQAAiXNlY3AyNTZrMaEDtkCW65ziTOM6c2Itko1rMI4YDUGqnm47yrsUJHa2q2iDdGNwghpug3VkcIIacIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-30_04-10-28__3d2b1ac0-7fd3-4003-a602-084eac279825__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.50.106
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['41057', '41058', '41059', '41060', '41061']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 41057:41057 -p 41058:41058 -p 41059:41059 -p 41060:41060 -p 41061:41061 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=41059 --rest-port=41057 --tcp-port=41058 --discv5-udp-port=41060 --rest-address=0.0.0.0 --nat=extip:172.18.50.106 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=aebd83d74b49874abfb8cfd3c3493fdd3e5827f206cbbfbb8ca81bf20941cc8a --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=41061 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QGWJ5hTv_Q0I6yC63nftxN8TLSI5J7lZnYWoDQsfMRqrPo-O6sLO0zMxt7SA9sGE0gf2bY-MJy79sRdFPaiQOYYCgmlkgnY0gmlwhKwSht2KbXVsdGlhZGRyc5YACASsEobdBhpuAAoErBKG3QYab90DgnJzhQADAQAAiXNlY3AyNTZrMaEDtkCW65ziTOM6c2Itko1rMI4YDUGqnm47yrsUJHa2q2iDdGNwghpug3VkcIIacIV3YWt1MgU --filternode=/ip4/172.18.134.221/tcp/6766/p2p/16Uiu2HAmQvRg6ijqA2EVwvF9gg9TAoo52iqysRshwUNSxBMhMrns
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.50.106 waku e002aeb90ad516bbaed6d5e14cb28c38ea71b55479fd429684c14dd758f622d1
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID e002aeb90ad5. Setting up logs at ./log/docker/node2_2024-12-30_04-10-28__3d2b1ac0-7fd3-4003-a602-084eac279825__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 41057
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41057/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41057/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.50.106/tcp/41058/p2p/16Uiu2HAm9Tv2wajzaSxRG3xLMKB6btrdqsNcuq5ViuohotF8U1gD","/ip4/172.18.50.106/tcp/41059/ws/p2p/16Uiu2HAm9Tv2wajzaSxRG3xLMKB6btrdqsNcuq5ViuohotF8U1gD"],"enrUri":"enr:-L24QLQArgg6oC3iKsP_xs93YdngQPwfq1TbFBRtboKn-HpPS0con6PyjoEgQwiYM0pRf-jtJVb0cUHPuWxq0HJamwgCgmlkgnY0gmlwhKwSMmqKbXVsdGlhZGRyc5YACASsEjJqBqBiAAoErBIyagagY90DgnJzhQADAQAAiXNlY3AyNTZrMaEC0JarePeEc0vgqpNCSV1YBbmSPnZPiLxKKznNP9NnYwqDdGNwgqBig3VkcIKgZIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:41057/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.134.221/tcp/6766/p2p/16Uiu2HAmQvRg6ijqA2EVwvF9gg9TAoo52iqysRshwUNSxBMhMrns"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:6765/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:41057/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "3dc14d96-5dc8-4bfa-81b4-a61307e5dd9a", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"3dc14d96-5dc8-4bfa-81b4-a61307e5dd9a","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:41057/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:41057/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 1c9e81fed1d8
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id e002aeb90ad5
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 1c9e81fed1d8. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.