[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_invalid_request_id with id: 2024-12-23_04-10-00__e17f5854-a2cd-4b61-aa9c-5de141e90628
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-23_04-10-00__e17f5854-a2cd-4b61-aa9c-5de141e90628__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.119.73
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['14880', '14881', '14882', '14883', '14884']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 14880:14880 -p 14881:14881 -p 14882:14882 -p 14883:14883 -p 14884:14884 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=14882 --rest-port=14880 --tcp-port=14881 --discv5-udp-port=14883 --rest-address=0.0.0.0 --nat=extip:172.18.119.73 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=0028648ed1c4bc3ff4c85d04fedb669a0efe8555f8bb93ef5d47d7dcec7009f9 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=14884 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.119.73 waku 0f8951f48b9208fc2b4e15e4cc2d863290e72a6c8ba116a6e3f5d5f86da86a23
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 0f8951f48b92. Setting up logs at ./log/docker/node1_2024-12-23_04-10-00__e17f5854-a2cd-4b61-aa9c-5de141e90628__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 14880
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container c853effc7873. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:14880/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:14880/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.119.73/tcp/14881/p2p/16Uiu2HAmC9tZDLD2bMbrw5muyYFfV3bTaGauexFKBAqG6n4xSp1k","/ip4/172.18.119.73/tcp/14882/ws/p2p/16Uiu2HAmC9tZDLD2bMbrw5muyYFfV3bTaGauexFKBAqG6n4xSp1k"],"enrUri":"enr:-L24QGl6rUomPLjzcEMmHjqNm3lkd5QxmD83p73qqNxhER0UB7H6YObfqRecxjic5yhtg6lrhoeWzqsHSYOcvkUNFwUCgmlkgnY0gmlwhKwSd0mKbXVsdGlhZGRyc5YACASsEndJBjohAAoErBJ3SQY6It0DgnJzhQADAQAAiXNlY3AyNTZrMaEC-Iua0caM7pQZZicBV0rUxhZGI6hssXVwB7y2hpFad7-DdGNwgjohg3VkcII6I4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-23_04-10-00__e17f5854-a2cd-4b61-aa9c-5de141e90628__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.137.132
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['17560', '17561', '17562', '17563', '17564']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 17560:17560 -p 17561:17561 -p 17562:17562 -p 17563:17563 -p 17564:17564 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=17562 --rest-port=17560 --tcp-port=17561 --discv5-udp-port=17563 --rest-address=0.0.0.0 --nat=extip:172.18.137.132 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=0788a3f47bf8a0ef761ba11cdf7b451b98090fcb8bef014b8d9729697bc7cfef --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=17564 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QGl6rUomPLjzcEMmHjqNm3lkd5QxmD83p73qqNxhER0UB7H6YObfqRecxjic5yhtg6lrhoeWzqsHSYOcvkUNFwUCgmlkgnY0gmlwhKwSd0mKbXVsdGlhZGRyc5YACASsEndJBjohAAoErBJ3SQY6It0DgnJzhQADAQAAiXNlY3AyNTZrMaEC-Iua0caM7pQZZicBV0rUxhZGI6hssXVwB7y2hpFad7-DdGNwgjohg3VkcII6I4V3YWt1MgU --filternode=/ip4/172.18.119.73/tcp/14881/p2p/16Uiu2HAmC9tZDLD2bMbrw5muyYFfV3bTaGauexFKBAqG6n4xSp1k
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.137.132 waku 968b58e1a8cd700925628c13b159451d48d626908b1f2ccea6f6a6cac2767023
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 968b58e1a8cd. Setting up logs at ./log/docker/node2_2024-12-23_04-10-00__e17f5854-a2cd-4b61-aa9c-5de141e90628__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 17560
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17560/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17560/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.137.132/tcp/17561/p2p/16Uiu2HAmJ6a6fUx86sQRx8sQjSqYE9Z7hxTrRTxqjRgbeSB66wEB","/ip4/172.18.137.132/tcp/17562/ws/p2p/16Uiu2HAmJ6a6fUx86sQRx8sQjSqYE9Z7hxTrRTxqjRgbeSB66wEB"],"enrUri":"enr:-L24QB07y9xfygfS2ClDqVK5D3mEz6rPP5GKkOBtugXvGOoobs0dtRsJcZAHZ6xbgmTmuBZ4u5e-f20DAqsqlBOTB0cCgmlkgnY0gmlwhKwSiYSKbXVsdGlhZGRyc5YACASsEomEBkSZAAoErBKJhAZEmt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDUNgdGKKwShVXPUOILhyqsI57T0NmcN_lMQlUTYr3TayDdGNwgkSZg3VkcIJEm4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17560/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.119.73/tcp/14881/p2p/16Uiu2HAmC9tZDLD2bMbrw5muyYFfV3bTaGauexFKBAqG6n4xSp1k"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:14880/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17560/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "93c2286a-eee7-4e7c-8943-5c306f5d37b1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"93c2286a-eee7-4e7c-8943-5c306f5d37b1","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17560/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:17560/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 0f8951f48b92
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 968b58e1a8cd
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 0f8951f48b92. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.