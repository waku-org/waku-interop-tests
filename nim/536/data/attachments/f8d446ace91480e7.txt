[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_invalid_pubsub_topic_format with id: 2024-12-23_04-09-53__615a2c4a-4619-4edd-83fc-85a4b20f44f8
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-23_04-09-53__615a2c4a-4619-4edd-83fc-85a4b20f44f8__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.108.139
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['41380', '41381', '41382', '41383', '41384']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 41380:41380 -p 41381:41381 -p 41382:41382 -p 41383:41383 -p 41384:41384 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=41382 --rest-port=41380 --tcp-port=41381 --discv5-udp-port=41383 --rest-address=0.0.0.0 --nat=extip:172.18.108.139 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=5b9eed8ddb5acfff446da1e4b7ef99cab45cccecc95f1ee2cee70b5ac7a16414 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=41384 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.108.139 waku 58b0eb4acacc2bf610cf8ef5662aad21427eecd331ec2bd807fb1c4d71447eab
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 58b0eb4acacc. Setting up logs at ./log/docker/node1_2024-12-23_04-09-53__615a2c4a-4619-4edd-83fc-85a4b20f44f8__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 41380
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container e10ea05f5039. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41380/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41380/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.108.139/tcp/41381/p2p/16Uiu2HAmGJs322YsNVP4yG75Ry5Aph8Lh2iEBQzcxS8TGGpzSAhQ","/ip4/172.18.108.139/tcp/41382/ws/p2p/16Uiu2HAmGJs322YsNVP4yG75Ry5Aph8Lh2iEBQzcxS8TGGpzSAhQ"],"enrUri":"enr:-L24QIe_Xz7XkYNYzTMVyApwDBwJQvBLDoznDFLgg5lzU0OJfLDeqyYxhYOJuGMSTq5ej6Cn5H9thnHxaAJE1_3u6rgCgmlkgnY0gmlwhKwSbIuKbXVsdGlhZGRyc5YACASsEmyLBqGlAAoErBJsiwahpt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDNkbcQzZAYyXP6rKEA-peFOvYL0GI5s_UKKKS4h_eZYODdGNwgqGlg3VkcIKhp4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-23_04-09-53__615a2c4a-4619-4edd-83fc-85a4b20f44f8__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.230.41
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['20777', '20778', '20779', '20780', '20781']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 20777:20777 -p 20778:20778 -p 20779:20779 -p 20780:20780 -p 20781:20781 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=20779 --rest-port=20777 --tcp-port=20778 --discv5-udp-port=20780 --rest-address=0.0.0.0 --nat=extip:172.18.230.41 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=fc68a8e3bdf11e09af3de8bdab9f1dadfcbbd23d41effeecba5c0efc3cbeaead --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=20781 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QIe_Xz7XkYNYzTMVyApwDBwJQvBLDoznDFLgg5lzU0OJfLDeqyYxhYOJuGMSTq5ej6Cn5H9thnHxaAJE1_3u6rgCgmlkgnY0gmlwhKwSbIuKbXVsdGlhZGRyc5YACASsEmyLBqGlAAoErBJsiwahpt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDNkbcQzZAYyXP6rKEA-peFOvYL0GI5s_UKKKS4h_eZYODdGNwgqGlg3VkcIKhp4V3YWt1MgU --filternode=/ip4/172.18.108.139/tcp/41381/p2p/16Uiu2HAmGJs322YsNVP4yG75Ry5Aph8Lh2iEBQzcxS8TGGpzSAhQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.230.41 waku d1db86e4fdb147aa9662f4394d5bf4b0773df14a30f805fae8d7c6e1a06666a3
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID d1db86e4fdb1. Setting up logs at ./log/docker/node2_2024-12-23_04-09-53__615a2c4a-4619-4edd-83fc-85a4b20f44f8__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 20777
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:20777/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:20777/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.230.41/tcp/20778/p2p/16Uiu2HAm24XnCX94md4jjvWJP33wYRtWLggM2ouffXUsTgrZAdeG","/ip4/172.18.230.41/tcp/20779/ws/p2p/16Uiu2HAm24XnCX94md4jjvWJP33wYRtWLggM2ouffXUsTgrZAdeG"],"enrUri":"enr:-L24QGWT9Q_5hfJTuSEM2O8pH8kPRBC701HWSBvQTuVty29MNaL2NXYMaPGS8mj2Y42sHkt-krW09mwM5_frDlnaYDACgmlkgnY0gmlwhKwS5imKbXVsdGlhZGRyc5YACASsEuYpBlEqAAoErBLmKQZRK90DgnJzhQADAQAAiXNlY3AyNTZrMaECYpdW_7q7-o-H1QABA6yl0ymYoX99Y8JHkkX-QylfD0mDdGNwglEqg3VkcIJRLIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:20777/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.108.139/tcp/41381/p2p/16Uiu2HAmGJs322YsNVP4yG75Ry5Aph8Lh2iEBQzcxS8TGGpzSAhQ"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:41380/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:20777/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "0c9e28cd-e4a7-4874-ae60-7e0dff75ef67", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"0c9e28cd-e4a7-4874-ae60-7e0dff75ef67","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:20777/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": ["/waku/2/rs/3/1"]}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:20777/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 58b0eb4acacc
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id d1db86e4fdb1
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 58b0eb4acacc. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.