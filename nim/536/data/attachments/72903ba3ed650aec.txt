[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_relay with id: 2024-12-23_04-02-30__358cd22a-c725-4db6-b6f9-1b314d1031cb
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.light_push:light_push.py:28 Running fixture setup: light_push_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.store:store.py:31 Running fixture setup: store_setup
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-23_04-02-30__358cd22a-c725-4db6-b6f9-1b314d1031cb__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:33 Network waku created
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.55.156
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['38202', '38203', '38204', '38205', '38206']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 38202:38202 -p 38203:38203 -p 38204:38204 -p 38205:38205 -p 38206:38206 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=38204 --rest-port=38202 --tcp-port=38203 --discv5-udp-port=38205 --rest-address=0.0.0.0 --nat=extip:172.18.55.156 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=902db3cb1c6dbf8c6b2a54d7a5722dfc6045de837e34f9e7edbf4cc78a2b3bf8 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=38206 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.55.156 waku 95d93c7c29aa9acfd0cde70282b5a600a3615f257e6e81955441a2b7025e93b3
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 95d93c7c29aa. Setting up logs at ./log/docker/node1_2024-12-23_04-02-30__358cd22a-c725-4db6-b6f9-1b314d1031cb__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 38202
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38202/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38202/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.55.156/tcp/38203/p2p/16Uiu2HAmTzt8QdNbEWQYdbTk8AbjgRZkb8uRYXB5GokjYJJc72PF","/ip4/172.18.55.156/tcp/38204/ws/p2p/16Uiu2HAmTzt8QdNbEWQYdbTk8AbjgRZkb8uRYXB5GokjYJJc72PF"],"enrUri":"enr:-L24QKb5tMZGLcDwyZm-AH_kcjXBHNsbEDiSnIntjViSMc6MOqJ37E-LyexSg0dQG4-UPo30UmdurqaXnnq9Z0ADQxkCgmlkgnY0gmlwhKwSN5yKbXVsdGlhZGRyc5YACASsEjecBpU7AAoErBI3nAaVPN0DgnJzhQADAQAAiXNlY3AyNTZrMaED4_fifYdr90D0DquEyhwJOce2SStMI4iatRlc0QP4j66DdGNwgpU7g3VkcIKVPYV3YWt1MgE"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-23_04-02-30__358cd22a-c725-4db6-b6f9-1b314d1031cb__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.3.81
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['10571', '10572', '10573', '10574', '10575']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 10571:10571 -p 10572:10572 -p 10573:10573 -p 10574:10574 -p 10575:10575 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=10573 --rest-port=10571 --tcp-port=10572 --discv5-udp-port=10574 --rest-address=0.0.0.0 --nat=extip:172.18.3.81 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=dd6f685dc8c40be2e8af04ffdf9ee1725d37d9fc2dcdedb3ac9ad26c5a82fced --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=10575 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-L24QKb5tMZGLcDwyZm-AH_kcjXBHNsbEDiSnIntjViSMc6MOqJ37E-LyexSg0dQG4-UPo30UmdurqaXnnq9Z0ADQxkCgmlkgnY0gmlwhKwSN5yKbXVsdGlhZGRyc5YACASsEjecBpU7AAoErBI3nAaVPN0DgnJzhQADAQAAiXNlY3AyNTZrMaED4_fifYdr90D0DquEyhwJOce2SStMI4iatRlc0QP4j66DdGNwgpU7g3VkcIKVPYV3YWt1MgE
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.3.81 waku 939262f96fda11b776657277cd237dae7f9954da4a1117ca459a1efb01385fa1
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 939262f96fda. Setting up logs at ./log/docker/node1_2024-12-23_04-02-30__358cd22a-c725-4db6-b6f9-1b314d1031cb__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 10571
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10571/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10571/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.3.81/tcp/10572/p2p/16Uiu2HAmRe6vNCDQnK92uEVfj1jHjLy7a4AV1h9BqxgRcLTEAdXk","/ip4/172.18.3.81/tcp/10573/ws/p2p/16Uiu2HAmRe6vNCDQnK92uEVfj1jHjLy7a4AV1h9BqxgRcLTEAdXk"],"enrUri":"enr:-L24QMDFKggUs8kvhirqIFKm5lAJyP14EvDfsIN01uOB_p56JWveCOWnQMz6yutT4fkzSCdmfLL9CSWkdgPJjZZSdl0CgmlkgnY0gmlwhKwSA1GKbXVsdGlhZGRyc5YACASsEgNRBilMAAoErBIDUQYpTd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDwO3HPQRGhhBkRo0Hz1mzl9KKNTnWruNuAPq7qCJCF7-DdGNwgilMg3VkcIIpToV3YWt1MgE"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38202/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:10571/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38202/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38202/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1734926556136328448,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10571/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1734926556136328448,"ephemeral":false}]'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 95d93c7c29aa
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 939262f96fda
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 95d93c7c29aa. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.