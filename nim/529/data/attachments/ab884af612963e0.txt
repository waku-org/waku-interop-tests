[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_pubsub_topic_list_instead_of_string with id: 2024-12-16_04-10-34__2aad0f22-c562-41f6-9988-a41a38b30f5b
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-16_04-10-34__2aad0f22-c562-41f6-9988-a41a38b30f5b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.158.91
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['40230', '40231', '40232', '40233', '40234']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 40230:40230 -p 40231:40231 -p 40232:40232 -p 40233:40233 -p 40234:40234 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=40232 --rest-port=40230 --tcp-port=40231 --discv5-udp-port=40233 --rest-address=0.0.0.0 --nat=extip:172.18.158.91 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=cadfebab6a59db135c15cc77b28e2fed32fb16f6dc85cafeaa99cbc582edf1a0 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=40234 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.158.91 waku 8c314569e61de2e2c6b48a86d74dc74d0701b5b41b385d969d07e533ad2a679e
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 8c314569e61d. Setting up logs at ./log/docker/node1_2024-12-16_04-10-34__2aad0f22-c562-41f6-9988-a41a38b30f5b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 40230
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container d941e287bbb5. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:40230/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:40230/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.158.91/tcp/40231/p2p/16Uiu2HAmDhtrUvfLFKxUPg49mC2vBaF5fjxYxKnoR8vQnFwBu2Ua","/ip4/172.18.158.91/tcp/40232/ws/p2p/16Uiu2HAmDhtrUvfLFKxUPg49mC2vBaF5fjxYxKnoR8vQnFwBu2Ua"],"enrUri":"enr:-L24QGUOSVedT3uPaUz2ThNqCIpmEHNL923aw-O1NaFMFKsFdxb3U0VrTQWs4m2l3TrQ3-RIEMBkX0Y179MhKQc1YpECgmlkgnY0gmlwhKwSnluKbXVsdGlhZGRyc5YACASsEp5bBp0nAAoErBKeWwadKN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDD5o22BabOzoNrc4Pp0hntQH8n9mSRRPG4SGoO73S-uODdGNwgp0ng3VkcIKdKYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-16_04-10-34__2aad0f22-c562-41f6-9988-a41a38b30f5b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.91.109
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['8225', '8226', '8227', '8228', '8229']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 8225:8225 -p 8226:8226 -p 8227:8227 -p 8228:8228 -p 8229:8229 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=8227 --rest-port=8225 --tcp-port=8226 --discv5-udp-port=8228 --rest-address=0.0.0.0 --nat=extip:172.18.91.109 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=febaba2ca861a9a5134c821d8c2305e8ba9b3b60f26c47aa1a63ef6babed3bb5 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=8229 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QGUOSVedT3uPaUz2ThNqCIpmEHNL923aw-O1NaFMFKsFdxb3U0VrTQWs4m2l3TrQ3-RIEMBkX0Y179MhKQc1YpECgmlkgnY0gmlwhKwSnluKbXVsdGlhZGRyc5YACASsEp5bBp0nAAoErBKeWwadKN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDD5o22BabOzoNrc4Pp0hntQH8n9mSRRPG4SGoO73S-uODdGNwgp0ng3VkcIKdKYV3YWt1MgU --filternode=/ip4/172.18.158.91/tcp/40231/p2p/16Uiu2HAmDhtrUvfLFKxUPg49mC2vBaF5fjxYxKnoR8vQnFwBu2Ua
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.91.109 waku c9d555ad2f2b466d57e9531ab297c5935283793f4fcd6d604e6295e5638a71d1
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID c9d555ad2f2b. Setting up logs at ./log/docker/node2_2024-12-16_04-10-34__2aad0f22-c562-41f6-9988-a41a38b30f5b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 8225
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8225/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8225/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.91.109/tcp/8226/p2p/16Uiu2HAmNfUVh6h694XnYZS8f7u9bUTjDUnHUbkYVLUru66FfmaD","/ip4/172.18.91.109/tcp/8227/ws/p2p/16Uiu2HAmNfUVh6h694XnYZS8f7u9bUTjDUnHUbkYVLUru66FfmaD"],"enrUri":"enr:-L24QD78vWDSk439fhx8NhsZhZJ0zZBRc6Bv4rJUYv-0APkjLHn7rqFM9ahggAcJIX8T8-knteYJN3PSOH0bcjJmrPMCgmlkgnY0gmlwhKwSW22KbXVsdGlhZGRyc5YACASsElttBiAiAAoErBJbbQYgI90DgnJzhQADAQAAiXNlY3AyNTZrMaEDlLSxWR7bNkq-HHyBUvnoYpDUuhbSlfg7GbUgMa9EWuaDdGNwgiAig3VkcIIgJIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8225/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.158.91/tcp/40231/p2p/16Uiu2HAmDhtrUvfLFKxUPg49mC2vBaF5fjxYxKnoR8vQnFwBu2Ua"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:40230/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8225/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "bda3e0ca-7e0e-4c19-80c5-ccec81da557a", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"bda3e0ca-7e0e-4c19-80c5-ccec81da557a","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:8225/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": ["/waku/2/rs/3/1"]}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:8225/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 8c314569e61d
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id c9d555ad2f2b
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 8c314569e61d. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.