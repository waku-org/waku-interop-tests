[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_no_request_id with id: 2024-12-16_04-10-40__7be50b44-cba6-4f11-8c6a-c23e0f28d399
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-16_04-10-40__7be50b44-cba6-4f11-8c6a-c23e0f28d399__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.247.253
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['65287', '65288', '65289', '65290', '65291']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 65287:65287 -p 65288:65288 -p 65289:65289 -p 65290:65290 -p 65291:65291 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=65289 --rest-port=65287 --tcp-port=65288 --discv5-udp-port=65290 --rest-address=0.0.0.0 --nat=extip:172.18.247.253 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e7bdc225eaed9a34bcbacd01570ae645e05c1c27026206cdc9e4ade3ee871a74 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=65291 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.247.253 waku 34c2af8aa3791fb9d2733f89c06a44151f3b1d43840afa2e0b86910d91d3d8cf
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 34c2af8aa379. Setting up logs at ./log/docker/node1_2024-12-16_04-10-40__7be50b44-cba6-4f11-8c6a-c23e0f28d399__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 65287
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container c9d555ad2f2b. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:65287/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:65287/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.247.253/tcp/65288/p2p/16Uiu2HAm7zS4ZVHnGFLzRUmGrWZRNyQBG7ZoLwhMPM8CMvqXj2FS","/ip4/172.18.247.253/tcp/65289/ws/p2p/16Uiu2HAm7zS4ZVHnGFLzRUmGrWZRNyQBG7ZoLwhMPM8CMvqXj2FS"],"enrUri":"enr:-L24QFvAHDYi5gUGWVuZ8Jg_fIxxf9NHIVQjNztZuXlYYqX8Ba7ryMLcwDW_r6mlJxzkvoDUADSsS-fMKxJdHai9RsUCgmlkgnY0gmlwhKwS9_2KbXVsdGlhZGRyc5YACASsEvf9Bv8IAAoErBL3_Qb_Cd0DgnJzhQADAQAAiXNlY3AyNTZrMaECurCsQ45BWGoG4HeVN0XK1IYREYtof067OU4JzJIKbxmDdGNwgv8Ig3VkcIL_CoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-16_04-10-40__7be50b44-cba6-4f11-8c6a-c23e0f28d399__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.255.237
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['50123', '50124', '50125', '50126', '50127']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 50123:50123 -p 50124:50124 -p 50125:50125 -p 50126:50126 -p 50127:50127 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=50125 --rest-port=50123 --tcp-port=50124 --discv5-udp-port=50126 --rest-address=0.0.0.0 --nat=extip:172.18.255.237 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=734dafece96a4fec5d295ccd4fa7e70dd4f4f811466aca1d532aece0e1dabedb --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=50127 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QFvAHDYi5gUGWVuZ8Jg_fIxxf9NHIVQjNztZuXlYYqX8Ba7ryMLcwDW_r6mlJxzkvoDUADSsS-fMKxJdHai9RsUCgmlkgnY0gmlwhKwS9_2KbXVsdGlhZGRyc5YACASsEvf9Bv8IAAoErBL3_Qb_Cd0DgnJzhQADAQAAiXNlY3AyNTZrMaECurCsQ45BWGoG4HeVN0XK1IYREYtof067OU4JzJIKbxmDdGNwgv8Ig3VkcIL_CoV3YWt1MgU --filternode=/ip4/172.18.247.253/tcp/65288/p2p/16Uiu2HAm7zS4ZVHnGFLzRUmGrWZRNyQBG7ZoLwhMPM8CMvqXj2FS
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.255.237 waku 436cd6d2c7d4aec3f0859d9c66abb39d5bc024930a53a61b371ff5a44c3b0adf
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 436cd6d2c7d4. Setting up logs at ./log/docker/node2_2024-12-16_04-10-40__7be50b44-cba6-4f11-8c6a-c23e0f28d399__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 50123
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:50123/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:50123/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.255.237/tcp/50124/p2p/16Uiu2HAkv1brdacXsGuyyXQRAjpN9H5GwwexPrFGxPKxHczUxBg4","/ip4/172.18.255.237/tcp/50125/ws/p2p/16Uiu2HAkv1brdacXsGuyyXQRAjpN9H5GwwexPrFGxPKxHczUxBg4"],"enrUri":"enr:-L24QOUuGSQRgsAQjv8vlHnBF4F52oAw3CXiFqkU3hBawseWHLK58wNP_MEl99dzPGDVGRXJhopghuMLgdnYDyAf6GICgmlkgnY0gmlwhKwS_-2KbXVsdGlhZGRyc5YACASsEv_tBsPMAAoErBL_7QbDzd0DgnJzhQADAQAAiXNlY3AyNTZrMaECCLEVxzyTMDQi4qC5oqXS6KLI4K85nU00JWtyOjLxKemDdGNwgsPMg3VkcILDzoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:50123/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.247.253/tcp/65288/p2p/16Uiu2HAm7zS4ZVHnGFLzRUmGrWZRNyQBG7ZoLwhMPM8CMvqXj2FS"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:65287/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:50123/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "45b76a7a-0555-4b2a-aa19-09c036ee165b", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"45b76a7a-0555-4b2a-aa19-09c036ee165b","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:50123/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:50123/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 34c2af8aa379
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 436cd6d2c7d4
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 34c2af8aa379. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.