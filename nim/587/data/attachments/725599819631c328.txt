[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_all_with_invalid_request_id with id: 2024-12-27_11-02-21__1ded0d80-a11d-4201-a15d-f9ef4d023824
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-27_11-02-21__1ded0d80-a11d-4201-a15d-f9ef4d023824__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.173.6
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['41004', '41005', '41006', '41007', '41008']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 41004:41004 -p 41005:41005 -p 41006:41006 -p 41007:41007 -p 41008:41008 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=41006 --rest-port=41004 --tcp-port=41005 --discv5-udp-port=41007 --rest-address=0.0.0.0 --nat=extip:172.18.173.6 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=2bd8f1033ca9cafcbdedbacfdf0ec9a6ecdbca686e4cc92cedbe0dd0cba3ddfe --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=41008 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.173.6 waku 6758ee76e4da9601e0b930fa498c89cfde08a3e3bf755f0fbe38e2543753aa17
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 6758ee76e4da. Setting up logs at ./log/docker/node1_2024-12-27_11-02-21__1ded0d80-a11d-4201-a15d-f9ef4d023824__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 41004
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 9a1f4ecd0d7d. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41004/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41004/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.173.6/tcp/41005/p2p/16Uiu2HAm1i3gqndS4APyMTcXTNWg6FcYpmVGbrRVg3cmNdxKixw4","/ip4/172.18.173.6/tcp/41006/ws/p2p/16Uiu2HAm1i3gqndS4APyMTcXTNWg6FcYpmVGbrRVg3cmNdxKixw4"],"enrUri":"enr:-L24QFQeRsh-c00s9_z1frlbMJ4vPFl5L7palyJbAkF8ycmCVhCwaAJidbSYYgU6U31eb9V4SDkDbL-g4XkMp1KB3SkCgmlkgnY0gmlwhKwSrQaKbXVsdGlhZGRyc5YACASsEq0GBqAtAAoErBKtBgagLt0DgnJzhQADAQAAiXNlY3AyNTZrMaECXVf1orW8rs2TbHRBJvNOL_6p3x1cDaaNpxs_snV-t2ODdGNwgqAtg3VkcIKgL4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-27_11-02-21__1ded0d80-a11d-4201-a15d-f9ef4d023824__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.47.39
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['21417', '21418', '21419', '21420', '21421']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 21417:21417 -p 21418:21418 -p 21419:21419 -p 21420:21420 -p 21421:21421 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=21419 --rest-port=21417 --tcp-port=21418 --discv5-udp-port=21420 --rest-address=0.0.0.0 --nat=extip:172.18.47.39 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=efc66b2a038cc21afee49a86a41c0bcdfe34e286adcfc3a4bc2f5cd8256c2626 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=21421 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QFQeRsh-c00s9_z1frlbMJ4vPFl5L7palyJbAkF8ycmCVhCwaAJidbSYYgU6U31eb9V4SDkDbL-g4XkMp1KB3SkCgmlkgnY0gmlwhKwSrQaKbXVsdGlhZGRyc5YACASsEq0GBqAtAAoErBKtBgagLt0DgnJzhQADAQAAiXNlY3AyNTZrMaECXVf1orW8rs2TbHRBJvNOL_6p3x1cDaaNpxs_snV-t2ODdGNwgqAtg3VkcIKgL4V3YWt1MgU --filternode=/ip4/172.18.173.6/tcp/41005/p2p/16Uiu2HAm1i3gqndS4APyMTcXTNWg6FcYpmVGbrRVg3cmNdxKixw4
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.47.39 waku 6e2982b6aed8b12e7bd1cc47a92644a5f698eae3f37979f227515c91d3c5937d
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 6e2982b6aed8. Setting up logs at ./log/docker/node2_2024-12-27_11-02-21__1ded0d80-a11d-4201-a15d-f9ef4d023824__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 21417
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:21417/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:21417/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.47.39/tcp/21418/p2p/16Uiu2HAmHCy5rSLe7rKPMyQCrASk84zwMob3xMHoc6TrHLhJcxzm","/ip4/172.18.47.39/tcp/21419/ws/p2p/16Uiu2HAmHCy5rSLe7rKPMyQCrASk84zwMob3xMHoc6TrHLhJcxzm"],"enrUri":"enr:-L24QHYLk807aJ6WgfNt28D3PwhonLJQeQM5_9gc6MenDnVdPY3MDwe5jbW3_paqZTWh0GHK07aQOiitmUcx5d8p4PECgmlkgnY0gmlwhKwSLyeKbXVsdGlhZGRyc5YACASsEi8nBlOqAAoErBIvJwZTq90DgnJzhQADAQAAiXNlY3AyNTZrMaEDQ5_m5o1X_obQDOPqH4iHAXVCK4S8gK0-1PkwANqjshqDdGNwglOqg3VkcIJTrIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:21417/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.173.6/tcp/41005/p2p/16Uiu2HAm1i3gqndS4APyMTcXTNWg6FcYpmVGbrRVg3cmNdxKixw4"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:41004/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:21417/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "90df2b89-21b6-4a6a-b6e6-b003680e19f6", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"90df2b89-21b6-4a6a-b6e6-b003680e19f6","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:21417/filter/v2/subscriptions/all" -H "Content-Type: application/json" -d '{"requestId": 1}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:21417/filter/v2/subscriptions/all. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 6758ee76e4da
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 6e2982b6aed8
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 6758ee76e4da. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.