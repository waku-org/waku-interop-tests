[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_no_request_id with id: 2024-12-27_11-03-24__07617ba0-ac71-46e1-ad1b-02b2a2f8dd39
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-27_11-03-24__07617ba0-ac71-46e1-ad1b-02b2a2f8dd39__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.207.58
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['41058', '41059', '41060', '41061', '41062']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 41058:41058 -p 41059:41059 -p 41060:41060 -p 41061:41061 -p 41062:41062 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=41060 --rest-port=41058 --tcp-port=41059 --discv5-udp-port=41061 --rest-address=0.0.0.0 --nat=extip:172.18.207.58 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e18ffa4c7d89a59aad02b9aba1cf5dfbbea8fa56ab89cbef8d1deba916429879 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=41062 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.207.58 waku fb8b29582fa58dd52057cbf5590a4b56926deb9f76b6920a32b33cb50dca8799
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID fb8b29582fa5. Setting up logs at ./log/docker/node1_2024-12-27_11-03-24__07617ba0-ac71-46e1-ad1b-02b2a2f8dd39__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 41058
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container d51fb36e8c98. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41058/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41058/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.207.58/tcp/41059/p2p/16Uiu2HAmCf9PivEncwsmDQRbiQVpgeQ4guZNz7zmRFHnUTmcZ2X9","/ip4/172.18.207.58/tcp/41060/ws/p2p/16Uiu2HAmCf9PivEncwsmDQRbiQVpgeQ4guZNz7zmRFHnUTmcZ2X9"],"enrUri":"enr:-L24QFzOOOShiavzh7uNePbyIP5SRmUJ-vZB6DLtW5pfRZG3P9bH41PMFAJvZddQxzaQSxvWE0AKEw0fENdgNysGkYYCgmlkgnY0gmlwhKwSzzqKbXVsdGlhZGRyc5YACASsEs86BqBjAAoErBLPOgagZN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDAAo5SWl0WiuQn3BwLdHmz4IXobLXGzDwoPGbSDDDHKiDdGNwgqBjg3VkcIKgZYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-27_11-03-24__07617ba0-ac71-46e1-ad1b-02b2a2f8dd39__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.178.57
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['40975', '40976', '40977', '40978', '40979']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 40975:40975 -p 40976:40976 -p 40977:40977 -p 40978:40978 -p 40979:40979 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=40977 --rest-port=40975 --tcp-port=40976 --discv5-udp-port=40978 --rest-address=0.0.0.0 --nat=extip:172.18.178.57 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=2a24ddd31fa98a7aaccf4f38a67f5e0cce991f3c7d160917fcba25f64e6206e0 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=40979 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QFzOOOShiavzh7uNePbyIP5SRmUJ-vZB6DLtW5pfRZG3P9bH41PMFAJvZddQxzaQSxvWE0AKEw0fENdgNysGkYYCgmlkgnY0gmlwhKwSzzqKbXVsdGlhZGRyc5YACASsEs86BqBjAAoErBLPOgagZN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDAAo5SWl0WiuQn3BwLdHmz4IXobLXGzDwoPGbSDDDHKiDdGNwgqBjg3VkcIKgZYV3YWt1MgU --filternode=/ip4/172.18.207.58/tcp/41059/p2p/16Uiu2HAmCf9PivEncwsmDQRbiQVpgeQ4guZNz7zmRFHnUTmcZ2X9
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.178.57 waku 08e9fd9875012f771eafffc23e8bb0b8f5e539f8cba05fa5925ded93a9766a6f
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 08e9fd987501. Setting up logs at ./log/docker/node2_2024-12-27_11-03-24__07617ba0-ac71-46e1-ad1b-02b2a2f8dd39__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 40975
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:40975/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:40975/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.178.57/tcp/40976/p2p/16Uiu2HAmH8SB6csHPcNKCKqhx5nBntkC9YdDHPT3gJAqZgwFDFUj","/ip4/172.18.178.57/tcp/40977/ws/p2p/16Uiu2HAmH8SB6csHPcNKCKqhx5nBntkC9YdDHPT3gJAqZgwFDFUj"],"enrUri":"enr:-L24QOBkrbNC0Dv9DZMpQllzR23OWqv7G76gKRoS2gEeXBKOYMW3HzezBpGeladGQM_8jN0xU0J-BdSsYxpPzedFYf0CgmlkgnY0gmlwhKwSsjmKbXVsdGlhZGRyc5YACASsErI5BqAQAAoErBKyOQagEd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDQnahD-Cu5mWyHw20i0sEsmDGyYCFuCiWZsv2JMnxuICDdGNwgqAQg3VkcIKgEoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:40975/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.207.58/tcp/41059/p2p/16Uiu2HAmCf9PivEncwsmDQRbiQVpgeQ4guZNz7zmRFHnUTmcZ2X9"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:41058/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:40975/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "eb2a3564-3b8d-448d-9c45-47b3c5e19e4e", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"eb2a3564-3b8d-448d-9c45-47b3c5e19e4e","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:40975/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:40975/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id fb8b29582fa5
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 08e9fd987501
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container fb8b29582fa5. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.