[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_invalid_request_id with id: 2024-11-28_04-11-54__cadaedf8-0fa1-4cdb-8d31-7f6841d16aec
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-28_04-11-54__cadaedf8-0fa1-4cdb-8d31-7f6841d16aec__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.39.243
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['3227', '3228', '3229', '3230', '3231']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 3227:3227 -p 3228:3228 -p 3229:3229 -p 3230:3230 -p 3231:3231 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=3229 --rest-port=3227 --tcp-port=3228 --discv5-udp-port=3230 --rest-address=0.0.0.0 --nat=extip:172.18.39.243 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b2e84848c2af283631a6c8fac2a8ced5be1ccfbc4c6f6585e93e7199db7eae08 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=3231 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.39.243 waku b50b2fe2b6be07b6d2d1781275cac1da80774010f7da2277f8e81e2815a40fd0
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID b50b2fe2b6be. Setting up logs at ./log/docker/node1_2024-11-28_04-11-54__cadaedf8-0fa1-4cdb-8d31-7f6841d16aec__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 3227
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container fa8474e88fe5. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:3227/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:3227/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.39.243/tcp/3228/p2p/16Uiu2HAmVe3J8y5heFtP7f9452kuTUHQB3RD4iUKM7xuPk2upiuR","/ip4/172.18.39.243/tcp/3229/ws/p2p/16Uiu2HAmVe3J8y5heFtP7f9452kuTUHQB3RD4iUKM7xuPk2upiuR"],"enrUri":"enr:-L24QAfgopLnZd7_IzLtUxOQoP0oxKi39HQrU6atsBbWBcjrV-2Y4uqY1zBJjbrh6TqXgrRHnzrhybZxNw_xR3AjIlACgmlkgnY0gmlwhKwSJ_OKbXVsdGlhZGRyc5YACASsEifzBgycAAoErBIn8wYMnd0DgnJzhQADAQAAiXNlY3AyNTZrMaED_Fhtd7LRHU_w0AL-f5ecVobpOYmAAYglx2E0nba6JpyDdGNwggycg3VkcIIMnoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-28_04-11-54__cadaedf8-0fa1-4cdb-8d31-7f6841d16aec__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.9.47
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['61721', '61722', '61723', '61724', '61725']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 61721:61721 -p 61722:61722 -p 61723:61723 -p 61724:61724 -p 61725:61725 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=61723 --rest-port=61721 --tcp-port=61722 --discv5-udp-port=61724 --rest-address=0.0.0.0 --nat=extip:172.18.9.47 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=be029bdabdb0aece516776deb9caba2a0ddbef1cbbacd1c4d70cdf39cdfcafe8 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=61725 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QAfgopLnZd7_IzLtUxOQoP0oxKi39HQrU6atsBbWBcjrV-2Y4uqY1zBJjbrh6TqXgrRHnzrhybZxNw_xR3AjIlACgmlkgnY0gmlwhKwSJ_OKbXVsdGlhZGRyc5YACASsEifzBgycAAoErBIn8wYMnd0DgnJzhQADAQAAiXNlY3AyNTZrMaED_Fhtd7LRHU_w0AL-f5ecVobpOYmAAYglx2E0nba6JpyDdGNwggycg3VkcIIMnoV3YWt1MgU --filternode=/ip4/172.18.39.243/tcp/3228/p2p/16Uiu2HAmVe3J8y5heFtP7f9452kuTUHQB3RD4iUKM7xuPk2upiuR
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.9.47 waku 2d2f4ad735e766773e22ef969fe6646e44358a5026ab931daabae5958d33d59f
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 2d2f4ad735e7. Setting up logs at ./log/docker/node2_2024-11-28_04-11-54__cadaedf8-0fa1-4cdb-8d31-7f6841d16aec__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 61721
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:61721/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:61721/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.9.47/tcp/61722/p2p/16Uiu2HAmQuWmouBHkbMCSMpAJhwHdmZ8ZZiDfh27e1EW7cYVqhUo","/ip4/172.18.9.47/tcp/61723/ws/p2p/16Uiu2HAmQuWmouBHkbMCSMpAJhwHdmZ8ZZiDfh27e1EW7cYVqhUo"],"enrUri":"enr:-L24QHa_4FuQ1Yx7LFPlBo6rkIy0Y1S_NA8D0y7foreOK33QWUKpq-aqJ3xn-dy4Zq_x7HVqJyde1KXdvmVKR8_8bHgCgmlkgnY0gmlwhKwSCS-KbXVsdGlhZGRyc5YACASsEgkvBvEaAAoErBIJLwbxG90DgnJzhQADAQAAiXNlY3AyNTZrMaEDtgTGB9wUuqpInx3cErrYDLcrkG0qVg7zqWVVy6aY2EyDdGNwgvEag3VkcILxHIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:61721/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.39.243/tcp/3228/p2p/16Uiu2HAmVe3J8y5heFtP7f9452kuTUHQB3RD4iUKM7xuPk2upiuR"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:3227/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:61721/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "7d047976-7b78-441c-bda7-827de18a509b", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"7d047976-7b78-441c-bda7-827de18a509b","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:61721/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:61721/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id b50b2fe2b6be
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 2d2f4ad735e7
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container b50b2fe2b6be. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.