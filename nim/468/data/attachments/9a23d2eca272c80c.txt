[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_all_with_invalid_request_id with id: 2024-11-28_04-13-33__9651a24f-b2a7-46bd-9fbd-7d7e26f82bfd
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-28_04-13-33__9651a24f-b2a7-46bd-9fbd-7d7e26f82bfd__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.145.217
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['19719', '19720', '19721', '19722', '19723']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 19719:19719 -p 19720:19720 -p 19721:19721 -p 19722:19722 -p 19723:19723 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=19721 --rest-port=19719 --tcp-port=19720 --discv5-udp-port=19722 --rest-address=0.0.0.0 --nat=extip:172.18.145.217 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=fadebbfedff6cc3d9a43fe9beccc667353f01b6346fec1b99364ed895eef593a --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=19723 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.145.217 waku 881038dd3475a888ba415548d39c87b0fc86056f18762caa29b2c8e30a1d2660
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 881038dd3475. Setting up logs at ./log/docker/node1_2024-11-28_04-13-33__9651a24f-b2a7-46bd-9fbd-7d7e26f82bfd__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 19719
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 1c0538421e99. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:19719/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:19719/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.145.217/tcp/19720/p2p/16Uiu2HAmFGZBYU6S5PMCGMhWvDmkZNGh2CCAzJnKXQNpeUdgeEjC","/ip4/172.18.145.217/tcp/19721/ws/p2p/16Uiu2HAmFGZBYU6S5PMCGMhWvDmkZNGh2CCAzJnKXQNpeUdgeEjC"],"enrUri":"enr:-L24QL9sXakpG8-8MZTobapW_m8ax8F1Cl4Z_MMRa9-9UWJkWclCH31TXVgivWFd-u35vAgUj83zLBXYBxEyeWGjphUCgmlkgnY0gmlwhKwSkdmKbXVsdGlhZGRyc5YACASsEpHZBk0IAAoErBKR2QZNCd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDJtPTTDpl_QIg7MCSUdl0hHyK0hN71v0y0Zp4fqy3bluDdGNwgk0Ig3VkcIJNCoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-28_04-13-33__9651a24f-b2a7-46bd-9fbd-7d7e26f82bfd__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.64.253
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['35214', '35215', '35216', '35217', '35218']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 35214:35214 -p 35215:35215 -p 35216:35216 -p 35217:35217 -p 35218:35218 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=35216 --rest-port=35214 --tcp-port=35215 --discv5-udp-port=35217 --rest-address=0.0.0.0 --nat=extip:172.18.64.253 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=099b86f0af1dd0f3f92fa19bc90f3116b9cff5b6243f5e2437079b6dabd7a1a8 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=35218 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QL9sXakpG8-8MZTobapW_m8ax8F1Cl4Z_MMRa9-9UWJkWclCH31TXVgivWFd-u35vAgUj83zLBXYBxEyeWGjphUCgmlkgnY0gmlwhKwSkdmKbXVsdGlhZGRyc5YACASsEpHZBk0IAAoErBKR2QZNCd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDJtPTTDpl_QIg7MCSUdl0hHyK0hN71v0y0Zp4fqy3bluDdGNwgk0Ig3VkcIJNCoV3YWt1MgU --filternode=/ip4/172.18.145.217/tcp/19720/p2p/16Uiu2HAmFGZBYU6S5PMCGMhWvDmkZNGh2CCAzJnKXQNpeUdgeEjC
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.64.253 waku 64ef3867a309c5e5dc14a50d30caad7b12399b98f0b668273d44460edb058297
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 64ef3867a309. Setting up logs at ./log/docker/node2_2024-11-28_04-13-33__9651a24f-b2a7-46bd-9fbd-7d7e26f82bfd__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 35214
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:35214/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:35214/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.64.253/tcp/35215/p2p/16Uiu2HAmDNt6hVmpxcV1mJhN74SprnaHc8MwccrGveFbiVhwargQ","/ip4/172.18.64.253/tcp/35216/ws/p2p/16Uiu2HAmDNt6hVmpxcV1mJhN74SprnaHc8MwccrGveFbiVhwargQ"],"enrUri":"enr:-L24QArWk9WWeKnyG3MImSI2DU9ShzlyjCoPsCHlQGEAT_XHW8xQQpCDQRsIYjyOkrR_f5K8VxxO-LxqxMYPGIjbkasCgmlkgnY0gmlwhKwSQP2KbXVsdGlhZGRyc5YACASsEkD9BomPAAoErBJA_QaJkN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDCrtTR63YyjlCsUsg01R3BCN37vm7mzYUFFC5sxtJBdmDdGNwgomPg3VkcIKJkYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:35214/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.145.217/tcp/19720/p2p/16Uiu2HAmFGZBYU6S5PMCGMhWvDmkZNGh2CCAzJnKXQNpeUdgeEjC"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:19719/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:35214/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "fa830452-060f-463b-9275-ca184376387c", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"fa830452-060f-463b-9275-ca184376387c","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:35214/filter/v2/subscriptions/all" -H "Content-Type: application/json" -d '{"requestId": 1}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:35214/filter/v2/subscriptions/all. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 881038dd3475
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 64ef3867a309
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 881038dd3475. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.