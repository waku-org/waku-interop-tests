[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2024-11-28_04-12-32__6b3303c6-484f-48d7-aa04-6a38c129b681
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-28_04-12-32__6b3303c6-484f-48d7-aa04-6a38c129b681__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.189.118
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['15747', '15748', '15749', '15750', '15751']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 15747:15747 -p 15748:15748 -p 15749:15749 -p 15750:15750 -p 15751:15751 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=15749 --rest-port=15747 --tcp-port=15748 --discv5-udp-port=15750 --rest-address=0.0.0.0 --nat=extip:172.18.189.118 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b63b104f9715ace9bcf01f9bd8d5deffed8dd08fecf209d3db0ecbd1f6e6f772 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=15751 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.189.118 waku c90ee19bf1ac36e382e108bd95fe9c4c7697fb22ebee204200980ffea84d77d0
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID c90ee19bf1ac. Setting up logs at ./log/docker/node1_2024-11-28_04-12-32__6b3303c6-484f-48d7-aa04-6a38c129b681__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 15747
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container eb685a2a8eba. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:15747/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:15747/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.189.118/tcp/15748/p2p/16Uiu2HAm4G5GUzL3DNdUzuKj7CHg4RyWTSuLGjkFyytVWf47Dxm6","/ip4/172.18.189.118/tcp/15749/ws/p2p/16Uiu2HAm4G5GUzL3DNdUzuKj7CHg4RyWTSuLGjkFyytVWf47Dxm6"],"enrUri":"enr:-L24QEa42dEdIeC2NkUY4GUIrYVMMHzgvk5iNUpqrftklwAIPswBDa7xSb-zLGbDaZxyOt0KdyiTDqcm2sCIiVhzcv8CgmlkgnY0gmlwhKwSvXaKbXVsdGlhZGRyc5YACASsEr12Bj2EAAoErBK9dgY9hd0DgnJzhQADAQAAiXNlY3AyNTZrMaECg0O0rxCZCQjEHNkmpFyul6L0Lr4rgJdNZ3ULRTnzjdmDdGNwgj2Eg3VkcII9hoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-28_04-12-32__6b3303c6-484f-48d7-aa04-6a38c129b681__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.211.230
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['1667', '1668', '1669', '1670', '1671']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 1667:1667 -p 1668:1668 -p 1669:1669 -p 1670:1670 -p 1671:1671 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=1669 --rest-port=1667 --tcp-port=1668 --discv5-udp-port=1670 --rest-address=0.0.0.0 --nat=extip:172.18.211.230 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=992dee49db18eb2522b8b3ebabc9e2ff263b2c93fef07ac9307c08359cdbbf99 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=1671 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QEa42dEdIeC2NkUY4GUIrYVMMHzgvk5iNUpqrftklwAIPswBDa7xSb-zLGbDaZxyOt0KdyiTDqcm2sCIiVhzcv8CgmlkgnY0gmlwhKwSvXaKbXVsdGlhZGRyc5YACASsEr12Bj2EAAoErBK9dgY9hd0DgnJzhQADAQAAiXNlY3AyNTZrMaECg0O0rxCZCQjEHNkmpFyul6L0Lr4rgJdNZ3ULRTnzjdmDdGNwgj2Eg3VkcII9hoV3YWt1MgU --filternode=/ip4/172.18.189.118/tcp/15748/p2p/16Uiu2HAm4G5GUzL3DNdUzuKj7CHg4RyWTSuLGjkFyytVWf47Dxm6
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.211.230 waku 1cdcb9189d4cc8c997a727445221b7894df87003215b72706db76e6f8ddee1ed
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 1cdcb9189d4c. Setting up logs at ./log/docker/node2_2024-11-28_04-12-32__6b3303c6-484f-48d7-aa04-6a38c129b681__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 1667
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:1667/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:1667/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.211.230/tcp/1668/p2p/16Uiu2HAm735WQMcLBnK4DZP8P9mcCitsoSAWRkLR4nL1uwB8fz6M","/ip4/172.18.211.230/tcp/1669/ws/p2p/16Uiu2HAm735WQMcLBnK4DZP8P9mcCitsoSAWRkLR4nL1uwB8fz6M"],"enrUri":"enr:-L24QOz5SGRuzG0cPN4OaWMqiDRbswGVbRmY1ELUj8nOFB8eU8u05n31B3woYASumusRaCB-UcpnV0nqsEQrqc3sK0sCgmlkgnY0gmlwhKwS0-aKbXVsdGlhZGRyc5YACASsEtPmBgaEAAoErBLT5gYGhd0DgnJzhQADAQAAiXNlY3AyNTZrMaECrIJ8yB4GaNUlMsGEGMeV6eN8GkeCnGPaPqgPhh1WEVqDdGNwggaEg3VkcIIGhoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:1667/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.189.118/tcp/15748/p2p/16Uiu2HAm4G5GUzL3DNdUzuKj7CHg4RyWTSuLGjkFyytVWf47Dxm6"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:15747/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:1667/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "5aaa3a41-c2b3-4ad1-8b71-ab3d20f45da3", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"5aaa3a41-c2b3-4ad1-8b71-ab3d20f45da3","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:1667/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:1667/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id c90ee19bf1ac
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 1cdcb9189d4c
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container c90ee19bf1ac. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.