[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_invalid_version with id: 2024-10-10_04-25-07__43a61cf6-854d-4f63-b041-cc79aa62306f
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-10-10_04-25-07__43a61cf6-854d-4f63-b041-cc79aa62306f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.106.53
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['59204', '59205', '59206', '59207', '59208']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 59204:59204 -p 59205:59205 -p 59206:59206 -p 59207:59207 -p 59208:59208 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=59206 --rest-port=59204 --tcp-port=59205 --discv5-udp-port=59207 --rest-address=0.0.0.0 --nat=extip:172.18.106.53 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=5b3fa87a73fa78bf800e18c5baa86f5eeb28d1adb37bf7d9bf6aea7d965205b3 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=59208 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.106.53 waku 2a27a05ffd637b906aa41d3fb6406cf08bf2719ebbfb4649837bf94697926285
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 2a27a05ffd63. Setting up logs at ./log/docker/node1_2024-10-10_04-25-07__43a61cf6-854d-4f63-b041-cc79aa62306f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 59204
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:59204/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:59204/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.106.53/tcp/59205/p2p/16Uiu2HAm5bxxP6vCVV35oqXwvofbmcZKBC9sNAX2sjNgHTQD5juH","/ip4/172.18.106.53/tcp/59206/ws/p2p/16Uiu2HAm5bxxP6vCVV35oqXwvofbmcZKBC9sNAX2sjNgHTQD5juH"],"enrUri":"enr:-LO4QKQWYbuUnZD-8rC6zzLHJCdkry17_9meD5RnLcm-PfgAC4O_501SFs8ofNiXFZATtPazLO4ygs2ZhqNRDvxJfPoBgmlkgnY0gmlwhKwSajWKbXVsdGlhZGRyc4wACgSsEmo1BudG3QOCcnOFAAMBAACJc2VjcDI1NmsxoQKXN98uBRkznbRQpnhk0BG0GdLkAxSNGExrrUihToRmAIN0Y3CC50WDdWRwgudHhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-10-10_04-25-07__43a61cf6-854d-4f63-b041-cc79aa62306f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.77.148
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['20727', '20728', '20729', '20730', '20731']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 20727:20727 -p 20728:20728 -p 20729:20729 -p 20730:20730 -p 20731:20731 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=20729 --rest-port=20727 --tcp-port=20728 --discv5-udp-port=20730 --rest-address=0.0.0.0 --nat=extip:172.18.77.148 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=0d79d43d2c1da5cfc79ccc4f9faa5dd0cfbe54d73f59b1bea2ede657cdca143d --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=20731 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QKQWYbuUnZD-8rC6zzLHJCdkry17_9meD5RnLcm-PfgAC4O_501SFs8ofNiXFZATtPazLO4ygs2ZhqNRDvxJfPoBgmlkgnY0gmlwhKwSajWKbXVsdGlhZGRyc4wACgSsEmo1BudG3QOCcnOFAAMBAACJc2VjcDI1NmsxoQKXN98uBRkznbRQpnhk0BG0GdLkAxSNGExrrUihToRmAIN0Y3CC50WDdWRwgudHhXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.77.148 waku 06cce9c783ba79ed4c25b3d72c2e48658ed9819db333e9cdb836e867c0e8ec0b
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 06cce9c783ba. Setting up logs at ./log/docker/node2_2024-10-10_04-25-07__43a61cf6-854d-4f63-b041-cc79aa62306f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 20727
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:20727/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:20727/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.77.148/tcp/20728/p2p/16Uiu2HAmCFCDEctH9RZf1pi38EznKD7hnSg52eCc4ZUuShkQoWPt","/ip4/172.18.77.148/tcp/20729/ws/p2p/16Uiu2HAmCFCDEctH9RZf1pi38EznKD7hnSg52eCc4ZUuShkQoWPt"],"enrUri":"enr:-LO4QDhDmrGbdtQWxhuaZBmJNydu3H_IuH9OfAkz7eTxUfOlX-VLoM6M62tGnPae2HuO0nwSR_9fsFELg5yYqjhQmAkBgmlkgnY0gmlwhKwSTZSKbXVsdGlhZGRyc4wACgSsEk2UBlD53QOCcnOFAAMBAACJc2VjcDI1NmsxoQL553jVjxRw267SWrUvfhesNZ4VP1weKcxECkc29vL-Q4N0Y3CCUPiDdWRwglD6hXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:20727/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.106.53/tcp/59205/p2p/16Uiu2HAm5bxxP6vCVV35oqXwvofbmcZKBC9sNAX2sjNgHTQD5juH"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:59204/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:20727/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:59204/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:59204/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1728534311691533824,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:20727/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1728534311691533824,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:59204/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)', "version": 2.1}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:59204/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 2a27a05ffd63
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 06cce9c783ba
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.