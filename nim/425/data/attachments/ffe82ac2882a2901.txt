[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_invalid_request_id with id: 2024-11-06_21-13-43__c3907aff-bf42-41ea-a190-3e936ff563b5
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-06_21-13-43__c3907aff-bf42-41ea-a190-3e936ff563b5__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.134.237
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['31099', '31100', '31101', '31102', '31103']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 31099:31099 -p 31100:31100 -p 31101:31101 -p 31102:31102 -p 31103:31103 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=31101 --rest-port=31099 --tcp-port=31100 --discv5-udp-port=31102 --rest-address=0.0.0.0 --nat=extip:172.18.134.237 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ada4df4f98ea5c6bbf96c59ddf8becfede93eebf7b5ecad01fa828e2f9c5ecab --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=31103 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.134.237 waku 48565e47d965c8da6f5ee483d9d8e8a283c29a9ae23a56a51c287480fa187b8e
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 48565e47d965. Setting up logs at ./log/docker/node1_2024-11-06_21-13-43__c3907aff-bf42-41ea-a190-3e936ff563b5__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 31099
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 75d979ad8446. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:31099/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:31099/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.134.237/tcp/31100/p2p/16Uiu2HAkw3AQ32UykJJZA6yhbBYVmrLPTXko2KAULaK8mx46nxx1","/ip4/172.18.134.237/tcp/31101/ws/p2p/16Uiu2HAkw3AQ32UykJJZA6yhbBYVmrLPTXko2KAULaK8mx46nxx1"],"enrUri":"enr:-L24QB9V_54Lh2fK2i7BfGqGtrbbLkINzBd91IcFwx7OFd_ifx5Ol1pa9ZftFQqx0VgD4nkY2SDysHXh7L0Fg9zazlcCgmlkgnY0gmlwhKwShu2KbXVsdGlhZGRyc5YACASsEobtBnl8AAoErBKG7QZ5fd0DgnJzhQADAQAAiXNlY3AyNTZrMaECF_MlxXfMDudXnJLWb6ZN9osmZEdhQwtFDGU_nuYoxyqDdGNwgnl8g3VkcIJ5foV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-06_21-13-43__c3907aff-bf42-41ea-a190-3e936ff563b5__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.108.78
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['41271', '41272', '41273', '41274', '41275']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 41271:41271 -p 41272:41272 -p 41273:41273 -p 41274:41274 -p 41275:41275 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=41273 --rest-port=41271 --tcp-port=41272 --discv5-udp-port=41274 --rest-address=0.0.0.0 --nat=extip:172.18.108.78 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=39e16c2eeaac4c891c37b759f1bb14ae2578d032349dffc7b9d45b6ed485db8d --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=41275 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QB9V_54Lh2fK2i7BfGqGtrbbLkINzBd91IcFwx7OFd_ifx5Ol1pa9ZftFQqx0VgD4nkY2SDysHXh7L0Fg9zazlcCgmlkgnY0gmlwhKwShu2KbXVsdGlhZGRyc5YACASsEobtBnl8AAoErBKG7QZ5fd0DgnJzhQADAQAAiXNlY3AyNTZrMaECF_MlxXfMDudXnJLWb6ZN9osmZEdhQwtFDGU_nuYoxyqDdGNwgnl8g3VkcIJ5foV3YWt1MgU --filternode=/ip4/172.18.134.237/tcp/31100/p2p/16Uiu2HAkw3AQ32UykJJZA6yhbBYVmrLPTXko2KAULaK8mx46nxx1
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.108.78 waku e87f07b7662336ab8df2d624f92cffbc24914d497394b28494d237a8f065d56d
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID e87f07b76623. Setting up logs at ./log/docker/node2_2024-11-06_21-13-43__c3907aff-bf42-41ea-a190-3e936ff563b5__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 41271
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41271/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41271/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.108.78/tcp/41272/p2p/16Uiu2HAkwP3uJRcxLB27ihSsbJorKdJPdtjPonhQNpwzu5k8mw5e","/ip4/172.18.108.78/tcp/41273/ws/p2p/16Uiu2HAkwP3uJRcxLB27ihSsbJorKdJPdtjPonhQNpwzu5k8mw5e"],"enrUri":"enr:-L24QHnFPScTZbOLP28gagZr5B2CGhiZ0rCX9p5E5zaB0myOHbSVeDtcQd13SCUIAihUjM9DTgQ-ZnLcA6d3txYhPc4CgmlkgnY0gmlwhKwSbE6KbXVsdGlhZGRyc5YACASsEmxOBqE4AAoErBJsTgahOd0DgnJzhQADAQAAiXNlY3AyNTZrMaECHQtrWRmd6oePgNxCRqgdSojRI5iK4YuxekKPF5BWZtWDdGNwgqE4g3VkcIKhOoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:41271/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.134.237/tcp/31100/p2p/16Uiu2HAkw3AQ32UykJJZA6yhbBYVmrLPTXko2KAULaK8mx46nxx1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:31099/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:41271/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "c55b8c4b-b139-413e-aa26-cef662a2520e", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"c55b8c4b-b139-413e-aa26-cef662a2520e","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:41271/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:41271/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 48565e47d965
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id e87f07b76623
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 48565e47d965. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.