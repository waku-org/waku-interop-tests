[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_all_with_invalid_request_id with id: 2024-11-06_21-14-04__30bac0d9-693d-4134-b797-2ac4d9ce1d55
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-06_21-14-04__30bac0d9-693d-4134-b797-2ac4d9ce1d55__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.57.26
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['25429', '25430', '25431', '25432', '25433']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 25429:25429 -p 25430:25430 -p 25431:25431 -p 25432:25432 -p 25433:25433 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=25431 --rest-port=25429 --tcp-port=25430 --discv5-udp-port=25432 --rest-address=0.0.0.0 --nat=extip:172.18.57.26 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=d5f0b1f49036069ad9c281bcb416fcec28f0cc36add28f1abacdd5bb1c0bb7d6 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=25433 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.57.26 waku db66f5fb065fd18b0b641a8eb722fc7b8c1eebc3f82f05223a731e5b9b93596c
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID db66f5fb065f. Setting up logs at ./log/docker/node1_2024-11-06_21-14-04__30bac0d9-693d-4134-b797-2ac4d9ce1d55__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 25429
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 3ba022e4448c. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:25429/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:25429/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.57.26/tcp/25430/p2p/16Uiu2HAm2oVM4powJ9kBrSxQC5SDY8JorX7peG28qKSj8itVqXNs","/ip4/172.18.57.26/tcp/25431/ws/p2p/16Uiu2HAm2oVM4powJ9kBrSxQC5SDY8JorX7peG28qKSj8itVqXNs"],"enrUri":"enr:-L24QNRTxsdWBcox3oWf7JBY6psnM9XuYJQ8ZtJN-Jswa9ahVpS-YftUsQ2r23aLeQ9haU7UErL7z2T1kFyxmThECesCgmlkgnY0gmlwhKwSORqKbXVsdGlhZGRyc5YACASsEjkaBmNWAAoErBI5GgZjV90DgnJzhQADAQAAiXNlY3AyNTZrMaECbZiQMg83bfX5KaZa0nAQ55B0-0Eewuah4dVbOCjXiQyDdGNwgmNWg3VkcIJjWIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-06_21-14-04__30bac0d9-693d-4134-b797-2ac4d9ce1d55__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.142.165
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['34071', '34072', '34073', '34074', '34075']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 34071:34071 -p 34072:34072 -p 34073:34073 -p 34074:34074 -p 34075:34075 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=34073 --rest-port=34071 --tcp-port=34072 --discv5-udp-port=34074 --rest-address=0.0.0.0 --nat=extip:172.18.142.165 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=bbf1e03de26dafec4b72e1d07bb3ec7eaee5bdfcbd795e5c10d2e47b4ecfbb0a --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=34075 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QNRTxsdWBcox3oWf7JBY6psnM9XuYJQ8ZtJN-Jswa9ahVpS-YftUsQ2r23aLeQ9haU7UErL7z2T1kFyxmThECesCgmlkgnY0gmlwhKwSORqKbXVsdGlhZGRyc5YACASsEjkaBmNWAAoErBI5GgZjV90DgnJzhQADAQAAiXNlY3AyNTZrMaECbZiQMg83bfX5KaZa0nAQ55B0-0Eewuah4dVbOCjXiQyDdGNwgmNWg3VkcIJjWIV3YWt1MgU --filternode=/ip4/172.18.57.26/tcp/25430/p2p/16Uiu2HAm2oVM4powJ9kBrSxQC5SDY8JorX7peG28qKSj8itVqXNs
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.142.165 waku 5ea05cb1beee0612bfdcb57e341fc984ebf3b2067c495adfcddaf9e41fdf0d60
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 5ea05cb1beee. Setting up logs at ./log/docker/node2_2024-11-06_21-14-04__30bac0d9-693d-4134-b797-2ac4d9ce1d55__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 34071
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:34071/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:34071/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.142.165/tcp/34072/p2p/16Uiu2HAm9teaNq2fgeVcUWktmsh4QpziMW36N3rj2VjsJZMXE9NA","/ip4/172.18.142.165/tcp/34073/ws/p2p/16Uiu2HAm9teaNq2fgeVcUWktmsh4QpziMW36N3rj2VjsJZMXE9NA"],"enrUri":"enr:-L24QKnUK1fS5VtnKQNHe32WeYFjq1c6-BphaOGfPXKRnkaHV6SV2Uy2X1Qz3QbKrDoYeXOpdhVAEimFyWfXsb50SbsCgmlkgnY0gmlwhKwSjqWKbXVsdGlhZGRyc5YACASsEo6lBoUYAAoErBKOpQaFGd0DgnJzhQADAQAAiXNlY3AyNTZrMaEC1uy2LCVDMpWofBW5-1jXz8hlEnqeN7ayfhNinxzOgtODdGNwgoUYg3VkcIKFGoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:34071/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.57.26/tcp/25430/p2p/16Uiu2HAm2oVM4powJ9kBrSxQC5SDY8JorX7peG28qKSj8itVqXNs"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:25429/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:34071/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "43024099-7046-4af1-9036-39e47c59cd34", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"43024099-7046-4af1-9036-39e47c59cd34","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:34071/filter/v2/subscriptions/all" -H "Content-Type: application/json" -d '{"requestId": 1}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:34071/filter/v2/subscriptions/all. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id db66f5fb065f
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 5ea05cb1beee
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container db66f5fb065f. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.