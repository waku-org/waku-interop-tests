[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_missing_payload with id: 2024-10-17_04-14-15__b40725b0-4f20-4da0-9a16-9f7ad3afbdfe
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-10-17_04-14-15__b40725b0-4f20-4da0-9a16-9f7ad3afbdfe__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.125.211
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['2175', '2176', '2177', '2178', '2179']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 2175:2175 -p 2176:2176 -p 2177:2177 -p 2178:2178 -p 2179:2179 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=2177 --rest-port=2175 --tcp-port=2176 --discv5-udp-port=2178 --rest-address=0.0.0.0 --nat=extip:172.18.125.211 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=dc15b6a4bf177c71dab4be0f0a17d3f89be6f05becea082f563ab35eaca9cfdf --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=2179 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.125.211 waku 6bee2fb68faf3405c44bab57090a9da265d40b46256e447228811d0fc59e5e47
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 6bee2fb68faf. Setting up logs at ./log/docker/node1_2024-10-17_04-14-15__b40725b0-4f20-4da0-9a16-9f7ad3afbdfe__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 2175
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:2175/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:2175/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.125.211/tcp/2176/p2p/16Uiu2HAm3MkXPqo7GirkaAGThv6cpgy3NsK3GMdCyXqDcnqz3iWi","/ip4/172.18.125.211/tcp/2177/ws/p2p/16Uiu2HAm3MkXPqo7GirkaAGThv6cpgy3NsK3GMdCyXqDcnqz3iWi"],"enrUri":"enr:-LO4QD5pp-33hQAhvlts-M9jM2ds6iy5cj1MPE_L-igPTxu7D5cCwRNs4YURS5RnxYJr87qbTEAke5LTlkdtdx2bf0kBgmlkgnY0gmlwhKwSfdOKbXVsdGlhZGRyc4wACgSsEn3TBgiB3QOCcnOFAAMBAACJc2VjcDI1NmsxoQJ13E-g61_IEJSn9tTQm8zm3XyVwGflvSbZJYiFJm3JH4N0Y3CCCICDdWRwggiChXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-10-17_04-14-15__b40725b0-4f20-4da0-9a16-9f7ad3afbdfe__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.18.252
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['24445', '24446', '24447', '24448', '24449']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 24445:24445 -p 24446:24446 -p 24447:24447 -p 24448:24448 -p 24449:24449 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=24447 --rest-port=24445 --tcp-port=24446 --discv5-udp-port=24448 --rest-address=0.0.0.0 --nat=extip:172.18.18.252 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=fffe82af94c23fdc46e5f512b9cad4911d162dffc8dbb7f2efd9b8c8d0b9ce4d --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=24449 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QD5pp-33hQAhvlts-M9jM2ds6iy5cj1MPE_L-igPTxu7D5cCwRNs4YURS5RnxYJr87qbTEAke5LTlkdtdx2bf0kBgmlkgnY0gmlwhKwSfdOKbXVsdGlhZGRyc4wACgSsEn3TBgiB3QOCcnOFAAMBAACJc2VjcDI1NmsxoQJ13E-g61_IEJSn9tTQm8zm3XyVwGflvSbZJYiFJm3JH4N0Y3CCCICDdWRwggiChXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.18.252 waku 10cee6b22ef2982d1855cea09b5c404e7e9c1d00cd8f1f2950e31098cb1083af
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 10cee6b22ef2. Setting up logs at ./log/docker/node2_2024-10-17_04-14-15__b40725b0-4f20-4da0-9a16-9f7ad3afbdfe__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 24445
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:24445/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:24445/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.18.252/tcp/24446/p2p/16Uiu2HAmFTAbYkFHF2g1g4brGiHR5WZr5SuQGGQGeXD1WomAGjyz","/ip4/172.18.18.252/tcp/24447/ws/p2p/16Uiu2HAmFTAbYkFHF2g1g4brGiHR5WZr5SuQGGQGeXD1WomAGjyz"],"enrUri":"enr:-LO4QDHmXX6ELxv3SdN39buuPhm_vqaVyfvnwqC1wiOqAlJ0TRewQly_uYgghf8ihOFtj1QWGpKUNh3HbiWtb_T42EoBgmlkgnY0gmlwhKwSEvyKbXVsdGlhZGRyc4wACgSsEhL8Bl9_3QOCcnOFAAMBAACJc2VjcDI1NmsxoQMpi60S6KbCaM9pDIi1cGQ5et9SMZkNh1AegqarqNWiOYN0Y3CCX36DdWRwgl-AhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:24445/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.125.211/tcp/2176/p2p/16Uiu2HAm3MkXPqo7GirkaAGThv6cpgy3NsK3GMdCyXqDcnqz3iWi"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:2175/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:24445/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:2175/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:2175/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1729138459962758400,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:24445/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1729138459962758400,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:2175/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:2175/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 6bee2fb68faf
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 10cee6b22ef2
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.