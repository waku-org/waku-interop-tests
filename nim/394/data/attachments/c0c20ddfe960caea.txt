[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_extra_field with id: 2024-10-17_04-15-06__a499caa7-af9f-489a-a09c-91abf13fc4ab
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-10-17_04-15-06__a499caa7-af9f-489a-a09c-91abf13fc4ab__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.25.79
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['46940', '46941', '46942', '46943', '46944']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 46940:46940 -p 46941:46941 -p 46942:46942 -p 46943:46943 -p 46944:46944 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=46942 --rest-port=46940 --tcp-port=46941 --discv5-udp-port=46943 --rest-address=0.0.0.0 --nat=extip:172.18.25.79 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=94f5d5bc14f69e59d72dc8932fbb48ecc0bfaff09533e8b3eae1e4dea63897d6 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=46944 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.25.79 waku e55ff33aa1dfef8c169195c21ecebca72bdbbf2a391895ef92f02f3d24859aae
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID e55ff33aa1df. Setting up logs at ./log/docker/node1_2024-10-17_04-15-06__a499caa7-af9f-489a-a09c-91abf13fc4ab__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 46940
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:46940/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:46940/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.25.79/tcp/46941/p2p/16Uiu2HAmPG61nbiPzAQwTjRQwe8ZiTJGdVA2hEF5WF19mUxpbSzR","/ip4/172.18.25.79/tcp/46942/ws/p2p/16Uiu2HAmPG61nbiPzAQwTjRQwe8ZiTJGdVA2hEF5WF19mUxpbSzR"],"enrUri":"enr:-LO4QHbLQihUr9oRo7I_uES70Fc4k4U7j0-6oiGBg5nsD3YPDkhDOBul5t0UxW3D1klvZkvFPmqcaKK3C6P673lzr0QBgmlkgnY0gmlwhKwSGU-KbXVsdGlhZGRyc4wACgSsEhlPBrde3QOCcnOFAAMBAACJc2VjcDI1NmsxoQOdkpoCN1HKJbUYysioFqVimxTU0agl2eJh3omd4YT45oN0Y3CCt12DdWRwgrdfhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-10-17_04-15-06__a499caa7-af9f-489a-a09c-91abf13fc4ab__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.45.7
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['49864', '49865', '49866', '49867', '49868']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 49864:49864 -p 49865:49865 -p 49866:49866 -p 49867:49867 -p 49868:49868 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=49866 --rest-port=49864 --tcp-port=49865 --discv5-udp-port=49867 --rest-address=0.0.0.0 --nat=extip:172.18.45.7 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=f88a5db78effbd1d2b8ac12aa27ef8bfd0c4ef33f69e97565b1e1eabc4d65e15 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=49868 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QHbLQihUr9oRo7I_uES70Fc4k4U7j0-6oiGBg5nsD3YPDkhDOBul5t0UxW3D1klvZkvFPmqcaKK3C6P673lzr0QBgmlkgnY0gmlwhKwSGU-KbXVsdGlhZGRyc4wACgSsEhlPBrde3QOCcnOFAAMBAACJc2VjcDI1NmsxoQOdkpoCN1HKJbUYysioFqVimxTU0agl2eJh3omd4YT45oN0Y3CCt12DdWRwgrdfhXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.45.7 waku 3f5490ee8d5914fde39e52d065ac55b7143e2cd5fd9d3e7614ebd004bdadb958
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 3f5490ee8d59. Setting up logs at ./log/docker/node2_2024-10-17_04-15-06__a499caa7-af9f-489a-a09c-91abf13fc4ab__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 49864
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:49864/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:49864/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.45.7/tcp/49865/p2p/16Uiu2HAmNaJiRUDLuZWderdhYpCeU9MVjCHPR78BnCtp9aEE2XbE","/ip4/172.18.45.7/tcp/49866/ws/p2p/16Uiu2HAmNaJiRUDLuZWderdhYpCeU9MVjCHPR78BnCtp9aEE2XbE"],"enrUri":"enr:-LO4QJaUuOUvab5tDGTWkve1ucm77z4iHAh1FSFCsq51zBwWTVIb0aejbHHsWVdUJH_en9CHkTvthx4VHaM_T-WiyuYBgmlkgnY0gmlwhKwSLQeKbXVsdGlhZGRyc4wACgSsEi0HBsLK3QOCcnOFAAMBAACJc2VjcDI1NmsxoQOTYbrYcDI-r1V6A0dfVVjz9bSMT0iwShvylyD_4b7CUYN0Y3CCwsmDdWRwgsLLhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:49864/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.25.79/tcp/46941/p2p/16Uiu2HAmPG61nbiPzAQwTjRQwe8ZiTJGdVA2hEF5WF19mUxpbSzR"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:46940/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:49864/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:46940/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:46940/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1729138511083741440,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:49864/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1729138511083741440,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:46940/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)', "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:46940/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id e55ff33aa1df
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 3f5490ee8d59
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.