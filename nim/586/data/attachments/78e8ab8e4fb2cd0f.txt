[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_no_request_id with id: 2024-12-27_10-39-11__345dfec7-bb5f-444b-95b5-f43156a59988
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-27_10-39-11__345dfec7-bb5f-444b-95b5-f43156a59988__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.154.157
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['30767', '30768', '30769', '30770', '30771']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 30767:30767 -p 30768:30768 -p 30769:30769 -p 30770:30770 -p 30771:30771 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=30769 --rest-port=30767 --tcp-port=30768 --discv5-udp-port=30770 --rest-address=0.0.0.0 --nat=extip:172.18.154.157 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=fecfdfb9aed66d4fba0034d5cf76f4e7b72c3345cb433ec5aafcdacca0dd1ba6 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=30771 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.154.157 waku 75e6b41ebc8d0cb8a705de546cd21ff28ede07d731ee70c0e1e0579e9b7b9bac
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 75e6b41ebc8d. Setting up logs at ./log/docker/node1_2024-12-27_10-39-11__345dfec7-bb5f-444b-95b5-f43156a59988__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 30767
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 2d1ec2ddfe52. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30767/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30767/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.154.157/tcp/30768/p2p/16Uiu2HAkuxpSv98tT7GhkddegEVwGKo7BhrLF5BUoZqjy8eGpmBg","/ip4/172.18.154.157/tcp/30769/ws/p2p/16Uiu2HAkuxpSv98tT7GhkddegEVwGKo7BhrLF5BUoZqjy8eGpmBg"],"enrUri":"enr:-L24QPvQxxYo--h1eZ7BtnyiNPJG48y-gN4xxOYUhYCfrvXnSadoCEh-wCrOH-m3ReSIaeK62fOlrwPhsL6IOW7ykBsCgmlkgnY0gmlwhKwSmp2KbXVsdGlhZGRyc5YACASsEpqdBngwAAoErBKanQZ4Md0DgnJzhQADAQAAiXNlY3AyNTZrMaECB_qUWM16IwhVlYaEzOseh5NZMahFX5G1NyZOOJUOV8ODdGNwgngwg3VkcIJ4MoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-27_10-39-11__345dfec7-bb5f-444b-95b5-f43156a59988__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.65.35
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['62027', '62028', '62029', '62030', '62031']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 62027:62027 -p 62028:62028 -p 62029:62029 -p 62030:62030 -p 62031:62031 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=62029 --rest-port=62027 --tcp-port=62028 --discv5-udp-port=62030 --rest-address=0.0.0.0 --nat=extip:172.18.65.35 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e13bba1a1c9d6bbf289d39ac7ecd0ee4dcbef38ac9a3acc9564beff4ec5e5ed2 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=62031 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QPvQxxYo--h1eZ7BtnyiNPJG48y-gN4xxOYUhYCfrvXnSadoCEh-wCrOH-m3ReSIaeK62fOlrwPhsL6IOW7ykBsCgmlkgnY0gmlwhKwSmp2KbXVsdGlhZGRyc5YACASsEpqdBngwAAoErBKanQZ4Md0DgnJzhQADAQAAiXNlY3AyNTZrMaECB_qUWM16IwhVlYaEzOseh5NZMahFX5G1NyZOOJUOV8ODdGNwgngwg3VkcIJ4MoV3YWt1MgU --filternode=/ip4/172.18.154.157/tcp/30768/p2p/16Uiu2HAkuxpSv98tT7GhkddegEVwGKo7BhrLF5BUoZqjy8eGpmBg
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.65.35 waku 94bfccaac6b2a8eb02887147ff0d5057fcb3043a99b82360198535d2511d3486
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 94bfccaac6b2. Setting up logs at ./log/docker/node2_2024-12-27_10-39-11__345dfec7-bb5f-444b-95b5-f43156a59988__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 62027
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:62027/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:62027/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.65.35/tcp/62028/p2p/16Uiu2HAmPpqpRWMiY2Ki323cV3R78RdAeCyyTvhQNP3aH29zCDYv","/ip4/172.18.65.35/tcp/62029/ws/p2p/16Uiu2HAmPpqpRWMiY2Ki323cV3R78RdAeCyyTvhQNP3aH29zCDYv"],"enrUri":"enr:-L24QHDvLZyPgJ1Dw0UgWatuQX3bkpK-NKo0Vy7tPZMEPtwzZmrnoQGTY2xYvkh4kSh1bY5Pes8tVUcAxf6j5Epke8kCgmlkgnY0gmlwhKwSQSOKbXVsdGlhZGRyc5YACASsEkEjBvJMAAoErBJBIwbyTd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDpfa3h4t-8gxrOkhzTAH5C04A18Pbe9hJ1QYtalykLXODdGNwgvJMg3VkcILyToV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:62027/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.154.157/tcp/30768/p2p/16Uiu2HAkuxpSv98tT7GhkddegEVwGKo7BhrLF5BUoZqjy8eGpmBg"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:30767/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:62027/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "9d789f66-f231-400b-9af4-615ffb4e34ee", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"9d789f66-f231-400b-9af4-615ffb4e34ee","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:62027/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:62027/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 75e6b41ebc8d
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 94bfccaac6b2
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 75e6b41ebc8d. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.