[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_invalid_version with id: 2024-10-02_04-22-27__0c96e1bc-bb3f-4feb-bfac-bec6f4f9c873
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-10-02_04-22-27__0c96e1bc-bb3f-4feb-bfac-bec6f4f9c873__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.0.168
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['52599', '52600', '52601', '52602', '52603']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 52599:52599 -p 52600:52600 -p 52601:52601 -p 52602:52602 -p 52603:52603 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=52601 --rest-port=52599 --tcp-port=52600 --discv5-udp-port=52602 --rest-address=0.0.0.0 --nat=extip:172.18.0.168 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=c97bbb87eab1582fc4e2d7606dbb9d159e967abcbfa3cc48dbfae514ef4cfbdc --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=52603 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.0.168 waku 7ac553049b91490f8fdd2a8068d77bd0a7c8c81afbdaed2612425469f121f155
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 7ac553049b91. Setting up logs at ./log/docker/node1_2024-10-02_04-22-27__0c96e1bc-bb3f-4feb-bfac-bec6f4f9c873__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 52599
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:52599/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:52599/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.0.168/tcp/52600/p2p/16Uiu2HAm4EPTFZqv3YzsF1r6Yr2BhDbBwFWKGqJv52phb3QajsQT","/ip4/172.18.0.168/tcp/52601/ws/p2p/16Uiu2HAm4EPTFZqv3YzsF1r6Yr2BhDbBwFWKGqJv52phb3QajsQT"],"enrUri":"enr:-LO4QD0MniOj3B4XIdP0fNaXFcTVwRh2l_GeNsUFZhdbhdx2IHXJ8vI7ocG9ZUTynBL61tOm_2XCEoCcjMDvRsQuHAcBgmlkgnY0gmlwhKwSAKiKbXVsdGlhZGRyc4wACgSsEgCoBs153QOCcnOFAAMBAACJc2VjcDI1NmsxoQKC1RtVoU9GDh1bFIB-7yYCqcUp7dNnOjOtZdxYhLn02IN0Y3CCzXiDdWRwgs16hXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-10-02_04-22-27__0c96e1bc-bb3f-4feb-bfac-bec6f4f9c873__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.213.129
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['12081', '12082', '12083', '12084', '12085']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 12081:12081 -p 12082:12082 -p 12083:12083 -p 12084:12084 -p 12085:12085 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=12083 --rest-port=12081 --tcp-port=12082 --discv5-udp-port=12084 --rest-address=0.0.0.0 --nat=extip:172.18.213.129 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=2c4aaf1deb4f6bcf0f6bcbbc9148ded6d5caacf98ab4299a9c6fd9ee72410e59 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=12085 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QD0MniOj3B4XIdP0fNaXFcTVwRh2l_GeNsUFZhdbhdx2IHXJ8vI7ocG9ZUTynBL61tOm_2XCEoCcjMDvRsQuHAcBgmlkgnY0gmlwhKwSAKiKbXVsdGlhZGRyc4wACgSsEgCoBs153QOCcnOFAAMBAACJc2VjcDI1NmsxoQKC1RtVoU9GDh1bFIB-7yYCqcUp7dNnOjOtZdxYhLn02IN0Y3CCzXiDdWRwgs16hXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.213.129 waku 04f8ea6e023b5fd6c267a2e1c8973a7dd4d19a8dbfe2d0009a9634ec4373d05e
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 04f8ea6e023b. Setting up logs at ./log/docker/node2_2024-10-02_04-22-27__0c96e1bc-bb3f-4feb-bfac-bec6f4f9c873__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 12081
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:12081/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:12081/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.213.129/tcp/12082/p2p/16Uiu2HAkyZYTtYGotwbF8hzYeKCiqfXBBuhDJUAwKecBdHBZRPB6","/ip4/172.18.213.129/tcp/12083/ws/p2p/16Uiu2HAkyZYTtYGotwbF8hzYeKCiqfXBBuhDJUAwKecBdHBZRPB6"],"enrUri":"enr:-LO4QCSXlBsgd3Ga0giT09EeD_dyMkpBIQ9r2HDC9vlo-BbaT1gzPEHuA05P6J7uwQjXKoQLvHS-tlIzPy1T5Sm0joUBgmlkgnY0gmlwhKwS1YGKbXVsdGlhZGRyc4wACgSsEtWBBi8z3QOCcnOFAAMBAACJc2VjcDI1NmsxoQI9cuVyVAgrACQ9kXjrzk5wriJ7PjUovbQ_l0TLdY5rYYN0Y3CCLzKDdWRwgi80hXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:12081/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.0.168/tcp/52600/p2p/16Uiu2HAm4EPTFZqv3YzsF1r6Yr2BhDbBwFWKGqJv52phb3QajsQT"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:52599/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:12081/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:52599/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:52599/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1727842951323211520,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:12081/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1727842951323211520,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:52599/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)', "version": 2.1}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:52599/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 7ac553049b91
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 04f8ea6e023b
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.