[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_pubsub_topic_list_instead_of_string with id: 2024-11-04_04-08-05__ee097b85-b7f6-4555-9c6f-ce39b9011b4a
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-04_04-08-05__ee097b85-b7f6-4555-9c6f-ce39b9011b4a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.58.225
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['42840', '42841', '42842', '42843', '42844']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 42840:42840 -p 42841:42841 -p 42842:42842 -p 42843:42843 -p 42844:42844 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=42842 --rest-port=42840 --tcp-port=42841 --discv5-udp-port=42843 --rest-address=0.0.0.0 --nat=extip:172.18.58.225 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=21e6e29a94204cedba9de4018d2690cd4c5faf0e6deb0f1ae0af52fb7a8265b8 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=42844 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.58.225 waku 6c2d24eb87e92f474ff310939de47c2f1e7a66821ffe82c48721182ec17156bc
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 6c2d24eb87e9. Setting up logs at ./log/docker/node1_2024-11-04_04-08-05__ee097b85-b7f6-4555-9c6f-ce39b9011b4a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 42840
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 01493cf0ee16. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:42840/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:42840/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.58.225/tcp/42841/p2p/16Uiu2HAm14UhRS1Xuc1QNANChX1LaXwEKaLLfdVXmynd3Hb54GHs","/ip4/172.18.58.225/tcp/42842/ws/p2p/16Uiu2HAm14UhRS1Xuc1QNANChX1LaXwEKaLLfdVXmynd3Hb54GHs"],"enrUri":"enr:-L24QNAXD9n73IowrzsHj_P_EvgF8TgF__jmJWY4rbTP1qneTP-X9pQ4Cg3TB4rYoqsim8cYVtwLx_JohvfYcCagbgkCgmlkgnY0gmlwhKwSOuGKbXVsdGlhZGRyc5YACASsEjrhBqdZAAoErBI64QanWt0DgnJzhQADAQAAiXNlY3AyNTZrMaECU7gq7EdEXzX1gvcYhB-0wVcXAAi4XCfSY4hFzAO-eeaDdGNwgqdZg3VkcIKnW4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-04_04-08-05__ee097b85-b7f6-4555-9c6f-ce39b9011b4a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.207.248
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['44300', '44301', '44302', '44303', '44304']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 44300:44300 -p 44301:44301 -p 44302:44302 -p 44303:44303 -p 44304:44304 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=44302 --rest-port=44300 --tcp-port=44301 --discv5-udp-port=44303 --rest-address=0.0.0.0 --nat=extip:172.18.207.248 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=d472261a30ee2c5e6eedb233cadc66c8f143ecdca6bae77104b2b4c7d2c00b1c --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=44304 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QNAXD9n73IowrzsHj_P_EvgF8TgF__jmJWY4rbTP1qneTP-X9pQ4Cg3TB4rYoqsim8cYVtwLx_JohvfYcCagbgkCgmlkgnY0gmlwhKwSOuGKbXVsdGlhZGRyc5YACASsEjrhBqdZAAoErBI64QanWt0DgnJzhQADAQAAiXNlY3AyNTZrMaECU7gq7EdEXzX1gvcYhB-0wVcXAAi4XCfSY4hFzAO-eeaDdGNwgqdZg3VkcIKnW4V3YWt1MgU --filternode=/ip4/172.18.58.225/tcp/42841/p2p/16Uiu2HAm14UhRS1Xuc1QNANChX1LaXwEKaLLfdVXmynd3Hb54GHs
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.207.248 waku a4aaf6897e1900ac3d599177df28cbfb0d8bf35c3b6a6ab1c7c5518e1a35a31e
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID a4aaf6897e19. Setting up logs at ./log/docker/node2_2024-11-04_04-08-05__ee097b85-b7f6-4555-9c6f-ce39b9011b4a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 44300
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:44300/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:44300/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.207.248/tcp/44301/p2p/16Uiu2HAmSzMPWsMsAggtr79b6svzxyDSLy1ppw7okcXZPjXyrddz","/ip4/172.18.207.248/tcp/44302/ws/p2p/16Uiu2HAmSzMPWsMsAggtr79b6svzxyDSLy1ppw7okcXZPjXyrddz"],"enrUri":"enr:-L24QOflB8F9PM4yg8wfY1C25Eu9Tt4jA1uF2ThGGzYt7s5lUWvOdHDXvaURe6Rwu9dzSGzRRps_A666rhBk_8yX7ZwCgmlkgnY0gmlwhKwSz_iKbXVsdGlhZGRyc5YACASsEs_4Bq0NAAoErBLP-AatDt0DgnJzhQADAQAAiXNlY3AyNTZrMaED1PlwxVMuf36_i8CPCz8LvNTrtwWnbZYIOez4X1W5BNmDdGNwgq0Ng3VkcIKtD4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:44300/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.58.225/tcp/42841/p2p/16Uiu2HAm14UhRS1Xuc1QNANChX1LaXwEKaLLfdVXmynd3Hb54GHs"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:42840/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:44300/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "3eaebaa1-6a42-46e4-8ba4-a334ccb23ec9", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"3eaebaa1-6a42-46e4-8ba4-a334ccb23ec9","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:44300/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": ["/waku/2/rs/3/1"]}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:44300/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 6c2d24eb87e9
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id a4aaf6897e19
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 6c2d24eb87e9. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.