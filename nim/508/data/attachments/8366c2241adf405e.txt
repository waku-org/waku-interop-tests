[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2024-12-09_04-11-58__516388ec-29d2-46e9-92f8-7893165f9f97
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-09_04-11-58__516388ec-29d2-46e9-92f8-7893165f9f97__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.27.45
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['39138', '39139', '39140', '39141', '39142']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 39138:39138 -p 39139:39139 -p 39140:39140 -p 39141:39141 -p 39142:39142 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=39140 --rest-port=39138 --tcp-port=39139 --discv5-udp-port=39141 --rest-address=0.0.0.0 --nat=extip:172.18.27.45 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=df28dff5f3549ab2d05a87ecf842e74f0bc88d4cd444b71add23319362d47ac1 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=39142 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.27.45 waku 37b97d07966d5dde13a83a9fa21502e3ba5a0f8dc4cb4b199667b1a9790038cf
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 37b97d07966d. Setting up logs at ./log/docker/node1_2024-12-09_04-11-58__516388ec-29d2-46e9-92f8-7893165f9f97__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 39138
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 344b353dfb83. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:39138/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:39138/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.27.45/tcp/39139/p2p/16Uiu2HAmMCVpAwwRMfiBai1SXofEvE57Jupi4aiQKfPBEKXwQWGw","/ip4/172.18.27.45/tcp/39140/ws/p2p/16Uiu2HAmMCVpAwwRMfiBai1SXofEvE57Jupi4aiQKfPBEKXwQWGw"],"enrUri":"enr:-L24QJAxGP6I1y6xdaMN6SopS051d42klB5ZHZHZYxNnrk6xOMUTf7-rj7gdMhj4qsemL_Eyipyfgd5wN0-txaENQEgCgmlkgnY0gmlwhKwSGy2KbXVsdGlhZGRyc5YACASsEhstBpjjAAoErBIbLQaY5N0DgnJzhQADAQAAiXNlY3AyNTZrMaEDfu_QoazMMsavXGZI0MWMcGzyGim7JkZ4oyxGe6Lf22iDdGNwgpjjg3VkcIKY5YV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-09_04-11-58__516388ec-29d2-46e9-92f8-7893165f9f97__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.141.155
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['13757', '13758', '13759', '13760', '13761']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 13757:13757 -p 13758:13758 -p 13759:13759 -p 13760:13760 -p 13761:13761 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=13759 --rest-port=13757 --tcp-port=13758 --discv5-udp-port=13760 --rest-address=0.0.0.0 --nat=extip:172.18.141.155 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=edd29e2a252e7d60a77cfba31cab2dbda15bff6dbdfcf20abb3412decf06f4e5 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=13761 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QJAxGP6I1y6xdaMN6SopS051d42klB5ZHZHZYxNnrk6xOMUTf7-rj7gdMhj4qsemL_Eyipyfgd5wN0-txaENQEgCgmlkgnY0gmlwhKwSGy2KbXVsdGlhZGRyc5YACASsEhstBpjjAAoErBIbLQaY5N0DgnJzhQADAQAAiXNlY3AyNTZrMaEDfu_QoazMMsavXGZI0MWMcGzyGim7JkZ4oyxGe6Lf22iDdGNwgpjjg3VkcIKY5YV3YWt1MgU --filternode=/ip4/172.18.27.45/tcp/39139/p2p/16Uiu2HAmMCVpAwwRMfiBai1SXofEvE57Jupi4aiQKfPBEKXwQWGw
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.141.155 waku bff4471f4fd3c1d7352b1ceef26ed9c69cc2417e378c7463ed27b76619b1ddb5
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID bff4471f4fd3. Setting up logs at ./log/docker/node2_2024-12-09_04-11-58__516388ec-29d2-46e9-92f8-7893165f9f97__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 13757
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:13757/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:13757/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.141.155/tcp/13758/p2p/16Uiu2HAkyfP2qEFX4KyqoDGj3RUonkXwmDwxHdcJJkawrJ1xnUUb","/ip4/172.18.141.155/tcp/13759/ws/p2p/16Uiu2HAkyfP2qEFX4KyqoDGj3RUonkXwmDwxHdcJJkawrJ1xnUUb"],"enrUri":"enr:-L24QMKslOBQEygdwMQOHmJAxFLVcLj48gVFXipT6nckA5PRPp71wYlOa0OacujZikM12rpVv0z77dPuYwVkVdhrivoCgmlkgnY0gmlwhKwSjZuKbXVsdGlhZGRyc5YACASsEo2bBjW-AAoErBKNmwY1v90DgnJzhQADAQAAiXNlY3AyNTZrMaECPvG3YEVXMddDTEKMPt_tmltKg__SPqKMqozbAyDWkUSDdGNwgjW-g3VkcII1wIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:13757/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.27.45/tcp/39139/p2p/16Uiu2HAmMCVpAwwRMfiBai1SXofEvE57Jupi4aiQKfPBEKXwQWGw"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:39138/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:13757/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "9c6f7f04-15d8-4834-9f1b-de78194d26ef", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"9c6f7f04-15d8-4834-9f1b-de78194d26ef","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:13757/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:13757/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 37b97d07966d
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id bff4471f4fd3
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 37b97d07966d. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.