[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_no_request_id with id: 2024-12-09_04-11-53__7dc61711-4a2b-4b78-a487-9f298c9664b3
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-09_04-11-53__7dc61711-4a2b-4b78-a487-9f298c9664b3__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.65.202
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['35690', '35691', '35692', '35693', '35694']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 35690:35690 -p 35691:35691 -p 35692:35692 -p 35693:35693 -p 35694:35694 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=35692 --rest-port=35690 --tcp-port=35691 --discv5-udp-port=35693 --rest-address=0.0.0.0 --nat=extip:172.18.65.202 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=dcf8df39610b5aa2fdbfcf3af068c3bc235dd8f79dc7bb28115edcfdab5ac8af --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=35694 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.65.202 waku e77979bba8c5cb4f3f0f2f9110dc4837101526ed37d3a917303025d245bd8f73
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID e77979bba8c5. Setting up logs at ./log/docker/node1_2024-12-09_04-11-53__7dc61711-4a2b-4b78-a487-9f298c9664b3__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 35690
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container a1ae3c4e4b00. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:35690/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:35690/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.65.202/tcp/35691/p2p/16Uiu2HAmKJXRUL7snMXCJtrajT2TRF7CJiRKCqcJTD5wAMy7Bymz","/ip4/172.18.65.202/tcp/35692/ws/p2p/16Uiu2HAmKJXRUL7snMXCJtrajT2TRF7CJiRKCqcJTD5wAMy7Bymz"],"enrUri":"enr:-L24QLjAsOcRaoZY8sSIZFsB53X-_RkOB2A9ZgirmdbzodBOdo7gHwsaLk_ToVJtIWFQoCIW9PoYYiwUNMP2ZAVod0MCgmlkgnY0gmlwhKwSQcqKbXVsdGlhZGRyc5YACASsEkHKBotrAAoErBJBygaLbN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDYsO-rZKs4Fy0Wjx0WGMdryL8K4sQ-WVjH5LEzqdZgoGDdGNwgotrg3VkcIKLbYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-09_04-11-53__7dc61711-4a2b-4b78-a487-9f298c9664b3__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.28.246
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['34938', '34939', '34940', '34941', '34942']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 34938:34938 -p 34939:34939 -p 34940:34940 -p 34941:34941 -p 34942:34942 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=34940 --rest-port=34938 --tcp-port=34939 --discv5-udp-port=34941 --rest-address=0.0.0.0 --nat=extip:172.18.28.246 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e7272c53310d23c1b2b08613ddcc82fec7f1b0ebcbc532e1530c329acac27809 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=34942 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QLjAsOcRaoZY8sSIZFsB53X-_RkOB2A9ZgirmdbzodBOdo7gHwsaLk_ToVJtIWFQoCIW9PoYYiwUNMP2ZAVod0MCgmlkgnY0gmlwhKwSQcqKbXVsdGlhZGRyc5YACASsEkHKBotrAAoErBJBygaLbN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDYsO-rZKs4Fy0Wjx0WGMdryL8K4sQ-WVjH5LEzqdZgoGDdGNwgotrg3VkcIKLbYV3YWt1MgU --filternode=/ip4/172.18.65.202/tcp/35691/p2p/16Uiu2HAmKJXRUL7snMXCJtrajT2TRF7CJiRKCqcJTD5wAMy7Bymz
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.28.246 waku 7a0eacf851b75a393bf6d9a74beaadcfc90cab2cfe1c03e4dd17e1286ac58e9e
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 7a0eacf851b7. Setting up logs at ./log/docker/node2_2024-12-09_04-11-53__7dc61711-4a2b-4b78-a487-9f298c9664b3__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 34938
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:34938/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:34938/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.28.246/tcp/34939/p2p/16Uiu2HAmS7c2k5qDBG4ZAqr1G2UCUkpYVGrLFaxvap33shBbY8hL","/ip4/172.18.28.246/tcp/34940/ws/p2p/16Uiu2HAmS7c2k5qDBG4ZAqr1G2UCUkpYVGrLFaxvap33shBbY8hL"],"enrUri":"enr:-L24QIi7Rj38itz7nx3TheCrP5vueo19u6zd2xzGMku1GIWpMdccrDpZHNj-dhNribbubA4-Yjp67ZT7pgIeLvQyME4CgmlkgnY0gmlwhKwSHPaKbXVsdGlhZGRyc5YACASsEhz2Boh7AAoErBIc9gaIfN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDx_lf9kGEsmiPIB4q1lKbBLN0rEIA0WdPGIuEaBX2dVeDdGNwgoh7g3VkcIKIfYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:34938/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.65.202/tcp/35691/p2p/16Uiu2HAmKJXRUL7snMXCJtrajT2TRF7CJiRKCqcJTD5wAMy7Bymz"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:35690/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:34938/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "7105fb6d-2ee8-4e37-96e0-679dffd73449", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"7105fb6d-2ee8-4e37-96e0-679dffd73449","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:34938/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:34938/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id e77979bba8c5
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 7a0eacf851b7
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container e77979bba8c5. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.