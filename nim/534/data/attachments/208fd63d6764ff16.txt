[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_invalid_pubsub_topic_format with id: 2024-12-21_04-10-44__3dc63a76-74a7-4ee5-bc50-bc2e806db02a
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-21_04-10-44__3dc63a76-74a7-4ee5-bc50-bc2e806db02a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.29.235
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['11569', '11570', '11571', '11572', '11573']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 11569:11569 -p 11570:11570 -p 11571:11571 -p 11572:11572 -p 11573:11573 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=11571 --rest-port=11569 --tcp-port=11570 --discv5-udp-port=11572 --rest-address=0.0.0.0 --nat=extip:172.18.29.235 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=dd2f76cfaa4cee63efbf113c9ed44dccf5f6a59499d6f2b2c6d4f9d9f05b1bc2 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=11573 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.29.235 waku 1b578fd8bc640109c2a74841f9475b7d85fcf1199a194e93b90478eaf4b12ba5
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 1b578fd8bc64. Setting up logs at ./log/docker/node1_2024-12-21_04-10-44__3dc63a76-74a7-4ee5-bc50-bc2e806db02a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 11569
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 79d5db77ceb6. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:11569/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:11569/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.29.235/tcp/11570/p2p/16Uiu2HAkvXAYNe2AWeMtfbaHgomRcGyymj4RKH66qjzAxVLF9qu1","/ip4/172.18.29.235/tcp/11571/ws/p2p/16Uiu2HAkvXAYNe2AWeMtfbaHgomRcGyymj4RKH66qjzAxVLF9qu1"],"enrUri":"enr:-L24QD44GPSvqXmw2LDioGnHmPYTFkcmEbDrwkXEwZzelJb7VEPfCYdXqiF1FEGk9Ycpg4r-22ZlexPudN2rJQ9K_xECgmlkgnY0gmlwhKwSHeuKbXVsdGlhZGRyc5YACASsEh3rBi0yAAoErBId6wYtM90DgnJzhQADAQAAiXNlY3AyNTZrMaECEEPixVM4n5gL-IkCjZi0cQSJuZetrvxhLq3TfPdjQQiDdGNwgi0yg3VkcIItNIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-21_04-10-44__3dc63a76-74a7-4ee5-bc50-bc2e806db02a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.135.195
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['45269', '45270', '45271', '45272', '45273']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 45269:45269 -p 45270:45270 -p 45271:45271 -p 45272:45272 -p 45273:45273 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=45271 --rest-port=45269 --tcp-port=45270 --discv5-udp-port=45272 --rest-address=0.0.0.0 --nat=extip:172.18.135.195 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=6f1e55ab0ace1db0b9fcce5ef7086ee6edbce7e5cc2ab0a4deee165bfb5a9928 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=45273 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QD44GPSvqXmw2LDioGnHmPYTFkcmEbDrwkXEwZzelJb7VEPfCYdXqiF1FEGk9Ycpg4r-22ZlexPudN2rJQ9K_xECgmlkgnY0gmlwhKwSHeuKbXVsdGlhZGRyc5YACASsEh3rBi0yAAoErBId6wYtM90DgnJzhQADAQAAiXNlY3AyNTZrMaECEEPixVM4n5gL-IkCjZi0cQSJuZetrvxhLq3TfPdjQQiDdGNwgi0yg3VkcIItNIV3YWt1MgU --filternode=/ip4/172.18.29.235/tcp/11570/p2p/16Uiu2HAkvXAYNe2AWeMtfbaHgomRcGyymj4RKH66qjzAxVLF9qu1
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.135.195 waku c863c1ae2b4655ba7db695b1438030801770f89ec8754133b6e5a2b493f864e4
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID c863c1ae2b46. Setting up logs at ./log/docker/node2_2024-12-21_04-10-44__3dc63a76-74a7-4ee5-bc50-bc2e806db02a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 45269
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:45269/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:45269/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.135.195/tcp/45270/p2p/16Uiu2HAm5Mq3XqK8mytakA5w4sJnDEpvU16GUNALxbLeDjpSGBV3","/ip4/172.18.135.195/tcp/45271/ws/p2p/16Uiu2HAm5Mq3XqK8mytakA5w4sJnDEpvU16GUNALxbLeDjpSGBV3"],"enrUri":"enr:-L24QFgfY6cJ5APCclzAiQF0s__Q0At24Ib3HvtIh_94G6kTae9pDGHW4DrR03qJKYnw9ATEgbKivPGZhmCXyr5KcJ4CgmlkgnY0gmlwhKwSh8OKbXVsdGlhZGRyc5YACASsEofDBrDWAAoErBKHwwaw190DgnJzhQADAQAAiXNlY3AyNTZrMaECk5jLlXLgP1y5DiBiEmco-glilheJsagrFJZ2yy_jeIqDdGNwgrDWg3VkcIKw2IV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:45269/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.29.235/tcp/11570/p2p/16Uiu2HAkvXAYNe2AWeMtfbaHgomRcGyymj4RKH66qjzAxVLF9qu1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:11569/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:45269/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "83161a78-2c91-435e-88d6-05f3e711a23b", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"83161a78-2c91-435e-88d6-05f3e711a23b","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:45269/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": ["/waku/2/rs/3/1"]}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:45269/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 1b578fd8bc64
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id c863c1ae2b46
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 1b578fd8bc64. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.