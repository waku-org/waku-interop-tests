[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_extra_field with id: 2024-12-21_04-10-55__860bb8db-abe3-4e3a-84be-765a01ed1ada
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-21_04-10-55__860bb8db-abe3-4e3a-84be-765a01ed1ada__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.201.48
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['41875', '41876', '41877', '41878', '41879']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 41875:41875 -p 41876:41876 -p 41877:41877 -p 41878:41878 -p 41879:41879 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=41877 --rest-port=41875 --tcp-port=41876 --discv5-udp-port=41878 --rest-address=0.0.0.0 --nat=extip:172.18.201.48 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e86af1ffaaaf0d9cba276a33ce4daf5a5ee6a0de7bc7c2fdbdd3c1eca4e323ca --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=41879 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.201.48 waku 083d92f32cd838975998f994179a83c01e2e2e20eb7e3d61fdbba59f7fbc6415
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 083d92f32cd8. Setting up logs at ./log/docker/node1_2024-12-21_04-10-55__860bb8db-abe3-4e3a-84be-765a01ed1ada__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 41875
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 710912d5cfe9. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41875/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41875/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.201.48/tcp/41876/p2p/16Uiu2HAm8tvTwwhJLrLHNfANNiN1fK5gLXgNDJ7iQPWggSd7Ud1M","/ip4/172.18.201.48/tcp/41877/ws/p2p/16Uiu2HAm8tvTwwhJLrLHNfANNiN1fK5gLXgNDJ7iQPWggSd7Ud1M"],"enrUri":"enr:-L24QA-BYLOfvrAyxU93TCPpf_D2UoRfjz2MIVeES6Snm1GqOoAHDAHTznNw-fZ7jsbFo3k3VNHILft20YXcHO2G_uwCgmlkgnY0gmlwhKwSyTCKbXVsdGlhZGRyc5YACASsEskwBqOUAAoErBLJMAajld0DgnJzhQADAQAAiXNlY3AyNTZrMaECyCL9mIkJfDljVvMR_n7xSSFFNnclEz0bkNhlznC9IvyDdGNwgqOUg3VkcIKjloV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-21_04-10-55__860bb8db-abe3-4e3a-84be-765a01ed1ada__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.203.91
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['6679', '6680', '6681', '6682', '6683']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 6679:6679 -p 6680:6680 -p 6681:6681 -p 6682:6682 -p 6683:6683 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=6681 --rest-port=6679 --tcp-port=6680 --discv5-udp-port=6682 --rest-address=0.0.0.0 --nat=extip:172.18.203.91 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=f555432cfa568d1439b1d0b5d4e26b9dadae5fbaa6e4a503bbaabbfbd8cd1e3d --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=6683 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QA-BYLOfvrAyxU93TCPpf_D2UoRfjz2MIVeES6Snm1GqOoAHDAHTznNw-fZ7jsbFo3k3VNHILft20YXcHO2G_uwCgmlkgnY0gmlwhKwSyTCKbXVsdGlhZGRyc5YACASsEskwBqOUAAoErBLJMAajld0DgnJzhQADAQAAiXNlY3AyNTZrMaECyCL9mIkJfDljVvMR_n7xSSFFNnclEz0bkNhlznC9IvyDdGNwgqOUg3VkcIKjloV3YWt1MgU --filternode=/ip4/172.18.201.48/tcp/41876/p2p/16Uiu2HAm8tvTwwhJLrLHNfANNiN1fK5gLXgNDJ7iQPWggSd7Ud1M
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.203.91 waku 995f56c01e85c13dc2f58f2486f51ec9dd42ac87ac9defee69267faab54033dc
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 995f56c01e85. Setting up logs at ./log/docker/node2_2024-12-21_04-10-55__860bb8db-abe3-4e3a-84be-765a01ed1ada__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 6679
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:6679/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:6679/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.203.91/tcp/6680/p2p/16Uiu2HAm328FUT91AquCboQ4HWBVmGSkH7gaDYNrbvM8gFj2Gins","/ip4/172.18.203.91/tcp/6681/ws/p2p/16Uiu2HAm328FUT91AquCboQ4HWBVmGSkH7gaDYNrbvM8gFj2Gins"],"enrUri":"enr:-L24QNjY7xgkW5YkDun_sTLH_q0OBkPcUV9_KjSUy0ZRMZUTQ-0lYzAxWD5zcTdujq88Jka9J8aUY-zIX93qGRzaLLACgmlkgnY0gmlwhKwSy1uKbXVsdGlhZGRyc5YACASsEstbBhoYAAoErBLLWwYaGd0DgnJzhQADAQAAiXNlY3AyNTZrMaECcNVCjevX95kYSDCwwfWRCOJ-IgkLw6HpTSGYMUA1etCDdGNwghoYg3VkcIIaGoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:6679/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.201.48/tcp/41876/p2p/16Uiu2HAm8tvTwwhJLrLHNfANNiN1fK5gLXgNDJ7iQPWggSd7Ud1M"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:41875/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:6679/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "f49068b5-03c7-48c8-8c8e-a6d85870acb6", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"f49068b5-03c7-48c8-8c8e-a6d85870acb6","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:6679/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:6679/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 083d92f32cd8
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 995f56c01e85
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 083d92f32cd8. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.