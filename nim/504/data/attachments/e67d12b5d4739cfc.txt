[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2024-12-05_11-56-50__733f8443-8892-474a-9d13-80b19ab5d2d4
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-05_11-56-50__733f8443-8892-474a-9d13-80b19ab5d2d4__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.228.5
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['41368', '41369', '41370', '41371', '41372']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 41368:41368 -p 41369:41369 -p 41370:41370 -p 41371:41371 -p 41372:41372 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=41370 --rest-port=41368 --tcp-port=41369 --discv5-udp-port=41371 --rest-address=0.0.0.0 --nat=extip:172.18.228.5 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=c3611ccf48ee50036c4b5376636bceefcefddacad1cf0fdf6d7dc2aaa3ff27a1 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=41372 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.228.5 waku 5f0ecfcdde84c7752b898acfdc1847d1abaee1205bfd347f2c0ef4ac1d980aba
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 5f0ecfcdde84. Setting up logs at ./log/docker/node1_2024-12-05_11-56-50__733f8443-8892-474a-9d13-80b19ab5d2d4__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 41368
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container c8488c0b18aa. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41368/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41368/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.228.5/tcp/41369/p2p/16Uiu2HAmFD3Xwa8HiNLM2thqT6buaZQtmZX19CwWAoySKQ5E6s3y","/ip4/172.18.228.5/tcp/41370/ws/p2p/16Uiu2HAmFD3Xwa8HiNLM2thqT6buaZQtmZX19CwWAoySKQ5E6s3y"],"enrUri":"enr:-L24QELpJ00IwpjCT_gRlcLWhUcw8YSK5Vmsa5nshlkd4i3oa4ROeb3Kl_JTj8smDhqtCMwUBbyYXHQ8F4op1Sv_t3cCgmlkgnY0gmlwhKwS5AWKbXVsdGlhZGRyc5YACASsEuQFBqGZAAoErBLkBQahmt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDJe2PPAxeiWo6LbAKWjOx38IKiYleieDhXAYEvRvWGoyDdGNwgqGZg3VkcIKhm4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-05_11-56-50__733f8443-8892-474a-9d13-80b19ab5d2d4__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.129.98
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['28732', '28733', '28734', '28735', '28736']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 28732:28732 -p 28733:28733 -p 28734:28734 -p 28735:28735 -p 28736:28736 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=28734 --rest-port=28732 --tcp-port=28733 --discv5-udp-port=28735 --rest-address=0.0.0.0 --nat=extip:172.18.129.98 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=82fdfd7e2f6fa25ba78f9fa1d4026adae4f98759889aaafacbf34a647eafbbad --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=28736 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QELpJ00IwpjCT_gRlcLWhUcw8YSK5Vmsa5nshlkd4i3oa4ROeb3Kl_JTj8smDhqtCMwUBbyYXHQ8F4op1Sv_t3cCgmlkgnY0gmlwhKwS5AWKbXVsdGlhZGRyc5YACASsEuQFBqGZAAoErBLkBQahmt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDJe2PPAxeiWo6LbAKWjOx38IKiYleieDhXAYEvRvWGoyDdGNwgqGZg3VkcIKhm4V3YWt1MgU --filternode=/ip4/172.18.228.5/tcp/41369/p2p/16Uiu2HAmFD3Xwa8HiNLM2thqT6buaZQtmZX19CwWAoySKQ5E6s3y
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.129.98 waku f16cfdbbb239b92f4acd242b95ef20db5a83aeb69a37b82dd46653740a21ed76
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID f16cfdbbb239. Setting up logs at ./log/docker/node2_2024-12-05_11-56-50__733f8443-8892-474a-9d13-80b19ab5d2d4__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 28732
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:28732/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:28732/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.129.98/tcp/28733/p2p/16Uiu2HAmFmKu4paMaq4zYiESdXXDtFP99LR9pitbbdppR689e2fM","/ip4/172.18.129.98/tcp/28734/ws/p2p/16Uiu2HAmFmKu4paMaq4zYiESdXXDtFP99LR9pitbbdppR689e2fM"],"enrUri":"enr:-L24QAQW8psCfW13O9oZseWY_g1wfY7c2MFfIBzcrRfGBS6zB0tEMFZhZUw7sVyv2tVm5-ot-tb-y6Ilbu2dp9ilRBsCgmlkgnY0gmlwhKwSgWKKbXVsdGlhZGRyc5YACASsEoFiBnA9AAoErBKBYgZwPt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDLjKmA0RAFwNSAHOv0Qbx-gINxNObKze319Kewn_h7byDdGNwgnA9g3VkcIJwP4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:28732/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.228.5/tcp/41369/p2p/16Uiu2HAmFD3Xwa8HiNLM2thqT6buaZQtmZX19CwWAoySKQ5E6s3y"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:41368/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:28732/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "af26d61a-c088-4c2a-b93d-971e6b58ab5f", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"af26d61a-c088-4c2a-b93d-971e6b58ab5f","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:28732/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:28732/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 5f0ecfcdde84
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id f16cfdbbb239
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 5f0ecfcdde84. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.