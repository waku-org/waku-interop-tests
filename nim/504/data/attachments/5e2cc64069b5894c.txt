[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_invalid_request_id with id: 2024-12-05_11-56-50__00299e2e-5f07-4dbc-8efb-1e8546eb6ed4
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-05_11-56-50__00299e2e-5f07-4dbc-8efb-1e8546eb6ed4__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.126.14
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['25508', '25509', '25510', '25511', '25512']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 25508:25508 -p 25509:25509 -p 25510:25510 -p 25511:25511 -p 25512:25512 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=25510 --rest-port=25508 --tcp-port=25509 --discv5-udp-port=25511 --rest-address=0.0.0.0 --nat=extip:172.18.126.14 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ff88d0aab92fdefadbcccd5bb69ccbad2a3c9dc82ba4d27d9f76779bdf0eecd2 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=25512 --metrics-logging=true --relay=true --filter=true
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 7d5a9950606f. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.126.14 waku 4f7cdfbac439c814c5e1a9a7d6e4f82670fc373ab4d8124b4f6127059b84300e
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 4f7cdfbac439. Setting up logs at ./log/docker/node1_2024-12-05_11-56-50__00299e2e-5f07-4dbc-8efb-1e8546eb6ed4__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 25508
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:25508/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:25508/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.126.14/tcp/25509/p2p/16Uiu2HAm7QkCsDC7ff1gFQL6EMEfQnNTi71fRRyyuDvoHUW19RrP","/ip4/172.18.126.14/tcp/25510/ws/p2p/16Uiu2HAm7QkCsDC7ff1gFQL6EMEfQnNTi71fRRyyuDvoHUW19RrP"],"enrUri":"enr:-L24QI6E7WfyOt7Q2JsvvHweh1dKFwkJbrC0cTjKB_tYu2bfXKfgZikqkM0Sxh_ROglYxbVUfo7G1XIUcyD0aSOeTVoCgmlkgnY0gmlwhKwSfg6KbXVsdGlhZGRyc5YACASsEn4OBmOlAAoErBJ-DgZjpt0DgnJzhQADAQAAiXNlY3AyNTZrMaECsg9womfyNGYBx7HWCvbMKjoKFjpsnNlMEkzMDH3vW7CDdGNwgmOlg3VkcIJjp4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-05_11-56-50__00299e2e-5f07-4dbc-8efb-1e8546eb6ed4__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.75.8
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['11270', '11271', '11272', '11273', '11274']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 11270:11270 -p 11271:11271 -p 11272:11272 -p 11273:11273 -p 11274:11274 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=11272 --rest-port=11270 --tcp-port=11271 --discv5-udp-port=11273 --rest-address=0.0.0.0 --nat=extip:172.18.75.8 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ede9fd307acc2191b6b0f4fabd8a9e0ddde6c4ee8baf1dfce61d1ed0bc6efb8d --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=11274 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QI6E7WfyOt7Q2JsvvHweh1dKFwkJbrC0cTjKB_tYu2bfXKfgZikqkM0Sxh_ROglYxbVUfo7G1XIUcyD0aSOeTVoCgmlkgnY0gmlwhKwSfg6KbXVsdGlhZGRyc5YACASsEn4OBmOlAAoErBJ-DgZjpt0DgnJzhQADAQAAiXNlY3AyNTZrMaECsg9womfyNGYBx7HWCvbMKjoKFjpsnNlMEkzMDH3vW7CDdGNwgmOlg3VkcIJjp4V3YWt1MgU --filternode=/ip4/172.18.126.14/tcp/25509/p2p/16Uiu2HAm7QkCsDC7ff1gFQL6EMEfQnNTi71fRRyyuDvoHUW19RrP
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.75.8 waku 75a8911d27281923794d946e16503f9f3f859137121805a21c6f3518f60d7d9a
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 75a8911d2728. Setting up logs at ./log/docker/node2_2024-12-05_11-56-50__00299e2e-5f07-4dbc-8efb-1e8546eb6ed4__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 11270
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:11270/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:11270/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.75.8/tcp/11271/p2p/16Uiu2HAmBL39z7ThC8oW2tTov9yNeoKNWz11kPG1CzuWpykR74cr","/ip4/172.18.75.8/tcp/11272/ws/p2p/16Uiu2HAmBL39z7ThC8oW2tTov9yNeoKNWz11kPG1CzuWpykR74cr"],"enrUri":"enr:-L24QJruBXZ9hjkd0FUxj9SRpBkFqPCwcacV-0QXMNfzuyBJIV5bpLqWNLqvFvFxgFtWz-ahX8L73rmJD-OaEp9ejk0CgmlkgnY0gmlwhKwSSwiKbXVsdGlhZGRyc5YACASsEksIBiwHAAoErBJLCAYsCN0DgnJzhQADAQAAiXNlY3AyNTZrMaEC7ElzDiG1vIUkVY9xUQSC_38XERATNeQtxDs6Z8FglFuDdGNwgiwHg3VkcIIsCYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:11270/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.126.14/tcp/25509/p2p/16Uiu2HAm7QkCsDC7ff1gFQL6EMEfQnNTi71fRRyyuDvoHUW19RrP"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:25508/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:11270/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "55bcc405-84b2-4ced-b044-23369232f585", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"55bcc405-84b2-4ced-b044-23369232f585","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:11270/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:11270/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 4f7cdfbac439
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 75a8911d2728
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 4f7cdfbac439. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.