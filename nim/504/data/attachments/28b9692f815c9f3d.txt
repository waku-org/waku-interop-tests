[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_no_request_id with id: 2024-12-05_11-56-42__e97888a7-fd38-49f6-8050-0a707632a216
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-05_11-56-42__e97888a7-fd38-49f6-8050-0a707632a216__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.94.42
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['65365', '65366', '65367', '65368', '65369']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 65365:65365 -p 65366:65366 -p 65367:65367 -p 65368:65368 -p 65369:65369 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=65367 --rest-port=65365 --tcp-port=65366 --discv5-udp-port=65368 --rest-address=0.0.0.0 --nat=extip:172.18.94.42 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=5f653de0ff40fb27c6fadbddd2dbe91fc3e42ecbb2aa6ee6153dce81bdbb9eba --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=65369 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.94.42 waku e80df3452d89ef55cdc9916440248ba90b8e44d01c9bcc176cd3bdff59c61d79
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID e80df3452d89. Setting up logs at ./log/docker/node1_2024-12-05_11-56-42__e97888a7-fd38-49f6-8050-0a707632a216__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 65365
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 38df2f51e849. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:65365/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:65365/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.94.42/tcp/65366/p2p/16Uiu2HAmPBiXJu4GFRbELho2hAXGmPP1zEJ7x5JbvWLkXN5S3jzr","/ip4/172.18.94.42/tcp/65367/ws/p2p/16Uiu2HAmPBiXJu4GFRbELho2hAXGmPP1zEJ7x5JbvWLkXN5S3jzr"],"enrUri":"enr:-L24QFYrKjDINaFbXk96iXZhe415Ero70819n7UNDcyL5nAVa-u12RicKM22oUZ4Qv4Y_Y1LgWHkRSgVnAe4AGjWBQICgmlkgnY0gmlwhKwSXiqKbXVsdGlhZGRyc5YACASsEl4qBv9WAAoErBJeKgb_V90DgnJzhQADAQAAiXNlY3AyNTZrMaEDnHP6eYJIoUJo72zcbX8vJK7GyAkXzntC0tFBn8vMOaODdGNwgv9Wg3VkcIL_WIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-05_11-56-42__e97888a7-fd38-49f6-8050-0a707632a216__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.204.234
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['44107', '44108', '44109', '44110', '44111']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 44107:44107 -p 44108:44108 -p 44109:44109 -p 44110:44110 -p 44111:44111 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=44109 --rest-port=44107 --tcp-port=44108 --discv5-udp-port=44110 --rest-address=0.0.0.0 --nat=extip:172.18.204.234 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=59ed5dbc8e4e12d86dc287a7ccddead66f678fcfcf167568e56d65feec22cada --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=44111 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QFYrKjDINaFbXk96iXZhe415Ero70819n7UNDcyL5nAVa-u12RicKM22oUZ4Qv4Y_Y1LgWHkRSgVnAe4AGjWBQICgmlkgnY0gmlwhKwSXiqKbXVsdGlhZGRyc5YACASsEl4qBv9WAAoErBJeKgb_V90DgnJzhQADAQAAiXNlY3AyNTZrMaEDnHP6eYJIoUJo72zcbX8vJK7GyAkXzntC0tFBn8vMOaODdGNwgv9Wg3VkcIL_WIV3YWt1MgU --filternode=/ip4/172.18.94.42/tcp/65366/p2p/16Uiu2HAmPBiXJu4GFRbELho2hAXGmPP1zEJ7x5JbvWLkXN5S3jzr
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.204.234 waku daeed4c6da2bca639fbe8e68a8444765d368ffbd9d6662e30619d06a4556d9f2
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID daeed4c6da2b. Setting up logs at ./log/docker/node2_2024-12-05_11-56-42__e97888a7-fd38-49f6-8050-0a707632a216__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 44107
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:44107/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:44107/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.204.234/tcp/44108/p2p/16Uiu2HAm4SqgUFsafYeFvuHL7T2xMr6CuPXH2wKA4gtnYXULMfAB","/ip4/172.18.204.234/tcp/44109/ws/p2p/16Uiu2HAm4SqgUFsafYeFvuHL7T2xMr6CuPXH2wKA4gtnYXULMfAB"],"enrUri":"enr:-L24QMDegNW-Ex5JY5UoCw-IkP24jRmfV2EGyIosYoDJCwfcSrqCAlB5yM_4TDrvpThg0cukIgoBq0_o4k8-rSIWBpgCgmlkgnY0gmlwhKwSzOqKbXVsdGlhZGRyc5YACASsEszqBqxMAAoErBLM6gasTd0DgnJzhQADAQAAiXNlY3AyNTZrMaEChgW7g5wCPVkJR0fIz1zgFfEfD7Iv9smahrjMq7YZAJyDdGNwgqxMg3VkcIKsToV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:44107/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.94.42/tcp/65366/p2p/16Uiu2HAmPBiXJu4GFRbELho2hAXGmPP1zEJ7x5JbvWLkXN5S3jzr"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:65365/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:44107/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "f09db798-de2a-4b40-b1d0-d3ae7921dbfa", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"f09db798-de2a-4b40-b1d0-d3ae7921dbfa","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:44107/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:44107/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id e80df3452d89
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id daeed4c6da2b
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container e80df3452d89. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.