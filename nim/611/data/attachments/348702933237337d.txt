[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_invalid_request_id with id: 2025-01-09_04-05-55__8474a113-4dbc-4938-8435-6517c8a9e83c
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-09_04-05-55__8474a113-4dbc-4938-8435-6517c8a9e83c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.67.197
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['21907', '21908', '21909', '21910', '21911']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 21907:21907 -p 21908:21908 -p 21909:21909 -p 21910:21910 -p 21911:21911 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=21909 --rest-port=21907 --tcp-port=21908 --discv5-udp-port=21910 --rest-address=0.0.0.0 --nat=extip:172.18.67.197 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=be4ce42166cb5bffb828db1bb6dad4d930bddd2593f8aaff19278cc6b9e9affb --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=21911 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.67.197 waku ffec87784b8992f6dc02ad43a72bf5d1754cd7b89299e3d80d29e05ddafe1431
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID ffec87784b89. Setting up logs at ./log/docker/node1_2025-01-09_04-05-55__8474a113-4dbc-4938-8435-6517c8a9e83c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 21907
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 41ad8a09de0d. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:21907/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:21907/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.67.197/tcp/21908/p2p/16Uiu2HAm5qHhXvaHiHes7DZVGetqKwLbhBBoePe1awXb25c9XbN5","/ip4/172.18.67.197/tcp/21909/ws/p2p/16Uiu2HAm5qHhXvaHiHes7DZVGetqKwLbhBBoePe1awXb25c9XbN5"],"enrUri":"enr:-L24QEVbVAaEE0tfspCd_qFTFxj1q3PLjvx5BaarcO4xnv-xCvP_t9S-xA7ziR8_cO8Z6LR17sf9lB2aViz4iNJK0J0CgmlkgnY0gmlwhKwSQ8WKbXVsdGlhZGRyc5YACASsEkPFBlWUAAoErBJDxQZVld0DgnJzhQADAQAAiXNlY3AyNTZrMaECmqGdwN6b1N0dmIy85G7GEHVSS9VgdCwIlQ0yyhTCox6DdGNwglWUg3VkcIJVloV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-09_04-05-55__8474a113-4dbc-4938-8435-6517c8a9e83c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.147.112
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['50787', '50788', '50789', '50790', '50791']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 50787:50787 -p 50788:50788 -p 50789:50789 -p 50790:50790 -p 50791:50791 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=50789 --rest-port=50787 --tcp-port=50788 --discv5-udp-port=50790 --rest-address=0.0.0.0 --nat=extip:172.18.147.112 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=eadd0a7fd4aac52bd1cd725b07ae5f977bcf1bafe1dc8b0efe9b0a1ab8f1a8a7 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=50791 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QEVbVAaEE0tfspCd_qFTFxj1q3PLjvx5BaarcO4xnv-xCvP_t9S-xA7ziR8_cO8Z6LR17sf9lB2aViz4iNJK0J0CgmlkgnY0gmlwhKwSQ8WKbXVsdGlhZGRyc5YACASsEkPFBlWUAAoErBJDxQZVld0DgnJzhQADAQAAiXNlY3AyNTZrMaECmqGdwN6b1N0dmIy85G7GEHVSS9VgdCwIlQ0yyhTCox6DdGNwglWUg3VkcIJVloV3YWt1MgU --filternode=/ip4/172.18.67.197/tcp/21908/p2p/16Uiu2HAm5qHhXvaHiHes7DZVGetqKwLbhBBoePe1awXb25c9XbN5
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.147.112 waku 7f858277d8f7d09926314e4febe4dc70c6770ecdca584398434e912c18e8922f
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 7f858277d8f7. Setting up logs at ./log/docker/node2_2025-01-09_04-05-55__8474a113-4dbc-4938-8435-6517c8a9e83c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 50787
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:50787/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:50787/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.147.112/tcp/50788/p2p/16Uiu2HAmAh6GXbwLq49KQ7cXP6BK5xU4kXLK88dBXaDZgp1Kkc82","/ip4/172.18.147.112/tcp/50789/ws/p2p/16Uiu2HAmAh6GXbwLq49KQ7cXP6BK5xU4kXLK88dBXaDZgp1Kkc82"],"enrUri":"enr:-L24QIHAxjpG--_B5sF5te3S4qaLitGD7HVnnSShxndSX6JrWqPn18JTzNu8_hbMT0GPZgu4ph-9StAt9JfLWbAKUpoCgmlkgnY0gmlwhKwSk3CKbXVsdGlhZGRyc5YACASsEpNwBsZkAAoErBKTcAbGZd0DgnJzhQADAQAAiXNlY3AyNTZrMaEC4tJ6qnT_RMfM_UMmm0oC-Qldx5DIi9aAvZ41YgAgCJuDdGNwgsZkg3VkcILGZoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:50787/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.67.197/tcp/21908/p2p/16Uiu2HAm5qHhXvaHiHes7DZVGetqKwLbhBBoePe1awXb25c9XbN5"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:21907/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:50787/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "2c130b19-b1b7-4f4c-b06d-7b822cd3084b", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"2c130b19-b1b7-4f4c-b06d-7b822cd3084b","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:50787/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:50787/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id ffec87784b89
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 7f858277d8f7
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container ffec87784b89. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.