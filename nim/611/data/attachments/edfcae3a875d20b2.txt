[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_invalid_request_id with id: 2025-01-09_04-07-02__dfdea8c2-740e-43a1-9f41-25ec92915b35
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-09_04-07-02__dfdea8c2-740e-43a1-9f41-25ec92915b35__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.181.200
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['40044', '40045', '40046', '40047', '40048']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 40044:40044 -p 40045:40045 -p 40046:40046 -p 40047:40047 -p 40048:40048 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=40046 --rest-port=40044 --tcp-port=40045 --discv5-udp-port=40047 --rest-address=0.0.0.0 --nat=extip:172.18.181.200 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=fb4fcd2d1777eaae9c8144948d46f22bffdbe6876de9dad19f10cbda9a1af73c --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=40048 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.181.200 waku 2405ec464f7c3e6f06cac96c9f850afad07beb9869a0b153b167d5e206d19a4a
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 2405ec464f7c. Setting up logs at ./log/docker/node1_2025-01-09_04-07-02__dfdea8c2-740e-43a1-9f41-25ec92915b35__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 40044
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 8da7177ee02c. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:40044/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:40044/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.181.200/tcp/40045/p2p/16Uiu2HAm84Jv4DnPtZhs4RoByph6PrNAA7rP2bLm3k6WfSjMH1A4","/ip4/172.18.181.200/tcp/40046/ws/p2p/16Uiu2HAm84Jv4DnPtZhs4RoByph6PrNAA7rP2bLm3k6WfSjMH1A4"],"enrUri":"enr:-L24QBCpZeKSsFnA0c2mVM1pYaND4Md1V35hfukPSpMvAasrRK1aZikoG0bfb3Ggp4B4CB3wZTsOLTJ4KBZGs0MlA1ACgmlkgnY0gmlwhKwStciKbXVsdGlhZGRyc5YACASsErXIBpxtAAoErBK1yAacbt0DgnJzhQADAQAAiXNlY3AyNTZrMaECu67qWP7EcI9nBiYskEob0lsVK0FfBpU2MT1oxFrlHE2DdGNwgpxtg3VkcIKcb4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-09_04-07-02__dfdea8c2-740e-43a1-9f41-25ec92915b35__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.125.27
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['65375', '65376', '65377', '65378', '65379']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 65375:65375 -p 65376:65376 -p 65377:65377 -p 65378:65378 -p 65379:65379 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=65377 --rest-port=65375 --tcp-port=65376 --discv5-udp-port=65378 --rest-address=0.0.0.0 --nat=extip:172.18.125.27 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e44f0a55beab39aad64c1fd45e2bcef0cd2d332ebcb1bd5cbd8e733abeed69e7 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=65379 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QBCpZeKSsFnA0c2mVM1pYaND4Md1V35hfukPSpMvAasrRK1aZikoG0bfb3Ggp4B4CB3wZTsOLTJ4KBZGs0MlA1ACgmlkgnY0gmlwhKwStciKbXVsdGlhZGRyc5YACASsErXIBpxtAAoErBK1yAacbt0DgnJzhQADAQAAiXNlY3AyNTZrMaECu67qWP7EcI9nBiYskEob0lsVK0FfBpU2MT1oxFrlHE2DdGNwgpxtg3VkcIKcb4V3YWt1MgU --filternode=/ip4/172.18.181.200/tcp/40045/p2p/16Uiu2HAm84Jv4DnPtZhs4RoByph6PrNAA7rP2bLm3k6WfSjMH1A4
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.125.27 waku 94c677c906e7ee93e39a991043e00bb503fe8328948ecbaeb662328a57d797ab
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 94c677c906e7. Setting up logs at ./log/docker/node2_2025-01-09_04-07-02__dfdea8c2-740e-43a1-9f41-25ec92915b35__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 65375
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:65375/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:65375/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.125.27/tcp/65376/p2p/16Uiu2HAmMrtNY7oCURYmkhzbt5h5k5sjvM1fvyoiepnwYvjww7vz","/ip4/172.18.125.27/tcp/65377/ws/p2p/16Uiu2HAmMrtNY7oCURYmkhzbt5h5k5sjvM1fvyoiepnwYvjww7vz"],"enrUri":"enr:-L24QDilnty-5iSoQ-0AMDx6gzSCBFNPtB68dc-CYO-5t2IJecQSe0oQvKmzC6XXi3ux8U8YOwgEQlRFe0PhHdJdqaMCgmlkgnY0gmlwhKwSfRuKbXVsdGlhZGRyc5YACASsEn0bBv9gAAoErBJ9Gwb_Yd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDiMVkY39yoEFqMcinOejfRTKSdL7iggGrDOCpbjRPGeODdGNwgv9gg3VkcIL_YoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:65375/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.181.200/tcp/40045/p2p/16Uiu2HAm84Jv4DnPtZhs4RoByph6PrNAA7rP2bLm3k6WfSjMH1A4"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:40044/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:65375/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "94e827cf-177f-4878-b881-8fafce3afadf", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"94e827cf-177f-4878-b881-8fafce3afadf","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:65375/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:65375/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 2405ec464f7c
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 94c677c906e7
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 2405ec464f7c. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.