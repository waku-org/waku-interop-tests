[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2025-01-09_04-06-32__27263c6f-cb8a-4cab-a8c8-4569d79ec580
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-09_04-06-32__27263c6f-cb8a-4cab-a8c8-4569d79ec580__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.87.47
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['21199', '21200', '21201', '21202', '21203']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 21199:21199 -p 21200:21200 -p 21201:21201 -p 21202:21202 -p 21203:21203 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=21201 --rest-port=21199 --tcp-port=21200 --discv5-udp-port=21202 --rest-address=0.0.0.0 --nat=extip:172.18.87.47 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=eb215c040aa7dbcbce2b3e6a9caebd0050cdf5f960deadec06086cf42b3ee857 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=21203 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.87.47 waku 8579af156653fc6fd00744409a4fc8ee86d879601a8b2bb230c7548744bf8ac1
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 8579af156653. Setting up logs at ./log/docker/node1_2025-01-09_04-06-32__27263c6f-cb8a-4cab-a8c8-4569d79ec580__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 21199
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 827e54e3911f. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:21199/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:21199/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.87.47/tcp/21200/p2p/16Uiu2HAmL9e1hLs9FR5GCmoKFDworrFdTLGR1Zi2vUAypC5ntnk5","/ip4/172.18.87.47/tcp/21201/ws/p2p/16Uiu2HAmL9e1hLs9FR5GCmoKFDworrFdTLGR1Zi2vUAypC5ntnk5"],"enrUri":"enr:-L24QDItspDthdOFkwu-6QFycxpCCQ7BsTsOeqF15RNonkAtSjfIV88VnLrchGL12vfdWZY5IfvymojsQ0Sl21SOgNACgmlkgnY0gmlwhKwSVy-KbXVsdGlhZGRyc5YACASsElcvBlLQAAoErBJXLwZS0d0DgnJzhQADAQAAiXNlY3AyNTZrMaEDb1in6Tjbpup760gDW7nOnQMYcU-NpgEnTNXXvJoJKZ6DdGNwglLQg3VkcIJS0oV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-09_04-06-32__27263c6f-cb8a-4cab-a8c8-4569d79ec580__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.21.103
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['31051', '31052', '31053', '31054', '31055']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 31051:31051 -p 31052:31052 -p 31053:31053 -p 31054:31054 -p 31055:31055 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=31053 --rest-port=31051 --tcp-port=31052 --discv5-udp-port=31054 --rest-address=0.0.0.0 --nat=extip:172.18.21.103 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ec1b1abcbaebef5dd26cb9436b7f84b8a506dbdd850a37f09dafdfc048d676a0 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=31055 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QDItspDthdOFkwu-6QFycxpCCQ7BsTsOeqF15RNonkAtSjfIV88VnLrchGL12vfdWZY5IfvymojsQ0Sl21SOgNACgmlkgnY0gmlwhKwSVy-KbXVsdGlhZGRyc5YACASsElcvBlLQAAoErBJXLwZS0d0DgnJzhQADAQAAiXNlY3AyNTZrMaEDb1in6Tjbpup760gDW7nOnQMYcU-NpgEnTNXXvJoJKZ6DdGNwglLQg3VkcIJS0oV3YWt1MgU --filternode=/ip4/172.18.87.47/tcp/21200/p2p/16Uiu2HAmL9e1hLs9FR5GCmoKFDworrFdTLGR1Zi2vUAypC5ntnk5
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.21.103 waku c09cda8094955a86b1dc6fd3dafb29b3b10db6b4adc8ea9c268ec6a66f7323af
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID c09cda809495. Setting up logs at ./log/docker/node2_2025-01-09_04-06-32__27263c6f-cb8a-4cab-a8c8-4569d79ec580__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 31051
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:31051/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:31051/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.21.103/tcp/31052/p2p/16Uiu2HAmDGKwxU55ZpgvsucPYoVXJbeQvGXrpLcmtWh1EeqWTCkt","/ip4/172.18.21.103/tcp/31053/ws/p2p/16Uiu2HAmDGKwxU55ZpgvsucPYoVXJbeQvGXrpLcmtWh1EeqWTCkt"],"enrUri":"enr:-L24QHh0AlzQhcPsJlqr-H2BTu_b0M67-lic_4ArLRInaGYDOOqW8Tl6Gah9hZ9ETyC9QG3Mw16hcogRUIav1u70xjoCgmlkgnY0gmlwhKwSFWeKbXVsdGlhZGRyc5YACASsEhVnBnlMAAoErBIVZwZ5Td0DgnJzhQADAQAAiXNlY3AyNTZrMaEDCQ18ziZFrDkFM750xW0hqx4TbXz6mpBB8mI6JgwWVx2DdGNwgnlMg3VkcIJ5ToV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:31051/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.87.47/tcp/21200/p2p/16Uiu2HAmL9e1hLs9FR5GCmoKFDworrFdTLGR1Zi2vUAypC5ntnk5"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:21199/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:31051/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "7d52f6fb-0926-4184-803c-31c8a9562f6d", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"7d52f6fb-0926-4184-803c-31c8a9562f6d","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:31051/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:31051/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 8579af156653
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id c09cda809495
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 8579af156653. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.