[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_all_with_invalid_request_id with id: 2024-11-24_04-13-15__e8dd96d6-ca50-4569-bf3c-0a6cc2891c8c
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-24_04-13-15__e8dd96d6-ca50-4569-bf3c-0a6cc2891c8c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.190.143
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['56781', '56782', '56783', '56784', '56785']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 56781:56781 -p 56782:56782 -p 56783:56783 -p 56784:56784 -p 56785:56785 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=56783 --rest-port=56781 --tcp-port=56782 --discv5-udp-port=56784 --rest-address=0.0.0.0 --nat=extip:172.18.190.143 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=f11e0b1ca6edff1286d60bcafab2eab90271382002486e08a0d131ebea8af245 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=56785 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.190.143 waku 997a32cb054ac96a8add1c09020bcf6d19b6cb8d945e0cc88638dbc82d570854
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 997a32cb054a. Setting up logs at ./log/docker/node1_2024-11-24_04-13-15__e8dd96d6-ca50-4569-bf3c-0a6cc2891c8c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 56781
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 4ae1cee30273. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:56781/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:56781/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.190.143/tcp/56782/p2p/16Uiu2HAmUkzChxMoth9gotppKUrc79r2VjijCp5tAdCcRsp8Y4QF","/ip4/172.18.190.143/tcp/56783/ws/p2p/16Uiu2HAmUkzChxMoth9gotppKUrc79r2VjijCp5tAdCcRsp8Y4QF"],"enrUri":"enr:-L24QMEUJRlFDFirwsOkMdhHvovNk-KWpXxeLO84ohDsBt2maQjTBmYK6EgAnjv9J0s1f8dPHOF9jeFRhea-E9LYRA8CgmlkgnY0gmlwhKwSvo-KbXVsdGlhZGRyc5YACASsEr6PBt3OAAoErBK-jwbdz90DgnJzhQADAQAAiXNlY3AyNTZrMaED70RO8C_OFIPsrkpad5U3CSnMofIARLnHaLQke2rcKNiDdGNwgt3Og3VkcILd0IV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-24_04-13-15__e8dd96d6-ca50-4569-bf3c-0a6cc2891c8c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.159.24
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['26950', '26951', '26952', '26953', '26954']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 26950:26950 -p 26951:26951 -p 26952:26952 -p 26953:26953 -p 26954:26954 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=26952 --rest-port=26950 --tcp-port=26951 --discv5-udp-port=26953 --rest-address=0.0.0.0 --nat=extip:172.18.159.24 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=adec7eeaaecefb5c2db5de03bcdbc4dd9f567ada806b794568ca7c9fd1cadcde --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=26954 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QMEUJRlFDFirwsOkMdhHvovNk-KWpXxeLO84ohDsBt2maQjTBmYK6EgAnjv9J0s1f8dPHOF9jeFRhea-E9LYRA8CgmlkgnY0gmlwhKwSvo-KbXVsdGlhZGRyc5YACASsEr6PBt3OAAoErBK-jwbdz90DgnJzhQADAQAAiXNlY3AyNTZrMaED70RO8C_OFIPsrkpad5U3CSnMofIARLnHaLQke2rcKNiDdGNwgt3Og3VkcILd0IV3YWt1MgU --filternode=/ip4/172.18.190.143/tcp/56782/p2p/16Uiu2HAmUkzChxMoth9gotppKUrc79r2VjijCp5tAdCcRsp8Y4QF
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.159.24 waku 7179f4da5d07a41f972c17952088e8c4426ad5e71214bb54639c96e7c8e5ed02
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 7179f4da5d07. Setting up logs at ./log/docker/node2_2024-11-24_04-13-15__e8dd96d6-ca50-4569-bf3c-0a6cc2891c8c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 26950
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:26950/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:26950/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.159.24/tcp/26951/p2p/16Uiu2HAmEqN3RZ2LonGCaPGuRvri2spWyimkufLPJ6BkPjuEiSof","/ip4/172.18.159.24/tcp/26952/ws/p2p/16Uiu2HAmEqN3RZ2LonGCaPGuRvri2spWyimkufLPJ6BkPjuEiSof"],"enrUri":"enr:-L24QJ2eO_IztaI3wowr7RnPD9fTDZLa8YDBvlOri-Tk79pLOB-jWJbrOc1_HOKFhy4uw-kCb6NwAbtOOq_Ine7KqfICgmlkgnY0gmlwhKwSnxiKbXVsdGlhZGRyc5YACASsEp8YBmlHAAoErBKfGAZpSN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDIF-1iayJ2i_WRGZP1wlgtY5fjPpuIn4hJJtH_Uqqak6DdGNwgmlHg3VkcIJpSYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:26950/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.190.143/tcp/56782/p2p/16Uiu2HAmUkzChxMoth9gotppKUrc79r2VjijCp5tAdCcRsp8Y4QF"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:56781/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:26950/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "d89146d2-097b-43af-b32a-cfbd8d75fcfd", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"d89146d2-097b-43af-b32a-cfbd8d75fcfd","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:26950/filter/v2/subscriptions/all" -H "Content-Type: application/json" -d '{"requestId": 1}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:26950/filter/v2/subscriptions/all. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 997a32cb054a
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 7179f4da5d07
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 997a32cb054a. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.