[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2024-11-24_04-12-17__fa2b88ee-3bfa-49e1-bbd6-92c27650a121
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-24_04-12-17__fa2b88ee-3bfa-49e1-bbd6-92c27650a121__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.22.239
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['25108', '25109', '25110', '25111', '25112']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 25108:25108 -p 25109:25109 -p 25110:25110 -p 25111:25111 -p 25112:25112 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=25110 --rest-port=25108 --tcp-port=25109 --discv5-udp-port=25111 --rest-address=0.0.0.0 --nat=extip:172.18.22.239 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=9b002b9e17a9b01c7a74bc69f7fadbe915cb0bd7462f55b229fdd23bb9d8abda --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=25112 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.22.239 waku fd6b97cd2ac5d2055087867e9809ec342d31d3f1dccce040736a0fb39fc8a067
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 0e2ee9e24244. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID fd6b97cd2ac5. Setting up logs at ./log/docker/node1_2024-11-24_04-12-17__fa2b88ee-3bfa-49e1-bbd6-92c27650a121__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 25108
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:25108/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:25108/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.22.239/tcp/25109/p2p/16Uiu2HAm6UXaSND7grTzYTsXMC9ci2SDxCQUhk5gne5bHtKYJyVE","/ip4/172.18.22.239/tcp/25110/ws/p2p/16Uiu2HAm6UXaSND7grTzYTsXMC9ci2SDxCQUhk5gne5bHtKYJyVE"],"enrUri":"enr:-L24QOV3C2WMznlGoQnyZ6mR-fsH5LuGWmTEwoZcMVu6tv4hDMwvFY9U7EqkY5nkR8fqlX0L_ZCvs844hKMOyYtNUt4CgmlkgnY0gmlwhKwSFu-KbXVsdGlhZGRyc5YACASsEhbvBmIVAAoErBIW7wZiFt0DgnJzhQADAQAAiXNlY3AyNTZrMaECpCvMNKE4KBvXr9ZNFIjyfF9zwc0Rvbml0eOCaivgOd2DdGNwgmIVg3VkcIJiF4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-24_04-12-17__fa2b88ee-3bfa-49e1-bbd6-92c27650a121__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.213.235
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['48671', '48672', '48673', '48674', '48675']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 48671:48671 -p 48672:48672 -p 48673:48673 -p 48674:48674 -p 48675:48675 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=48673 --rest-port=48671 --tcp-port=48672 --discv5-udp-port=48674 --rest-address=0.0.0.0 --nat=extip:172.18.213.235 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=a3e1ec02b4ea51cea89adf3addfedc6c95f1dbfc5c395b9e3dfd7bd734c3e1ec --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=48675 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QOV3C2WMznlGoQnyZ6mR-fsH5LuGWmTEwoZcMVu6tv4hDMwvFY9U7EqkY5nkR8fqlX0L_ZCvs844hKMOyYtNUt4CgmlkgnY0gmlwhKwSFu-KbXVsdGlhZGRyc5YACASsEhbvBmIVAAoErBIW7wZiFt0DgnJzhQADAQAAiXNlY3AyNTZrMaECpCvMNKE4KBvXr9ZNFIjyfF9zwc0Rvbml0eOCaivgOd2DdGNwgmIVg3VkcIJiF4V3YWt1MgU --filternode=/ip4/172.18.22.239/tcp/25109/p2p/16Uiu2HAm6UXaSND7grTzYTsXMC9ci2SDxCQUhk5gne5bHtKYJyVE
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.213.235 waku 1680f172afc132986fba787866efed6125c0231178c02a3c3b451fc8745622d6
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 1680f172afc1. Setting up logs at ./log/docker/node2_2024-11-24_04-12-17__fa2b88ee-3bfa-49e1-bbd6-92c27650a121__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 48671
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:48671/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:48671/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.213.235/tcp/48672/p2p/16Uiu2HAmLRkYYHFuHJeqZbjwDdkfsiM5vhvNzgNsmvjoi7C5fPxK","/ip4/172.18.213.235/tcp/48673/ws/p2p/16Uiu2HAmLRkYYHFuHJeqZbjwDdkfsiM5vhvNzgNsmvjoi7C5fPxK"],"enrUri":"enr:-L24QAF6sbbi4CTyxba0hwQlj8GrbVMbZ13x2BISyMBfwt20G_phyWaCQqkMFXKnI5__7R5RQhwO9HOl9MehjFl5EsICgmlkgnY0gmlwhKwS1euKbXVsdGlhZGRyc5YACASsEtXrBr4gAAoErBLV6wa-Id0DgnJzhQADAQAAiXNlY3AyNTZrMaEDc3lVmO-urlzqSnkhq1eiL0WAYA6CmnstP9BjJ3EFy7CDdGNwgr4gg3VkcIK-IoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:48671/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.22.239/tcp/25109/p2p/16Uiu2HAm6UXaSND7grTzYTsXMC9ci2SDxCQUhk5gne5bHtKYJyVE"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:25108/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:48671/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1dd7df86-82db-48a2-8a7c-8b89e4a1671c", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"1dd7df86-82db-48a2-8a7c-8b89e4a1671c","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:48671/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:48671/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id fd6b97cd2ac5
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 1680f172afc1
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container fd6b97cd2ac5. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.