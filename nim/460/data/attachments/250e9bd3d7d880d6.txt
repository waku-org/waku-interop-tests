[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_pubsub_topic_list_instead_of_string with id: 2024-11-24_04-12-06__a0f96c55-04ee-4343-b6d6-9f2364b1a731
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-24_04-12-06__a0f96c55-04ee-4343-b6d6-9f2364b1a731__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.186.49
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['35080', '35081', '35082', '35083', '35084']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 35080:35080 -p 35081:35081 -p 35082:35082 -p 35083:35083 -p 35084:35084 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=35082 --rest-port=35080 --tcp-port=35081 --discv5-udp-port=35083 --rest-address=0.0.0.0 --nat=extip:172.18.186.49 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=398bddcd37986ace4419035206d2a74e115d64135f043377eca6b578d24daeb8 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=35084 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.186.49 waku 2b9c53542a4856a0b20b2494198951ab0c985b9037598b3e21cd0f375dac4bea
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 180b97cb2a8e. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 2b9c53542a48. Setting up logs at ./log/docker/node1_2024-11-24_04-12-06__a0f96c55-04ee-4343-b6d6-9f2364b1a731__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 35080
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:35080/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:35080/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.186.49/tcp/35081/p2p/16Uiu2HAkxznU4qGJ65FG4pRjTrCiDoFB5aRGTt6hLHY71Lps5bLB","/ip4/172.18.186.49/tcp/35082/ws/p2p/16Uiu2HAkxznU4qGJ65FG4pRjTrCiDoFB5aRGTt6hLHY71Lps5bLB"],"enrUri":"enr:-L24QOKPvw0C4iavSmnt2_GuTylcnMh3eJGPRHdx7yhlGHQIE8WqbohfSZqwgvMxl1IiSsCSZwRVmkAgk6pbvZml1j8CgmlkgnY0gmlwhKwSujGKbXVsdGlhZGRyc5YACASsEroxBokJAAoErBK6MQaJCt0DgnJzhQADAQAAiXNlY3AyNTZrMaECNQ6QGVLL88y5INRjV7hQtXQh8TPtsQKYTUnF_6TNTACDdGNwgokJg3VkcIKJC4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-24_04-12-06__a0f96c55-04ee-4343-b6d6-9f2364b1a731__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.181.28
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['33214', '33215', '33216', '33217', '33218']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 33214:33214 -p 33215:33215 -p 33216:33216 -p 33217:33217 -p 33218:33218 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=33216 --rest-port=33214 --tcp-port=33215 --discv5-udp-port=33217 --rest-address=0.0.0.0 --nat=extip:172.18.181.28 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ddf051af8d9eace60ebbfc37886eed248d8ab6bcd64307d1ad018d3bb97febea --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=33218 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QOKPvw0C4iavSmnt2_GuTylcnMh3eJGPRHdx7yhlGHQIE8WqbohfSZqwgvMxl1IiSsCSZwRVmkAgk6pbvZml1j8CgmlkgnY0gmlwhKwSujGKbXVsdGlhZGRyc5YACASsEroxBokJAAoErBK6MQaJCt0DgnJzhQADAQAAiXNlY3AyNTZrMaECNQ6QGVLL88y5INRjV7hQtXQh8TPtsQKYTUnF_6TNTACDdGNwgokJg3VkcIKJC4V3YWt1MgU --filternode=/ip4/172.18.186.49/tcp/35081/p2p/16Uiu2HAkxznU4qGJ65FG4pRjTrCiDoFB5aRGTt6hLHY71Lps5bLB
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.181.28 waku 37962015a17f852687b5a2dd8c97d4b05406db1043df9f2d25bdc75633d67590
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 37962015a17f. Setting up logs at ./log/docker/node2_2024-11-24_04-12-06__a0f96c55-04ee-4343-b6d6-9f2364b1a731__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 33214
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33214/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33214/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.181.28/tcp/33215/p2p/16Uiu2HAm7pvtcDR8yVddBdaPUasfVaJK5QAWxdesASm1sKEC9wL1","/ip4/172.18.181.28/tcp/33216/ws/p2p/16Uiu2HAm7pvtcDR8yVddBdaPUasfVaJK5QAWxdesASm1sKEC9wL1"],"enrUri":"enr:-L24QCWdJiQLi4Y9Ihu4MtBH8r6aPji1e18VRtuVDoHOd5FXCjfvowGFeSe5dHPTm9S4VK-vuQyQfjoloyzZQuNgOI0CgmlkgnY0gmlwhKwStRyKbXVsdGlhZGRyc5YACASsErUcBoG_AAoErBK1HAaBwN0DgnJzhQADAQAAiXNlY3AyNTZrMaECuEF2EFsz1zuZQ5cxPp-SmN5PliGDM93umDuUw3yq5XaDdGNwgoG_g3VkcIKBwYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:33214/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.186.49/tcp/35081/p2p/16Uiu2HAkxznU4qGJ65FG4pRjTrCiDoFB5aRGTt6hLHY71Lps5bLB"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:35080/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:33214/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "8010779c-588b-4ff3-b91f-c75ed03c951d", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"8010779c-588b-4ff3-b91f-c75ed03c951d","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:33214/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": ["/waku/2/rs/3/1"]}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:33214/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 2b9c53542a48
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 37962015a17f
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 2b9c53542a48. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.