[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_no_content_topic with id: 2024-11-10_04-09-08__e2a03acd-6e50-4dff-bc35-ee513ed18d28
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-10_04-09-08__e2a03acd-6e50-4dff-bc35-ee513ed18d28__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.65.115
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['31448', '31449', '31450', '31451', '31452']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 31448:31448 -p 31449:31449 -p 31450:31450 -p 31451:31451 -p 31452:31452 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=31450 --rest-port=31448 --tcp-port=31449 --discv5-udp-port=31451 --rest-address=0.0.0.0 --nat=extip:172.18.65.115 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ae1a5dafaad80fbfb6a51db15d6ff9fbff61fdeaecfd87274f986e2fc344d10f --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=31452 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.65.115 waku d84a1dd06f3712c2f237966c0e38d426ab306cf51b7b23b898d3f379b59c5412
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID d84a1dd06f37. Setting up logs at ./log/docker/node1_2024-11-10_04-09-08__e2a03acd-6e50-4dff-bc35-ee513ed18d28__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 31448
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 25916c630a26. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:31448/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:31448/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.65.115/tcp/31449/p2p/16Uiu2HAkyEbUqdQ97acaz1PsgusBRYp1UapuB8GxebaspZRhwkyA","/ip4/172.18.65.115/tcp/31450/ws/p2p/16Uiu2HAkyEbUqdQ97acaz1PsgusBRYp1UapuB8GxebaspZRhwkyA"],"enrUri":"enr:-L24QMUH0jCvSJgTn02T2I9YR1CjhTNKMdTAAafx-xlHC30WZhRgumSEAstJw1Jjdmsyj1ve3G8zvatD2qV4sD2XmgACgmlkgnY0gmlwhKwSQXOKbXVsdGlhZGRyc5YACASsEkFzBnrZAAoErBJBcwZ62t0DgnJzhQADAQAAiXNlY3AyNTZrMaECOJhFgwQEHM-M0zYizuiOSAF9x2mdqdoNhAcTnSVmeTWDdGNwgnrZg3VkcIJ624V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-10_04-09-08__e2a03acd-6e50-4dff-bc35-ee513ed18d28__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.250.7
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['58374', '58375', '58376', '58377', '58378']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 58374:58374 -p 58375:58375 -p 58376:58376 -p 58377:58377 -p 58378:58378 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=58376 --rest-port=58374 --tcp-port=58375 --discv5-udp-port=58377 --rest-address=0.0.0.0 --nat=extip:172.18.250.7 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=7c66f3febdf29f3f13ccc03f791ded02c5d9f7c8a6cabfd35ccbf91da60ae522 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=58378 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QMUH0jCvSJgTn02T2I9YR1CjhTNKMdTAAafx-xlHC30WZhRgumSEAstJw1Jjdmsyj1ve3G8zvatD2qV4sD2XmgACgmlkgnY0gmlwhKwSQXOKbXVsdGlhZGRyc5YACASsEkFzBnrZAAoErBJBcwZ62t0DgnJzhQADAQAAiXNlY3AyNTZrMaECOJhFgwQEHM-M0zYizuiOSAF9x2mdqdoNhAcTnSVmeTWDdGNwgnrZg3VkcIJ624V3YWt1MgU --filternode=/ip4/172.18.65.115/tcp/31449/p2p/16Uiu2HAkyEbUqdQ97acaz1PsgusBRYp1UapuB8GxebaspZRhwkyA
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.250.7 waku c52f28d1e5f7beacefaf477bf5b9359a3829de91e66d1fe7fede28f52127692a
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID c52f28d1e5f7. Setting up logs at ./log/docker/node2_2024-11-10_04-09-08__e2a03acd-6e50-4dff-bc35-ee513ed18d28__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 58374
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:58374/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:58374/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.250.7/tcp/58375/p2p/16Uiu2HAkvMG9KrApH3wtkigUyFASnDD8iriBP8YCziRSvsNMAt2r","/ip4/172.18.250.7/tcp/58376/ws/p2p/16Uiu2HAkvMG9KrApH3wtkigUyFASnDD8iriBP8YCziRSvsNMAt2r"],"enrUri":"enr:-L24QEAxfhg8dj1KxRbAuJGyZVW-VCzH4UE73C64IWIydiH9Zxbtpq4yTKDfP7Ir0xYQ80COaR-Ybw9Lwkevo5tHWxECgmlkgnY0gmlwhKwS-geKbXVsdGlhZGRyc5YACASsEvoHBuQHAAoErBL6BwbkCN0DgnJzhQADAQAAiXNlY3AyNTZrMaECDbppomAqa0_kAr_ZXIxPw4EgiPqftRMqbugokMUiP1-DdGNwguQHg3VkcILkCYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:58374/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.65.115/tcp/31449/p2p/16Uiu2HAkyEbUqdQ97acaz1PsgusBRYp1UapuB8GxebaspZRhwkyA"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:31448/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:58374/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "317eb50d-8263-49df-a989-c6512b88a411", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"317eb50d-8263-49df-a989-c6512b88a411","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:58374/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:58374/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id d84a1dd06f37
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id c52f28d1e5f7
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container d84a1dd06f37. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.