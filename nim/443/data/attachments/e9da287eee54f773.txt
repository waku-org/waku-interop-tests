[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_content_topic_string_instead_of_list with id: 2024-11-10_04-09-45__28959f08-3455-47dd-8237-4633c19f67b4
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-10_04-09-45__28959f08-3455-47dd-8237-4633c19f67b4__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.242.127
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['51168', '51169', '51170', '51171', '51172']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 51168:51168 -p 51169:51169 -p 51170:51170 -p 51171:51171 -p 51172:51172 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=51170 --rest-port=51168 --tcp-port=51169 --discv5-udp-port=51171 --rest-address=0.0.0.0 --nat=extip:172.18.242.127 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=714fb0feee51c4d1349a1ee2d17d10de69722b9b30e19dd836fc6fecfa4ec6bb --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=51172 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.242.127 waku f56435971409b00a6f6e278b86fd036c1c78b7089965edd5691f0cadd3c4cbe6
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID f56435971409. Setting up logs at ./log/docker/node1_2024-11-10_04-09-45__28959f08-3455-47dd-8237-4633c19f67b4__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 51168
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container afb532f78527. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:51168/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:51168/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.242.127/tcp/51169/p2p/16Uiu2HAkvm3rBADBj9BzBCnMVsQ9GBLSRJV28RbENVAcjehmwuPX","/ip4/172.18.242.127/tcp/51170/ws/p2p/16Uiu2HAkvm3rBADBj9BzBCnMVsQ9GBLSRJV28RbENVAcjehmwuPX"],"enrUri":"enr:-L24QAIqbNZUKPo6mI7wNpQtPn-NajKTcVZp7_e-rxAPteRIQUTQarnEQR72UVIX4D8U_fFRljOps-gk_5croSvM9QQCgmlkgnY0gmlwhKwS8n-KbXVsdGlhZGRyc5YACASsEvJ_BsfhAAoErBLyfwbH4t0DgnJzhQADAQAAiXNlY3AyNTZrMaECE9JzA6xxK4ITYSRAQcsi4CW5UGJcm9hnINAS4LNhKdqDdGNwgsfhg3VkcILH44V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-10_04-09-45__28959f08-3455-47dd-8237-4633c19f67b4__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.120.215
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['8330', '8331', '8332', '8333', '8334']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 8330:8330 -p 8331:8331 -p 8332:8332 -p 8333:8333 -p 8334:8334 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=8332 --rest-port=8330 --tcp-port=8331 --discv5-udp-port=8333 --rest-address=0.0.0.0 --nat=extip:172.18.120.215 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=a439f4f4cddcdcabcc38cdbf740a1e381cd1afcf87c2ff02cbd6cd1b49940c62 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=8334 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QAIqbNZUKPo6mI7wNpQtPn-NajKTcVZp7_e-rxAPteRIQUTQarnEQR72UVIX4D8U_fFRljOps-gk_5croSvM9QQCgmlkgnY0gmlwhKwS8n-KbXVsdGlhZGRyc5YACASsEvJ_BsfhAAoErBLyfwbH4t0DgnJzhQADAQAAiXNlY3AyNTZrMaECE9JzA6xxK4ITYSRAQcsi4CW5UGJcm9hnINAS4LNhKdqDdGNwgsfhg3VkcILH44V3YWt1MgU --filternode=/ip4/172.18.242.127/tcp/51169/p2p/16Uiu2HAkvm3rBADBj9BzBCnMVsQ9GBLSRJV28RbENVAcjehmwuPX
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.120.215 waku d871d8a8fcd3bd0b25aa5a1a4d3e262aed51f4c0fe53ac03ac7d7a03298b374e
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID d871d8a8fcd3. Setting up logs at ./log/docker/node2_2024-11-10_04-09-45__28959f08-3455-47dd-8237-4633c19f67b4__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 8330
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8330/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8330/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.120.215/tcp/8331/p2p/16Uiu2HAmFU2cEAAQtRnn4858iPrZ7hNX2kgSu1vtWCZBH6L3Qv66","/ip4/172.18.120.215/tcp/8332/ws/p2p/16Uiu2HAmFU2cEAAQtRnn4858iPrZ7hNX2kgSu1vtWCZBH6L3Qv66"],"enrUri":"enr:-L24QHvEY6rJRhl-7bOZXkmQjlMS4oPZT9SfYiuJEXvZXH8CTQjn-sM9J4nuPzOk_Ylw_SFh7rUn_Ez2pbb15So_HxoCgmlkgnY0gmlwhKwSeNeKbXVsdGlhZGRyc5YACASsEnjXBiCLAAoErBJ41wYgjN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDKcQ5eKa6G5msJL4apnYO5_MF4xuwEu1yao0nafevXXODdGNwgiCLg3VkcIIgjYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8330/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.242.127/tcp/51169/p2p/16Uiu2HAkvm3rBADBj9BzBCnMVsQ9GBLSRJV28RbENVAcjehmwuPX"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:51168/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8330/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "b2072aaf-a7c3-466f-8876-6b50d5322667", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"b2072aaf-a7c3-466f-8876-6b50d5322667","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:8330/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": "/test/1/waku-filter/proto", "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:8330/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id f56435971409
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id d871d8a8fcd3
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container f56435971409. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.