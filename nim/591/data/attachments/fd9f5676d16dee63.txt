[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2024-12-29_04-10-47__f8db2570-5deb-4689-a0d3-9964bd51df54
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-29_04-10-47__f8db2570-5deb-4689-a0d3-9964bd51df54__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.205.137
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['41652', '41653', '41654', '41655', '41656']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 41652:41652 -p 41653:41653 -p 41654:41654 -p 41655:41655 -p 41656:41656 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=41654 --rest-port=41652 --tcp-port=41653 --discv5-udp-port=41655 --rest-address=0.0.0.0 --nat=extip:172.18.205.137 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=df0effde6c2f676da1eb0c54d6e62a6fb5ac2feab55d9ca1fe93fa61fadc13ab --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=41656 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.205.137 waku 705e1cfb34bd25b4791130470de7ed2aefa824c4cd0476faec48498228a872a5
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 705e1cfb34bd. Setting up logs at ./log/docker/node1_2024-12-29_04-10-47__f8db2570-5deb-4689-a0d3-9964bd51df54__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 41652
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container ad1176aaa091. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41652/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41652/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.205.137/tcp/41653/p2p/16Uiu2HAm31kB4jy7YZ2tHerGm6UhgtsqxQwazBvzgnkSGiAKGnJb","/ip4/172.18.205.137/tcp/41654/ws/p2p/16Uiu2HAm31kB4jy7YZ2tHerGm6UhgtsqxQwazBvzgnkSGiAKGnJb"],"enrUri":"enr:-L24QC72ppYcC1xftf6ikksDJgyqiw1toRTeQoaAX-WHrTGVNYo3JFV45MYmNXpElbsg7eO5Lx3OoMjyXWeo8VOJ7KMCgmlkgnY0gmlwhKwSzYmKbXVsdGlhZGRyc5YACASsEs2JBqK1AAoErBLNiQaitt0DgnJzhQADAQAAiXNlY3AyNTZrMaECcLxMbcOExW8TIVNeEudUrf4PrK3vRvtGR5y-6Nkx-iiDdGNwgqK1g3VkcIKit4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-29_04-10-47__f8db2570-5deb-4689-a0d3-9964bd51df54__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.158.28
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['40169', '40170', '40171', '40172', '40173']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 40169:40169 -p 40170:40170 -p 40171:40171 -p 40172:40172 -p 40173:40173 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=40171 --rest-port=40169 --tcp-port=40170 --discv5-udp-port=40172 --rest-address=0.0.0.0 --nat=extip:172.18.158.28 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b8efeda4aafeecdb5c1dded79e8d6ebf50315e4ff1690aedda3697ca1dfad7fc --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=40173 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QC72ppYcC1xftf6ikksDJgyqiw1toRTeQoaAX-WHrTGVNYo3JFV45MYmNXpElbsg7eO5Lx3OoMjyXWeo8VOJ7KMCgmlkgnY0gmlwhKwSzYmKbXVsdGlhZGRyc5YACASsEs2JBqK1AAoErBLNiQaitt0DgnJzhQADAQAAiXNlY3AyNTZrMaECcLxMbcOExW8TIVNeEudUrf4PrK3vRvtGR5y-6Nkx-iiDdGNwgqK1g3VkcIKit4V3YWt1MgU --filternode=/ip4/172.18.205.137/tcp/41653/p2p/16Uiu2HAm31kB4jy7YZ2tHerGm6UhgtsqxQwazBvzgnkSGiAKGnJb
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.158.28 waku 5c4b21ba25c1d70c1bb38701c672484f5df6cbdb9212d173f1d39586b7ec3272
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 5c4b21ba25c1. Setting up logs at ./log/docker/node2_2024-12-29_04-10-47__f8db2570-5deb-4689-a0d3-9964bd51df54__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 40169
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:40169/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:40169/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.158.28/tcp/40170/p2p/16Uiu2HAm5tcweBCEKGGsC1tD5FNuDGDtmsBqqXNNJdNMpjnW5KBX","/ip4/172.18.158.28/tcp/40171/ws/p2p/16Uiu2HAm5tcweBCEKGGsC1tD5FNuDGDtmsBqqXNNJdNMpjnW5KBX"],"enrUri":"enr:-L24QMp__cs8r7ekKEOT0PXf2yVrPM8wF-WbEDa1uSubMFVpRXly4aQWMBRfDdMBwvKouwXkGvJvxJ8HbbyxZcQW44oCgmlkgnY0gmlwhKwSnhyKbXVsdGlhZGRyc5YACASsEp4cBpzqAAoErBKeHAac690DgnJzhQADAQAAiXNlY3AyNTZrMaECm3wd9voBLTVzMUIYKGidCa3ZHVuO2hazkmCwi_G7sXqDdGNwgpzqg3VkcIKc7IV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:40169/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.205.137/tcp/41653/p2p/16Uiu2HAm31kB4jy7YZ2tHerGm6UhgtsqxQwazBvzgnkSGiAKGnJb"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:41652/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:40169/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "6f0205ec-f0b1-4493-9316-9934ea566a7c", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"6f0205ec-f0b1-4493-9316-9934ea566a7c","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:40169/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:40169/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 705e1cfb34bd
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 5c4b21ba25c1
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 705e1cfb34bd. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.