[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_invalid_request_id with id: 2024-12-29_04-10-39__df7a3b51-681b-463f-8cb8-54d7d73a486d
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-29_04-10-39__df7a3b51-681b-463f-8cb8-54d7d73a486d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.171.241
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['53247', '53248', '53249', '53250', '53251']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 53247:53247 -p 53248:53248 -p 53249:53249 -p 53250:53250 -p 53251:53251 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=53249 --rest-port=53247 --tcp-port=53248 --discv5-udp-port=53250 --rest-address=0.0.0.0 --nat=extip:172.18.171.241 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=06cb5fe0b0b73683e3be0fa52efef7eabd6cedae224f6942ada37e19caad7f7c --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=53251 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.171.241 waku 4ebc4621447301a085eaaa16b6ddcf6dc16db7208392f09daaec1de176b0797a
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 4ebc46214473. Setting up logs at ./log/docker/node1_2024-12-29_04-10-39__df7a3b51-681b-463f-8cb8-54d7d73a486d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 53247
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 82347fef9ff2. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:53247/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:53247/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.171.241/tcp/53248/p2p/16Uiu2HAmArJrPq29dhZ2PYTfnLhuyjg2AxszztAQRbbRw81wpxQQ","/ip4/172.18.171.241/tcp/53249/ws/p2p/16Uiu2HAmArJrPq29dhZ2PYTfnLhuyjg2AxszztAQRbbRw81wpxQQ"],"enrUri":"enr:-L24QHjbnXrXFOR_m8R1u7s2MFdZRiHN2f6bscl9--7-mnyrLAxPbNq8uVuUohMA22lt3SWAWhQ1IPlEIT9O4T8zVSsCgmlkgnY0gmlwhKwSq_GKbXVsdGlhZGRyc5YACASsEqvxBtAAAAoErBKr8QbQAd0DgnJzhQADAQAAiXNlY3AyNTZrMaEC5S7vYtAmP4_Lb0_hNRNZQZ6jSib1J0E8qfL4MDmEbYGDdGNwgtAAg3VkcILQAoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-29_04-10-39__df7a3b51-681b-463f-8cb8-54d7d73a486d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.233.67
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['34585', '34586', '34587', '34588', '34589']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 34585:34585 -p 34586:34586 -p 34587:34587 -p 34588:34588 -p 34589:34589 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=34587 --rest-port=34585 --tcp-port=34586 --discv5-udp-port=34588 --rest-address=0.0.0.0 --nat=extip:172.18.233.67 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=f60cb4147fa8a7e59eb5d5622bd967da56d8b590dfc4eff45b7b4ac127f4bfc9 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=34589 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QHjbnXrXFOR_m8R1u7s2MFdZRiHN2f6bscl9--7-mnyrLAxPbNq8uVuUohMA22lt3SWAWhQ1IPlEIT9O4T8zVSsCgmlkgnY0gmlwhKwSq_GKbXVsdGlhZGRyc5YACASsEqvxBtAAAAoErBKr8QbQAd0DgnJzhQADAQAAiXNlY3AyNTZrMaEC5S7vYtAmP4_Lb0_hNRNZQZ6jSib1J0E8qfL4MDmEbYGDdGNwgtAAg3VkcILQAoV3YWt1MgU --filternode=/ip4/172.18.171.241/tcp/53248/p2p/16Uiu2HAmArJrPq29dhZ2PYTfnLhuyjg2AxszztAQRbbRw81wpxQQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.233.67 waku 3e5205dc80f2cc5a3994b3ac0cf142aa2541ef8231abc93310e9351fdf700c99
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 3e5205dc80f2. Setting up logs at ./log/docker/node2_2024-12-29_04-10-39__df7a3b51-681b-463f-8cb8-54d7d73a486d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 34585
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:34585/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:34585/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.233.67/tcp/34586/p2p/16Uiu2HAkzGEzmnP8fkRJaHmgr4xRN5si4noBWN9B1YNztPXWJXMj","/ip4/172.18.233.67/tcp/34587/ws/p2p/16Uiu2HAkzGEzmnP8fkRJaHmgr4xRN5si4noBWN9B1YNztPXWJXMj"],"enrUri":"enr:-L24QCuy30Ba0wHaBznOvOTaAUlo3mU7v3BPA5CKIn_Am915YH4hIWEhL0h8NInlJH5AjECVf_yws31F6HR09nNk2G8CgmlkgnY0gmlwhKwS6UOKbXVsdGlhZGRyc5YACASsEulDBocaAAoErBLpQwaHG90DgnJzhQADAQAAiXNlY3AyNTZrMaECR9_1d2u3NH6g8YBoGvwG8m49xOtEfcfeIsUXoLgnZyKDdGNwgocag3VkcIKHHIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:34585/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.171.241/tcp/53248/p2p/16Uiu2HAmArJrPq29dhZ2PYTfnLhuyjg2AxszztAQRbbRw81wpxQQ"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:53247/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:34585/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "78d3ced4-184d-4dac-b3a7-89994a963353", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"78d3ced4-184d-4dac-b3a7-89994a963353","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:34585/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:34585/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 4ebc46214473
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 3e5205dc80f2
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 4ebc46214473. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.