[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_no_request_id with id: 2024-12-29_04-10-39__f33aaf89-05c8-4739-9fd5-6786988fb2e8
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-29_04-10-39__f33aaf89-05c8-4739-9fd5-6786988fb2e8__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.251.117
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['50928', '50929', '50930', '50931', '50932']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 50928:50928 -p 50929:50929 -p 50930:50930 -p 50931:50931 -p 50932:50932 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=50930 --rest-port=50928 --tcp-port=50929 --discv5-udp-port=50931 --rest-address=0.0.0.0 --nat=extip:172.18.251.117 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=3736b58c3921c60ae77496dfcac6fcdb1af2e30e42f78e82be4edfaf5e3e51f7 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=50932 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.251.117 waku 84e2b361af60e982d73de0acc6078942bbe566ea8e18528bfc73c4c543336279
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 84e2b361af60. Setting up logs at ./log/docker/node1_2024-12-29_04-10-39__f33aaf89-05c8-4739-9fd5-6786988fb2e8__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 50928
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container af2201512fed. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:50928/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:50928/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.251.117/tcp/50929/p2p/16Uiu2HAmG8yJzxfjBg7CQ5FhA55RtK7Hm9AFrQhH4jnY3kCHZ8Q3","/ip4/172.18.251.117/tcp/50930/ws/p2p/16Uiu2HAmG8yJzxfjBg7CQ5FhA55RtK7Hm9AFrQhH4jnY3kCHZ8Q3"],"enrUri":"enr:-L24QDr05OO00GoBMUOKHFLSVfnl25zk6aNm8pctemIxJEm5WfsRY7RRdeqmrDJOriiU2Pr0zR6hAA4kTDZfMkH8vp8CgmlkgnY0gmlwhKwS-3WKbXVsdGlhZGRyc5YACASsEvt1BsbxAAoErBL7dQbG8t0DgnJzhQADAQAAiXNlY3AyNTZrMaEDM74l6UvoMDsCILDXF9RV7TWxy2NEPgMKt6ZDhha5F9SDdGNwgsbxg3VkcILG84V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-29_04-10-39__f33aaf89-05c8-4739-9fd5-6786988fb2e8__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.143.87
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['40066', '40067', '40068', '40069', '40070']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 40066:40066 -p 40067:40067 -p 40068:40068 -p 40069:40069 -p 40070:40070 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=40068 --rest-port=40066 --tcp-port=40067 --discv5-udp-port=40069 --rest-address=0.0.0.0 --nat=extip:172.18.143.87 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=2ab140dfebffbdfe0163958f8017eb9776deb7fdf32bfccc88d77fbf19fc992b --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=40070 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QDr05OO00GoBMUOKHFLSVfnl25zk6aNm8pctemIxJEm5WfsRY7RRdeqmrDJOriiU2Pr0zR6hAA4kTDZfMkH8vp8CgmlkgnY0gmlwhKwS-3WKbXVsdGlhZGRyc5YACASsEvt1BsbxAAoErBL7dQbG8t0DgnJzhQADAQAAiXNlY3AyNTZrMaEDM74l6UvoMDsCILDXF9RV7TWxy2NEPgMKt6ZDhha5F9SDdGNwgsbxg3VkcILG84V3YWt1MgU --filternode=/ip4/172.18.251.117/tcp/50929/p2p/16Uiu2HAmG8yJzxfjBg7CQ5FhA55RtK7Hm9AFrQhH4jnY3kCHZ8Q3
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.143.87 waku da45f19150cd62119a98b960ad95c521647c740b90385e6bb00f81d786c612e9
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID da45f19150cd. Setting up logs at ./log/docker/node2_2024-12-29_04-10-39__f33aaf89-05c8-4739-9fd5-6786988fb2e8__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 40066
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:40066/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:40066/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.143.87/tcp/40067/p2p/16Uiu2HAmVZGdLG72bEj394D6efuB4NkKcoZijyjkqCLs4DpihhDy","/ip4/172.18.143.87/tcp/40068/ws/p2p/16Uiu2HAmVZGdLG72bEj394D6efuB4NkKcoZijyjkqCLs4DpihhDy"],"enrUri":"enr:-L24QAMJlElYzbmMv4zRnh9j-HhTCW88aMQdsDOm7yT3MG6OQDvZfYdEX1HRvEXZBUNesgLP4leqyXrOBQ6dtCn1k7wCgmlkgnY0gmlwhKwSj1eKbXVsdGlhZGRyc5YACASsEo9XBpyDAAoErBKPVwachN0DgnJzhQADAQAAiXNlY3AyNTZrMaED-x-YzvdUDxWCXzEdpmkeX8Rw77t1Igtv_k88b9ALfUCDdGNwgpyDg3VkcIKchYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:40066/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.251.117/tcp/50929/p2p/16Uiu2HAmG8yJzxfjBg7CQ5FhA55RtK7Hm9AFrQhH4jnY3kCHZ8Q3"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:50928/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:40066/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "75bd355f-d1b8-40f2-99ba-61f595d3f9bb", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"75bd355f-d1b8-40f2-99ba-61f595d3f9bb","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:40066/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:40066/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 84e2b361af60
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id da45f19150cd
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 84e2b361af60. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.