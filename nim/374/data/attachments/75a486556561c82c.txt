[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_on_non_subscribed_pubsub_topic with id: 2024-09-28_04-21-31__036ecfcc-51e1-4d08-bb51-1eceba327b1d
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-09-28_04-21-31__036ecfcc-51e1-4d08-bb51-1eceba327b1d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.81.104
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['27127', '27128', '27129', '27130', '27131']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 27127:27127 -p 27128:27128 -p 27129:27129 -p 27130:27130 -p 27131:27131 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=27129 --rest-port=27127 --tcp-port=27128 --discv5-udp-port=27130 --rest-address=0.0.0.0 --nat=extip:172.18.81.104 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=c39eaff3af8a9f650eea19ccc8b3f9863ccea1082b96e81d4daa4eb36ead018f --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=27131 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.81.104 waku b1b36c112d95cae40ca8d5a77017f62e70153748028058d3b02fe5f4426f9fe9
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID b1b36c112d95. Setting up logs at ./log/docker/node1_2024-09-28_04-21-31__036ecfcc-51e1-4d08-bb51-1eceba327b1d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 27127
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:27127/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:27127/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.81.104/tcp/27128/p2p/16Uiu2HAmDYVMg1jW1CoTTfoVxL7j9qMNrh4zhgmheMRCq4qnsHrv","/ip4/172.18.81.104/tcp/27129/ws/p2p/16Uiu2HAmDYVMg1jW1CoTTfoVxL7j9qMNrh4zhgmheMRCq4qnsHrv"],"enrUri":"enr:-LO4QGd1mK_wLDg052ky0tYwrI2C9_YP1Peulx3Tqw1cVVuFD0B7qhGZyJs8xHFGtnSuNLUntYaCJjP_rT38nbKt9zUBgmlkgnY0gmlwhKwSUWiKbXVsdGlhZGRyc4wACgSsElFoBmn53QOCcnOFAAMBAACJc2VjcDI1NmsxoQMNMWtNFyxNaFdxuCnlUr6-S9GAioM6fD8u6h8_24tQ74N0Y3CCafiDdWRwgmn6hXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-09-28_04-21-31__036ecfcc-51e1-4d08-bb51-1eceba327b1d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.24.244
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['20764', '20765', '20766', '20767', '20768']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 20764:20764 -p 20765:20765 -p 20766:20766 -p 20767:20767 -p 20768:20768 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=20766 --rest-port=20764 --tcp-port=20765 --discv5-udp-port=20767 --rest-address=0.0.0.0 --nat=extip:172.18.24.244 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=87f4c1c467b8ab8fef60aa0a707dd8c4e1cdada9aaf7b1abf92eb2ad7eb7abcd --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=20768 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QGd1mK_wLDg052ky0tYwrI2C9_YP1Peulx3Tqw1cVVuFD0B7qhGZyJs8xHFGtnSuNLUntYaCJjP_rT38nbKt9zUBgmlkgnY0gmlwhKwSUWiKbXVsdGlhZGRyc4wACgSsElFoBmn53QOCcnOFAAMBAACJc2VjcDI1NmsxoQMNMWtNFyxNaFdxuCnlUr6-S9GAioM6fD8u6h8_24tQ74N0Y3CCafiDdWRwgmn6hXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.24.244 waku bcc26b9d9c7c1c0e8e5a01f60ca2ae0606dbc666cf7832a052f07f1c74463988
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID bcc26b9d9c7c. Setting up logs at ./log/docker/node2_2024-09-28_04-21-31__036ecfcc-51e1-4d08-bb51-1eceba327b1d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 20764
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:20764/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:20764/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.24.244/tcp/20765/p2p/16Uiu2HAkubERymPU34VWg7TykWLerycSi8BeRm6e1tqwXfXoZHgC","/ip4/172.18.24.244/tcp/20766/ws/p2p/16Uiu2HAkubERymPU34VWg7TykWLerycSi8BeRm6e1tqwXfXoZHgC"],"enrUri":"enr:-LO4QOdfF8BAap5Rnu5yzBZqLfjwr2e1sbj_5QyD76-jJGY1Bhv2T2D-mzhGEb5VuZZ0X9mbQipJ6tqwaPuUEhWP9AYBgmlkgnY0gmlwhKwSGPSKbXVsdGlhZGRyc4wACgSsEhj0BlEe3QOCcnOFAAMBAACJc2VjcDI1NmsxoQICcuuYJ15v-CWOrLT9Esx5VjsIqrVesKNWuiC2L80cQYN0Y3CCUR2DdWRwglEfhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:20764/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.81.104/tcp/27128/p2p/16Uiu2HAmDYVMg1jW1CoTTfoVxL7j9qMNrh4zhgmheMRCq4qnsHrv"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:27127/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:20764/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:27127/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:27127/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1727497295186016512,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:20764/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1727497295186016512,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:27127/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1000" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:27127/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1000. Response content: b'Failed to publish: Node not subscribed to topic: /waku/2/rs/3/1000'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id b1b36c112d95
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id bcc26b9d9c7c
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.