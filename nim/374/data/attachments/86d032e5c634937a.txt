[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_invalid_version with id: 2024-09-28_04-21-39__f6d09b1e-919a-40b8-a406-439ab4e0f7b7
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-09-28_04-21-39__f6d09b1e-919a-40b8-a406-439ab4e0f7b7__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.203.43
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['11040', '11041', '11042', '11043', '11044']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 11040:11040 -p 11041:11041 -p 11042:11042 -p 11043:11043 -p 11044:11044 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=11042 --rest-port=11040 --tcp-port=11041 --discv5-udp-port=11043 --rest-address=0.0.0.0 --nat=extip:172.18.203.43 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=a1519ba29b2f93fba0e5cdf375398bc1188d01ff5e886c9840f1e2085ecbd2db --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=11044 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.203.43 waku 6f6a4113a447ec577d6cf1436f11f901f0b34a3741d1d54681b4248ceb21e51f
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 6f6a4113a447. Setting up logs at ./log/docker/node1_2024-09-28_04-21-39__f6d09b1e-919a-40b8-a406-439ab4e0f7b7__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 11040
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:11040/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:11040/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.203.43/tcp/11041/p2p/16Uiu2HAmVA2qyx8Cn4dnKAP2zP3YRy5fYXHVgdhytDZjCnD2FJF2","/ip4/172.18.203.43/tcp/11042/ws/p2p/16Uiu2HAmVA2qyx8Cn4dnKAP2zP3YRy5fYXHVgdhytDZjCnD2FJF2"],"enrUri":"enr:-LO4QKThmimmorOB3DLPY30BgU7Qjn-p7Hx6PN-AuoyeiUIHP11h2e5KpMneeNrB489_0noBGDKcH3aAbMXFqCc8P5gBgmlkgnY0gmlwhKwSyyuKbXVsdGlhZGRyc4wACgSsEssrBisi3QOCcnOFAAMBAACJc2VjcDI1NmsxoQP1K6exvZUzaarb1FrUQow-wrAIM56yIVEDNlkPt58gEYN0Y3CCKyGDdWRwgisjhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-09-28_04-21-39__f6d09b1e-919a-40b8-a406-439ab4e0f7b7__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.67.130
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['42926', '42927', '42928', '42929', '42930']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 42926:42926 -p 42927:42927 -p 42928:42928 -p 42929:42929 -p 42930:42930 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=42928 --rest-port=42926 --tcp-port=42927 --discv5-udp-port=42929 --rest-address=0.0.0.0 --nat=extip:172.18.67.130 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=3fdd4c4a7c706aae32bd92af5ac86b068e160c72d91cbccb7628d60d6d5c0c24 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=42930 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QKThmimmorOB3DLPY30BgU7Qjn-p7Hx6PN-AuoyeiUIHP11h2e5KpMneeNrB489_0noBGDKcH3aAbMXFqCc8P5gBgmlkgnY0gmlwhKwSyyuKbXVsdGlhZGRyc4wACgSsEssrBisi3QOCcnOFAAMBAACJc2VjcDI1NmsxoQP1K6exvZUzaarb1FrUQow-wrAIM56yIVEDNlkPt58gEYN0Y3CCKyGDdWRwgisjhXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.67.130 waku 367041167cd3922a73fdd6358072906d88b780ad5e9786de7633e40ea623505a
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 367041167cd3. Setting up logs at ./log/docker/node2_2024-09-28_04-21-39__f6d09b1e-919a-40b8-a406-439ab4e0f7b7__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 42926
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:42926/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:42926/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.67.130/tcp/42927/p2p/16Uiu2HAm7Hoe3CdFGmxuAVaPy7SBZPkTcjX4MVFpF7hY7G5mrtGK","/ip4/172.18.67.130/tcp/42928/ws/p2p/16Uiu2HAm7Hoe3CdFGmxuAVaPy7SBZPkTcjX4MVFpF7hY7G5mrtGK"],"enrUri":"enr:-LO4QD6Mg5bu0RLwrnJB_eMdzY8W5GC7_bYC4ITUmsluMGu0MjbAhApexCqHHjQeI-wh50UEdvLhqnsr0HIJDxNNZv8BgmlkgnY0gmlwhKwSQ4KKbXVsdGlhZGRyc4wACgSsEkOCBqew3QOCcnOFAAMBAACJc2VjcDI1NmsxoQKwSEHU8k1SihTFm9-zZ9Iw5qJv0E9lFC91S3eVZsicTIN0Y3CCp6-DdWRwgqexhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:42926/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.203.43/tcp/11041/p2p/16Uiu2HAmVA2qyx8Cn4dnKAP2zP3YRy5fYXHVgdhytDZjCnD2FJF2"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:11040/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:42926/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:11040/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:11040/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1727497302923843328,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:42926/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1727497302923843328,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:11040/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)', "version": 2.1}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:11040/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 6f6a4113a447
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 367041167cd3
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.