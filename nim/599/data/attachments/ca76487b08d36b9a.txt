[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_no_request_id with id: 2025-01-01_04-10-33__36f6b724-555f-4f0a-91ac-062b29cc4d59
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-01_04-10-33__36f6b724-555f-4f0a-91ac-062b29cc4d59__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.87.25
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['2861', '2862', '2863', '2864', '2865']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 2861:2861 -p 2862:2862 -p 2863:2863 -p 2864:2864 -p 2865:2865 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=2863 --rest-port=2861 --tcp-port=2862 --discv5-udp-port=2864 --rest-address=0.0.0.0 --nat=extip:172.18.87.25 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=dcc987ca8e5e55dab0ba9afdfeb9e385ad0c173508a1cc6d5f4b7965d9bf0a5e --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=2865 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.87.25 waku 654fdb2abf5998800eaca272c5c9f7811fd1529d1fbc45156997991b46f9f120
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 654fdb2abf59. Setting up logs at ./log/docker/node1_2025-01-01_04-10-33__36f6b724-555f-4f0a-91ac-062b29cc4d59__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 2861
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container bd70609d6ca3. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:2861/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:2861/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.87.25/tcp/2862/p2p/16Uiu2HAkzzWSpYxeszsSE4GH3mEiG5uGK5vQRzCYJixqYjgsS7Db","/ip4/172.18.87.25/tcp/2863/ws/p2p/16Uiu2HAkzzWSpYxeszsSE4GH3mEiG5uGK5vQRzCYJixqYjgsS7Db"],"enrUri":"enr:-L24QEjMne6RWBpq_f6aLzPRFyY-E97ifyJ5w1rD0bXVOcIBMDe-6EcpTXt3Pj7cmWE7KoyIf9LOfHhzhm0yDoOnEH8CgmlkgnY0gmlwhKwSVxmKbXVsdGlhZGRyc5YACASsElcZBgsuAAoErBJXGQYLL90DgnJzhQADAQAAiXNlY3AyNTZrMaECUrPSOUWJ2pPUnvMxJPKn4BjtNHVDZ-7MXae43-maBhqDdGNwggsug3VkcIILMIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-01_04-10-33__36f6b724-555f-4f0a-91ac-062b29cc4d59__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.92.197
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['8890', '8891', '8892', '8893', '8894']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 8890:8890 -p 8891:8891 -p 8892:8892 -p 8893:8893 -p 8894:8894 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=8892 --rest-port=8890 --tcp-port=8891 --discv5-udp-port=8893 --rest-address=0.0.0.0 --nat=extip:172.18.92.197 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=cf3e48a10fced6b4f1da74acc572deb2eba2db5a3c3a09f8cb254e4a20ed18e6 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=8894 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QEjMne6RWBpq_f6aLzPRFyY-E97ifyJ5w1rD0bXVOcIBMDe-6EcpTXt3Pj7cmWE7KoyIf9LOfHhzhm0yDoOnEH8CgmlkgnY0gmlwhKwSVxmKbXVsdGlhZGRyc5YACASsElcZBgsuAAoErBJXGQYLL90DgnJzhQADAQAAiXNlY3AyNTZrMaECUrPSOUWJ2pPUnvMxJPKn4BjtNHVDZ-7MXae43-maBhqDdGNwggsug3VkcIILMIV3YWt1MgU --filternode=/ip4/172.18.87.25/tcp/2862/p2p/16Uiu2HAkzzWSpYxeszsSE4GH3mEiG5uGK5vQRzCYJixqYjgsS7Db
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.92.197 waku 7bb01fdc7e5fcd2fbc8d28e8e7c51d89a8012a25ae3f5409cabde00ddaacc402
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 7bb01fdc7e5f. Setting up logs at ./log/docker/node2_2025-01-01_04-10-33__36f6b724-555f-4f0a-91ac-062b29cc4d59__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 8890
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8890/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8890/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.92.197/tcp/8891/p2p/16Uiu2HAkwknQVRg77mUjXcHLE1v8bmunGrLoaJLQsN443QkycCVH","/ip4/172.18.92.197/tcp/8892/ws/p2p/16Uiu2HAkwknQVRg77mUjXcHLE1v8bmunGrLoaJLQsN443QkycCVH"],"enrUri":"enr:-L24QDfdOyNBtWn4b_rgyBLiL9wea8WTZTOOh1boUEV-RQwOTyUySW6uIdHp7mK2eI7GggU4TmHBs1TRA-yoXLwF_78CgmlkgnY0gmlwhKwSXMWKbXVsdGlhZGRyc5YACASsElzFBiK7AAoErBJcxQYivN0DgnJzhQADAQAAiXNlY3AyNTZrMaECIpysx4m5lIww3LJojq7MFQKRsTPD0RniHMc0nueVEYyDdGNwgiK7g3VkcIIivYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8890/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.87.25/tcp/2862/p2p/16Uiu2HAkzzWSpYxeszsSE4GH3mEiG5uGK5vQRzCYJixqYjgsS7Db"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:2861/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8890/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "a9873917-214c-4214-b07d-659bfc32d0c6", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"a9873917-214c-4214-b07d-659bfc32d0c6","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:8890/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:8890/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 654fdb2abf59
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 7bb01fdc7e5f
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 654fdb2abf59. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.