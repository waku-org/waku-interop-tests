[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_extra_field with id: 2025-01-01_04-10-14__6d1e45cf-d091-4def-9e70-7cbbbb0ce5de
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-01_04-10-14__6d1e45cf-d091-4def-9e70-7cbbbb0ce5de__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.189.123
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['59002', '59003', '59004', '59005', '59006']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 59002:59002 -p 59003:59003 -p 59004:59004 -p 59005:59005 -p 59006:59006 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=59004 --rest-port=59002 --tcp-port=59003 --discv5-udp-port=59005 --rest-address=0.0.0.0 --nat=extip:172.18.189.123 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ca4c9ed8e0e881730cfa7cdf5bfe70fcceb441dc6dacfaf0e0394e9588737ba7 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=59006 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.189.123 waku fc4f10d287b054f99087e5e465fcf7297bf1487a2eaa26ca340a43755dc91976
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID fc4f10d287b0. Setting up logs at ./log/docker/node1_2025-01-01_04-10-14__6d1e45cf-d091-4def-9e70-7cbbbb0ce5de__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 59002
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 55e611129f1d. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:59002/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:59002/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.189.123/tcp/59003/p2p/16Uiu2HAm2jX1XVXrBpSDg4RDtPDmwdBYPRJcWcYW2tUG2uavVZGu","/ip4/172.18.189.123/tcp/59004/ws/p2p/16Uiu2HAm2jX1XVXrBpSDg4RDtPDmwdBYPRJcWcYW2tUG2uavVZGu"],"enrUri":"enr:-L24QEHEMv9Hg41YpE1iwV0_UsbqaEez9FsnFcDULaPAErv6fU0dqcaGyL6j6EbaetZAT2OrMIBsU9mfHZvC6uw9sU4CgmlkgnY0gmlwhKwSvXuKbXVsdGlhZGRyc5YACASsEr17BuZ7AAoErBK9ewbmfN0DgnJzhQADAQAAiXNlY3AyNTZrMaECbJQe2R4gnAjsBUjy_W6ltc2Xf9cYG2g52oxDwpbbwuqDdGNwguZ7g3VkcILmfYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-01_04-10-14__6d1e45cf-d091-4def-9e70-7cbbbb0ce5de__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.107.248
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['37516', '37517', '37518', '37519', '37520']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 37516:37516 -p 37517:37517 -p 37518:37518 -p 37519:37519 -p 37520:37520 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=37518 --rest-port=37516 --tcp-port=37517 --discv5-udp-port=37519 --rest-address=0.0.0.0 --nat=extip:172.18.107.248 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=68e8aee694eccaff15dbb4b2b3dc5dacf0a4693c16ede8a2e9d6f93c3ad2afcf --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=37520 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QEHEMv9Hg41YpE1iwV0_UsbqaEez9FsnFcDULaPAErv6fU0dqcaGyL6j6EbaetZAT2OrMIBsU9mfHZvC6uw9sU4CgmlkgnY0gmlwhKwSvXuKbXVsdGlhZGRyc5YACASsEr17BuZ7AAoErBK9ewbmfN0DgnJzhQADAQAAiXNlY3AyNTZrMaECbJQe2R4gnAjsBUjy_W6ltc2Xf9cYG2g52oxDwpbbwuqDdGNwguZ7g3VkcILmfYV3YWt1MgU --filternode=/ip4/172.18.189.123/tcp/59003/p2p/16Uiu2HAm2jX1XVXrBpSDg4RDtPDmwdBYPRJcWcYW2tUG2uavVZGu
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.107.248 waku b38befdaa5bc6f40030993574e0adc48e76c696a4523d988b2c92205f2376c7b
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID b38befdaa5bc. Setting up logs at ./log/docker/node2_2025-01-01_04-10-14__6d1e45cf-d091-4def-9e70-7cbbbb0ce5de__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 37516
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:37516/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:37516/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.107.248/tcp/37517/p2p/16Uiu2HAm1zkEsoxMvuMfM5futQ9vW8qPHoS1RFXZCFYR48Svpspx","/ip4/172.18.107.248/tcp/37518/ws/p2p/16Uiu2HAm1zkEsoxMvuMfM5futQ9vW8qPHoS1RFXZCFYR48Svpspx"],"enrUri":"enr:-L24QBmZ7l2kT-BVjxR-eysGo-NAeYeP-zDSYFC_rLoLQ1FcNYu3g0w-gsgVWFQ6gXggdxz46NskP5MN2tDquVjO3WsCgmlkgnY0gmlwhKwSa_iKbXVsdGlhZGRyc5YACASsEmv4BpKNAAoErBJr-AaSjt0DgnJzhQADAQAAiXNlY3AyNTZrMaECYZ8a6SF1d2uA-axVaF919_8_uRF_-8eCCxV_H2J7c22DdGNwgpKNg3VkcIKSj4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:37516/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.189.123/tcp/59003/p2p/16Uiu2HAm2jX1XVXrBpSDg4RDtPDmwdBYPRJcWcYW2tUG2uavVZGu"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:59002/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:37516/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "dabae657-6e04-4a4a-9cd2-4c2cb32d3745", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"dabae657-6e04-4a4a-9cd2-4c2cb32d3745","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:37516/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:37516/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id fc4f10d287b0
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id b38befdaa5bc
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container fc4f10d287b0. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.