[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_no_pubsub_topic with id: 2025-01-01_04-10-50__06c3100f-2d6c-4480-93a2-00112c4e6e68
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-01_04-10-50__06c3100f-2d6c-4480-93a2-00112c4e6e68__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.82.21
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['10393', '10394', '10395', '10396', '10397']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 10393:10393 -p 10394:10394 -p 10395:10395 -p 10396:10396 -p 10397:10397 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=10395 --rest-port=10393 --tcp-port=10394 --discv5-udp-port=10396 --rest-address=0.0.0.0 --nat=extip:172.18.82.21 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=fb8df642b3dd4c03e9a44b158a4da9d04490b7d0a6c5e1895d0cdfdb2e3d269c --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=10397 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.82.21 waku 818bed34faa1d8cb4dae2e530449142283747f6fb9b09f6053b17f42a9a7a8a3
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 818bed34faa1. Setting up logs at ./log/docker/node1_2025-01-01_04-10-50__06c3100f-2d6c-4480-93a2-00112c4e6e68__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 10393
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 92fb4377050f. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10393/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10393/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.82.21/tcp/10394/p2p/16Uiu2HAm6NAd3ZRNXSxrMkQoRfEd98RtKPSmk9q47k9qjPKQLvnz","/ip4/172.18.82.21/tcp/10395/ws/p2p/16Uiu2HAm6NAd3ZRNXSxrMkQoRfEd98RtKPSmk9q47k9qjPKQLvnz"],"enrUri":"enr:-L24QAXGPfhdrd0IWybcmNfB8pOHLKArOnKdDor-Wo3HbMRWEybwDdwtNQFWJiMpV_IZ8qo6L0PxbDSrF2lLnromB3ACgmlkgnY0gmlwhKwSUhWKbXVsdGlhZGRyc5YACASsElIVBiiaAAoErBJSFQYom90DgnJzhQADAQAAiXNlY3AyNTZrMaECooqebg5ln58jbNwMmDp10IHkGvn9uKAenvJ9sNw0FAeDdGNwgiiag3VkcIIonIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-01_04-10-50__06c3100f-2d6c-4480-93a2-00112c4e6e68__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.242.230
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['48200', '48201', '48202', '48203', '48204']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 48200:48200 -p 48201:48201 -p 48202:48202 -p 48203:48203 -p 48204:48204 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=48202 --rest-port=48200 --tcp-port=48201 --discv5-udp-port=48203 --rest-address=0.0.0.0 --nat=extip:172.18.242.230 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=db8aaa498e9e716afb87f5c78eaa337fcdbbdfaeffa471506e749b5ce2cd6ba0 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=48204 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QAXGPfhdrd0IWybcmNfB8pOHLKArOnKdDor-Wo3HbMRWEybwDdwtNQFWJiMpV_IZ8qo6L0PxbDSrF2lLnromB3ACgmlkgnY0gmlwhKwSUhWKbXVsdGlhZGRyc5YACASsElIVBiiaAAoErBJSFQYom90DgnJzhQADAQAAiXNlY3AyNTZrMaECooqebg5ln58jbNwMmDp10IHkGvn9uKAenvJ9sNw0FAeDdGNwgiiag3VkcIIonIV3YWt1MgU --filternode=/ip4/172.18.82.21/tcp/10394/p2p/16Uiu2HAm6NAd3ZRNXSxrMkQoRfEd98RtKPSmk9q47k9qjPKQLvnz
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.242.230 waku 254678384bade55f30384a113692308931b5efd719edb68969645778ed4d21dc
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 254678384bad. Setting up logs at ./log/docker/node2_2025-01-01_04-10-50__06c3100f-2d6c-4480-93a2-00112c4e6e68__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 48200
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:48200/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:48200/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.242.230/tcp/48201/p2p/16Uiu2HAmSKmVtmhZMvzhbii5wgmP2KyVSQxuVNGhe1da8euHjoBM","/ip4/172.18.242.230/tcp/48202/ws/p2p/16Uiu2HAmSKmVtmhZMvzhbii5wgmP2KyVSQxuVNGhe1da8euHjoBM"],"enrUri":"enr:-L24QL3ZzC68H8Ch7RyCeJgxgtslT0BJJuhS6n4NBaCWHLKwXG1lqstSOc69lT4zGT1VCIKL-YuRHJ9M8FuYSG0Z-CMCgmlkgnY0gmlwhKwS8uaKbXVsdGlhZGRyc5YACASsEvLmBrxJAAoErBLy5ga8St0DgnJzhQADAQAAiXNlY3AyNTZrMaEDyxcM2D9dAKs4Q9g0VQwMnUG7lk4XqSXDQCUrz0R8IKCDdGNwgrxJg3VkcIK8S4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:48200/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.82.21/tcp/10394/p2p/16Uiu2HAm6NAd3ZRNXSxrMkQoRfEd98RtKPSmk9q47k9qjPKQLvnz"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:10393/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:48200/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "f4868a2c-392b-46a9-892c-0222d8c5fb6f", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"f4868a2c-392b-46a9-892c-0222d8c5fb6f","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:48200/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": "/test/1/waku-filter/proto"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:48200/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 818bed34faa1
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 254678384bad
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 818bed34faa1. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.