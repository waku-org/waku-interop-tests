[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2025-01-01_04-10-34__76dc47cb-a98e-48e7-935f-b481dd6c7c26
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-01_04-10-34__76dc47cb-a98e-48e7-935f-b481dd6c7c26__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.158.52
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['27449', '27450', '27451', '27452', '27453']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 27449:27449 -p 27450:27450 -p 27451:27451 -p 27452:27452 -p 27453:27453 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=27451 --rest-port=27449 --tcp-port=27450 --discv5-udp-port=27452 --rest-address=0.0.0.0 --nat=extip:172.18.158.52 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=42abf44555a914e279ca912c8c2add9e9c76c29fdd322c0d873b1913b9842ecc --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=27453 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.158.52 waku cf622b9bd51d33cbfd5255aa1cea449a963039155092aec5a987e46e9d33a8e1
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID cf622b9bd51d. Setting up logs at ./log/docker/node1_2025-01-01_04-10-34__76dc47cb-a98e-48e7-935f-b481dd6c7c26__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 27449
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 132a60663923. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:27449/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:27449/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.158.52/tcp/27450/p2p/16Uiu2HAmB4SCmpkjkSQ9r7BG9cuVFsAsdiiJvJ6Rbuj9h4g72mbk","/ip4/172.18.158.52/tcp/27451/ws/p2p/16Uiu2HAmB4SCmpkjkSQ9r7BG9cuVFsAsdiiJvJ6Rbuj9h4g72mbk"],"enrUri":"enr:-L24QIF6tg-nnuISckbQfNbEjEScQ-NDg3nqbbKSpkFDah91Bm2LAWr-GDYQSWMcPywXCSz-xgPPcySU3wrd6RIkpogCgmlkgnY0gmlwhKwSnjSKbXVsdGlhZGRyc5YACASsEp40Bms6AAoErBKeNAZrO90DgnJzhQADAQAAiXNlY3AyNTZrMaEC6Eo3jwzNQlGo5jqKM-h8XNvAwNIXqWnC21VcLRjMoLeDdGNwgms6g3VkcIJrPIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-01_04-10-34__76dc47cb-a98e-48e7-935f-b481dd6c7c26__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.99.149
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['29053', '29054', '29055', '29056', '29057']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 29053:29053 -p 29054:29054 -p 29055:29055 -p 29056:29056 -p 29057:29057 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=29055 --rest-port=29053 --tcp-port=29054 --discv5-udp-port=29056 --rest-address=0.0.0.0 --nat=extip:172.18.99.149 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=f25fd0260b27d4be5dbb7c79adbc9daed092a0afad20dbb370fb5bcbf8aad2cc --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=29057 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QIF6tg-nnuISckbQfNbEjEScQ-NDg3nqbbKSpkFDah91Bm2LAWr-GDYQSWMcPywXCSz-xgPPcySU3wrd6RIkpogCgmlkgnY0gmlwhKwSnjSKbXVsdGlhZGRyc5YACASsEp40Bms6AAoErBKeNAZrO90DgnJzhQADAQAAiXNlY3AyNTZrMaEC6Eo3jwzNQlGo5jqKM-h8XNvAwNIXqWnC21VcLRjMoLeDdGNwgms6g3VkcIJrPIV3YWt1MgU --filternode=/ip4/172.18.158.52/tcp/27450/p2p/16Uiu2HAmB4SCmpkjkSQ9r7BG9cuVFsAsdiiJvJ6Rbuj9h4g72mbk
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.99.149 waku 52ac378e55f8d8a4452e0bdb6b3c42c6e73b72845af9fe58e7544ed2edb3dee1
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 52ac378e55f8. Setting up logs at ./log/docker/node2_2025-01-01_04-10-34__76dc47cb-a98e-48e7-935f-b481dd6c7c26__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 29053
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:29053/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:29053/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.99.149/tcp/29054/p2p/16Uiu2HAkzYz315VUuDvKr1GkNU7JtTN1mSXYx58P7KYuijKXqJKF","/ip4/172.18.99.149/tcp/29055/ws/p2p/16Uiu2HAkzYz315VUuDvKr1GkNU7JtTN1mSXYx58P7KYuijKXqJKF"],"enrUri":"enr:-L24QGTp8V73DrBgbAsIsdemzK5o7-47a0qHc38h22cB853MABkHRw5_mW-FByFw56Yt2rHZ4acN1e1G6OitfFf69S8CgmlkgnY0gmlwhKwSY5WKbXVsdGlhZGRyc5YACASsEmOVBnF-AAoErBJjlQZxf90DgnJzhQADAQAAiXNlY3AyNTZrMaECTCnqXwEILgEwcF-s2HtuGtLXn3IiNQ_2OTSrOfpznyaDdGNwgnF-g3VkcIJxgIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:29053/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.158.52/tcp/27450/p2p/16Uiu2HAmB4SCmpkjkSQ9r7BG9cuVFsAsdiiJvJ6Rbuj9h4g72mbk"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:27449/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:29053/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "51d39143-4102-46a8-90fd-3e15605967a6", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"51d39143-4102-46a8-90fd-3e15605967a6","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:29053/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:29053/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id cf622b9bd51d
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 52ac378e55f8
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container cf622b9bd51d. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.