[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_all_with_invalid_request_id with id: 2024-12-15_10-34-07__dd3d8e3d-7206-4d7d-a396-77a2eeb13d13
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-15_10-34-07__dd3d8e3d-7206-4d7d-a396-77a2eeb13d13__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.104.233
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['21692', '21693', '21694', '21695', '21696']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 21692:21692 -p 21693:21693 -p 21694:21694 -p 21695:21695 -p 21696:21696 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=21694 --rest-port=21692 --tcp-port=21693 --discv5-udp-port=21695 --rest-address=0.0.0.0 --nat=extip:172.18.104.233 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=a3d9fcd864c8ea26ec8bb37daed8ae78323edc3c12f400d1d05f0bae2f9de35f --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=21696 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.104.233 waku b1f722aabac4c60b81e17412e46bf617a2264072c8e9482db2a2863442e42bbd
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID b1f722aabac4. Setting up logs at ./log/docker/node1_2024-12-15_10-34-07__dd3d8e3d-7206-4d7d-a396-77a2eeb13d13__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 21692
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 8357ca58413d. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:21692/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:21692/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.104.233/tcp/21693/p2p/16Uiu2HAkvzU29WEQ39LVfmSSanZrRsCMEfpT6e35hjMgqTLq6YsT","/ip4/172.18.104.233/tcp/21694/ws/p2p/16Uiu2HAkvzU29WEQ39LVfmSSanZrRsCMEfpT6e35hjMgqTLq6YsT"],"enrUri":"enr:-L24QEBOeh2PtjwFXTsWiTXs5QgGXdhLUPHZbVJRAfHsUNj9FgCOMc9_P27B4UcmhgpohQCJNBYvlwfMCtMvXPxqKCMCgmlkgnY0gmlwhKwSaOmKbXVsdGlhZGRyc5YACASsEmjpBlS9AAoErBJo6QZUvt0DgnJzhQADAQAAiXNlY3AyNTZrMaECF0JUwSIWJosydIrHVPviRCD1H0h1r_3eqtWSa2UYRPKDdGNwglS9g3VkcIJUv4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-15_10-34-07__dd3d8e3d-7206-4d7d-a396-77a2eeb13d13__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.159.187
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['37243', '37244', '37245', '37246', '37247']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 37243:37243 -p 37244:37244 -p 37245:37245 -p 37246:37246 -p 37247:37247 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=37245 --rest-port=37243 --tcp-port=37244 --discv5-udp-port=37246 --rest-address=0.0.0.0 --nat=extip:172.18.159.187 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=eac50cd74c28ef4c4a86a5e8ebec98d82ae19352b91b30eb9abb7eafee486128 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=37247 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QEBOeh2PtjwFXTsWiTXs5QgGXdhLUPHZbVJRAfHsUNj9FgCOMc9_P27B4UcmhgpohQCJNBYvlwfMCtMvXPxqKCMCgmlkgnY0gmlwhKwSaOmKbXVsdGlhZGRyc5YACASsEmjpBlS9AAoErBJo6QZUvt0DgnJzhQADAQAAiXNlY3AyNTZrMaECF0JUwSIWJosydIrHVPviRCD1H0h1r_3eqtWSa2UYRPKDdGNwglS9g3VkcIJUv4V3YWt1MgU --filternode=/ip4/172.18.104.233/tcp/21693/p2p/16Uiu2HAkvzU29WEQ39LVfmSSanZrRsCMEfpT6e35hjMgqTLq6YsT
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.159.187 waku a2013df38adb81fa966460c6f46fa10f01946616a06711a2252622dcec035438
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID a2013df38adb. Setting up logs at ./log/docker/node2_2024-12-15_10-34-07__dd3d8e3d-7206-4d7d-a396-77a2eeb13d13__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 37243
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:37243/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:37243/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.159.187/tcp/37244/p2p/16Uiu2HAmGoJMoxwZpgqdEH5fVWZyvTAze4jbyKufbaToZt1bUFE6","/ip4/172.18.159.187/tcp/37245/ws/p2p/16Uiu2HAmGoJMoxwZpgqdEH5fVWZyvTAze4jbyKufbaToZt1bUFE6"],"enrUri":"enr:-L24QH0PXz3VzakAbyGK7nhrdEKFbBk5qri0-7ofCaF3dfFYDmnjknonfRd28Adap1d6zRHuxncInsSLTMo_RTbDEVgCgmlkgnY0gmlwhKwSn7uKbXVsdGlhZGRyc5YACASsEp-7BpF8AAoErBKfuwaRfd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDPY_BylEYJLeUmUij-0SQfrCxg4T0JnkB8e61hUgzLgeDdGNwgpF8g3VkcIKRfoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:37243/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.104.233/tcp/21693/p2p/16Uiu2HAkvzU29WEQ39LVfmSSanZrRsCMEfpT6e35hjMgqTLq6YsT"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:21692/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:37243/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "ac8f6364-856a-4dad-b4e9-e588d460a590", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"ac8f6364-856a-4dad-b4e9-e588d460a590","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:37243/filter/v2/subscriptions/all" -H "Content-Type: application/json" -d '{"requestId": 1}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:37243/filter/v2/subscriptions/all. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id b1f722aabac4
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id a2013df38adb
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container b1f722aabac4. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.