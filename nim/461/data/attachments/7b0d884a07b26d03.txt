[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_invalid_request_id with id: 2024-11-25_04-14-18__bd7931dd-c499-4138-8631-5ac9f5ff8667
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-25_04-14-18__bd7931dd-c499-4138-8631-5ac9f5ff8667__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.135.24
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['32399', '32400', '32401', '32402', '32403']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 32399:32399 -p 32400:32400 -p 32401:32401 -p 32402:32402 -p 32403:32403 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=32401 --rest-port=32399 --tcp-port=32400 --discv5-udp-port=32402 --rest-address=0.0.0.0 --nat=extip:172.18.135.24 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=0dedc8ffaefc7c3fac88cba2fbd76df0a0bdd82e5bf935f21c2efbe14b882b87 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=32403 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.135.24 waku b24d31064f4c89e008b23bba8beb4d1d7e69be33044d0dfd1da0443f68729bb0
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID b24d31064f4c. Setting up logs at ./log/docker/node1_2024-11-25_04-14-18__bd7931dd-c499-4138-8631-5ac9f5ff8667__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 32399
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 5661d2648719. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:32399/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:32399/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.135.24/tcp/32400/p2p/16Uiu2HAmABstpKJJVY5RFwxUAsELAK34h1FTiYLzNEcPtTy1rRKr","/ip4/172.18.135.24/tcp/32401/ws/p2p/16Uiu2HAmABstpKJJVY5RFwxUAsELAK34h1FTiYLzNEcPtTy1rRKr"],"enrUri":"enr:-L24QJII7Ew_Ac_MrQb1WloFFFndvfhD1j3mZmalj-TrDC64ISlNbEwL8AhwzPi3Nu7yizFOLmOi2OZd_hty-sgpwA8CgmlkgnY0gmlwhKwShxiKbXVsdGlhZGRyc5YACASsEocYBn6QAAoErBKHGAZ-kd0DgnJzhQADAQAAiXNlY3AyNTZrMaEC21ak3FXyiB1bLgjQHZX4lNy85Y_7Utc2b10pIebYhk2DdGNwgn6Qg3VkcIJ-koV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-25_04-14-18__bd7931dd-c499-4138-8631-5ac9f5ff8667__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.37.127
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['44854', '44855', '44856', '44857', '44858']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 44854:44854 -p 44855:44855 -p 44856:44856 -p 44857:44857 -p 44858:44858 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=44856 --rest-port=44854 --tcp-port=44855 --discv5-udp-port=44857 --rest-address=0.0.0.0 --nat=extip:172.18.37.127 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=c52ea5ac241ad1dfd8a6cab263dad7c9233a5280b112deb385e4b038ceedbb03 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=44858 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QJII7Ew_Ac_MrQb1WloFFFndvfhD1j3mZmalj-TrDC64ISlNbEwL8AhwzPi3Nu7yizFOLmOi2OZd_hty-sgpwA8CgmlkgnY0gmlwhKwShxiKbXVsdGlhZGRyc5YACASsEocYBn6QAAoErBKHGAZ-kd0DgnJzhQADAQAAiXNlY3AyNTZrMaEC21ak3FXyiB1bLgjQHZX4lNy85Y_7Utc2b10pIebYhk2DdGNwgn6Qg3VkcIJ-koV3YWt1MgU --filternode=/ip4/172.18.135.24/tcp/32400/p2p/16Uiu2HAmABstpKJJVY5RFwxUAsELAK34h1FTiYLzNEcPtTy1rRKr
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.37.127 waku b1d4e8822280840a0147ba7c1f22b8323310d6bfc1eacc903ee996a2cee93098
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID b1d4e8822280. Setting up logs at ./log/docker/node2_2024-11-25_04-14-18__bd7931dd-c499-4138-8631-5ac9f5ff8667__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 44854
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:44854/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:44854/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.37.127/tcp/44855/p2p/16Uiu2HAkv1hYCbtSoNGZL9Jf1cmxGXdziZiEDEq8wH1QAvSN4zon","/ip4/172.18.37.127/tcp/44856/ws/p2p/16Uiu2HAkv1hYCbtSoNGZL9Jf1cmxGXdziZiEDEq8wH1QAvSN4zon"],"enrUri":"enr:-L24QAJkq97KFBSd5TfZ0DWdt4h0qdkBS41J2n3fnto8KnH-HqXkKI9m0nvW2KHNdMIA5Z3pGrMcKA0nX_dud8TOB98CgmlkgnY0gmlwhKwSJX-KbXVsdGlhZGRyc5YACASsEiV_Bq83AAoErBIlfwavON0DgnJzhQADAQAAiXNlY3AyNTZrMaECCLeCjqofU2HXG2f5ND-L8j56zKkWoCwf1ItftaihFcWDdGNwgq83g3VkcIKvOYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:44854/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.135.24/tcp/32400/p2p/16Uiu2HAmABstpKJJVY5RFwxUAsELAK34h1FTiYLzNEcPtTy1rRKr"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:32399/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:44854/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1428030e-7d09-46a1-8661-4afc64028de4", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"1428030e-7d09-46a1-8661-4afc64028de4","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:44854/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:44854/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id b24d31064f4c
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id b1d4e8822280
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container b24d31064f4c. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.