[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_invalid_request_id with id: 2024-11-25_04-13-05__ddcea457-df7f-4699-a4c6-ba9796cb09e6
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-25_04-13-05__ddcea457-df7f-4699-a4c6-ba9796cb09e6__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.223.8
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['14030', '14031', '14032', '14033', '14034']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 14030:14030 -p 14031:14031 -p 14032:14032 -p 14033:14033 -p 14034:14034 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=14032 --rest-port=14030 --tcp-port=14031 --discv5-udp-port=14033 --rest-address=0.0.0.0 --nat=extip:172.18.223.8 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=a8e5e7908bb33c3f7bda793358d70be3ec5afee0c7ac3374fb1dd43be6941af4 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=14034 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.223.8 waku 1a7a4ca237d16b35bc562c095104861168fc31d1093d9a6c6cc33ee96ee49d4d
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 1a7a4ca237d1. Setting up logs at ./log/docker/node1_2024-11-25_04-13-05__ddcea457-df7f-4699-a4c6-ba9796cb09e6__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 14030
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 5b8715308364. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:14030/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:14030/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.223.8/tcp/14031/p2p/16Uiu2HAmGcpiGNdSp9GqPU8GkggtDdRkjJrmKcHgZSKsdab9LJD2","/ip4/172.18.223.8/tcp/14032/ws/p2p/16Uiu2HAmGcpiGNdSp9GqPU8GkggtDdRkjJrmKcHgZSKsdab9LJD2"],"enrUri":"enr:-L24QOwX02FsKcwzylsW9LmtJBW-SQp848WFvvJjuhBfu-AtLa8qQabWbvKrbRwr1SfKxN-YCSOIDQs0Sx8VRjA4PhsCgmlkgnY0gmlwhKwS3wiKbXVsdGlhZGRyc5YACASsEt8IBjbPAAoErBLfCAY20N0DgnJzhQADAQAAiXNlY3AyNTZrMaEDOuCwHy8jV3X8v9yYeZ_wu0L3nVDoCnD9WhTXv1K2HRWDdGNwgjbPg3VkcII20YV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-25_04-13-05__ddcea457-df7f-4699-a4c6-ba9796cb09e6__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.112.164
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['38847', '38848', '38849', '38850', '38851']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 38847:38847 -p 38848:38848 -p 38849:38849 -p 38850:38850 -p 38851:38851 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=38849 --rest-port=38847 --tcp-port=38848 --discv5-udp-port=38850 --rest-address=0.0.0.0 --nat=extip:172.18.112.164 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=51c1e097cc2137d6edeafdd4d4cdde0a53cfec711adedcafcfe3c6f94ef2dad0 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=38851 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QOwX02FsKcwzylsW9LmtJBW-SQp848WFvvJjuhBfu-AtLa8qQabWbvKrbRwr1SfKxN-YCSOIDQs0Sx8VRjA4PhsCgmlkgnY0gmlwhKwS3wiKbXVsdGlhZGRyc5YACASsEt8IBjbPAAoErBLfCAY20N0DgnJzhQADAQAAiXNlY3AyNTZrMaEDOuCwHy8jV3X8v9yYeZ_wu0L3nVDoCnD9WhTXv1K2HRWDdGNwgjbPg3VkcII20YV3YWt1MgU --filternode=/ip4/172.18.223.8/tcp/14031/p2p/16Uiu2HAmGcpiGNdSp9GqPU8GkggtDdRkjJrmKcHgZSKsdab9LJD2
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.112.164 waku 410b33591d10cbfcd54c6d41cf6433d81bc792c0c1d1596998946d54b5d11ba8
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 410b33591d10. Setting up logs at ./log/docker/node2_2024-11-25_04-13-05__ddcea457-df7f-4699-a4c6-ba9796cb09e6__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 38847
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38847/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38847/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.112.164/tcp/38848/p2p/16Uiu2HAmDKqCPUj14S4HCwcKsyXKu5WEt7ENUzfMvmTeJcbQ9Nxk","/ip4/172.18.112.164/tcp/38849/ws/p2p/16Uiu2HAmDKqCPUj14S4HCwcKsyXKu5WEt7ENUzfMvmTeJcbQ9Nxk"],"enrUri":"enr:-L24QH6n1proJYhEmO_by1ZFtR0n6sZqGN-mRRJD0VoWGsAVDd9C1N9IBCUf2ppLrlPc8DMwXjBOWVLs-ZWTs4P9O2ECgmlkgnY0gmlwhKwScKSKbXVsdGlhZGRyc5YACASsEnCkBpfAAAoErBJwpAaXwd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDCfNNO2WEhliXN_R-FWbgjAgvP5JdZCzz851hTrn_C8WDdGNwgpfAg3VkcIKXwoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38847/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.223.8/tcp/14031/p2p/16Uiu2HAmGcpiGNdSp9GqPU8GkggtDdRkjJrmKcHgZSKsdab9LJD2"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:14030/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38847/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "aa74a541-6067-4794-887e-fba3f9f5fabe", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"aa74a541-6067-4794-887e-fba3f9f5fabe","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38847/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:38847/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 1a7a4ca237d1
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 410b33591d10
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 1a7a4ca237d1. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.