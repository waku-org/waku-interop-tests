[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_invalid_request_id with id: 2024-12-14_04-11-36__853e8591-c7d2-4f90-9e89-ab17022ed180
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-14_04-11-36__853e8591-c7d2-4f90-9e89-ab17022ed180__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.202.142
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['10771', '10772', '10773', '10774', '10775']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 10771:10771 -p 10772:10772 -p 10773:10773 -p 10774:10774 -p 10775:10775 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=10773 --rest-port=10771 --tcp-port=10772 --discv5-udp-port=10774 --rest-address=0.0.0.0 --nat=extip:172.18.202.142 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=a7eb74ad1a168efbe90b79bee6bd7756cadbece4c5f81a7c6e9a6bdd0eef2e19 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=10775 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.202.142 waku 7bc9c9c468950bc481319ab2be4aef302e0dd72a3ca9dff2f6a5eff6daf53983
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 7bc9c9c46895. Setting up logs at ./log/docker/node1_2024-12-14_04-11-36__853e8591-c7d2-4f90-9e89-ab17022ed180__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 10771
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 60936a56aaa9. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10771/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10771/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.202.142/tcp/10772/p2p/16Uiu2HAmBZ3BLrpoLdEfcW8aUBYAYtrW98aMQ5Xp9caHGPghZvCS","/ip4/172.18.202.142/tcp/10773/ws/p2p/16Uiu2HAmBZ3BLrpoLdEfcW8aUBYAYtrW98aMQ5Xp9caHGPghZvCS"],"enrUri":"enr:-L24QJHmtO_2unwzvMp1NsX3IUZ3qJ_saLotKCK16HJp9sJQXOmpHLQyFdqNgNJp8sFlGZ8ngB9vvTmiEH1EuptZlX0CgmlkgnY0gmlwhKwSyo6KbXVsdGlhZGRyc5YACASsEsqOBioUAAoErBLKjgYqFd0DgnJzhQADAQAAiXNlY3AyNTZrMaEC754Gw4WLPGFz_ISijDyR83n1yzozD8QFg6ZGfqLXIuuDdGNwgioUg3VkcIIqFoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-14_04-11-36__853e8591-c7d2-4f90-9e89-ab17022ed180__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.176.7
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['62714', '62715', '62716', '62717', '62718']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 62714:62714 -p 62715:62715 -p 62716:62716 -p 62717:62717 -p 62718:62718 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=62716 --rest-port=62714 --tcp-port=62715 --discv5-udp-port=62717 --rest-address=0.0.0.0 --nat=extip:172.18.176.7 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=f2dfef4dcaeff23bbd0eccfb41fb352a9d145224511bde0fd83ff35d29ceddbd --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=62718 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QJHmtO_2unwzvMp1NsX3IUZ3qJ_saLotKCK16HJp9sJQXOmpHLQyFdqNgNJp8sFlGZ8ngB9vvTmiEH1EuptZlX0CgmlkgnY0gmlwhKwSyo6KbXVsdGlhZGRyc5YACASsEsqOBioUAAoErBLKjgYqFd0DgnJzhQADAQAAiXNlY3AyNTZrMaEC754Gw4WLPGFz_ISijDyR83n1yzozD8QFg6ZGfqLXIuuDdGNwgioUg3VkcIIqFoV3YWt1MgU --filternode=/ip4/172.18.202.142/tcp/10772/p2p/16Uiu2HAmBZ3BLrpoLdEfcW8aUBYAYtrW98aMQ5Xp9caHGPghZvCS
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.176.7 waku 059f6629b8f5ebe3ff86fb9ca3711bbc3405965fa92f1b9be62e2a581fd58863
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 059f6629b8f5. Setting up logs at ./log/docker/node2_2024-12-14_04-11-36__853e8591-c7d2-4f90-9e89-ab17022ed180__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 62714
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:62714/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:62714/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.176.7/tcp/62715/p2p/16Uiu2HAmAqzeE8LtakRQvbFfHB2a78CfsUjzLdnJ3gXp9GF6tGp2","/ip4/172.18.176.7/tcp/62716/ws/p2p/16Uiu2HAmAqzeE8LtakRQvbFfHB2a78CfsUjzLdnJ3gXp9GF6tGp2"],"enrUri":"enr:-L24QLuzXnpy6rYTgzcAN4KEn-z9RdHtVT6F34g4MI4Fj2eRTOhNR312UYUvj5DU68-pSTh2Tc5E3D4MpqSMK_2BVDcCgmlkgnY0gmlwhKwSsAeKbXVsdGlhZGRyc5YACASsErAHBvT7AAoErBKwBwb0_N0DgnJzhQADAQAAiXNlY3AyNTZrMaEC5RpYYXZe22pua2WsVhv6lDoXwR_dKDTBqOJ2C1pnXouDdGNwgvT7g3VkcIL0_YV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:62714/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.202.142/tcp/10772/p2p/16Uiu2HAmBZ3BLrpoLdEfcW8aUBYAYtrW98aMQ5Xp9caHGPghZvCS"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:10771/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:62714/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "a8ebac75-1521-49d3-ab4b-5161fbb2baa2", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"a8ebac75-1521-49d3-ab4b-5161fbb2baa2","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:62714/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:62714/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 7bc9c9c46895
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 059f6629b8f5
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 7bc9c9c46895. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.