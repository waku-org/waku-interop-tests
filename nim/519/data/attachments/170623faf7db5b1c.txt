[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_invalid_request_id with id: 2024-12-14_04-10-49__4d96a205-d2c0-40b4-bf38-d2fa420a2fef
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-14_04-10-49__4d96a205-d2c0-40b4-bf38-d2fa420a2fef__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.219.177
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['47533', '47534', '47535', '47536', '47537']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 47533:47533 -p 47534:47534 -p 47535:47535 -p 47536:47536 -p 47537:47537 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=47535 --rest-port=47533 --tcp-port=47534 --discv5-udp-port=47536 --rest-address=0.0.0.0 --nat=extip:172.18.219.177 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=5f5a7540b23d06231f9177d0ff2e78ffa5375fdfecebad80cbbdcf41ede644f3 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=47537 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.219.177 waku 8eb552506e003281ad69fe6f7cc63f23a6fb0794fc5f7d2746b0aecb5967e71e
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 8eb552506e00. Setting up logs at ./log/docker/node1_2024-12-14_04-10-49__4d96a205-d2c0-40b4-bf38-d2fa420a2fef__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 47533
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 70360a1e1bfe. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:47533/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:47533/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.219.177/tcp/47534/p2p/16Uiu2HAmSyMyFDy9rWMJuDaasQ758tw7JrSLniZsTezcTV57BUAE","/ip4/172.18.219.177/tcp/47535/ws/p2p/16Uiu2HAmSyMyFDy9rWMJuDaasQ758tw7JrSLniZsTezcTV57BUAE"],"enrUri":"enr:-L24QDjvIC49H_AYp8a2iNerfoo-19iv989aKIXpd4SxJV2LIoNv7l8ZNjauulBc37v_UJ4Kc-DR6mFWxFvsXE_QF7MCgmlkgnY0gmlwhKwS27GKbXVsdGlhZGRyc5YACASsEtuxBrmuAAoErBLbsQa5r90DgnJzhQADAQAAiXNlY3AyNTZrMaED1LiEa8iK7YjWtqVgjtUASGFrP3Im1ubM0xnDAFTIYFODdGNwgrmug3VkcIK5sIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-14_04-10-49__4d96a205-d2c0-40b4-bf38-d2fa420a2fef__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.132.253
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['37565', '37566', '37567', '37568', '37569']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 37565:37565 -p 37566:37566 -p 37567:37567 -p 37568:37568 -p 37569:37569 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=37567 --rest-port=37565 --tcp-port=37566 --discv5-udp-port=37568 --rest-address=0.0.0.0 --nat=extip:172.18.132.253 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=846a5683813eec72bbac7a86f5e59ed6be883279decffaadbe4144abccc9fcc8 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=37569 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QDjvIC49H_AYp8a2iNerfoo-19iv989aKIXpd4SxJV2LIoNv7l8ZNjauulBc37v_UJ4Kc-DR6mFWxFvsXE_QF7MCgmlkgnY0gmlwhKwS27GKbXVsdGlhZGRyc5YACASsEtuxBrmuAAoErBLbsQa5r90DgnJzhQADAQAAiXNlY3AyNTZrMaED1LiEa8iK7YjWtqVgjtUASGFrP3Im1ubM0xnDAFTIYFODdGNwgrmug3VkcIK5sIV3YWt1MgU --filternode=/ip4/172.18.219.177/tcp/47534/p2p/16Uiu2HAmSyMyFDy9rWMJuDaasQ758tw7JrSLniZsTezcTV57BUAE
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.132.253 waku 50b45d458733dff208b51356b6c1bf5a1bdafdbabe3e6998c1c326b4e33f65d3
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 50b45d458733. Setting up logs at ./log/docker/node2_2024-12-14_04-10-49__4d96a205-d2c0-40b4-bf38-d2fa420a2fef__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 37565
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:37565/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:37565/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.132.253/tcp/37566/p2p/16Uiu2HAmSVkT7Y2tPubBeiNC3LNTUpWu3pktooqSzCTorjH7YTxo","/ip4/172.18.132.253/tcp/37567/ws/p2p/16Uiu2HAmSVkT7Y2tPubBeiNC3LNTUpWu3pktooqSzCTorjH7YTxo"],"enrUri":"enr:-L24QI3pfLrjBcGRkaKwB4z9NN8szeIYFwXemwkbWkepqHz6PgEm-CgWoNAzXJApqw52DK5CCSzfav8SluRTQB5kBLsCgmlkgnY0gmlwhKwShP2KbXVsdGlhZGRyc5YACASsEoT9BpK-AAoErBKE_QaSv90DgnJzhQADAQAAiXNlY3AyNTZrMaEDzaWsYc_pGISm9q2MzIPi2YpOqgOul90CP2zfnTeDVISDdGNwgpK-g3VkcIKSwIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:37565/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.219.177/tcp/47534/p2p/16Uiu2HAmSyMyFDy9rWMJuDaasQ758tw7JrSLniZsTezcTV57BUAE"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:47533/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:37565/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "0e3befeb-877e-474f-81f1-12c99a7523d1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"0e3befeb-877e-474f-81f1-12c99a7523d1","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:37565/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:37565/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 8eb552506e00
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 50b45d458733
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 8eb552506e00. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.