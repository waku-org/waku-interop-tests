[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_invalid_request_id with id: 2024-12-14_04-11-12__958fb4fb-074b-4c42-b2a3-a2252c4b83b0
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-14_04-11-12__958fb4fb-074b-4c42-b2a3-a2252c4b83b0__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.235.136
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['58699', '58700', '58701', '58702', '58703']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 58699:58699 -p 58700:58700 -p 58701:58701 -p 58702:58702 -p 58703:58703 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=58701 --rest-port=58699 --tcp-port=58700 --discv5-udp-port=58702 --rest-address=0.0.0.0 --nat=extip:172.18.235.136 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=3fa2caae99c323e70debfd2a1b5deb3cbdfab7eae8e7afe83aeabd2c7eec30df --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=58703 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.235.136 waku 6585f0a796cb30e7d737228f0291a01d6c71707be56efc4f4e699a5b6c9fa0dc
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 6585f0a796cb. Setting up logs at ./log/docker/node1_2024-12-14_04-11-12__958fb4fb-074b-4c42-b2a3-a2252c4b83b0__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 58699
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 525d4d87e586. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:58699/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:58699/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.235.136/tcp/58700/p2p/16Uiu2HAmC7PamPcJoTDbXkgwRbo1wnnfbJguAvkjDEwPJyCG5aX3","/ip4/172.18.235.136/tcp/58701/ws/p2p/16Uiu2HAmC7PamPcJoTDbXkgwRbo1wnnfbJguAvkjDEwPJyCG5aX3"],"enrUri":"enr:-L24QLcZSQpVJrgHfv65kqtqp-NyjwKicoBQS8he4s5NHscydnmMMtnCAArs9_wFcOczmF0HgTOj08A1hI6xWjJwxNACgmlkgnY0gmlwhKwS64iKbXVsdGlhZGRyc5YACASsEuuIBuVMAAoErBLriAblTd0DgnJzhQADAQAAiXNlY3AyNTZrMaEC9-eu2dFdFWqKJEJk5_gGuMJHTcO_IqTbeaK_c-1hyWKDdGNwguVMg3VkcILlToV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-14_04-11-12__958fb4fb-074b-4c42-b2a3-a2252c4b83b0__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.188.210
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['63008', '63009', '63010', '63011', '63012']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 63008:63008 -p 63009:63009 -p 63010:63010 -p 63011:63011 -p 63012:63012 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=63010 --rest-port=63008 --tcp-port=63009 --discv5-udp-port=63011 --rest-address=0.0.0.0 --nat=extip:172.18.188.210 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=4cadc8c6acbcdad690cfc9eaf6f59b3bcbac5ab4c45c3b9fdce6a013be5cfad9 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=63012 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QLcZSQpVJrgHfv65kqtqp-NyjwKicoBQS8he4s5NHscydnmMMtnCAArs9_wFcOczmF0HgTOj08A1hI6xWjJwxNACgmlkgnY0gmlwhKwS64iKbXVsdGlhZGRyc5YACASsEuuIBuVMAAoErBLriAblTd0DgnJzhQADAQAAiXNlY3AyNTZrMaEC9-eu2dFdFWqKJEJk5_gGuMJHTcO_IqTbeaK_c-1hyWKDdGNwguVMg3VkcILlToV3YWt1MgU --filternode=/ip4/172.18.235.136/tcp/58700/p2p/16Uiu2HAmC7PamPcJoTDbXkgwRbo1wnnfbJguAvkjDEwPJyCG5aX3
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.188.210 waku ab06b54f3caa8f74b0000d6c22a7e374ccb7bea58be148f92c05708eb1abfd78
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID ab06b54f3caa. Setting up logs at ./log/docker/node2_2024-12-14_04-11-12__958fb4fb-074b-4c42-b2a3-a2252c4b83b0__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 63008
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:63008/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:63008/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.188.210/tcp/63009/p2p/16Uiu2HAkyhh6TRYh2zMH7zztjDiGPxZS7eRQy4G43vsuDbEDew2W","/ip4/172.18.188.210/tcp/63010/ws/p2p/16Uiu2HAkyhh6TRYh2zMH7zztjDiGPxZS7eRQy4G43vsuDbEDew2W"],"enrUri":"enr:-L24QOHMcmOTJb2KAne-voNRshiddGR7i2Qbhpo_mjrK5d_PCAIjgJq1le01cMfoGdCw-DeRjh0x7-X3tChxDEKEGZUCgmlkgnY0gmlwhKwSvNKKbXVsdGlhZGRyc5YACASsErzSBvYhAAoErBK80gb2It0DgnJzhQADAQAAiXNlY3AyNTZrMaECP4lNHngRPe9r3-ZU0lntWEJQSfHxgFQhehrSzhSm8heDdGNwgvYhg3VkcIL2I4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:63008/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.235.136/tcp/58700/p2p/16Uiu2HAmC7PamPcJoTDbXkgwRbo1wnnfbJguAvkjDEwPJyCG5aX3"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:58699/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:63008/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "bb71b51d-cc56-4b83-9531-ebe598717f35", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"bb71b51d-cc56-4b83-9531-ebe598717f35","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:63008/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:63008/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 6585f0a796cb
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id ab06b54f3caa
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 6585f0a796cb. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.