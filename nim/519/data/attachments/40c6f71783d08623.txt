[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_all_with_extra_field with id: 2024-12-14_04-11-48__35d5573b-5efd-44d8-9a7c-68c910101f09
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-14_04-11-48__35d5573b-5efd-44d8-9a7c-68c910101f09__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.140.22
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['3389', '3390', '3391', '3392', '3393']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 3389:3389 -p 3390:3390 -p 3391:3391 -p 3392:3392 -p 3393:3393 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=3391 --rest-port=3389 --tcp-port=3390 --discv5-udp-port=3392 --rest-address=0.0.0.0 --nat=extip:172.18.140.22 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=4e96703a4b3f8fd79ee3aab9a17ab3a7e9e23bc93cd51a09ac0b7ab4eeea3178 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=3393 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.140.22 waku 347fc36e72ed5666069f82aa8048f3e3ca1b3837928d69b49aa6109f41af5dfb
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 347fc36e72ed. Setting up logs at ./log/docker/node1_2024-12-14_04-11-48__35d5573b-5efd-44d8-9a7c-68c910101f09__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 3389
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 27a17fd04dd5. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:3389/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:3389/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.140.22/tcp/3390/p2p/16Uiu2HAm9m5beCUXciFsy1E1Ff8C9bs6wyY1mQPCeNAAaKdHSryi","/ip4/172.18.140.22/tcp/3391/ws/p2p/16Uiu2HAm9m5beCUXciFsy1E1Ff8C9bs6wyY1mQPCeNAAaKdHSryi"],"enrUri":"enr:-L24QA-Ho8zC8C9UQPcRLf_svMOXx5IwMjN3PNKql9nXdE0qBLm53dHXSRsOTEQAw8IDwtJut3iS_lV_jGwEzGcFf04CgmlkgnY0gmlwhKwSjBaKbXVsdGlhZGRyc5YACASsEowWBg0-AAoErBKMFgYNP90DgnJzhQADAQAAiXNlY3AyNTZrMaEC1PxbfeIseBcvtQW11lMeGK6sqRDkhQ0wWy8S4dNCZCWDdGNwgg0-g3VkcIINQIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-14_04-11-48__35d5573b-5efd-44d8-9a7c-68c910101f09__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.42.210
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['26894', '26895', '26896', '26897', '26898']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 26894:26894 -p 26895:26895 -p 26896:26896 -p 26897:26897 -p 26898:26898 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=26896 --rest-port=26894 --tcp-port=26895 --discv5-udp-port=26897 --rest-address=0.0.0.0 --nat=extip:172.18.42.210 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=53eb9dba50c901fc7f8c2ec1ae2ebfbbc6dcffff562bdd3e90df42fa0eab713a --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=26898 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QA-Ho8zC8C9UQPcRLf_svMOXx5IwMjN3PNKql9nXdE0qBLm53dHXSRsOTEQAw8IDwtJut3iS_lV_jGwEzGcFf04CgmlkgnY0gmlwhKwSjBaKbXVsdGlhZGRyc5YACASsEowWBg0-AAoErBKMFgYNP90DgnJzhQADAQAAiXNlY3AyNTZrMaEC1PxbfeIseBcvtQW11lMeGK6sqRDkhQ0wWy8S4dNCZCWDdGNwgg0-g3VkcIINQIV3YWt1MgU --filternode=/ip4/172.18.140.22/tcp/3390/p2p/16Uiu2HAm9m5beCUXciFsy1E1Ff8C9bs6wyY1mQPCeNAAaKdHSryi
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.42.210 waku 10018c164625d7ef9a5a42976908c17616901b46851200621e57900cc3b8155b
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 10018c164625. Setting up logs at ./log/docker/node2_2024-12-14_04-11-48__35d5573b-5efd-44d8-9a7c-68c910101f09__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 26894
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:26894/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:26894/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.42.210/tcp/26895/p2p/16Uiu2HAm9bCE8bwHqQxaVuzKzBxBg6fUNGY4Akq2cZLmkhVKrR7f","/ip4/172.18.42.210/tcp/26896/ws/p2p/16Uiu2HAm9bCE8bwHqQxaVuzKzBxBg6fUNGY4Akq2cZLmkhVKrR7f"],"enrUri":"enr:-L24QBSes-XSL_k3LaxTZK-gK7Jvli6i3GilituM9DqVrzrjSsPTnjUI9olB3whhpaOKFPcfW2DPbMMIAZcP3RC-f4wCgmlkgnY0gmlwhKwSKtKKbXVsdGlhZGRyc5YACASsEirSBmkPAAoErBIq0gZpEN0DgnJzhQADAQAAiXNlY3AyNTZrMaEC0nQLfYDRX_X2J75Km6YKKG9j2wWZPEiSnK6y3crcxqqDdGNwgmkPg3VkcIJpEYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:26894/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.140.22/tcp/3390/p2p/16Uiu2HAm9m5beCUXciFsy1E1Ff8C9bs6wyY1mQPCeNAAaKdHSryi"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:3389/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:26894/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "043e3be0-2922-4452-9ef9-1c2b84f4881c", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"043e3be0-2922-4452-9ef9-1c2b84f4881c","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:26894/filter/v2/subscriptions/all" -H "Content-Type: application/json" -d '{"requestId": 1, "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:26894/filter/v2/subscriptions/all. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 347fc36e72ed
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 10018c164625
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 347fc36e72ed. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.