{"uid":"4b4757e66a1912dae1a509f688f20b0f","children":[{"name":"Product defects","children":[{"name":"AssertionError: assert 'INVALID_QUERY: time range should be smaller than one day in nanos' in 'Request for stored messages with invalid end_time 2430446748420312064 is successful'\n +  where 'Request for stored messages with invalid end_time 2430446748420312064 is successful' = str(Exception('Request for stored messages with invalid end_time 2430446748420312064 is successful'))","children":[{"name":"test_time_filter_big_timestamp","uid":"48bdf6ce3a2a403f","parentUid":"8ec8ef33ec5005b8e04ec4f1e1df68bf","status":"failed","time":{"start":1739246747182,"stop":1739246748424,"duration":1242},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":2,"retriesStatusChange":false,"parameters":[],"tags":["@pytest.mark.usefixtures('node_setup')"]}],"uid":"8ec8ef33ec5005b8e04ec4f1e1df68bf"},{"name":"AssertionError: assert 'INVALID_QUERY: startTime should be before endTime' in 'Request for stored messages with start_time==end_time is successful'\n +  where 'Request for stored messages with start_time==end_time is successful' = str(Exception('Request for stored messages with start_time==end_time is successful'))","children":[{"name":"test_time_filter_start_time_equals_end_time","uid":"61ae9f959c16f884","parentUid":"4a56aaf662e0b66abafd4b12013a6e0b","status":"failed","time":{"start":1739246773150,"stop":1739246774395,"duration":1245},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":2,"retriesStatusChange":false,"parameters":[],"tags":["@pytest.mark.usefixtures('node_setup')"]},{"name":"test_time_filter_start_time_after_end_time","uid":"3c80ed5719e98e0c","parentUid":"4a56aaf662e0b66abafd4b12013a6e0b","status":"failed","time":{"start":1739247040505,"stop":1739247041749,"duration":1244},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":2,"retriesStatusChange":false,"parameters":[],"tags":["@pytest.mark.skipif(False, reason='Test works only with nwaku')","@pytest.mark.usefixtures('node_setup')"]}],"uid":"4a56aaf662e0b66abafd4b12013a6e0b"}],"uid":"8fb3a91ba5aaf9de24cc8a92edc82b5d"}],"name":"categories"}