[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_invalid_request_id with id: 2024-10-29_09-50-11__3a37638e-f614-4f37-9b7f-5373c16e2eaf
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-10-29_09-50-11__3a37638e-f614-4f37-9b7f-5373c16e2eaf__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.201.37
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['36776', '36777', '36778', '36779', '36780']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 36776:36776 -p 36777:36777 -p 36778:36778 -p 36779:36779 -p 36780:36780 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=36778 --rest-port=36776 --tcp-port=36777 --discv5-udp-port=36779 --rest-address=0.0.0.0 --nat=extip:172.18.201.37 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=db6613b98a87b1c5edbf45eaa399b5bbc2cd6fa75251d3ab7fc7199d9783592e --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=36780 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.201.37 waku 4633a1ce68db7a3e19152027ee4de59b6fbb790f983dd2d4bc17d1ffbf53b5b9
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 4633a1ce68db. Setting up logs at ./log/docker/node1_2024-10-29_09-50-11__3a37638e-f614-4f37-9b7f-5373c16e2eaf__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 36776
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 70e30d583d88. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:36776/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:36776/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.201.37/tcp/36777/p2p/16Uiu2HAkvDgG7WeM116e9rxTAmynBN1TuDTYnoJ4keU7PvsiHJ7t","/ip4/172.18.201.37/tcp/36778/ws/p2p/16Uiu2HAkvDgG7WeM116e9rxTAmynBN1TuDTYnoJ4keU7PvsiHJ7t"],"enrUri":"enr:-L24QOf06bmkyk78NnA67v3auwyPqBWEUyLAcw6KAPqpDt1pDdzOvsfS2u7GiZNXLRH13i8y5kxBaOQHZhtZizL-LkkCgmlkgnY0gmlwhKwSySWKbXVsdGlhZGRyc5YACASsEsklBo-pAAoErBLJJQaPqt0DgnJzhQADAQAAiXNlY3AyNTZrMaECC8kJDbYfM6XekaWOUEuZVe0YFF-HdkdwB1aMHwcoJoODdGNwgo-pg3VkcIKPq4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-10-29_09-50-11__3a37638e-f614-4f37-9b7f-5373c16e2eaf__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.208.162
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['8407', '8408', '8409', '8410', '8411']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 8407:8407 -p 8408:8408 -p 8409:8409 -p 8410:8410 -p 8411:8411 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=8409 --rest-port=8407 --tcp-port=8408 --discv5-udp-port=8410 --rest-address=0.0.0.0 --nat=extip:172.18.208.162 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=6be54d5b02f324b9f4aa798d1739fbad642ca8029cd9fb7cb6de5fb3393efa1c --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=8411 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QOf06bmkyk78NnA67v3auwyPqBWEUyLAcw6KAPqpDt1pDdzOvsfS2u7GiZNXLRH13i8y5kxBaOQHZhtZizL-LkkCgmlkgnY0gmlwhKwSySWKbXVsdGlhZGRyc5YACASsEsklBo-pAAoErBLJJQaPqt0DgnJzhQADAQAAiXNlY3AyNTZrMaECC8kJDbYfM6XekaWOUEuZVe0YFF-HdkdwB1aMHwcoJoODdGNwgo-pg3VkcIKPq4V3YWt1MgU --filternode=/ip4/172.18.201.37/tcp/36777/p2p/16Uiu2HAkvDgG7WeM116e9rxTAmynBN1TuDTYnoJ4keU7PvsiHJ7t
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.208.162 waku 7a37c5db46adf4771f2f73b93a48fd6aeed86fc130faa4c6c4e5dc55d86b2b3f
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 7a37c5db46ad. Setting up logs at ./log/docker/node2_2024-10-29_09-50-11__3a37638e-f614-4f37-9b7f-5373c16e2eaf__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 8407
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8407/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8407/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.208.162/tcp/8408/p2p/16Uiu2HAm6LFyBNWaFfx6TUJiAw1aucYjseHyPorysLxuSVdDRKhs","/ip4/172.18.208.162/tcp/8409/ws/p2p/16Uiu2HAm6LFyBNWaFfx6TUJiAw1aucYjseHyPorysLxuSVdDRKhs"],"enrUri":"enr:-L24QJ-X4EzowNjvX0__OWlB1oLIt8I7oOX4TR1_fS30W3YxJs3ivkeHdOzvq8Ui18NeYxYNC4e24r4cWN_btj4DTB4CgmlkgnY0gmlwhKwS0KKKbXVsdGlhZGRyc5YACASsEtCiBiDYAAoErBLQogYg2d0DgnJzhQADAQAAiXNlY3AyNTZrMaECog2A16CtMv17_BBybMdvXR8MKmio_rbmGDlj7VwAbEqDdGNwgiDYg3VkcIIg2oV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8407/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.201.37/tcp/36777/p2p/16Uiu2HAkvDgG7WeM116e9rxTAmynBN1TuDTYnoJ4keU7PvsiHJ7t"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:36776/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8407/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "f84f85bb-292f-44af-9ff9-ff9ebc4d5baa", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"f84f85bb-292f-44af-9ff9-ff9ebc4d5baa","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:8407/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:8407/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 4633a1ce68db
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 7a37c5db46ad
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 4633a1ce68db. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.