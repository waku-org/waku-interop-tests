[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_no_request_id with id: 2024-10-29_09-50-08__b3a184a0-82a4-4859-941c-a0e74ea02920
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-10-29_09-50-08__b3a184a0-82a4-4859-941c-a0e74ea02920__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.234.71
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['56378', '56379', '56380', '56381', '56382']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 56378:56378 -p 56379:56379 -p 56380:56380 -p 56381:56381 -p 56382:56382 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=56380 --rest-port=56378 --tcp-port=56379 --discv5-udp-port=56381 --rest-address=0.0.0.0 --nat=extip:172.18.234.71 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e13f65cb5a7796effe3c9254ddecab41d3888bab6c2bab611fb4ffb24062e8d6 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=56382 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.234.71 waku 0f0b390c77840a98b01515538a2c26f7b31fb109f0855a1dc0bc1a1e531f63a7
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 0f0b390c7784. Setting up logs at ./log/docker/node1_2024-10-29_09-50-08__b3a184a0-82a4-4859-941c-a0e74ea02920__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 56378
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container e7a90cb98ddd. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:56378/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:56378/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.234.71/tcp/56379/p2p/16Uiu2HAmFP6bSEdcyU2YFGFACcHCCacNvimJqLytAKihcgMuZmfR","/ip4/172.18.234.71/tcp/56380/ws/p2p/16Uiu2HAmFP6bSEdcyU2YFGFACcHCCacNvimJqLytAKihcgMuZmfR"],"enrUri":"enr:-L24QN4wqjKLVKnPOj9UV7ap5r9X5i3q-34uwDKwN_YV2EDtDgaekhkWtsgt_09WieI2kSoRpHPkwOPIbGIITiYuKNECgmlkgnY0gmlwhKwS6keKbXVsdGlhZGRyc5YACASsEupHBtw7AAoErBLqRwbcPN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDKIDT7LbRiVYak5H4tKUdLTaMOt41M6HPeiNs7o9NnOSDdGNwgtw7g3VkcILcPYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-10-29_09-50-08__b3a184a0-82a4-4859-941c-a0e74ea02920__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.169.63
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['13052', '13053', '13054', '13055', '13056']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 13052:13052 -p 13053:13053 -p 13054:13054 -p 13055:13055 -p 13056:13056 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=13054 --rest-port=13052 --tcp-port=13053 --discv5-udp-port=13055 --rest-address=0.0.0.0 --nat=extip:172.18.169.63 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=d56604c6d0a2cd08ffcb6940e11f0c972af6227e4a858f36335ef5fca3c8ee6e --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=13056 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QN4wqjKLVKnPOj9UV7ap5r9X5i3q-34uwDKwN_YV2EDtDgaekhkWtsgt_09WieI2kSoRpHPkwOPIbGIITiYuKNECgmlkgnY0gmlwhKwS6keKbXVsdGlhZGRyc5YACASsEupHBtw7AAoErBLqRwbcPN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDKIDT7LbRiVYak5H4tKUdLTaMOt41M6HPeiNs7o9NnOSDdGNwgtw7g3VkcILcPYV3YWt1MgU --filternode=/ip4/172.18.234.71/tcp/56379/p2p/16Uiu2HAmFP6bSEdcyU2YFGFACcHCCacNvimJqLytAKihcgMuZmfR
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.169.63 waku 8677eab8396beb80e11978c9fc2326ca43633b53eb69d99a2a045a0626a26ecd
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 8677eab8396b. Setting up logs at ./log/docker/node2_2024-10-29_09-50-08__b3a184a0-82a4-4859-941c-a0e74ea02920__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 13052
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:13052/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:13052/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.169.63/tcp/13053/p2p/16Uiu2HAm8hQqjsAd9YXUkkeAmA91fX3Nrhhw7A4LigH7HnavZism","/ip4/172.18.169.63/tcp/13054/ws/p2p/16Uiu2HAm8hQqjsAd9YXUkkeAmA91fX3Nrhhw7A4LigH7HnavZism"],"enrUri":"enr:-L24QJwkK5U0naSk3AuGnqoybZF6sCSXnOe21i8vG5eagbU_dguJKi4MAIAdSHV6y-kbJSIku-MvAwxZcnjQYJ-Chp8CgmlkgnY0gmlwhKwSqT-KbXVsdGlhZGRyc5YACASsEqk_BjL9AAoErBKpPwYy_t0DgnJzhQADAQAAiXNlY3AyNTZrMaECxTAa_V_lB_htiwc76bGrz4ciSERq_pbU77Qsibd5pHSDdGNwgjL9g3VkcIIy_4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:13052/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.234.71/tcp/56379/p2p/16Uiu2HAmFP6bSEdcyU2YFGFACcHCCacNvimJqLytAKihcgMuZmfR"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:56378/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:13052/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "7039bbca-6c1b-4726-a40e-1284874fc2bf", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"7039bbca-6c1b-4726-a40e-1284874fc2bf","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:13052/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:13052/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 0f0b390c7784
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 8677eab8396b
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 0f0b390c7784. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.