[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_pubsub_topic_string_instead_of_list with id: 2024-10-29_09-50-43__33f61576-ec13-4e74-a36b-55cbc3189e0b
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-10-29_09-50-43__33f61576-ec13-4e74-a36b-55cbc3189e0b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.106.107
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['54112', '54113', '54114', '54115', '54116']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 54112:54112 -p 54113:54113 -p 54114:54114 -p 54115:54115 -p 54116:54116 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=54114 --rest-port=54112 --tcp-port=54113 --discv5-udp-port=54115 --rest-address=0.0.0.0 --nat=extip:172.18.106.107 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=454273cce8a0d64a4a7bf8ea641aefabd216cef2088501fd70d0d7b23ebc01e2 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=54116 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.106.107 waku d2a743b1f30a4fc56596c7c784770a356929e5a11751c318fb7026f92cc26024
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID d2a743b1f30a. Setting up logs at ./log/docker/node1_2024-10-29_09-50-43__33f61576-ec13-4e74-a36b-55cbc3189e0b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 54112
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container c8ad63436097. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:54112/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:54112/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.106.107/tcp/54113/p2p/16Uiu2HAm2dNLJsb6RKvX7UQRCzRLQ2MeUVVFSdsmK9EquV8DcaE2","/ip4/172.18.106.107/tcp/54114/ws/p2p/16Uiu2HAm2dNLJsb6RKvX7UQRCzRLQ2MeUVVFSdsmK9EquV8DcaE2"],"enrUri":"enr:-L24QKQ_TMqtmL-rLVdu316hvOjHluBb6ETn-iYk-kvwcTXLGF9mMWwXJ2sUsSz1kwFKiztc5Pp-Ra0hAFqKFmVbwzoCgmlkgnY0gmlwhKwSamuKbXVsdGlhZGRyc5YACASsEmprBtNhAAoErBJqawbTYt0DgnJzhQADAQAAiXNlY3AyNTZrMaECawDTUk_9CriMib7ZEIQx8ORGRKXzNyjGISD3wdaDHy-DdGNwgtNhg3VkcILTY4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-10-29_09-50-43__33f61576-ec13-4e74-a36b-55cbc3189e0b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.130.217
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['44301', '44302', '44303', '44304', '44305']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 44301:44301 -p 44302:44302 -p 44303:44303 -p 44304:44304 -p 44305:44305 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=44303 --rest-port=44301 --tcp-port=44302 --discv5-udp-port=44304 --rest-address=0.0.0.0 --nat=extip:172.18.130.217 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=82eb7ccc08c12aee1203248eea0a0b25bdd0ee0dc3bba8a8cb325dec4f5eeaf8 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=44305 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QKQ_TMqtmL-rLVdu316hvOjHluBb6ETn-iYk-kvwcTXLGF9mMWwXJ2sUsSz1kwFKiztc5Pp-Ra0hAFqKFmVbwzoCgmlkgnY0gmlwhKwSamuKbXVsdGlhZGRyc5YACASsEmprBtNhAAoErBJqawbTYt0DgnJzhQADAQAAiXNlY3AyNTZrMaECawDTUk_9CriMib7ZEIQx8ORGRKXzNyjGISD3wdaDHy-DdGNwgtNhg3VkcILTY4V3YWt1MgU --filternode=/ip4/172.18.106.107/tcp/54113/p2p/16Uiu2HAm2dNLJsb6RKvX7UQRCzRLQ2MeUVVFSdsmK9EquV8DcaE2
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.130.217 waku cf6a68c7f83a9ec15fa319ce02a348ed0e0d058336b30f013e5c39b750a2a87f
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID cf6a68c7f83a. Setting up logs at ./log/docker/node2_2024-10-29_09-50-43__33f61576-ec13-4e74-a36b-55cbc3189e0b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 44301
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:44301/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:44301/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.130.217/tcp/44302/p2p/16Uiu2HAmQZKQBvj5SwHVgvScoj8FUoGbpYn9ceVWgRzx7rpTY4qd","/ip4/172.18.130.217/tcp/44303/ws/p2p/16Uiu2HAmQZKQBvj5SwHVgvScoj8FUoGbpYn9ceVWgRzx7rpTY4qd"],"enrUri":"enr:-L24QEePIEUVfobsEIw--hceA5QSnQ4EBc1FWdFE4VQTp-txRwjESBAXPU0QjXR3WIfGoz3xs_2_Rmi41MvC-X_RzNICgmlkgnY0gmlwhKwSgtmKbXVsdGlhZGRyc5YACASsEoLZBq0OAAoErBKC2QatD90DgnJzhQADAQAAiXNlY3AyNTZrMaEDsNhMU7VRDkMgjCbFIZ_5qKNb-tt4y03Mjus2On7fg4iDdGNwgq0Og3VkcIKtEIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:44301/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.106.107/tcp/54113/p2p/16Uiu2HAm2dNLJsb6RKvX7UQRCzRLQ2MeUVVFSdsmK9EquV8DcaE2"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:54112/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:44301/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "caa376a6-776c-492b-b809-82f11632335a", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"caa376a6-776c-492b-b809-82f11632335a","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:44301/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": "/test/1/waku-filter/proto", "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:44301/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id d2a743b1f30a
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id cf6a68c7f83a
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container d2a743b1f30a. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.