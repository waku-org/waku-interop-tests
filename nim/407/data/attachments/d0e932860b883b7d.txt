[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_valid_payloads_random_user_message_limit with id: 2024-10-26_04-05-19__d7805667-632b-46b8-9c4f-e67686706652
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-10-26_04-05-19__d7805667-632b-46b8-9c4f-e67686706652__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.106.127
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['4571', '4572', '4573', '4574', '4575']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes ['/home/runner/work/waku-interop-tests/waku-interop-tests/rln_tree_sqps_1:/etc/rln_tree', '/home/runner/work/waku-interop-tests/waku-interop-tests/keystore_sqps_1:/keystore']
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 4571:4571 -p 4572:4572 -p 4573:4573 -p 4574:4574 -p 4575:4575 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=4573 --rest-port=4571 --tcp-port=4572 --discv5-udp-port=4574 --rest-address=0.0.0.0 --nat=extip:172.18.106.127 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=fbe3fea1bd7c4feab2e4952efbf5cad81816f9caf37ff6d8ad31f8bca9b5c202 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=4575 --metrics-logging=true --relay=true --rln-relay-membership-index=1 --rln-relay-user-message-limit=3 --rln-relay-epoch-sec=1 --rln-relay=true --rln-relay-cred-path=/keystore/keystore.json --rln-relay-cred-password=password
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.106.127 waku 8e38c13fc9326e485096d12a887eedb6e1d3823f3936b3d873aa970fc68beb01
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 8e38c13fc932. Setting up logs at ./log/docker/node1_2024-10-26_04-05-19__d7805667-632b-46b8-9c4f-e67686706652__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 4571
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container fc73f51c724e. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:4571/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Initializing","protocolsHealth":[{"Rln Relay":"Ready"}]}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:4571/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[{"Rln Relay":"Ready"}]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:4571/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.106.127/tcp/4572/p2p/16Uiu2HAmMDZKnjfwhhcfpEGumZdAYo5CN8n9S82nkTSUD9pdvNfP","/ip4/172.18.106.127/tcp/4573/ws/p2p/16Uiu2HAmMDZKnjfwhhcfpEGumZdAYo5CN8n9S82nkTSUD9pdvNfP"],"enrUri":"enr:-LO4QC2OhTsm63YV6UBC118h3fGp62a58-UDppeVLIpub5gbVUrc48E5y0KbH90U5BpDa2HXvDJ0AOl-jynRCHZtJxUBgmlkgnY0gmlwhKwSan-KbXVsdGlhZGRyc4wACgSsEmp_BhHd3QOCcnOFAAMBAACJc2VjcDI1NmsxoQN_NV2CMYX-NPMEcG3RgT3YJuQnF1zu3A7ZxwjV_qg6joN0Y3CCEdyDdWRwghHehXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-10-26_04-05-19__d7805667-632b-46b8-9c4f-e67686706652__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.109.159
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['19569', '19570', '19571', '19572', '19573']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes ['/home/runner/work/waku-interop-tests/waku-interop-tests/rln_tree_degb_2:/etc/rln_tree', '/home/runner/work/waku-interop-tests/waku-interop-tests/keystore_degb_2:/keystore']
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 19569:19569 -p 19570:19570 -p 19571:19571 -p 19572:19572 -p 19573:19573 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=19571 --rest-port=19569 --tcp-port=19570 --discv5-udp-port=19572 --rest-address=0.0.0.0 --nat=extip:172.18.109.159 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b1384dbaaaa409a7efa21f8b776abe1cf1d2ecd0defcd07258ead6ae71f73fca --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=19573 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QC2OhTsm63YV6UBC118h3fGp62a58-UDppeVLIpub5gbVUrc48E5y0KbH90U5BpDa2HXvDJ0AOl-jynRCHZtJxUBgmlkgnY0gmlwhKwSan-KbXVsdGlhZGRyc4wACgSsEmp_BhHd3QOCcnOFAAMBAACJc2VjcDI1NmsxoQN_NV2CMYX-NPMEcG3RgT3YJuQnF1zu3A7ZxwjV_qg6joN0Y3CCEdyDdWRwghHehXdha3UyAQ --rln-relay-membership-index=1 --rln-relay-user-message-limit=3 --rln-relay-epoch-sec=1 --rln-relay=true --rln-relay-cred-path=/keystore/keystore.json --rln-relay-cred-password=password
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.109.159 waku 6ec467668ff5454bab3e0abaaa989e4a00705ba94ab20f1938cccfd37887060a
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 6ec467668ff5. Setting up logs at ./log/docker/node2_2024-10-26_04-05-19__d7805667-632b-46b8-9c4f-e67686706652__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 19569
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:19569/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[{"Rln Relay":"Ready"}]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:19569/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.109.159/tcp/19570/p2p/16Uiu2HAmLfr4PxKJxuRFkZFPBNj7PnhEeUyddXV9BxuxoLCB9sdi","/ip4/172.18.109.159/tcp/19571/ws/p2p/16Uiu2HAmLfr4PxKJxuRFkZFPBNj7PnhEeUyddXV9BxuxoLCB9sdi"],"enrUri":"enr:-LO4QBMzwT96dNY0xLyXqPwETrSe-Ht0WELbiW6j3H_J9KLcc85Ap4C3cvqQ6FE6iFurJUg_f9XlUk-hRXOWzUEeDtoBgmlkgnY0gmlwhKwSbZ-KbXVsdGlhZGRyc4wACgSsEm2fBkxz3QOCcnOFAAMBAACJc2VjcDI1NmsxoQN3FbOFo5wzG2wSo9sHQ0_N3KIrVyG6XUtnbZzJTVCf2YN0Y3CCTHKDdWRwgkx0hXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:19569/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.106.127/tcp/4572/p2p/16Uiu2HAmMDZKnjfwhhcfpEGumZdAYo5CN8n9S82nkTSUD9pdvNfP"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:4571/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/1/0"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:19569/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/1/0"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m tests.relay.test_rln:test_rln.py:128 Running test with payload A simple string
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:4571/relay/v1/messages/%2Fwaku%2F2%2Frs%2F1%2F0" -H "Content-Type: application/json" -d '{"payload": "SGVsbG8gV29ybGQh", "contentTopic": "/test/1/waku-rln-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m tests.relay.test_rln:test_rln.py:128 Running test with payload An integer
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:4571/relay/v1/messages/%2Fwaku%2F2%2Frs%2F1%2F0" -H "Content-Type: application/json" -d '{"payload": "MTIzNDU2Nzg5MA==", "contentTopic": "/test/1/waku-rln-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m tests.relay.test_rln:test_rln.py:128 Running test with payload A dictionary
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:4571/relay/v1/messages/%2Fwaku%2F2%2Frs%2F1%2F0" -H "Content-Type: application/json" -d '{"payload": "eyJrZXkiOiAidmFsdWUifQ==", "contentTopic": "/test/1/waku-rln-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 8e38c13fc932
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 6ec467668ff5
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 8e38c13fc932. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.