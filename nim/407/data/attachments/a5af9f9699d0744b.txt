[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_invalid_request_id with id: 2024-10-26_04-07-38__76a72118-716c-42c5-a58a-12d5e3df8f35
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-10-26_04-07-38__76a72118-716c-42c5-a58a-12d5e3df8f35__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.168.176
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['35799', '35800', '35801', '35802', '35803']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 35799:35799 -p 35800:35800 -p 35801:35801 -p 35802:35802 -p 35803:35803 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=35801 --rest-port=35799 --tcp-port=35800 --discv5-udp-port=35802 --rest-address=0.0.0.0 --nat=extip:172.18.168.176 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=5c5dffa8ceb2b277c7ba4beac42a043c06e5c30cc0bcb3f71a7fe55d32cd18ac --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=35803 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.168.176 waku d7616ed750db2bae30c346252064f60acd37678295953b5af12cd47e2771983e
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID d7616ed750db. Setting up logs at ./log/docker/node1_2024-10-26_04-07-38__76a72118-716c-42c5-a58a-12d5e3df8f35__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 35799
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 271ecdd55efd. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:35799/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:35799/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.168.176/tcp/35800/p2p/16Uiu2HAm8HcGDS3JxWuhyArhFs6FT3YuhK8nWwq8BksaiMLx2tiF","/ip4/172.18.168.176/tcp/35801/ws/p2p/16Uiu2HAm8HcGDS3JxWuhyArhFs6FT3YuhK8nWwq8BksaiMLx2tiF"],"enrUri":"enr:-LO4QKs2GuFpUYCzVHRxnegoOpNkAuDyZ6M5gDTIK6EDm540OZGFa2p09ZaIJiHAho_5WHny17zAMi6crFzSRCt9yg0BgmlkgnY0gmlwhKwSqLCKbXVsdGlhZGRyc4wACgSsEqiwBovZ3QOCcnOFAAMBAACJc2VjcDI1NmsxoQK_FxS1cZTeigekKsEHrCFNFN5ZxFbYgzNmjbsjJn03fIN0Y3CCi9iDdWRwgovahXdha3UyBQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-10-26_04-07-38__76a72118-716c-42c5-a58a-12d5e3df8f35__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.156.174
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['44378', '44379', '44380', '44381', '44382']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 44378:44378 -p 44379:44379 -p 44380:44380 -p 44381:44381 -p 44382:44382 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=44380 --rest-port=44378 --tcp-port=44379 --discv5-udp-port=44381 --rest-address=0.0.0.0 --nat=extip:172.18.156.174 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=f7100a2083ad25cdaada658fcbbafe0eaf2437dedcdd4fad7b3fa06eb2fdc8fc --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=44382 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-LO4QKs2GuFpUYCzVHRxnegoOpNkAuDyZ6M5gDTIK6EDm540OZGFa2p09ZaIJiHAho_5WHny17zAMi6crFzSRCt9yg0BgmlkgnY0gmlwhKwSqLCKbXVsdGlhZGRyc4wACgSsEqiwBovZ3QOCcnOFAAMBAACJc2VjcDI1NmsxoQK_FxS1cZTeigekKsEHrCFNFN5ZxFbYgzNmjbsjJn03fIN0Y3CCi9iDdWRwgovahXdha3UyBQ --filternode=/ip4/172.18.168.176/tcp/35800/p2p/16Uiu2HAm8HcGDS3JxWuhyArhFs6FT3YuhK8nWwq8BksaiMLx2tiF
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.156.174 waku 337d84c4ba27fbbce13eb02fcc266e8f4565892d16156f601d33dc60da8f9082
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 337d84c4ba27. Setting up logs at ./log/docker/node2_2024-10-26_04-07-38__76a72118-716c-42c5-a58a-12d5e3df8f35__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 44378
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:44378/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:44378/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.156.174/tcp/44379/p2p/16Uiu2HAmGrov3Lg8cjDcinjKZb22Ax2hE42krkqZ8WLTYrqpNZRd","/ip4/172.18.156.174/tcp/44380/ws/p2p/16Uiu2HAmGrov3Lg8cjDcinjKZb22Ax2hE42krkqZ8WLTYrqpNZRd"],"enrUri":"enr:-LO4QMxjOlPZTofZW_uDJz53wSBXDU7PW0qalz-92kMzxAbRJCRxbmW5kQ7yqugylnjRX9UMpZzwYaEHmv-d5_Mson0BgmlkgnY0gmlwhKwSnK6KbXVsdGlhZGRyc4wACgSsEpyuBq1c3QOCcnOFAAMBAACJc2VjcDI1NmsxoQM-desMV8xBSEnbEzvzr_vsu9atb7Ixdpeb30dYEI1PDIN0Y3CCrVuDdWRwgq1dhXdha3UyAA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:44378/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.168.176/tcp/35800/p2p/16Uiu2HAm8HcGDS3JxWuhyArhFs6FT3YuhK8nWwq8BksaiMLx2tiF"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:35799/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:44378/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "7153d861-3a1c-448f-91a1-14a61bc18608", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"7153d861-3a1c-448f-91a1-14a61bc18608","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:44378/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:44378/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id d7616ed750db
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 337d84c4ba27
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container d7616ed750db. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.