[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2024-12-25_16-55-25__788713b7-3ef1-4bea-969c-826c65afb626
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-25_16-55-25__788713b7-3ef1-4bea-969c-826c65afb626__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.66.65
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['59235', '59236', '59237', '59238', '59239']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 59235:59235 -p 59236:59236 -p 59237:59237 -p 59238:59238 -p 59239:59239 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=59237 --rest-port=59235 --tcp-port=59236 --discv5-udp-port=59238 --rest-address=0.0.0.0 --nat=extip:172.18.66.65 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b8cf13ddf6a52a3a0ee6e6bf5d6ce6ea51dc6f0eade36c5dd3a3c1cacdd0ebfc --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=59239 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.66.65 waku cda3ffe7aef3828c228b9a159d5fdbf61d86d32e72a59be2fa9d76b5fc00309e
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID cda3ffe7aef3. Setting up logs at ./log/docker/node1_2024-12-25_16-55-25__788713b7-3ef1-4bea-969c-826c65afb626__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 59235
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container b32a0b3c8b4f. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:59235/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:59235/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.66.65/tcp/59236/p2p/16Uiu2HAmHHMeMH4DLrPZsawFKsuJE1v62qAXu1t1hFoqYacXZ14k","/ip4/172.18.66.65/tcp/59237/ws/p2p/16Uiu2HAmHHMeMH4DLrPZsawFKsuJE1v62qAXu1t1hFoqYacXZ14k"],"enrUri":"enr:-L24QPHZvcUw9kGhNyGGWxsK7fQcSYx_osVfID29g4o-XS_oFejwYwEraKuGn2lNMX82XLEu55vvU5oScZQKYBh8Sb0CgmlkgnY0gmlwhKwSQkGKbXVsdGlhZGRyc5YACASsEkJBBudkAAoErBJCQQbnZd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDRL-79Jubg5GfGIpByf_M1k1fpbQ7-c1qmmFxTS2BqlmDdGNwgudkg3VkcILnZoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-25_16-55-25__788713b7-3ef1-4bea-969c-826c65afb626__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.179.182
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['46651', '46652', '46653', '46654', '46655']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 46651:46651 -p 46652:46652 -p 46653:46653 -p 46654:46654 -p 46655:46655 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=46653 --rest-port=46651 --tcp-port=46652 --discv5-udp-port=46654 --rest-address=0.0.0.0 --nat=extip:172.18.179.182 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=402ead37f8cd08ee030b230fb313420aa5b2f206a32f89fe11b7a5fdb6dae6c4 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=46655 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QPHZvcUw9kGhNyGGWxsK7fQcSYx_osVfID29g4o-XS_oFejwYwEraKuGn2lNMX82XLEu55vvU5oScZQKYBh8Sb0CgmlkgnY0gmlwhKwSQkGKbXVsdGlhZGRyc5YACASsEkJBBudkAAoErBJCQQbnZd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDRL-79Jubg5GfGIpByf_M1k1fpbQ7-c1qmmFxTS2BqlmDdGNwgudkg3VkcILnZoV3YWt1MgU --filternode=/ip4/172.18.66.65/tcp/59236/p2p/16Uiu2HAmHHMeMH4DLrPZsawFKsuJE1v62qAXu1t1hFoqYacXZ14k
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.179.182 waku 9b537223e06adbd6d81fceeba4f4f4dcac41315e676482a251ba919baf4af766
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 9b537223e06a. Setting up logs at ./log/docker/node2_2024-12-25_16-55-25__788713b7-3ef1-4bea-969c-826c65afb626__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 46651
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:46651/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:46651/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.179.182/tcp/46652/p2p/16Uiu2HAmUdbTgrtJadsX1b84hKZJshEA9kZiJMxTZwupsoXmxuTn","/ip4/172.18.179.182/tcp/46653/ws/p2p/16Uiu2HAmUdbTgrtJadsX1b84hKZJshEA9kZiJMxTZwupsoXmxuTn"],"enrUri":"enr:-L24QNl6PirzYre6fWoRuvqi1kByuMWGDQWHUZ4PZiiBtwF7VHu4G_4njcLWRr2Hm1SQ7CShd1M0HExyMt3sVp4BfAwCgmlkgnY0gmlwhKwSs7aKbXVsdGlhZGRyc5YACASsErO2BrY8AAoErBKztga2Pd0DgnJzhQADAQAAiXNlY3AyNTZrMaED7V-HT87rWvH10pXKFLAniP_nqiUr7vENs8Ny0LLIEvmDdGNwgrY8g3VkcIK2PoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:46651/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.66.65/tcp/59236/p2p/16Uiu2HAmHHMeMH4DLrPZsawFKsuJE1v62qAXu1t1hFoqYacXZ14k"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:59235/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:46651/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "84f938e9-890f-4f6e-8503-ee002d2c8b2f", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"84f938e9-890f-4f6e-8503-ee002d2c8b2f","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:46651/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:46651/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id cda3ffe7aef3
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 9b537223e06a
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container cda3ffe7aef3. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.