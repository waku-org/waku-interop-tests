[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_invalid_request_id with id: 2025-01-24_04-07-56__731e4496-87bc-4283-8746-64d8c6d6404d
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-24_04-07-56__731e4496-87bc-4283-8746-64d8c6d6404d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.203.132
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['57192', '57193', '57194', '57195', '57196']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 57192:57192 -p 57193:57193 -p 57194:57194 -p 57195:57195 -p 57196:57196 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=57194 --rest-port=57192 --tcp-port=57193 --discv5-udp-port=57195 --rest-address=0.0.0.0 --nat=extip:172.18.203.132 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ac6b392fce7c130fbbd0674abd087adcc222d5dcc0f1a57f4982316fb2df1760 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=57196 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.203.132 waku f7fad2441827baabc6006f9e37655b314879f2bd62f761ed683d72d540230ff7
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID f7fad2441827. Setting up logs at ./log/docker/node1_2025-01-24_04-07-56__731e4496-87bc-4283-8746-64d8c6d6404d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 57192
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container b7c7677910c9. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:57192/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:57192/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.203.132/tcp/57193/p2p/16Uiu2HAkxybZwgnkd36z37Av5WvdC9R5qm7K7HvMxA9WLA1uN8dx","/ip4/172.18.203.132/tcp/57194/ws/p2p/16Uiu2HAkxybZwgnkd36z37Av5WvdC9R5qm7K7HvMxA9WLA1uN8dx"],"enrUri":"enr:-L24QBm3taF30oe60hKKRWQA4GKrC_0QQ052SSGLZMd7p8yhTqFybRTqYUcDUcO-zP3pXuHZaNMtCVaVju515yNBPTECgmlkgnY0gmlwhKwSy4SKbXVsdGlhZGRyc5YACASsEsuEBt9pAAoErBLLhAbfat0DgnJzhQADAQAAiXNlY3AyNTZrMaECNMCorgC0h5ORyAdLFBFZ3btu7Z0Ot60PNVlbb9aU2aODdGNwgt9pg3VkcILfa4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-24_04-07-56__731e4496-87bc-4283-8746-64d8c6d6404d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.191.62
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['20488', '20489', '20490', '20491', '20492']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 20488:20488 -p 20489:20489 -p 20490:20490 -p 20491:20491 -p 20492:20492 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=20490 --rest-port=20488 --tcp-port=20489 --discv5-udp-port=20491 --rest-address=0.0.0.0 --nat=extip:172.18.191.62 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=fcc30cb8c25c2cda58856469ee990b00ca2ad6fbade45ba97a8e980fcdcb9f51 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=20492 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QBm3taF30oe60hKKRWQA4GKrC_0QQ052SSGLZMd7p8yhTqFybRTqYUcDUcO-zP3pXuHZaNMtCVaVju515yNBPTECgmlkgnY0gmlwhKwSy4SKbXVsdGlhZGRyc5YACASsEsuEBt9pAAoErBLLhAbfat0DgnJzhQADAQAAiXNlY3AyNTZrMaECNMCorgC0h5ORyAdLFBFZ3btu7Z0Ot60PNVlbb9aU2aODdGNwgt9pg3VkcILfa4V3YWt1MgU --filternode=/ip4/172.18.203.132/tcp/57193/p2p/16Uiu2HAkxybZwgnkd36z37Av5WvdC9R5qm7K7HvMxA9WLA1uN8dx
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.191.62 waku 101f96b028787072a9830134120b607c711e3b42fcda40bfa276ac6521d290b5
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 101f96b02878. Setting up logs at ./log/docker/node2_2025-01-24_04-07-56__731e4496-87bc-4283-8746-64d8c6d6404d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 20488
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:20488/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:20488/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.191.62/tcp/20489/p2p/16Uiu2HAmCRcKvPVjcvQKB5jA5UTUNTKFHEdM46ifZqhcNKG8tJXB","/ip4/172.18.191.62/tcp/20490/ws/p2p/16Uiu2HAmCRcKvPVjcvQKB5jA5UTUNTKFHEdM46ifZqhcNKG8tJXB"],"enrUri":"enr:-L24QG-G9RGo_t8KITvVuzo4OETOWAnNcFlV3c5pcHqXRJ2SOvLXgRjMlCpVOduV-GvZGyvXhWOk-1ItKwvllVQcaAsCgmlkgnY0gmlwhKwSvz6KbXVsdGlhZGRyc5YACASsEr8-BlAJAAoErBK_PgZQCt0DgnJzhQADAQAAiXNlY3AyNTZrMaEC_JKMHVJg9BaWdONaqHXpqEARkqJvd4uDWsq-5BAK3AKDdGNwglAJg3VkcIJQC4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:20488/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.203.132/tcp/57193/p2p/16Uiu2HAkxybZwgnkd36z37Av5WvdC9R5qm7K7HvMxA9WLA1uN8dx"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:57192/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:20488/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "f028172f-7bad-462b-bcde-3afa8ad6690b", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"f028172f-7bad-462b-bcde-3afa8ad6690b","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:20488/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:20488/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id f7fad2441827
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 101f96b02878
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container f7fad2441827. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.