[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2024-12-20_04-10-40__23cb09cd-4e7d-48a3-a2c5-7943c978a80f
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-20_04-10-40__23cb09cd-4e7d-48a3-a2c5-7943c978a80f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.70.216
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['58805', '58806', '58807', '58808', '58809']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 58805:58805 -p 58806:58806 -p 58807:58807 -p 58808:58808 -p 58809:58809 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=58807 --rest-port=58805 --tcp-port=58806 --discv5-udp-port=58808 --rest-address=0.0.0.0 --nat=extip:172.18.70.216 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=9a5a80cfdda6e4834c8238f01fb300dfbbe9e90a2dcedfc4310fd30dc5bdaacc --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=58809 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.70.216 waku 6a88a11247fcd9729b5c0d7bda7b7441155e809023354111ee7e8ef66da53892
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 6a88a11247fc. Setting up logs at ./log/docker/node1_2024-12-20_04-10-40__23cb09cd-4e7d-48a3-a2c5-7943c978a80f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 58805
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container fedc329d33d7. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:58805/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:58805/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.70.216/tcp/58806/p2p/16Uiu2HAmUxLjjQfyu4S3NNPExdUGuzS1CxxQQDGS39vCZ4Ei3a9J","/ip4/172.18.70.216/tcp/58807/ws/p2p/16Uiu2HAmUxLjjQfyu4S3NNPExdUGuzS1CxxQQDGS39vCZ4Ei3a9J"],"enrUri":"enr:-L24QDmVUdL6BorDogKK3pbBUxx06ptsn8fB5XXlVmaT5aS7bxcgi-HlWar7RVG8qkHU0GU-qkQrWSMVZZCTOrBebH0CgmlkgnY0gmlwhKwSRtiKbXVsdGlhZGRyc5YACASsEkbYBuW2AAoErBJG2Ablt90DgnJzhQADAQAAiXNlY3AyNTZrMaED8izqiRsZiorQHIrz4itBXo1z4sqfJuecpnS7CmD86EWDdGNwguW2g3VkcILluIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-20_04-10-40__23cb09cd-4e7d-48a3-a2c5-7943c978a80f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.50.181
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['33981', '33982', '33983', '33984', '33985']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 33981:33981 -p 33982:33982 -p 33983:33983 -p 33984:33984 -p 33985:33985 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=33983 --rest-port=33981 --tcp-port=33982 --discv5-udp-port=33984 --rest-address=0.0.0.0 --nat=extip:172.18.50.181 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=bbdebd4fc10cb781a488c63bc0d121c50bb112efabcbc0b6fe37bfd68cbcdafe --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=33985 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QDmVUdL6BorDogKK3pbBUxx06ptsn8fB5XXlVmaT5aS7bxcgi-HlWar7RVG8qkHU0GU-qkQrWSMVZZCTOrBebH0CgmlkgnY0gmlwhKwSRtiKbXVsdGlhZGRyc5YACASsEkbYBuW2AAoErBJG2Ablt90DgnJzhQADAQAAiXNlY3AyNTZrMaED8izqiRsZiorQHIrz4itBXo1z4sqfJuecpnS7CmD86EWDdGNwguW2g3VkcILluIV3YWt1MgU --filternode=/ip4/172.18.70.216/tcp/58806/p2p/16Uiu2HAmUxLjjQfyu4S3NNPExdUGuzS1CxxQQDGS39vCZ4Ei3a9J
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.50.181 waku 27c96e0a70a6cb0c05d19c3640a7f60a5b21d06f02fefeece7911c935186b820
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 27c96e0a70a6. Setting up logs at ./log/docker/node2_2024-12-20_04-10-40__23cb09cd-4e7d-48a3-a2c5-7943c978a80f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 33981
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33981/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33981/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.50.181/tcp/33982/p2p/16Uiu2HAmHcJCQZhZoWey9ZPTYbDyrjZ562bXYq6wZmwMHXCaeC1m","/ip4/172.18.50.181/tcp/33983/ws/p2p/16Uiu2HAmHcJCQZhZoWey9ZPTYbDyrjZ562bXYq6wZmwMHXCaeC1m"],"enrUri":"enr:-L24QEj7CyL1dijnfGC4vPvO5BW_ODqWn47eV_zvwj452oszb4VVKrbN_hVmR2fvzBTJ6icSEfvxb5uTgTxVOy9GcW0CgmlkgnY0gmlwhKwSMrWKbXVsdGlhZGRyc5YACASsEjK1BoS-AAoErBIytQaEv90DgnJzhQADAQAAiXNlY3AyNTZrMaEDSZnfJ8LibgzgLbOxAnfd99nFowf6X__-el9Q06Hz-PCDdGNwgoS-g3VkcIKEwIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:33981/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.70.216/tcp/58806/p2p/16Uiu2HAmUxLjjQfyu4S3NNPExdUGuzS1CxxQQDGS39vCZ4Ei3a9J"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:58805/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:33981/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "fb570d97-a194-40c3-b92b-fb447eb9037b", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"fb570d97-a194-40c3-b92b-fb447eb9037b","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:33981/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:33981/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 6a88a11247fc
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 27c96e0a70a6
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 6a88a11247fc. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.