[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_payload_equal_or_more_150_kb with id: 2024-12-20_04-14-23__e643dff7-0435-403a-8c36-45cd90a808db
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-20_04-14-23__e643dff7-0435-403a-8c36-45cd90a808db__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.246.227
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['7474', '7475', '7476', '7477', '7478']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 7474:7474 -p 7475:7475 -p 7476:7476 -p 7477:7477 -p 7478:7478 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=7476 --rest-port=7474 --tcp-port=7475 --discv5-udp-port=7477 --rest-address=0.0.0.0 --nat=extip:172.18.246.227 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=6cdcdbd07fe575aded7f58b22939f62aacd8dcdf6772e76d3573d5efd18a8a73 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=7478 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.246.227 waku d4f56ae53c38b9251715ea63462e96b00d996a86c719df62978fa1d6ac23e5a4
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID d4f56ae53c38. Setting up logs at ./log/docker/node1_2024-12-20_04-14-23__e643dff7-0435-403a-8c36-45cd90a808db__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 7474
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 2f95e7cc03ca. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7474/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7474/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.246.227/tcp/7475/p2p/16Uiu2HAm3FCjPeTqhVD3E6CPt6fJTt9UktYq1UgoVdSrX1uWqZMW","/ip4/172.18.246.227/tcp/7476/ws/p2p/16Uiu2HAm3FCjPeTqhVD3E6CPt6fJTt9UktYq1UgoVdSrX1uWqZMW"],"enrUri":"enr:-L24QK30kvpHTt8DUr_wmHh_7ipADkz2PO4PUpF01iLKyYhxUd51Y8L_5-4KlFozVfpU-GALr3Lqo47fUDeEnWTmy_MCgmlkgnY0gmlwhKwS9uOKbXVsdGlhZGRyc5YACASsEvbjBh0zAAoErBL24wYdNN0DgnJzhQADAQAAiXNlY3AyNTZrMaECdC7gp0X5gfYXslbWnkY25E03zcdkIRV9BS1RvfJ-NfWDdGNwgh0zg3VkcIIdNYV3YWt1MgE"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-20_04-14-23__e643dff7-0435-403a-8c36-45cd90a808db__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.178.171
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['23174', '23175', '23176', '23177', '23178']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 23174:23174 -p 23175:23175 -p 23176:23176 -p 23177:23177 -p 23178:23178 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=23176 --rest-port=23174 --tcp-port=23175 --discv5-udp-port=23177 --rest-address=0.0.0.0 --nat=extip:172.18.178.171 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=eb7f9afcfd55c6c5e4ce6bceab5c28ca8bc62acf2b82c976b9e3f0201c7fdeab --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=23178 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-L24QK30kvpHTt8DUr_wmHh_7ipADkz2PO4PUpF01iLKyYhxUd51Y8L_5-4KlFozVfpU-GALr3Lqo47fUDeEnWTmy_MCgmlkgnY0gmlwhKwS9uOKbXVsdGlhZGRyc5YACASsEvbjBh0zAAoErBL24wYdNN0DgnJzhQADAQAAiXNlY3AyNTZrMaECdC7gp0X5gfYXslbWnkY25E03zcdkIRV9BS1RvfJ-NfWDdGNwgh0zg3VkcIIdNYV3YWt1MgE
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.178.171 waku 4fe815aec22d44d9cd138697de572ceb42bf632a1aed31f406ae59e49d8075b6
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 4fe815aec22d. Setting up logs at ./log/docker/node2_2024-12-20_04-14-23__e643dff7-0435-403a-8c36-45cd90a808db__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 23174
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:23174/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:23174/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.178.171/tcp/23175/p2p/16Uiu2HAkxhAFe3nqFjs5Ujxe5gNSRvsGiYBfLSB57Qf3C1yttMcJ","/ip4/172.18.178.171/tcp/23176/ws/p2p/16Uiu2HAkxhAFe3nqFjs5Ujxe5gNSRvsGiYBfLSB57Qf3C1yttMcJ"],"enrUri":"enr:-L24QG5LaaODZeMnAwsuE9jU6CNykY0buAO8ZUAe9h1c0ZkRAxjQCAcgJIj4_wCNeXA0hDP394LWxHus2VILuYIsEa0CgmlkgnY0gmlwhKwSsquKbXVsdGlhZGRyc5YACASsErKrBlqHAAoErBKyqwZaiN0DgnJzhQADAQAAiXNlY3AyNTZrMaECMIq91SBtH3iWDGUmlM5IS0pctL9_ntgit3JY9z_it3eDdGNwglqHg3VkcIJaiYV3YWt1MgE"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:23174/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.246.227/tcp/7475/p2p/16Uiu2HAm3FCjPeTqhVD3E6CPt6fJTt9UktYq1UgoVdSrX1uWqZMW"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:7474/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:23174/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:7474/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7474/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1734668066537154816,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:23174/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1734668066537154816,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[35mDEBUG   [0m tests.relay.test_publish:test_publish.py:55 Running test with payload length of 204800 bytes
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:7474/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
[35mDEBUG   [0m tests.relay.test_publish:test_publish.py:55 Running test with payload length of 1048576 bytes
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:7474/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Failed to publish: Message size exceeded maximum of 153600 bytes'
[35mDEBUG   [0m tests.relay.test_publish:test_publish.py:55 Running test with payload length of 10485760 bytes
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:7474/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Failed to publish: Message size exceeded maximum of 153600 bytes'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id d4f56ae53c38
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 4fe815aec22d
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container d4f56ae53c38. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.