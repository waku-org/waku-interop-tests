[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_invalid_request_id with id: 2024-12-20_04-10-38__6e5c2b46-f955-491f-a942-81bf2514614d
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-20_04-10-38__6e5c2b46-f955-491f-a942-81bf2514614d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.17.212
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['53704', '53705', '53706', '53707', '53708']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 53704:53704 -p 53705:53705 -p 53706:53706 -p 53707:53707 -p 53708:53708 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=53706 --rest-port=53704 --tcp-port=53705 --discv5-udp-port=53707 --rest-address=0.0.0.0 --nat=extip:172.18.17.212 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=df22a3d6b483acedee942ee59d2f5afbe35cdcabc606eebda9d23d6b60cd2ea9 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=53708 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.17.212 waku affdab0c90703068a21d846bf249cf26536ad1be8481692bc6f5fad26f7ca4c4
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID affdab0c9070. Setting up logs at ./log/docker/node1_2024-12-20_04-10-38__6e5c2b46-f955-491f-a942-81bf2514614d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 53704
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container c99f716a0d81. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:53704/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:53704/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.17.212/tcp/53705/p2p/16Uiu2HAm8rQKKZxKXFqXKHcgLY8sbvQ7vqQw9kFg1MSNHiovHY2f","/ip4/172.18.17.212/tcp/53706/ws/p2p/16Uiu2HAm8rQKKZxKXFqXKHcgLY8sbvQ7vqQw9kFg1MSNHiovHY2f"],"enrUri":"enr:-L24QGOJ9tVqqEx8u4kxmnHVTRMKmZSfaIGFNlUdlIFIyaw2dTf_LcmLvSo2QQwTVyu8QI3ybmCMTA4wxCQEJjyf16ECgmlkgnY0gmlwhKwSEdSKbXVsdGlhZGRyc5YACASsEhHUBtHJAAoErBIR1AbRyt0DgnJzhQADAQAAiXNlY3AyNTZrMaECx329XMmZNHDvLr-eciGH0Tm0s86gL8FQBYDge3k-WIyDdGNwgtHJg3VkcILRy4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-20_04-10-38__6e5c2b46-f955-491f-a942-81bf2514614d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.16.216
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['12210', '12211', '12212', '12213', '12214']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 12210:12210 -p 12211:12211 -p 12212:12212 -p 12213:12213 -p 12214:12214 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=12212 --rest-port=12210 --tcp-port=12211 --discv5-udp-port=12213 --rest-address=0.0.0.0 --nat=extip:172.18.16.216 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=da1fb91dfacba1aa83714c5168efecc2561bfeac9c083d69fea8b2cefdf9acbb --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=12214 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QGOJ9tVqqEx8u4kxmnHVTRMKmZSfaIGFNlUdlIFIyaw2dTf_LcmLvSo2QQwTVyu8QI3ybmCMTA4wxCQEJjyf16ECgmlkgnY0gmlwhKwSEdSKbXVsdGlhZGRyc5YACASsEhHUBtHJAAoErBIR1AbRyt0DgnJzhQADAQAAiXNlY3AyNTZrMaECx329XMmZNHDvLr-eciGH0Tm0s86gL8FQBYDge3k-WIyDdGNwgtHJg3VkcILRy4V3YWt1MgU --filternode=/ip4/172.18.17.212/tcp/53705/p2p/16Uiu2HAm8rQKKZxKXFqXKHcgLY8sbvQ7vqQw9kFg1MSNHiovHY2f
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.16.216 waku 8c03dcf05fd02e7370ffabb3081175acdb5b7166bd65a3e533bb5489985017b2
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 8c03dcf05fd0. Setting up logs at ./log/docker/node2_2024-12-20_04-10-38__6e5c2b46-f955-491f-a942-81bf2514614d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 12210
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:12210/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:12210/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.16.216/tcp/12211/p2p/16Uiu2HAmDKKdPgeJiuM1z4fr8ceQLpUF7ej6Wx2dJ8qV3U42GoUD","/ip4/172.18.16.216/tcp/12212/ws/p2p/16Uiu2HAmDKKdPgeJiuM1z4fr8ceQLpUF7ej6Wx2dJ8qV3U42GoUD"],"enrUri":"enr:-L24QJBaeb018rNwutiEwsSBzX0-7Jsa08-lh_CWKPpdcVYUFb5rzMMRzjDb77NJpZJCcnHILHck13BDqfpLB-ZUtSQCgmlkgnY0gmlwhKwSENiKbXVsdGlhZGRyc5YACASsEhDYBi-zAAoErBIQ2AYvtN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDCdHeNpuAvstD3TFjZOu9gXe2Gd0uKZKcEJwyobC5dqqDdGNwgi-zg3VkcIIvtYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:12210/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.17.212/tcp/53705/p2p/16Uiu2HAm8rQKKZxKXFqXKHcgLY8sbvQ7vqQw9kFg1MSNHiovHY2f"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:53704/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:12210/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1f8e05db-144f-41e4-af62-38ea6b2bda0f", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"1f8e05db-144f-41e4-af62-38ea6b2bda0f","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:12210/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:12210/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id affdab0c9070
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 8c03dcf05fd0
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container affdab0c9070. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.