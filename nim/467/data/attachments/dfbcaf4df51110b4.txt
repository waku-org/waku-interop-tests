[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_no_request_id with id: 2024-11-27_15-06-04__36020ee1-79c1-43b4-aef0-3c1a7be0fe6a
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-27_15-06-04__36020ee1-79c1-43b4-aef0-3c1a7be0fe6a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.25.112
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['25746', '25747', '25748', '25749', '25750']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 25746:25746 -p 25747:25747 -p 25748:25748 -p 25749:25749 -p 25750:25750 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=25748 --rest-port=25746 --tcp-port=25747 --discv5-udp-port=25749 --rest-address=0.0.0.0 --nat=extip:172.18.25.112 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=bae1daa717fda74e4feb2daff4f3fb5d149aa379d04bdfc74cc4b852a2fbf33f --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=25750 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.25.112 waku fe9a3b2cd1b1bfe4f765d08c745e6f85e7e404a48fa641029fe626f9686ddec6
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID fe9a3b2cd1b1. Setting up logs at ./log/docker/node1_2024-11-27_15-06-04__36020ee1-79c1-43b4-aef0-3c1a7be0fe6a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 25746
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container cf71298a2966. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:25746/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:25746/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.25.112/tcp/25747/p2p/16Uiu2HAmBJP86u3PJEGmkynVuxcHYeqHQBxsPzKyQ8TXFnYasFP1","/ip4/172.18.25.112/tcp/25748/ws/p2p/16Uiu2HAmBJP86u3PJEGmkynVuxcHYeqHQBxsPzKyQ8TXFnYasFP1"],"enrUri":"enr:-L24QHV54zs2kgG6GavlPGnQuZocdIkp87d1d6KpqgbdxoDycm78F5PGzsrjt9rvCt2NfgUrVxi0riar6pIVaZ9dJbECgmlkgnY0gmlwhKwSGXCKbXVsdGlhZGRyc5YACASsEhlwBmSTAAoErBIZcAZklN0DgnJzhQADAQAAiXNlY3AyNTZrMaEC69zdfGXQmGjGc72LsKlCh7Ozfy_4o4G9KfpPAKUCyHSDdGNwgmSTg3VkcIJklYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-27_15-06-04__36020ee1-79c1-43b4-aef0-3c1a7be0fe6a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.122.73
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['44559', '44560', '44561', '44562', '44563']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 44559:44559 -p 44560:44560 -p 44561:44561 -p 44562:44562 -p 44563:44563 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=44561 --rest-port=44559 --tcp-port=44560 --discv5-udp-port=44562 --rest-address=0.0.0.0 --nat=extip:172.18.122.73 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=6babba67e4b515b7342d7c135fd33bef6e66e11f9c34c81e5cf65981c3adceb2 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=44563 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QHV54zs2kgG6GavlPGnQuZocdIkp87d1d6KpqgbdxoDycm78F5PGzsrjt9rvCt2NfgUrVxi0riar6pIVaZ9dJbECgmlkgnY0gmlwhKwSGXCKbXVsdGlhZGRyc5YACASsEhlwBmSTAAoErBIZcAZklN0DgnJzhQADAQAAiXNlY3AyNTZrMaEC69zdfGXQmGjGc72LsKlCh7Ozfy_4o4G9KfpPAKUCyHSDdGNwgmSTg3VkcIJklYV3YWt1MgU --filternode=/ip4/172.18.25.112/tcp/25747/p2p/16Uiu2HAmBJP86u3PJEGmkynVuxcHYeqHQBxsPzKyQ8TXFnYasFP1
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.122.73 waku 6afd003e75aca7624bbd4a22f2791cf10d2f1c182634e2ab05e65b98904b85c1
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 6afd003e75ac. Setting up logs at ./log/docker/node2_2024-11-27_15-06-04__36020ee1-79c1-43b4-aef0-3c1a7be0fe6a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 44559
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:44559/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:44559/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.122.73/tcp/44560/p2p/16Uiu2HAkyM2bFo2seLLCPXfrhDA4K7P1BcC23P6f91CtTLZywueH","/ip4/172.18.122.73/tcp/44561/ws/p2p/16Uiu2HAkyM2bFo2seLLCPXfrhDA4K7P1BcC23P6f91CtTLZywueH"],"enrUri":"enr:-L24QBrWR3GYtv1vkrzAwAJNIN2WM73-95FVfr6kfc3SSBK7RsEskO-Q87CBDxz2HslefHfV5uYVG0npJ5m1xYV-t_ICgmlkgnY0gmlwhKwSekmKbXVsdGlhZGRyc5YACASsEnpJBq4QAAoErBJ6SQauEd0DgnJzhQADAQAAiXNlY3AyNTZrMaECOj4mKUDYuhP6-mc7AD8ztYB1vjrSphevoYl2xtKwwHKDdGNwgq4Qg3VkcIKuEoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:44559/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.25.112/tcp/25747/p2p/16Uiu2HAmBJP86u3PJEGmkynVuxcHYeqHQBxsPzKyQ8TXFnYasFP1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:25746/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:44559/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "451d92f0-12e5-4d79-83de-0bc1e4ae5be3", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"451d92f0-12e5-4d79-83de-0bc1e4ae5be3","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:44559/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:44559/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id fe9a3b2cd1b1
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 6afd003e75ac
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container fe9a3b2cd1b1. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.