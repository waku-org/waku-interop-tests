[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_no_request_id with id: 2024-11-27_15-06-39__6851a120-b2da-4dac-8f77-8be6c7f85183
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-27_15-06-39__6851a120-b2da-4dac-8f77-8be6c7f85183__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.78.248
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['57851', '57852', '57853', '57854', '57855']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 57851:57851 -p 57852:57852 -p 57853:57853 -p 57854:57854 -p 57855:57855 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=57853 --rest-port=57851 --tcp-port=57852 --discv5-udp-port=57854 --rest-address=0.0.0.0 --nat=extip:172.18.78.248 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=fca689b347eed29ec7ca06bd55e13d0df7e2cc0dd7b3c9efeeac8e4dad1db56b --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=57855 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.78.248 waku 7e231e52d31b513dcf5ae761e23e402a8cbde3c6b872108dd07cd82aaab5b7fc
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 7e231e52d31b. Setting up logs at ./log/docker/node1_2024-11-27_15-06-39__6851a120-b2da-4dac-8f77-8be6c7f85183__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 57851
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 804490da4f70. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:57851/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:57851/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.78.248/tcp/57852/p2p/16Uiu2HAmSWVfTG34NDbGjWAXvwHoK7AF6AcB2mAYBWjdJ6ugdXtF","/ip4/172.18.78.248/tcp/57853/ws/p2p/16Uiu2HAmSWVfTG34NDbGjWAXvwHoK7AF6AcB2mAYBWjdJ6ugdXtF"],"enrUri":"enr:-L24QPxIdjLR9FDkHyFtqskHPQWegwgPS-K9KZBK8HgWnjkuFV_anSa_P5A-r_79mNJn-cu0K1mued4rvQaLJ-YxHMUCgmlkgnY0gmlwhKwSTviKbXVsdGlhZGRyc5YACASsEk74BuH8AAoErBJO-Abh_d0DgnJzhQADAQAAiXNlY3AyNTZrMaEDzdaIwLs2djextdx_I1bi6lMHBIAW5ooeEQmqdqLa8ySDdGNwguH8g3VkcILh_oV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-27_15-06-39__6851a120-b2da-4dac-8f77-8be6c7f85183__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.58.73
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['43366', '43367', '43368', '43369', '43370']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 43366:43366 -p 43367:43367 -p 43368:43368 -p 43369:43369 -p 43370:43370 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=43368 --rest-port=43366 --tcp-port=43367 --discv5-udp-port=43369 --rest-address=0.0.0.0 --nat=extip:172.18.58.73 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=dbb3d819edea329ae23ba5eae3632e296accf840a97b0e861d0ad9d65aafa3d4 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=43370 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QPxIdjLR9FDkHyFtqskHPQWegwgPS-K9KZBK8HgWnjkuFV_anSa_P5A-r_79mNJn-cu0K1mued4rvQaLJ-YxHMUCgmlkgnY0gmlwhKwSTviKbXVsdGlhZGRyc5YACASsEk74BuH8AAoErBJO-Abh_d0DgnJzhQADAQAAiXNlY3AyNTZrMaEDzdaIwLs2djextdx_I1bi6lMHBIAW5ooeEQmqdqLa8ySDdGNwguH8g3VkcILh_oV3YWt1MgU --filternode=/ip4/172.18.78.248/tcp/57852/p2p/16Uiu2HAmSWVfTG34NDbGjWAXvwHoK7AF6AcB2mAYBWjdJ6ugdXtF
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.58.73 waku ece0922a103b28a410ef262f3f8200d140a6663c1c08bdadaed168a1b2652dac
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID ece0922a103b. Setting up logs at ./log/docker/node2_2024-11-27_15-06-39__6851a120-b2da-4dac-8f77-8be6c7f85183__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 43366
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:43366/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:43366/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.58.73/tcp/43367/p2p/16Uiu2HAm2xaoAFcjLgnq5BgbdncoveMUAmBZiaqgoprzAJSct6hE","/ip4/172.18.58.73/tcp/43368/ws/p2p/16Uiu2HAm2xaoAFcjLgnq5BgbdncoveMUAmBZiaqgoprzAJSct6hE"],"enrUri":"enr:-L24QOr2p01mTJ5N9lL9maV_GBA_YA9WrulGi8ilmpLFtsDQPDulswUnzyPc4xuBmK5q4kqu-P8IkrcP_lw4K-zgiQ8CgmlkgnY0gmlwhKwSOkmKbXVsdGlhZGRyc5YACASsEjpJBqlnAAoErBI6SQapaN0DgnJzhQADAQAAiXNlY3AyNTZrMaECb-zz58D2V7QSO_TYmhiKA6OKhcit8sziF_kWpPyGPlmDdGNwgqlng3VkcIKpaYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:43366/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.78.248/tcp/57852/p2p/16Uiu2HAmSWVfTG34NDbGjWAXvwHoK7AF6AcB2mAYBWjdJ6ugdXtF"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:57851/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:43366/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "956a36aa-4d34-4812-a5cf-08367fdb16ee", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"956a36aa-4d34-4812-a5cf-08367fdb16ee","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:43366/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:43366/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 7e231e52d31b
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id ece0922a103b
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 7e231e52d31b. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.