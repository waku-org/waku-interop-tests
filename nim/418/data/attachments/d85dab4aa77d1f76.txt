[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_invalid_request_id with id: 2024-11-03_04-09-09__bf40f6a8-cbe1-48cc-a92f-741c6b62c1e6
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-03_04-09-09__bf40f6a8-cbe1-48cc-a92f-741c6b62c1e6__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.130.67
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['30148', '30149', '30150', '30151', '30152']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 30148:30148 -p 30149:30149 -p 30150:30150 -p 30151:30151 -p 30152:30152 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=30150 --rest-port=30148 --tcp-port=30149 --discv5-udp-port=30151 --rest-address=0.0.0.0 --nat=extip:172.18.130.67 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=a8ddf89cc2d6374c502665221ee7b8c93ebd03f5bf3c06f117047bba87b8bf23 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=30152 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.130.67 waku 281fe0173f6ca894ae91b15457dc90cd20e1c49cbf98ef91d348d90696027c77
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 281fe0173f6c. Setting up logs at ./log/docker/node1_2024-11-03_04-09-09__bf40f6a8-cbe1-48cc-a92f-741c6b62c1e6__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 30148
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container c471246cbc32. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30148/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30148/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.130.67/tcp/30149/p2p/16Uiu2HAm99KieaBQPw9MjEuQrYtf7UYUxRccEqwS64kJBLw39CAQ","/ip4/172.18.130.67/tcp/30150/ws/p2p/16Uiu2HAm99KieaBQPw9MjEuQrYtf7UYUxRccEqwS64kJBLw39CAQ"],"enrUri":"enr:-L24QPDd3WbRpOQB8c9DYGDCfWzrP9G6cfOJgq_FW1kU2I-8TeFv1R7_MKrE1OY_mL4DIu-QgEGDwpGr3cUWcp8G0wsCgmlkgnY0gmlwhKwSgkOKbXVsdGlhZGRyc5YACASsEoJDBnXFAAoErBKCQwZ1xt0DgnJzhQADAQAAiXNlY3AyNTZrMaECy9NqKf_DYGAsMSyICAM3MOWPAlrI6cqPFvtY2InUQI2DdGNwgnXFg3VkcIJ1x4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-03_04-09-09__bf40f6a8-cbe1-48cc-a92f-741c6b62c1e6__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.123.216
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['63365', '63366', '63367', '63368', '63369']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 63365:63365 -p 63366:63366 -p 63367:63367 -p 63368:63368 -p 63369:63369 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=63367 --rest-port=63365 --tcp-port=63366 --discv5-udp-port=63368 --rest-address=0.0.0.0 --nat=extip:172.18.123.216 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=80303cabfbb9d8a424a16ea0bdb470accff3d5da56a1ba4e1cbe7daaae57ddb4 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=63369 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QPDd3WbRpOQB8c9DYGDCfWzrP9G6cfOJgq_FW1kU2I-8TeFv1R7_MKrE1OY_mL4DIu-QgEGDwpGr3cUWcp8G0wsCgmlkgnY0gmlwhKwSgkOKbXVsdGlhZGRyc5YACASsEoJDBnXFAAoErBKCQwZ1xt0DgnJzhQADAQAAiXNlY3AyNTZrMaECy9NqKf_DYGAsMSyICAM3MOWPAlrI6cqPFvtY2InUQI2DdGNwgnXFg3VkcIJ1x4V3YWt1MgU --filternode=/ip4/172.18.130.67/tcp/30149/p2p/16Uiu2HAm99KieaBQPw9MjEuQrYtf7UYUxRccEqwS64kJBLw39CAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.123.216 waku 45ed2ed94b6a66e7ccc1bcb8e56eb7bb6d1d4f8e6b1b557597c3dbd9fda0693c
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 45ed2ed94b6a. Setting up logs at ./log/docker/node2_2024-11-03_04-09-09__bf40f6a8-cbe1-48cc-a92f-741c6b62c1e6__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 63365
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:63365/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:63365/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.123.216/tcp/63366/p2p/16Uiu2HAmBmg1xtLzDaST3j7LEDu4MF5gNvCYcjrkTJkhs5aSRwWE","/ip4/172.18.123.216/tcp/63367/ws/p2p/16Uiu2HAmBmg1xtLzDaST3j7LEDu4MF5gNvCYcjrkTJkhs5aSRwWE"],"enrUri":"enr:-L24QJIuuLIIOIkDdWlfQ0HUEi009_TMiWVihbOjiH6V1nv0Ot-3dbY834HLJ2i4cEScfPMQlo-mrouoaQ-4dkpbiD0CgmlkgnY0gmlwhKwSe9iKbXVsdGlhZGRyc5YACASsEnvYBveGAAoErBJ72Ab3h90DgnJzhQADAQAAiXNlY3AyNTZrMaEC8tqmOg7E0JyR41dfpolx2xg1qaMupbiqva_db7Hq4CeDdGNwgveGg3VkcIL3iIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:63365/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.130.67/tcp/30149/p2p/16Uiu2HAm99KieaBQPw9MjEuQrYtf7UYUxRccEqwS64kJBLw39CAQ"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:30148/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:63365/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "85e74981-0d08-4ab1-bf7c-808417d490a5", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"85e74981-0d08-4ab1-bf7c-808417d490a5","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:63365/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:63365/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 281fe0173f6c
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 45ed2ed94b6a
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 281fe0173f6c. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.