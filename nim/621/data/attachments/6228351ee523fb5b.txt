[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2025-01-19_04-02-43__33552d1f-ac6b-40fb-a9c9-c94912d6fd01
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-19_04-02-43__33552d1f-ac6b-40fb-a9c9-c94912d6fd01__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.103.19
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['39375', '39376', '39377', '39378', '39379']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 39375:39375 -p 39376:39376 -p 39377:39377 -p 39378:39378 -p 39379:39379 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=39377 --rest-port=39375 --tcp-port=39376 --discv5-udp-port=39378 --rest-address=0.0.0.0 --nat=extip:172.18.103.19 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ed6a6eeced5f5e1ad0e28c95bf11ebf7a96756a4358dd7c319f5a65fc4ec684a --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=39379 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.103.19 waku 50edbe466ce0cd62fa50d9b752b895bcf64adea2e32179b05c8f7eceaa69c083
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 50edbe466ce0. Setting up logs at ./log/docker/node1_2025-01-19_04-02-43__33552d1f-ac6b-40fb-a9c9-c94912d6fd01__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 39375
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 78611b2d4586. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:39375/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:39375/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.103.19/tcp/39376/p2p/16Uiu2HAmUYGU9S2MB2JnwESm2oogfkfvi3zTjoCe543MjwKCxcPj","/ip4/172.18.103.19/tcp/39377/ws/p2p/16Uiu2HAmUYGU9S2MB2JnwESm2oogfkfvi3zTjoCe543MjwKCxcPj"],"enrUri":"enr:-L24QFxhntl35-aDdD99E23sqGev8ls0dKBU-c7W6d8SEBIPSnRz9vD3g0ituXjG4vjjDFVqY-ZfsbVz3QULPGuZHIsCgmlkgnY0gmlwhKwSZxOKbXVsdGlhZGRyc5YACASsEmcTBpnQAAoErBJnEwaZ0d0DgnJzhQADAQAAiXNlY3AyNTZrMaED7AIma5BbAV4XC9zv0ZBWptecl_1LVQ4yFqgrAqlrkxqDdGNwgpnQg3VkcIKZ0oV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-19_04-02-43__33552d1f-ac6b-40fb-a9c9-c94912d6fd01__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.117.42
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['43200', '43201', '43202', '43203', '43204']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 43200:43200 -p 43201:43201 -p 43202:43202 -p 43203:43203 -p 43204:43204 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=43202 --rest-port=43200 --tcp-port=43201 --discv5-udp-port=43203 --rest-address=0.0.0.0 --nat=extip:172.18.117.42 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=49b8bfbb0179faede6e4f0c82c4d7d29fdd145495a528e8ecf25b4b68f9c5dca --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=43204 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QFxhntl35-aDdD99E23sqGev8ls0dKBU-c7W6d8SEBIPSnRz9vD3g0ituXjG4vjjDFVqY-ZfsbVz3QULPGuZHIsCgmlkgnY0gmlwhKwSZxOKbXVsdGlhZGRyc5YACASsEmcTBpnQAAoErBJnEwaZ0d0DgnJzhQADAQAAiXNlY3AyNTZrMaED7AIma5BbAV4XC9zv0ZBWptecl_1LVQ4yFqgrAqlrkxqDdGNwgpnQg3VkcIKZ0oV3YWt1MgU --filternode=/ip4/172.18.103.19/tcp/39376/p2p/16Uiu2HAmUYGU9S2MB2JnwESm2oogfkfvi3zTjoCe543MjwKCxcPj
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.117.42 waku 766615c0cb44e2656abf340f604fd3e595856c06f4c53274865bd9878f65e4c8
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 766615c0cb44. Setting up logs at ./log/docker/node2_2025-01-19_04-02-43__33552d1f-ac6b-40fb-a9c9-c94912d6fd01__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 43200
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:43200/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:43200/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.117.42/tcp/43201/p2p/16Uiu2HAmTDQwP7PehWSnbRZwKC9D5hvv6Qkva7cbmh93CHMwLJwt","/ip4/172.18.117.42/tcp/43202/ws/p2p/16Uiu2HAmTDQwP7PehWSnbRZwKC9D5hvv6Qkva7cbmh93CHMwLJwt"],"enrUri":"enr:-L24QPiQJFhInAcAkrnAzF_HE08Mx4ewZOvXCivxfVsYr8GePTJBZNWq2RRZFo68IWHciQg2jAKvsMYeNaYDM-mLjWwCgmlkgnY0gmlwhKwSdSqKbXVsdGlhZGRyc5YACASsEnUqBqjBAAoErBJ1Kgaowt0DgnJzhQADAQAAiXNlY3AyNTZrMaED2FIBHkxKeEPkoTXvZ5UDliG9F00tUsvD78E1JkrJeCuDdGNwgqjBg3VkcIKow4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:43200/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.103.19/tcp/39376/p2p/16Uiu2HAmUYGU9S2MB2JnwESm2oogfkfvi3zTjoCe543MjwKCxcPj"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:39375/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:43200/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "5bfe2503-76d8-4d62-a218-e99229775390", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"5bfe2503-76d8-4d62-a218-e99229775390","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:43200/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:43200/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 50edbe466ce0
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 766615c0cb44
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 50edbe466ce0. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.