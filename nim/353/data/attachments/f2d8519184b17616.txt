[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_no_request_id with id: 2024-09-10_13-40-59__1137c8ee-bde4-47c9-ba0c-6e2b9afefc20
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-09-10_13-40-59__1137c8ee-bde4-47c9-ba0c-6e2b9afefc20__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.70.220
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['7245', '7246', '7247', '7248', '7249']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 7245:7245 -p 7246:7246 -p 7247:7247 -p 7248:7248 -p 7249:7249 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=7247 --rest-port=7245 --tcp-port=7246 --discv5-udp-port=7248 --rest-address=0.0.0.0 --nat=extip:172.18.70.220 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ee64bb97f8441dc3c14df363af1a0a6e41bba5bac5afc70af0f78fd4cee0c772 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=7249 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.70.220 waku 2208deb2a85be3bb2e3e92e53f3f02a6260d4fdd93ec27416e29d57c6beefcf6
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 2208deb2a85b. Setting up logs at ./log/docker/node1_2024-09-10_13-40-59__1137c8ee-bde4-47c9-ba0c-6e2b9afefc20__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 7245
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7245/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7245/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.70.220/tcp/7246/p2p/16Uiu2HAmQv85XDixvZ8e6FoYcWCa2ZaVp3YwwNGaGqMWB7pVf8Bu","/ip4/172.18.70.220/tcp/7247/ws/p2p/16Uiu2HAmQv85XDixvZ8e6FoYcWCa2ZaVp3YwwNGaGqMWB7pVf8Bu"],"enrUri":"enr:-LO4QMtDzsFrUNnNTuw0dfhFuTTTjddBaE5jrAe8Qu0dImbPS8ABOYnO6lZw8acFzk5Cu33s1NVsURUZHDmgvEiDny0BgmlkgnY0gmlwhKwSRtyKbXVsdGlhZGRyc4wACgSsEkbcBhxP3QOCcnOFAAMBAACJc2VjcDI1NmsxoQO2LLGIPMrZogY8F75vJGw9mq7DpQxbDpFQEj67t5JiBIN0Y3CCHE6DdWRwghxQhXdha3UyBQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-09-10_13-40-59__1137c8ee-bde4-47c9-ba0c-6e2b9afefc20__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.179.156
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['46411', '46412', '46413', '46414', '46415']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 46411:46411 -p 46412:46412 -p 46413:46413 -p 46414:46414 -p 46415:46415 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=46413 --rest-port=46411 --tcp-port=46412 --discv5-udp-port=46414 --rest-address=0.0.0.0 --nat=extip:172.18.179.156 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=6dcfc3d4bf4bb1deaa5e955af9bdec6d501a1ecba47bf4e1e3a506ecbbdefb07 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=46415 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-LO4QMtDzsFrUNnNTuw0dfhFuTTTjddBaE5jrAe8Qu0dImbPS8ABOYnO6lZw8acFzk5Cu33s1NVsURUZHDmgvEiDny0BgmlkgnY0gmlwhKwSRtyKbXVsdGlhZGRyc4wACgSsEkbcBhxP3QOCcnOFAAMBAACJc2VjcDI1NmsxoQO2LLGIPMrZogY8F75vJGw9mq7DpQxbDpFQEj67t5JiBIN0Y3CCHE6DdWRwghxQhXdha3UyBQ --filternode=/ip4/172.18.70.220/tcp/7246/p2p/16Uiu2HAmQv85XDixvZ8e6FoYcWCa2ZaVp3YwwNGaGqMWB7pVf8Bu
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.179.156 waku 4b136f967a9f80d3ca6c2f29daee63220f2213da35b373c7d84058bc7e278749
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 4b136f967a9f. Setting up logs at ./log/docker/node2_2024-09-10_13-40-59__1137c8ee-bde4-47c9-ba0c-6e2b9afefc20__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 46411
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:46411/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:46411/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.179.156/tcp/46412/p2p/16Uiu2HAmRBUBQRJJEPbMYJTnUStBVghcBrR7mXd6VnbKKfDPqmSz","/ip4/172.18.179.156/tcp/46413/ws/p2p/16Uiu2HAmRBUBQRJJEPbMYJTnUStBVghcBrR7mXd6VnbKKfDPqmSz"],"enrUri":"enr:-LO4QOhB7o0BHw7OA7IR_6U_4PPbUxIO3ZMN6ZZqNuVV5o01ST5Os8G2oXY6swWIM0fFODFTk0vGKw5wG1tHa335gVQBgmlkgnY0gmlwhKwSs5yKbXVsdGlhZGRyc4wACgSsErOcBrVN3QOCcnOFAAMBAACJc2VjcDI1NmsxoQO6GyJmhdReLBkkzhHwXvYdjUAtPZSZg2LJgjN5WkFG84N0Y3CCtUyDdWRwgrVOhXdha3UyAA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:46411/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.70.220/tcp/7246/p2p/16Uiu2HAmQv85XDixvZ8e6FoYcWCa2ZaVp3YwwNGaGqMWB7pVf8Bu"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:7245/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:46411/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "de955fc8-bb9e-4473-a2af-cdb3f3ed3765", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"de955fc8-bb9e-4473-a2af-cdb3f3ed3765","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:46411/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:46411/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 2208deb2a85b
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 4b136f967a9f
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.