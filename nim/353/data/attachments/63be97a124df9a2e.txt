[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_invalid_version with id: 2024-09-10_13-47-55__8cce2326-b5d5-481d-a6e0-b6215f7b0097
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-09-10_13-47-55__8cce2326-b5d5-481d-a6e0-b6215f7b0097__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.37.223
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['55131', '55132', '55133', '55134', '55135']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 55131:55131 -p 55132:55132 -p 55133:55133 -p 55134:55134 -p 55135:55135 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=55133 --rest-port=55131 --tcp-port=55132 --discv5-udp-port=55134 --rest-address=0.0.0.0 --nat=extip:172.18.37.223 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=cba4bd92b4f65e48fc514cddae09d5de145d1dbc9118df26d7ea4cfaac0aed94 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=55135 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.37.223 waku d3db707c643356759236055ff85760f1c1c435b25400ceeaf2da34b6754ae8d2
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID d3db707c6433. Setting up logs at ./log/docker/node1_2024-09-10_13-47-55__8cce2326-b5d5-481d-a6e0-b6215f7b0097__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 55131
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:55131/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:55131/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.37.223/tcp/55132/p2p/16Uiu2HAm7E4cjrP6vBF5GjDBXrDRj6JyAMxL4kiPcqsfNPsPLVaM","/ip4/172.18.37.223/tcp/55133/ws/p2p/16Uiu2HAm7E4cjrP6vBF5GjDBXrDRj6JyAMxL4kiPcqsfNPsPLVaM"],"enrUri":"enr:-LO4QF_HVqlK419d-sfZnkaDJX5FpgkEMpZeVH5A1lTr021-XI0VyioNrvB8xAxiWXHi83-9JGMoY_oBsJkr1hTpS4EBgmlkgnY0gmlwhKwSJd-KbXVsdGlhZGRyc4wACgSsEiXfBtdd3QOCcnOFAAMBAACJc2VjcDI1NmsxoQKvUt6AbKb6t6bJYNurW-6lJmv1z5E4s11KKBsUoh7ZFoN0Y3CC11yDdWRwgtdehXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-09-10_13-47-55__8cce2326-b5d5-481d-a6e0-b6215f7b0097__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.36.236
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['24698', '24699', '24700', '24701', '24702']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 24698:24698 -p 24699:24699 -p 24700:24700 -p 24701:24701 -p 24702:24702 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=24700 --rest-port=24698 --tcp-port=24699 --discv5-udp-port=24701 --rest-address=0.0.0.0 --nat=extip:172.18.36.236 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=aa4f3077a2ca8ef15cf2f0f7135a4d813a3d56b4ae25dfe80dc586346116d359 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=24702 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QF_HVqlK419d-sfZnkaDJX5FpgkEMpZeVH5A1lTr021-XI0VyioNrvB8xAxiWXHi83-9JGMoY_oBsJkr1hTpS4EBgmlkgnY0gmlwhKwSJd-KbXVsdGlhZGRyc4wACgSsEiXfBtdd3QOCcnOFAAMBAACJc2VjcDI1NmsxoQKvUt6AbKb6t6bJYNurW-6lJmv1z5E4s11KKBsUoh7ZFoN0Y3CC11yDdWRwgtdehXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.36.236 waku 3b57057ea3c99c0c7514fae9e101f7ad29db34c1b869ca447afaf62705ff100e
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 3b57057ea3c9. Setting up logs at ./log/docker/node2_2024-09-10_13-47-55__8cce2326-b5d5-481d-a6e0-b6215f7b0097__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 24698
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:24698/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:24698/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.36.236/tcp/24699/p2p/16Uiu2HAmAJtDqLhKFiDn8WwKbau3KoZVjaikurJppeq7dZA2ULC4","/ip4/172.18.36.236/tcp/24700/ws/p2p/16Uiu2HAmAJtDqLhKFiDn8WwKbau3KoZVjaikurJppeq7dZA2ULC4"],"enrUri":"enr:-LO4QNrxEDJsTQJb9adlTxlf-6OrEZHfgTwK1pDeXkfOHaaEM9Jvt2G78Bhzl44BFHLclZTIOj64KFFpG3JIHzYA_HABgmlkgnY0gmlwhKwSJOyKbXVsdGlhZGRyc4wACgSsEiTsBmB83QOCcnOFAAMBAACJc2VjcDI1NmsxoQLdIhSU8ZR_RWVX0mecY8JRiO7mvQ-O90uRiaD90loyFYN0Y3CCYHuDdWRwgmB9hXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:24698/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.37.223/tcp/55132/p2p/16Uiu2HAm7E4cjrP6vBF5GjDBXrDRj6JyAMxL4kiPcqsfNPsPLVaM"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:55131/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:24698/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:55131/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:55131/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1725976078600412928,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:24698/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1725976078600412928,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:55131/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)', "version": 2.1}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:55131/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id d3db707c6433
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 3b57057ea3c9
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.