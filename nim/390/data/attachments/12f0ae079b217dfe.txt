[35mDEBUG   [0m src.postgres_setup:postgres_setup.py:36 Postgres container started
[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_on_empty_postgress_db with id: 2024-10-13_04-34-08__8f4860ac-ee49-4b3f-92dc-f25fa21786ef
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.store:store.py:31 Running fixture setup: store_setup
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/publishing_node1_2024-10-13_04-34-08__8f4860ac-ee49-4b3f-92dc-f25fa21786ef__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.194.33
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['11390', '11391', '11392', '11393', '11394']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 11390:11390 -p 11391:11391 -p 11392:11392 -p 11393:11393 -p 11394:11394 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=11392 --rest-port=11390 --tcp-port=11391 --discv5-udp-port=11393 --rest-address=0.0.0.0 --nat=extip:172.18.194.33 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=24cc4fbfcfeebf0e3575fa2def6fa6daf066f3de3ddb96e21dcdb8ec4aaf5ba2 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=11394 --metrics-logging=true --store=true --relay=true --store-message-db-url=postgres://postgres:test123@postgres:5432/postgres
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.194.33 waku ce442bfc604b2e52acd25396a9d8384b530436f9f520f9f17c0218eb1b743bb3
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID ce442bfc604b. Setting up logs at ./log/docker/publishing_node1_2024-10-13_04-34-08__8f4860ac-ee49-4b3f-92dc-f25fa21786ef__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 11390
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:11390/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Initializing","protocolsHealth":[]}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:11390/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Initializing","protocolsHealth":[]}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:11390/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:11390/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.194.33/tcp/11391/p2p/16Uiu2HAm5UWUKKWEfcpj1JTzJrUdmAJpWtDfY51aCtVgarHc6Jp3","/ip4/172.18.194.33/tcp/11392/ws/p2p/16Uiu2HAm5UWUKKWEfcpj1JTzJrUdmAJpWtDfY51aCtVgarHc6Jp3"],"enrUri":"enr:-LO4QDkmbV5Br1k5HayZ2S-qeVuNIy1ElrXGoHT0aFlcZIigfDWukrLZs5a8VEgGW0ctVDupkDJVNgXWL1Yiu27egygBgmlkgnY0gmlwhKwSwiGKbXVsdGlhZGRyc4wACgSsEsIhBiyA3QOCcnOFAAMBAACJc2VjcDI1NmsxoQKVTtxXggWI8seNqTM4_osQWdSDqSv95XRGJp9SOW_vxIN0Y3CCLH-DdWRwgiyBhXdha3UyAw"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/store_node1_2024-10-13_04-34-08__8f4860ac-ee49-4b3f-92dc-f25fa21786ef__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.191.72
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['65074', '65075', '65076', '65077', '65078']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 65074:65074 -p 65075:65075 -p 65076:65076 -p 65077:65077 -p 65078:65078 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=65076 --rest-port=65074 --tcp-port=65075 --discv5-udp-port=65077 --rest-address=0.0.0.0 --nat=extip:172.18.191.72 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ac9edd169b7aaf87345fbcf8cceb4280de201fbdca35fa36ea90d139ecf5ce28 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=65078 --metrics-logging=true --discv5-bootstrap-node=enr:-LO4QDkmbV5Br1k5HayZ2S-qeVuNIy1ElrXGoHT0aFlcZIigfDWukrLZs5a8VEgGW0ctVDupkDJVNgXWL1Yiu27egygBgmlkgnY0gmlwhKwSwiGKbXVsdGlhZGRyc4wACgSsEsIhBiyA3QOCcnOFAAMBAACJc2VjcDI1NmsxoQKVTtxXggWI8seNqTM4_osQWdSDqSv95XRGJp9SOW_vxIN0Y3CCLH-DdWRwgiyBhXdha3UyAw --storenode=/ip4/172.18.194.33/tcp/11391/p2p/16Uiu2HAm5UWUKKWEfcpj1JTzJrUdmAJpWtDfY51aCtVgarHc6Jp3 --store=false --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.191.72 waku 66431ac652550692810bd14621f35aee9e776f84da8d87dc8269828aaa96f3c3
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 66431ac65255. Setting up logs at ./log/docker/store_node1_2024-10-13_04-34-08__8f4860ac-ee49-4b3f-92dc-f25fa21786ef__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 65074
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:65074/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:65074/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.191.72/tcp/65075/p2p/16Uiu2HAmCKxZPuQinTFSN1iUxuNumGWGZfk4Jy9zSG9FVGkPKmrH","/ip4/172.18.191.72/tcp/65076/ws/p2p/16Uiu2HAmCKxZPuQinTFSN1iUxuNumGWGZfk4Jy9zSG9FVGkPKmrH"],"enrUri":"enr:-LO4QBIT7KQ6XCQgoOfpcjhORw43VY9oXO6tarq8zwL529ClXusgANmvlzbPWFMpzw2i1mFtwJ8kG-JsgCkvwhXG0HgBgmlkgnY0gmlwhKwSv0iKbXVsdGlhZGRyc4wACgSsEr9IBv403QOCcnOFAAMBAACJc2VjcDI1NmsxoQL7H_Bw3YD3lvKEqNdR537HNdOMOF8icY4JXswfJbbbKoN0Y3CC_jODdWRwgv41hXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:65074/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.194.33/tcp/11391/p2p/16Uiu2HAm5UWUKKWEfcpj1JTzJrUdmAJpWtDfY51aCtVgarHc6Jp3"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:11390/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/0"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:65074/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/0"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.store:store.py:132 Relaying message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:11390/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F0" -H "Content-Type: application/json" -d '{"payload": "U3RvcmUgd29ya3MhIQ==", "contentTopic": "/myapp/1/latest/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.2 seconds
[35mDEBUG   [0m src.steps.store:store.py:218 Checking that peer wakuorg/nwaku:latest can find the stored messages
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:11390/store/v3/messages?pubsubTopic=%2Fwaku%2F2%2Frs%2F3%2F0&pageSize=5&ascending=true" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"","statusCode":200,"statusDesc":"OK","messages":[{"messageHash":"wRF+MS03bR8KWqlg2waTi9uLuu+KV9oCqhCf0VZx+xQ="}]}'
[35mDEBUG   [0m src.steps.store:store.py:218 Checking that peer wakuorg/nwaku:latest can find the stored messages
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:65074/store/v3/messages?pubsubTopic=%2Fwaku%2F2%2Frs%2F3%2F0&pageSize=5&ascending=true" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"7f1a9d08650a66f304ca","statusCode":200,"statusDesc":"OK","messages":[{"messageHash":"wRF+MS03bR8KWqlg2waTi9uLuu+KV9oCqhCf0VZx+xQ="}]}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id ce442bfc604b
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 66431ac65255
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.postgres_setup:postgres_setup.py:44 Postgres container stopped and removed.