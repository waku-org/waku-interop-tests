[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_payload_equal_or_more_150_kb with id: 2024-12-10_04-16-32__1593a21c-f63f-49ed-9467-073ffa0e54ac
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-10_04-16-32__1593a21c-f63f-49ed-9467-073ffa0e54ac__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.85.179
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['13498', '13499', '13500', '13501', '13502']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 13498:13498 -p 13499:13499 -p 13500:13500 -p 13501:13501 -p 13502:13502 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=13500 --rest-port=13498 --tcp-port=13499 --discv5-udp-port=13501 --rest-address=0.0.0.0 --nat=extip:172.18.85.179 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=bd1f44bd08485ebecf52cff9a7efef2927027c1c3f1fc233c36ebaed9ef4ecda --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=13502 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.85.179 waku b44f5e6a16f4e25e941240aa68ef05549d14e29f0eaf100bb822b0929c426bfc
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID b44f5e6a16f4. Setting up logs at ./log/docker/node1_2024-12-10_04-16-32__1593a21c-f63f-49ed-9467-073ffa0e54ac__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 13498
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 3a7a88ef21b8. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:13498/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:13498/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.85.179/tcp/13499/p2p/16Uiu2HAm79dwRhhU6aAvU488BkXAgeyLscsJWqt8eeGQFbhAodL4","/ip4/172.18.85.179/tcp/13500/ws/p2p/16Uiu2HAm79dwRhhU6aAvU488BkXAgeyLscsJWqt8eeGQFbhAodL4"],"enrUri":"enr:-L24QIPX66htU15vWWBOtN7d4gUlQDyYoZrJD8t-Ui9SW4O4X5SvgM0Vxrx9XvJd8kneUiwYf1JLdVI2UkZ8oefW9HECgmlkgnY0gmlwhKwSVbOKbXVsdGlhZGRyc5YACASsElWzBjS7AAoErBJVswY0vN0DgnJzhQADAQAAiXNlY3AyNTZrMaECrjCkgvMF7qIu09UPMn3HpiJv8kXJgzW5rXKp1brcl6GDdGNwgjS7g3VkcII0vYV3YWt1MgE"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-10_04-16-32__1593a21c-f63f-49ed-9467-073ffa0e54ac__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.142.48
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['28235', '28236', '28237', '28238', '28239']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 28235:28235 -p 28236:28236 -p 28237:28237 -p 28238:28238 -p 28239:28239 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=28237 --rest-port=28235 --tcp-port=28236 --discv5-udp-port=28238 --rest-address=0.0.0.0 --nat=extip:172.18.142.48 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=c5fb6db3f1c68b65ff0d946ff09823c9bde78f6af3ee42f2cb2e56b9fad85478 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=28239 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-L24QIPX66htU15vWWBOtN7d4gUlQDyYoZrJD8t-Ui9SW4O4X5SvgM0Vxrx9XvJd8kneUiwYf1JLdVI2UkZ8oefW9HECgmlkgnY0gmlwhKwSVbOKbXVsdGlhZGRyc5YACASsElWzBjS7AAoErBJVswY0vN0DgnJzhQADAQAAiXNlY3AyNTZrMaECrjCkgvMF7qIu09UPMn3HpiJv8kXJgzW5rXKp1brcl6GDdGNwgjS7g3VkcII0vYV3YWt1MgE
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.142.48 waku eee57ad34b15c07b688f2542b534b3d7183cc7a30ffa14a6c522cf08645acd15
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID eee57ad34b15. Setting up logs at ./log/docker/node2_2024-12-10_04-16-32__1593a21c-f63f-49ed-9467-073ffa0e54ac__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 28235
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:28235/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:28235/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.142.48/tcp/28236/p2p/16Uiu2HAmALeRK2B64bHbExcAoPooU3qe7pLqzmQxjTeiTxXPvEaa","/ip4/172.18.142.48/tcp/28237/ws/p2p/16Uiu2HAmALeRK2B64bHbExcAoPooU3qe7pLqzmQxjTeiTxXPvEaa"],"enrUri":"enr:-L24QM47tMyPgpJjVsKxeJRnRjqA8_ipsk0e3QpVFK1sD2geXHFCUI3MSyUnWfxzmInu3Oq9VRkNHTvXuMzWkDbxpOoCgmlkgnY0gmlwhKwSjjCKbXVsdGlhZGRyc5YACASsEo4wBm5MAAoErBKOMAZuTd0DgnJzhQADAQAAiXNlY3AyNTZrMaEC3ZWiyzSCg_qYR7NeqxfCyHr1ruSZukMlex3G8nJfIJeDdGNwgm5Mg3VkcIJuToV3YWt1MgE"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:28235/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.85.179/tcp/13499/p2p/16Uiu2HAm79dwRhhU6aAvU488BkXAgeyLscsJWqt8eeGQFbhAodL4"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:13498/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:28235/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:13498/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:13498/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1733804195201913600,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:28235/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1733804195201913600,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[35mDEBUG   [0m tests.relay.test_publish:test_publish.py:55 Running test with payload length of 204800 bytes
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:13498/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Failed to publish: Message size exceeded maximum of 153600 bytes'
[35mDEBUG   [0m tests.relay.test_publish:test_publish.py:55 Running test with payload length of 1048576 bytes
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:13498/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Failed to publish: Message size exceeded maximum of 153600 bytes'
[35mDEBUG   [0m tests.relay.test_publish:test_publish.py:55 Running test with payload length of 10485760 bytes
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:13498/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Failed to publish: Message size exceeded maximum of 153600 bytes'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id b44f5e6a16f4
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id eee57ad34b15
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container b44f5e6a16f4. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.