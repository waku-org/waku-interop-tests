[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_no_request_id with id: 2024-12-10_04-11-35__2f9cb3e6-8aaf-49de-b5d3-fceaaaccbc51
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-10_04-11-35__2f9cb3e6-8aaf-49de-b5d3-fceaaaccbc51__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.232.46
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['38366', '38367', '38368', '38369', '38370']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 38366:38366 -p 38367:38367 -p 38368:38368 -p 38369:38369 -p 38370:38370 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=38368 --rest-port=38366 --tcp-port=38367 --discv5-udp-port=38369 --rest-address=0.0.0.0 --nat=extip:172.18.232.46 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=c39f94d878e87eb6ef8c3955d155dd71cc508a3ca396fc6bfaebe4b9dfd214e2 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=38370 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.232.46 waku c321e04f1773c439a81a1a335331fb179460ff3cf1732aacbf47f66910bb6b4b
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID c321e04f1773. Setting up logs at ./log/docker/node1_2024-12-10_04-11-35__2f9cb3e6-8aaf-49de-b5d3-fceaaaccbc51__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 38366
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 8c23abf4a25c. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38366/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38366/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.232.46/tcp/38367/p2p/16Uiu2HAmBpEdZLzL5Vc9P34MPyRXtGaZ7WLNhVwkV1wV24163ZN5","/ip4/172.18.232.46/tcp/38368/ws/p2p/16Uiu2HAmBpEdZLzL5Vc9P34MPyRXtGaZ7WLNhVwkV1wV24163ZN5"],"enrUri":"enr:-L24QOhNcqEyNPfTrhvxCWSipEJMKTskOywjypMey_wVWtw_AF31XsXa4H5tcpLlCaAEKR1MVU4EA4pJ6p5SXbbYpSoCgmlkgnY0gmlwhKwS6C6KbXVsdGlhZGRyc5YACASsEuguBpXfAAoErBLoLgaV4N0DgnJzhQADAQAAiXNlY3AyNTZrMaEC84Kv9tsvVpH_9Rb1ueK5R_N9oqR0-JHiEZsbQjNHRCaDdGNwgpXfg3VkcIKV4YV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-10_04-11-35__2f9cb3e6-8aaf-49de-b5d3-fceaaaccbc51__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.109.216
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['48092', '48093', '48094', '48095', '48096']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 48092:48092 -p 48093:48093 -p 48094:48094 -p 48095:48095 -p 48096:48096 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=48094 --rest-port=48092 --tcp-port=48093 --discv5-udp-port=48095 --rest-address=0.0.0.0 --nat=extip:172.18.109.216 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=9e059fdc9f47aa8a38fe4fcb7bcf28c74af4d50ef1c09ed4148c6c1e4dce4415 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=48096 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QOhNcqEyNPfTrhvxCWSipEJMKTskOywjypMey_wVWtw_AF31XsXa4H5tcpLlCaAEKR1MVU4EA4pJ6p5SXbbYpSoCgmlkgnY0gmlwhKwS6C6KbXVsdGlhZGRyc5YACASsEuguBpXfAAoErBLoLgaV4N0DgnJzhQADAQAAiXNlY3AyNTZrMaEC84Kv9tsvVpH_9Rb1ueK5R_N9oqR0-JHiEZsbQjNHRCaDdGNwgpXfg3VkcIKV4YV3YWt1MgU --filternode=/ip4/172.18.232.46/tcp/38367/p2p/16Uiu2HAmBpEdZLzL5Vc9P34MPyRXtGaZ7WLNhVwkV1wV24163ZN5
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.109.216 waku 1d0535da48b5f8d8086c5a2637c81189e52405fd1943ec41e251d21fa044b425
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 1d0535da48b5. Setting up logs at ./log/docker/node2_2024-12-10_04-11-35__2f9cb3e6-8aaf-49de-b5d3-fceaaaccbc51__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 48092
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:48092/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:48092/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.109.216/tcp/48093/p2p/16Uiu2HAmC1zfPP5x7B5CEpUG2DsRzGLXUJquNMJojyeEhioBhER7","/ip4/172.18.109.216/tcp/48094/ws/p2p/16Uiu2HAmC1zfPP5x7B5CEpUG2DsRzGLXUJquNMJojyeEhioBhER7"],"enrUri":"enr:-L24QGNhpjZ5D1AQNMoLjJcAqLgzMkXRNfZUqYWLsHlzh2NRM3wvSThFb1ldIwQZsO1jU09vC9cLc2MsesxT7kGU0CYCgmlkgnY0gmlwhKwSbdiKbXVsdGlhZGRyc5YACASsEm3YBrvdAAoErBJt2Aa73t0DgnJzhQADAQAAiXNlY3AyNTZrMaEC9oXc5F7LycYltPjzAIWnyy1eNUMVaQ-fcfSEGp5HLyqDdGNwgrvdg3VkcIK734V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:48092/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.232.46/tcp/38367/p2p/16Uiu2HAmBpEdZLzL5Vc9P34MPyRXtGaZ7WLNhVwkV1wV24163ZN5"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38366/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:48092/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "c4847202-ae5a-4b5a-88de-84c4ac3c8907", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"c4847202-ae5a-4b5a-88de-84c4ac3c8907","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:48092/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:48092/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id c321e04f1773
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 1d0535da48b5
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container c321e04f1773. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.