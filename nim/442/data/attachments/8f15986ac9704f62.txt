[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2024-11-09_04-08-25__936a18b2-4e33-48d2-bbe2-50647e329cb2
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-09_04-08-25__936a18b2-4e33-48d2-bbe2-50647e329cb2__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.187.207
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['33187', '33188', '33189', '33190', '33191']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 33187:33187 -p 33188:33188 -p 33189:33189 -p 33190:33190 -p 33191:33191 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=33189 --rest-port=33187 --tcp-port=33188 --discv5-udp-port=33190 --rest-address=0.0.0.0 --nat=extip:172.18.187.207 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b9cacec2bcc6c036a64e7a402466fca89cabcc07d66bfca832c598a4181c4d04 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=33191 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.187.207 waku 0b9d4d7de481386b2deb8b20e373327e217e7a6ad0fb8ac43364cfeda770fece
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 0b9d4d7de481. Setting up logs at ./log/docker/node1_2024-11-09_04-08-25__936a18b2-4e33-48d2-bbe2-50647e329cb2__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 33187
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container c2dbbb775062. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33187/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33187/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.187.207/tcp/33188/p2p/16Uiu2HAmKJNrrHmZWr97epwsJhCxteXFrLCNZ8Et3U6WnsHS5J3D","/ip4/172.18.187.207/tcp/33189/ws/p2p/16Uiu2HAmKJNrrHmZWr97epwsJhCxteXFrLCNZ8Et3U6WnsHS5J3D"],"enrUri":"enr:-L24QNQt3EQ8wGaIPxalDbaWOQK8h1T4w6ed0Iey7NTYRIB9NC1cw3F9DTZu5Q_TV5v0Rbu2tNRBOFu3G2pNcTFzpogCgmlkgnY0gmlwhKwSu8-KbXVsdGlhZGRyc5YACASsErvPBoGkAAoErBK7zwaBpd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDYroQMZkdcRCBnPX1-oimFTRciWdw1OE_5TS4JmqtxRSDdGNwgoGkg3VkcIKBpoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-09_04-08-25__936a18b2-4e33-48d2-bbe2-50647e329cb2__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.252.25
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['42122', '42123', '42124', '42125', '42126']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 42122:42122 -p 42123:42123 -p 42124:42124 -p 42125:42125 -p 42126:42126 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=42124 --rest-port=42122 --tcp-port=42123 --discv5-udp-port=42125 --rest-address=0.0.0.0 --nat=extip:172.18.252.25 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=fe44bb37a873e5be2fbe8bf428acef8454cebcece3cc2c5c25e3ad5b9e1ccc67 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=42126 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QNQt3EQ8wGaIPxalDbaWOQK8h1T4w6ed0Iey7NTYRIB9NC1cw3F9DTZu5Q_TV5v0Rbu2tNRBOFu3G2pNcTFzpogCgmlkgnY0gmlwhKwSu8-KbXVsdGlhZGRyc5YACASsErvPBoGkAAoErBK7zwaBpd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDYroQMZkdcRCBnPX1-oimFTRciWdw1OE_5TS4JmqtxRSDdGNwgoGkg3VkcIKBpoV3YWt1MgU --filternode=/ip4/172.18.187.207/tcp/33188/p2p/16Uiu2HAmKJNrrHmZWr97epwsJhCxteXFrLCNZ8Et3U6WnsHS5J3D
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.252.25 waku 527372f5e919924189a9d3d1837320ae5ca11f47ee35770bb0077a59753822ee
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 527372f5e919. Setting up logs at ./log/docker/node2_2024-11-09_04-08-25__936a18b2-4e33-48d2-bbe2-50647e329cb2__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 42122
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:42122/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:42122/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.252.25/tcp/42123/p2p/16Uiu2HAkxXPQANXpQuzWiCm5wt4JS16SQPgcTrzRoVsU3uadKHKo","/ip4/172.18.252.25/tcp/42124/ws/p2p/16Uiu2HAkxXPQANXpQuzWiCm5wt4JS16SQPgcTrzRoVsU3uadKHKo"],"enrUri":"enr:-L24QN7NxpUx31M7tMXeFQxfHJ_WS3lrL30UbdUEsD3r6R4sdz0MYoHSbm6vLipt1bhinH8bWTZ6km-YOtjTKwAItLoCgmlkgnY0gmlwhKwS_BmKbXVsdGlhZGRyc5YACASsEvwZBqSLAAoErBL8GQakjN0DgnJzhQADAQAAiXNlY3AyNTZrMaECLgnMekVXPgoLrpxNGZegzk8rgv4whYMHyJzO-_HaFjKDdGNwgqSLg3VkcIKkjYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:42122/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.187.207/tcp/33188/p2p/16Uiu2HAmKJNrrHmZWr97epwsJhCxteXFrLCNZ8Et3U6WnsHS5J3D"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:33187/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:42122/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "8a36af0d-7207-41c5-b6f4-549e28306bf6", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"8a36af0d-7207-41c5-b6f4-549e28306bf6","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:42122/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:42122/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 0b9d4d7de481
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 527372f5e919
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 0b9d4d7de481. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.