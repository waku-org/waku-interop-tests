[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_no_request_id with id: 2024-11-09_04-07-47__279259d8-461f-4508-bad7-d3906cdea0a5
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-09_04-07-47__279259d8-461f-4508-bad7-d3906cdea0a5__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.188.138
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['18249', '18250', '18251', '18252', '18253']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 18249:18249 -p 18250:18250 -p 18251:18251 -p 18252:18252 -p 18253:18253 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=18251 --rest-port=18249 --tcp-port=18250 --discv5-udp-port=18252 --rest-address=0.0.0.0 --nat=extip:172.18.188.138 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=da240bf4daa8dcf52ec359b6dbfa739a2e147c6fdec2d090facabe7ccda7d5ce --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=18253 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.188.138 waku a740e98dae5fab4dca99dfa9be5fa50e80ec9a11d81712ca055d5a71e8e3105e
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID a740e98dae5f. Setting up logs at ./log/docker/node1_2024-11-09_04-07-47__279259d8-461f-4508-bad7-d3906cdea0a5__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 18249
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container d2d2c2da0b12. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:18249/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:18249/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.188.138/tcp/18250/p2p/16Uiu2HAmTbYwXrgAVWkr9SHEfY7FxZib3QoyiZ8G3wc2xJjUcS1w","/ip4/172.18.188.138/tcp/18251/ws/p2p/16Uiu2HAmTbYwXrgAVWkr9SHEfY7FxZib3QoyiZ8G3wc2xJjUcS1w"],"enrUri":"enr:-L24QCDLr5bbk9nQ3GoPVOrjtjCUbkCQRL3W6Wf-K5yqv7z2Qe8KwBbauG_LLOSEssGHKfwflEMj_Uz05Yi3M1gji-MCgmlkgnY0gmlwhKwSvIqKbXVsdGlhZGRyc5YACASsEryKBkdKAAoErBK8igZHS90DgnJzhQADAQAAiXNlY3AyNTZrMaED3f3UqytuT1xnB25rVikII_dwmD1sRcX54YkyCmd5u-KDdGNwgkdKg3VkcIJHTIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-09_04-07-47__279259d8-461f-4508-bad7-d3906cdea0a5__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.206.41
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['37806', '37807', '37808', '37809', '37810']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 37806:37806 -p 37807:37807 -p 37808:37808 -p 37809:37809 -p 37810:37810 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=37808 --rest-port=37806 --tcp-port=37807 --discv5-udp-port=37809 --rest-address=0.0.0.0 --nat=extip:172.18.206.41 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e64b2ccdfdba5e9cae243dcdfb8ed7b1c52bebad0c910dc1cd868ce3d8dce09d --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=37810 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QCDLr5bbk9nQ3GoPVOrjtjCUbkCQRL3W6Wf-K5yqv7z2Qe8KwBbauG_LLOSEssGHKfwflEMj_Uz05Yi3M1gji-MCgmlkgnY0gmlwhKwSvIqKbXVsdGlhZGRyc5YACASsEryKBkdKAAoErBK8igZHS90DgnJzhQADAQAAiXNlY3AyNTZrMaED3f3UqytuT1xnB25rVikII_dwmD1sRcX54YkyCmd5u-KDdGNwgkdKg3VkcIJHTIV3YWt1MgU --filternode=/ip4/172.18.188.138/tcp/18250/p2p/16Uiu2HAmTbYwXrgAVWkr9SHEfY7FxZib3QoyiZ8G3wc2xJjUcS1w
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.206.41 waku 09eaf4f9b037cdab5427d9ee460d303be2d0974b1c2ead4441cb3f0675141a49
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 09eaf4f9b037. Setting up logs at ./log/docker/node2_2024-11-09_04-07-47__279259d8-461f-4508-bad7-d3906cdea0a5__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 37806
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:37806/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:37806/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.206.41/tcp/37807/p2p/16Uiu2HAmCw5PXrsssZ6gxJQgdCLvAnPF9Gp4nN6jDuJkZjEakCP7","/ip4/172.18.206.41/tcp/37808/ws/p2p/16Uiu2HAmCw5PXrsssZ6gxJQgdCLvAnPF9Gp4nN6jDuJkZjEakCP7"],"enrUri":"enr:-L24QOIajlL6uzKjpxshjaxMoHMeRWqh54kgaUWDlydpt8uPL1vjinC-dg0PdKC4nUM7zwlbIb-3x5tlFKTljQd3ch0CgmlkgnY0gmlwhKwSzimKbXVsdGlhZGRyc5YACASsEs4pBpOvAAoErBLOKQaTsN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDBB79fR6vGYFEDpJma7u7MnAFFInfAuSc18GHhzUqDfaDdGNwgpOvg3VkcIKTsYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:37806/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.188.138/tcp/18250/p2p/16Uiu2HAmTbYwXrgAVWkr9SHEfY7FxZib3QoyiZ8G3wc2xJjUcS1w"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:18249/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:37806/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "5601dc31-328a-4fa3-85da-f36cf2059f84", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"5601dc31-328a-4fa3-85da-f36cf2059f84","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:37806/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:37806/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id a740e98dae5f
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 09eaf4f9b037
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container a740e98dae5f. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.