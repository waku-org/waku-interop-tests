[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_no_request_id with id: 2024-12-12_08-26-04__e85d9226-73e5-4f74-aea3-5860fc1b6fc4
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-12_08-26-04__e85d9226-73e5-4f74-aea3-5860fc1b6fc4__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.174.161
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['38138', '38139', '38140', '38141', '38142']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 38138:38138 -p 38139:38139 -p 38140:38140 -p 38141:38141 -p 38142:38142 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=38140 --rest-port=38138 --tcp-port=38139 --discv5-udp-port=38141 --rest-address=0.0.0.0 --nat=extip:172.18.174.161 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=3f6acfffa9397be82fec1ecb9fab7d68a3f88ddf01535065cc4ede7c5e18acbe --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=38142 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.174.161 waku ef327af9b160f2172ba0044f06cfb195ec77b4cdee2c7f628a5231076ee88ace
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID ef327af9b160. Setting up logs at ./log/docker/node1_2024-12-12_08-26-04__e85d9226-73e5-4f74-aea3-5860fc1b6fc4__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 38138
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container c5c0e26f50d3. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38138/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38138/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.174.161/tcp/38139/p2p/16Uiu2HAmC1BSYwWVHKdJGSBKjG4jV6s5pma73YnTaXZYahFBb5aL","/ip4/172.18.174.161/tcp/38140/ws/p2p/16Uiu2HAmC1BSYwWVHKdJGSBKjG4jV6s5pma73YnTaXZYahFBb5aL"],"enrUri":"enr:-L24QOxl0uChE9wlTciZsMUwvEqSUy7Wh8clX6EjXKD2q-9rfQmIdU2HhSIWEErpe7BwdypUkqmEo0qhDcBHlKTSbu8CgmlkgnY0gmlwhKwSrqGKbXVsdGlhZGRyc5YACASsEq6hBpT7AAoErBKuoQaU_N0DgnJzhQADAQAAiXNlY3AyNTZrMaEC9lB4Nbcdqpg5ZF8BYZ7OISm6RbYpxO398Et3bzcauk2DdGNwgpT7g3VkcIKU_YV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-12_08-26-04__e85d9226-73e5-4f74-aea3-5860fc1b6fc4__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.235.55
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['50106', '50107', '50108', '50109', '50110']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 50106:50106 -p 50107:50107 -p 50108:50108 -p 50109:50109 -p 50110:50110 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=50108 --rest-port=50106 --tcp-port=50107 --discv5-udp-port=50109 --rest-address=0.0.0.0 --nat=extip:172.18.235.55 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=23fab2efefbbbd2d85dfbf2cec50754ea74ef1e22bd0bb0ac349fabf177b3d9c --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=50110 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QOxl0uChE9wlTciZsMUwvEqSUy7Wh8clX6EjXKD2q-9rfQmIdU2HhSIWEErpe7BwdypUkqmEo0qhDcBHlKTSbu8CgmlkgnY0gmlwhKwSrqGKbXVsdGlhZGRyc5YACASsEq6hBpT7AAoErBKuoQaU_N0DgnJzhQADAQAAiXNlY3AyNTZrMaEC9lB4Nbcdqpg5ZF8BYZ7OISm6RbYpxO398Et3bzcauk2DdGNwgpT7g3VkcIKU_YV3YWt1MgU --filternode=/ip4/172.18.174.161/tcp/38139/p2p/16Uiu2HAmC1BSYwWVHKdJGSBKjG4jV6s5pma73YnTaXZYahFBb5aL
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.235.55 waku 0163f26a8e7d43d83ced17fbec8810c3d8cdcb2932890731a2f4825656b70cf2
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 0163f26a8e7d. Setting up logs at ./log/docker/node2_2024-12-12_08-26-04__e85d9226-73e5-4f74-aea3-5860fc1b6fc4__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 50106
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:50106/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:50106/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.235.55/tcp/50107/p2p/16Uiu2HAmUuEEqTwrGLBquVprAJy3nP6RTYY25pKa4XGgAdpaTn43","/ip4/172.18.235.55/tcp/50108/ws/p2p/16Uiu2HAmUuEEqTwrGLBquVprAJy3nP6RTYY25pKa4XGgAdpaTn43"],"enrUri":"enr:-L24QGK32u3Y5emUByrc2M19hOyZMmUID1Jm7vfKGihRFoKePW8CNb8PBfHysB_2lMSo05RDGscJPWf_uBYbRwMGSKICgmlkgnY0gmlwhKwS6zeKbXVsdGlhZGRyc5YACASsEus3BsO7AAoErBLrNwbDvN0DgnJzhQADAQAAiXNlY3AyNTZrMaED8WDTgSlT85r3GRZn_5FpdpK3y0Zo6TRskdD2x4UFrASDdGNwgsO7g3VkcILDvYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:50106/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.174.161/tcp/38139/p2p/16Uiu2HAmC1BSYwWVHKdJGSBKjG4jV6s5pma73YnTaXZYahFBb5aL"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38138/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:50106/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "bbd904ed-59e4-4ea7-b6d2-8f6ed17ee6c0", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"bbd904ed-59e4-4ea7-b6d2-8f6ed17ee6c0","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:50106/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:50106/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id ef327af9b160
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 0163f26a8e7d
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container ef327af9b160. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.