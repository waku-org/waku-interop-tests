[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_relay_no_subscription with id: 2024-09-10_15-17-55__166765ef-d0c5-4491-99c0-626eefbf179a
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-09-10_15-17-55__166765ef-d0c5-4491-99c0-626eefbf179a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.100.197
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['2208', '2209', '2210', '2211', '2212']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 2208:2208 -p 2209:2209 -p 2210:2210 -p 2211:2211 -p 2212:2212 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=2210 --rest-port=2208 --tcp-port=2209 --discv5-udp-port=2211 --rest-address=0.0.0.0 --nat=extip:172.18.100.197 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=a0fed8058b828eaa431d6e2520a9f767fa5a35fe98cb55f7ebe8de9e0be8470e --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=2212 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.100.197 waku 4d8445b26cc6b68a5b9ffd5348fa73e7330f98ed8ca7c9db783e72df67c4e6fc
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 4d8445b26cc6. Setting up logs at ./log/docker/node1_2024-09-10_15-17-55__166765ef-d0c5-4491-99c0-626eefbf179a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 2208
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:2208/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:2208/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.100.197/tcp/2209/p2p/16Uiu2HAmKDohtjaF6iB2XP6RcHaw1wbx59fwJtchtFBs4WKWPukg","/ip4/172.18.100.197/tcp/2210/ws/p2p/16Uiu2HAmKDohtjaF6iB2XP6RcHaw1wbx59fwJtchtFBs4WKWPukg"],"enrUri":"enr:-LO4QJ25qy1acRHt1-S3ahJgMEQoWgQj1IUig4kRwHfF6Pl9NcHyEseI7pBpzoaavE9pptkLJmFhlP_05v_ZmbdxxlUBgmlkgnY0gmlwhKwSZMWKbXVsdGlhZGRyc4wACgSsEmTFBgii3QOCcnOFAAMBAACJc2VjcDI1NmsxoQNhjkCOKzVLs8pup4YHhPyXDiKgH6KyFwoU60p-jCSvdYN0Y3CCCKGDdWRwggijhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-09-10_15-17-55__166765ef-d0c5-4491-99c0-626eefbf179a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.199.74
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['14830', '14831', '14832', '14833', '14834']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 14830:14830 -p 14831:14831 -p 14832:14832 -p 14833:14833 -p 14834:14834 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=14832 --rest-port=14830 --tcp-port=14831 --discv5-udp-port=14833 --rest-address=0.0.0.0 --nat=extip:172.18.199.74 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=c8d2ca3e88f2892d43cd12e8f7ee4ffed955fb2f87e15fc5debce398e005f1c6 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=14834 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QJ25qy1acRHt1-S3ahJgMEQoWgQj1IUig4kRwHfF6Pl9NcHyEseI7pBpzoaavE9pptkLJmFhlP_05v_ZmbdxxlUBgmlkgnY0gmlwhKwSZMWKbXVsdGlhZGRyc4wACgSsEmTFBgii3QOCcnOFAAMBAACJc2VjcDI1NmsxoQNhjkCOKzVLs8pup4YHhPyXDiKgH6KyFwoU60p-jCSvdYN0Y3CCCKGDdWRwggijhXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.199.74 waku 80d3b4436d81e1da15290ce5aa58c98b34814cd58f2a5a9f74af5d3ab6700c94
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 80d3b4436d81. Setting up logs at ./log/docker/node2_2024-09-10_15-17-55__166765ef-d0c5-4491-99c0-626eefbf179a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 14830
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:14830/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:14830/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.199.74/tcp/14831/p2p/16Uiu2HAmDEU2eXaEdDY3gUiyXMiFiSxHcNyaoHEsoaMiT7mTfTyG","/ip4/172.18.199.74/tcp/14832/ws/p2p/16Uiu2HAmDEU2eXaEdDY3gUiyXMiFiSxHcNyaoHEsoaMiT7mTfTyG"],"enrUri":"enr:-LO4QCp8pZZ0tqGJNtaQ6RrP51_27qAtFQ7rsot-LERk2Z8UODmthFZGjvtitKeINtCXpxqGag6ho_3qkBG9xfbsLKABgmlkgnY0gmlwhKwSx0qKbXVsdGlhZGRyc4wACgSsEsdKBjnw3QOCcnOFAAMBAACJc2VjcDI1NmsxoQMIk3aFlnzqGk4UiDZJcCz2JdUq1ac_Dwr2vyaO3rRq94N0Y3CCOe-DdWRwgjnxhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:14830/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.100.197/tcp/2209/p2p/16Uiu2HAmKDohtjaF6iB2XP6RcHaw1wbx59fwJtchtFBs4WKWPukg"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:2208/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:2208/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Failed to publish: Node not subscribed to topic: /waku/2/rs/3/1'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 4d8445b26cc6
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 80d3b4436d81
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.