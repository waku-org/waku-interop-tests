[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_payload_less_than_150_kb with id: 2025-01-14_04-04-02__6a57f2d1-979f-419f-bbb7-1eb00124c133
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-14_04-04-02__6a57f2d1-979f-419f-bbb7-1eb00124c133__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.82.9
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['4317', '4318', '4319', '4320', '4321']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 4317:4317 -p 4318:4318 -p 4319:4319 -p 4320:4320 -p 4321:4321 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=4319 --rest-port=4317 --tcp-port=4318 --discv5-udp-port=4320 --rest-address=0.0.0.0 --nat=extip:172.18.82.9 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b67bef86fec5cd0d30fe78209f2950feedbbbef9f832d4d066f547ffca13e9fb --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=4321 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.82.9 waku d920bf3653b5c194a6cb4857f33de408555635923965272626fad7041984a54d
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID d920bf3653b5. Setting up logs at ./log/docker/node1_2025-01-14_04-04-02__6a57f2d1-979f-419f-bbb7-1eb00124c133__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 4317
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container ebf9f40dde09. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:4317/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:4317/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.82.9/tcp/4318/p2p/16Uiu2HAmJxqs5A4gJGvQ4jG7owDAQCEKiXGde78tp6v6i46ovnWS","/ip4/172.18.82.9/tcp/4319/ws/p2p/16Uiu2HAmJxqs5A4gJGvQ4jG7owDAQCEKiXGde78tp6v6i46ovnWS"],"enrUri":"enr:-L24QNcTqZVD3gOHm31HOGogQswmQ-Cjd1KXh4jkvdGzqyU0IT0ujRq3nqznWbePjviYUjZx12R5JEw9xHNnJzvy668CgmlkgnY0gmlwhKwSUgmKbXVsdGlhZGRyc5YACASsElIJBhDeAAoErBJSCQYQ390DgnJzhQADAQAAiXNlY3AyNTZrMaEDXbj6-1UV6D6WjePq3YgxN1ZKHd7YXzn7_j207_ZRiYeDdGNwghDeg3VkcIIQ4IV3YWt1MgE"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-14_04-04-02__6a57f2d1-979f-419f-bbb7-1eb00124c133__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.76.243
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['7039', '7040', '7041', '7042', '7043']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 7039:7039 -p 7040:7040 -p 7041:7041 -p 7042:7042 -p 7043:7043 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=7041 --rest-port=7039 --tcp-port=7040 --discv5-udp-port=7042 --rest-address=0.0.0.0 --nat=extip:172.18.76.243 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=422c64dbbcdfcafba42ce1cf63fbc8f3a45ac8ee9eab12a23b65debfdc6d87b2 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=7043 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-L24QNcTqZVD3gOHm31HOGogQswmQ-Cjd1KXh4jkvdGzqyU0IT0ujRq3nqznWbePjviYUjZx12R5JEw9xHNnJzvy668CgmlkgnY0gmlwhKwSUgmKbXVsdGlhZGRyc5YACASsElIJBhDeAAoErBJSCQYQ390DgnJzhQADAQAAiXNlY3AyNTZrMaEDXbj6-1UV6D6WjePq3YgxN1ZKHd7YXzn7_j207_ZRiYeDdGNwghDeg3VkcIIQ4IV3YWt1MgE
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.76.243 waku 0ef7560456cbc2249bc05dbff34ea8b9fe729ffefa5eea61857e1bdd7417daf2
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 0ef7560456cb. Setting up logs at ./log/docker/node2_2025-01-14_04-04-02__6a57f2d1-979f-419f-bbb7-1eb00124c133__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 7039
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7039/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7039/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.76.243/tcp/7040/p2p/16Uiu2HAm47oWJkxzSTrTyCAj29AJvSDjZidu1mv1MzA7Gx5BuGUv","/ip4/172.18.76.243/tcp/7041/ws/p2p/16Uiu2HAm47oWJkxzSTrTyCAj29AJvSDjZidu1mv1MzA7Gx5BuGUv"],"enrUri":"enr:-L24QP38tbSggzzUmxYBZTELaT0sKN8V-hUvqsu6bHcArGMpdSdhlaJKcfQ5HAmQWh6ExuyJLa8Y9nH8TYcR7XzSX6YCgmlkgnY0gmlwhKwSTPOKbXVsdGlhZGRyc5YACASsEkzzBhuAAAoErBJM8wYbgd0DgnJzhQADAQAAiXNlY3AyNTZrMaECgSU80HV3Oirb2KVPFiAAcjJDZ8ZJHXKvN_Xf4dl_Pe-DdGNwghuAg3VkcIIbgoV3YWt1MgE"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:7039/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.82.9/tcp/4318/p2p/16Uiu2HAmJxqs5A4gJGvQ4jG7owDAQCEKiXGde78tp6v6i46ovnWS"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:4317/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:7039/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:4317/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:4317/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1736827444884333568,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7039/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1736827444884333568,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[35mDEBUG   [0m tests.relay.test_publish:test_publish.py:49 Running test with payload length of 102400 bytes
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 2 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:4317/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7039/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id d920bf3653b5
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 0ef7560456cb
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container d920bf3653b5. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.