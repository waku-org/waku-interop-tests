[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_invalid_request_id with id: 2025-01-14_04-06-57__9a50c675-3211-494d-964c-adf9bf2b04d2
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-14_04-06-57__9a50c675-3211-494d-964c-adf9bf2b04d2__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.145.204
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['16438', '16439', '16440', '16441', '16442']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 16438:16438 -p 16439:16439 -p 16440:16440 -p 16441:16441 -p 16442:16442 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=16440 --rest-port=16438 --tcp-port=16439 --discv5-udp-port=16441 --rest-address=0.0.0.0 --nat=extip:172.18.145.204 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=344d9aebe03d54a7bdea0688fed6dd6a6db0afe71ce85cae43d9ea6f46ddec84 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=16442 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.145.204 waku 0c239ddd99da85a72d869520d15acbedaae0b842402eb6a5f5279c59a74d2062
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 0c239ddd99da. Setting up logs at ./log/docker/node1_2025-01-14_04-06-57__9a50c675-3211-494d-964c-adf9bf2b04d2__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 16438
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 122b64f92334. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:16438/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:16438/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.145.204/tcp/16439/p2p/16Uiu2HAmLp2hs67dvMuuY3G5i6xxMd9zxeJdMXSJnb9puLKaDUpp","/ip4/172.18.145.204/tcp/16440/ws/p2p/16Uiu2HAmLp2hs67dvMuuY3G5i6xxMd9zxeJdMXSJnb9puLKaDUpp"],"enrUri":"enr:-L24QMzr6njNSOg8S9M7vbUi7f5rn03trh_VZl6NBK6d8A_NRRqnLv-MYr-YWhe18lVW5zsj-aOLUlT3rVX4CHtELvcCgmlkgnY0gmlwhKwSkcyKbXVsdGlhZGRyc5YACASsEpHMBkA3AAoErBKRzAZAON0DgnJzhQADAQAAiXNlY3AyNTZrMaEDeS5inFQ4ifyNdK6JKYaj7_5Bu_5VQvo77DXECLOiE5GDdGNwgkA3g3VkcIJAOYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-14_04-06-57__9a50c675-3211-494d-964c-adf9bf2b04d2__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.38.69
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['13404', '13405', '13406', '13407', '13408']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 13404:13404 -p 13405:13405 -p 13406:13406 -p 13407:13407 -p 13408:13408 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=13406 --rest-port=13404 --tcp-port=13405 --discv5-udp-port=13407 --rest-address=0.0.0.0 --nat=extip:172.18.38.69 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=3d3fafedcfe2c0eaee7308b2b77a32b169c142e4ee4dfffcebde8b1bb26c163b --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=13408 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QMzr6njNSOg8S9M7vbUi7f5rn03trh_VZl6NBK6d8A_NRRqnLv-MYr-YWhe18lVW5zsj-aOLUlT3rVX4CHtELvcCgmlkgnY0gmlwhKwSkcyKbXVsdGlhZGRyc5YACASsEpHMBkA3AAoErBKRzAZAON0DgnJzhQADAQAAiXNlY3AyNTZrMaEDeS5inFQ4ifyNdK6JKYaj7_5Bu_5VQvo77DXECLOiE5GDdGNwgkA3g3VkcIJAOYV3YWt1MgU --filternode=/ip4/172.18.145.204/tcp/16439/p2p/16Uiu2HAmLp2hs67dvMuuY3G5i6xxMd9zxeJdMXSJnb9puLKaDUpp
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.38.69 waku 14c191790341e7e1fa968f05cd1e87c9d0fe2cffa62ef9048c0a78abe5c75180
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 14c191790341. Setting up logs at ./log/docker/node2_2025-01-14_04-06-57__9a50c675-3211-494d-964c-adf9bf2b04d2__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 13404
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:13404/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:13404/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.38.69/tcp/13405/p2p/16Uiu2HAkzjQfdTPo1FXWM8y2EpSyh2n6e1Z6MLcHZuA4V5jpugBb","/ip4/172.18.38.69/tcp/13406/ws/p2p/16Uiu2HAkzjQfdTPo1FXWM8y2EpSyh2n6e1Z6MLcHZuA4V5jpugBb"],"enrUri":"enr:-L24QDixfRHNDx3bnGN1_3nNfNRASLRxfV7uNwMQTDdSp4vdDsg2DeyKXGKhqwvQcVlBaOtQGCIgbzFYO9OzZKuIXoECgmlkgnY0gmlwhKwSJkWKbXVsdGlhZGRyc5YACASsEiZFBjRdAAoErBImRQY0Xt0DgnJzhQADAQAAiXNlY3AyNTZrMaECTtWTFJI-lR7Ss1BJ4NupQ_i0AO4NEEnf6oyDzFs8wTKDdGNwgjRdg3VkcII0X4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:13404/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.145.204/tcp/16439/p2p/16Uiu2HAmLp2hs67dvMuuY3G5i6xxMd9zxeJdMXSJnb9puLKaDUpp"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:16438/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:13404/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "986ddde0-e420-4cdc-8515-fab266c6f0d8", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"986ddde0-e420-4cdc-8515-fab266c6f0d8","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:13404/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:13404/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 0c239ddd99da
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 14c191790341
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 0c239ddd99da. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.