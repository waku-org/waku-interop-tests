[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_no_request_id with id: 2025-01-14_04-04-20__93bbe5b6-7f19-4334-b26b-4eb6e26476af
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-14_04-04-20__93bbe5b6-7f19-4334-b26b-4eb6e26476af__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.72.205
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['65113', '65114', '65115', '65116', '65117']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 65113:65113 -p 65114:65114 -p 65115:65115 -p 65116:65116 -p 65117:65117 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=65115 --rest-port=65113 --tcp-port=65114 --discv5-udp-port=65116 --rest-address=0.0.0.0 --nat=extip:172.18.72.205 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=8eb82fa9be0ded4a6db1fe718a1edaf50cd1f8bfd093cba8ea2e4c0b53de2fb8 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=65117 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.72.205 waku 4b6a40c94a28a0c5c6cd79d58ba97c06b8a7167f1a3d15477fd695abac5657f8
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 4b6a40c94a28. Setting up logs at ./log/docker/node1_2025-01-14_04-04-20__93bbe5b6-7f19-4334-b26b-4eb6e26476af__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 65113
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container bb36e398db8c. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:65113/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:65113/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.72.205/tcp/65114/p2p/16Uiu2HAmDwzSkesakETgoUXbSasVh7LZrVn2t8xYB8YT7p82Mh65","/ip4/172.18.72.205/tcp/65115/ws/p2p/16Uiu2HAmDwzSkesakETgoUXbSasVh7LZrVn2t8xYB8YT7p82Mh65"],"enrUri":"enr:-L24QAJRZA3HHvZIor40GB7-ne6ScVlkmX3fkqkEfcWdU5d4O08IiVaK_YdxOfD1nriwJChSOSZ1VwcDE-hddDAoHLkCgmlkgnY0gmlwhKwSSM2KbXVsdGlhZGRyc5YACASsEkjNBv5aAAoErBJIzQb-W90DgnJzhQADAQAAiXNlY3AyNTZrMaEDEzaqzSA9VnP9fjNVAVJ1Jq2C0f77mizcIpkgacPEfxaDdGNwgv5ag3VkcIL-XIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-14_04-04-20__93bbe5b6-7f19-4334-b26b-4eb6e26476af__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.57.201
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['45848', '45849', '45850', '45851', '45852']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 45848:45848 -p 45849:45849 -p 45850:45850 -p 45851:45851 -p 45852:45852 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=45850 --rest-port=45848 --tcp-port=45849 --discv5-udp-port=45851 --rest-address=0.0.0.0 --nat=extip:172.18.57.201 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=035af8c9d2d06dabcbdd0ea1dca169beed3c542f91494f4786e8bba39ceeb4d3 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=45852 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QAJRZA3HHvZIor40GB7-ne6ScVlkmX3fkqkEfcWdU5d4O08IiVaK_YdxOfD1nriwJChSOSZ1VwcDE-hddDAoHLkCgmlkgnY0gmlwhKwSSM2KbXVsdGlhZGRyc5YACASsEkjNBv5aAAoErBJIzQb-W90DgnJzhQADAQAAiXNlY3AyNTZrMaEDEzaqzSA9VnP9fjNVAVJ1Jq2C0f77mizcIpkgacPEfxaDdGNwgv5ag3VkcIL-XIV3YWt1MgU --filternode=/ip4/172.18.72.205/tcp/65114/p2p/16Uiu2HAmDwzSkesakETgoUXbSasVh7LZrVn2t8xYB8YT7p82Mh65
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.57.201 waku f496cea657e21adfeb926ce283aa58cf157c16c97f380e059ceb852f64b127db
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID f496cea657e2. Setting up logs at ./log/docker/node2_2025-01-14_04-04-20__93bbe5b6-7f19-4334-b26b-4eb6e26476af__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 45848
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:45848/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:45848/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.57.201/tcp/45849/p2p/16Uiu2HAmC4dpPFriNnrA5BjT2gSwVNeQedRaYp8LtZq829PHMABx","/ip4/172.18.57.201/tcp/45850/ws/p2p/16Uiu2HAmC4dpPFriNnrA5BjT2gSwVNeQedRaYp8LtZq829PHMABx"],"enrUri":"enr:-L24QAq80411BWy6P_CnDXvvNMp7cgMdff1GgW41Ue6IXrrLZ2R8AA_dOELXjPuBryxAOW6kdIUP_eNaDcKYHZ7y7fgCgmlkgnY0gmlwhKwSOcmKbXVsdGlhZGRyc5YACASsEjnJBrMZAAoErBI5yQazGt0DgnJzhQADAQAAiXNlY3AyNTZrMaEC9zMJMkTxOsZTJ70VZ8DlJxVjwoPUlOgBOGapyiWb3B-DdGNwgrMZg3VkcIKzG4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:45848/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.72.205/tcp/65114/p2p/16Uiu2HAmDwzSkesakETgoUXbSasVh7LZrVn2t8xYB8YT7p82Mh65"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:65113/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:45848/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "75cbe612-0b6d-4b45-ac5e-158e681a6841", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"75cbe612-0b6d-4b45-ac5e-158e681a6841","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:45848/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:45848/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 4b6a40c94a28
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id f496cea657e2
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 4b6a40c94a28. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.