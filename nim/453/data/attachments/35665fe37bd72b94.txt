[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_invalid_request_id with id: 2024-11-18_04-11-18__8e3d394b-bb8e-45d4-b69e-0adaf070b1ae
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-18_04-11-18__8e3d394b-bb8e-45d4-b69e-0adaf070b1ae__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.192.72
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['33514', '33515', '33516', '33517', '33518']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 33514:33514 -p 33515:33515 -p 33516:33516 -p 33517:33517 -p 33518:33518 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=33516 --rest-port=33514 --tcp-port=33515 --discv5-udp-port=33517 --rest-address=0.0.0.0 --nat=extip:172.18.192.72 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=acc921b952ebcfbc63a73bab8d26d416e7dcedb1892fedb32c0cc9f2fe1ef4af --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=33518 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.192.72 waku e1d5294d720a9495f4ac5bc287af976342093feed2394c884e28c4d4583ba995
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID e1d5294d720a. Setting up logs at ./log/docker/node1_2024-11-18_04-11-18__8e3d394b-bb8e-45d4-b69e-0adaf070b1ae__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 33514
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 8934f2367fe5. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33514/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33514/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.192.72/tcp/33515/p2p/16Uiu2HAkzRt5ymZxmxfKTAW6YUkoetqQPY7JUR768U15aNrQXHbp","/ip4/172.18.192.72/tcp/33516/ws/p2p/16Uiu2HAkzRt5ymZxmxfKTAW6YUkoetqQPY7JUR768U15aNrQXHbp"],"enrUri":"enr:-L24QJZ1-e-kKxdzWVulSg6j2MFoGKxEv7iYEDipF9P29l6kPDWK9FlG1zkb88r0deLrSAbcLeIxb620RhwF0_w4ou4CgmlkgnY0gmlwhKwSwEiKbXVsdGlhZGRyc5YACASsEsBIBoLrAAoErBLASAaC7N0DgnJzhQADAQAAiXNlY3AyNTZrMaECSlgfqPJ07Y9yNIINtnC-zGKdxmXXpHVnuacvzMC4kKODdGNwgoLrg3VkcIKC7YV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-18_04-11-18__8e3d394b-bb8e-45d4-b69e-0adaf070b1ae__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.133.87
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['57324', '57325', '57326', '57327', '57328']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 57324:57324 -p 57325:57325 -p 57326:57326 -p 57327:57327 -p 57328:57328 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=57326 --rest-port=57324 --tcp-port=57325 --discv5-udp-port=57327 --rest-address=0.0.0.0 --nat=extip:172.18.133.87 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ffa3a9ccc8d4a89dc39ceacb5c089a88af6ddcfacdfe03cde0fde2fb384a23ae --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=57328 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QJZ1-e-kKxdzWVulSg6j2MFoGKxEv7iYEDipF9P29l6kPDWK9FlG1zkb88r0deLrSAbcLeIxb620RhwF0_w4ou4CgmlkgnY0gmlwhKwSwEiKbXVsdGlhZGRyc5YACASsEsBIBoLrAAoErBLASAaC7N0DgnJzhQADAQAAiXNlY3AyNTZrMaECSlgfqPJ07Y9yNIINtnC-zGKdxmXXpHVnuacvzMC4kKODdGNwgoLrg3VkcIKC7YV3YWt1MgU --filternode=/ip4/172.18.192.72/tcp/33515/p2p/16Uiu2HAkzRt5ymZxmxfKTAW6YUkoetqQPY7JUR768U15aNrQXHbp
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.133.87 waku 2ab4aa237a3ac1474c5456f17de06b90cbbdc5a5ca615c7175d2b2b28e906ad3
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 2ab4aa237a3a. Setting up logs at ./log/docker/node2_2024-11-18_04-11-18__8e3d394b-bb8e-45d4-b69e-0adaf070b1ae__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 57324
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:57324/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:57324/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.133.87/tcp/57325/p2p/16Uiu2HAmVFbbbkpVajFX9qeQHFe3D51e7PiQBWTPtVxEk9LhNiB5","/ip4/172.18.133.87/tcp/57326/ws/p2p/16Uiu2HAmVFbbbkpVajFX9qeQHFe3D51e7PiQBWTPtVxEk9LhNiB5"],"enrUri":"enr:-L24QAkJUr79rXSIf5BGSEEPuvu00ofkMV00vs5o1ETjUpyuVzgWcsCZdqtwMoI2Lu9mH8eRm_iQaOCw-6JL3QHhUAgCgmlkgnY0gmlwhKwShVeKbXVsdGlhZGRyc5YACASsEoVXBt_tAAoErBKFVwbf7t0DgnJzhQADAQAAiXNlY3AyNTZrMaED9piXiNRV5IlgRCadjlwJmIO5DLnBDNK6rHY5T9viqDSDdGNwgt_tg3VkcILf74V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:57324/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.192.72/tcp/33515/p2p/16Uiu2HAkzRt5ymZxmxfKTAW6YUkoetqQPY7JUR768U15aNrQXHbp"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:33514/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:57324/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "f0a4a60a-56cd-41cc-a9cc-fbe999e46d5f", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"f0a4a60a-56cd-41cc-a9cc-fbe999e46d5f","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:57324/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:57324/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id e1d5294d720a
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 2ab4aa237a3a
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container e1d5294d720a. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.