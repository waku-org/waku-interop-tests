[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_invalid_request_id with id: 2024-11-18_04-11-53__7bb4130f-2e1e-4ec0-8e36-18f2eeff5398
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-18_04-11-53__7bb4130f-2e1e-4ec0-8e36-18f2eeff5398__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.121.202
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['65265', '65266', '65267', '65268', '65269']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 65265:65265 -p 65266:65266 -p 65267:65267 -p 65268:65268 -p 65269:65269 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=65267 --rest-port=65265 --tcp-port=65266 --discv5-udp-port=65268 --rest-address=0.0.0.0 --nat=extip:172.18.121.202 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=c034ef0c5d402e64c9d321bde09189c6dcdb032c2cc2bcf1c3e6b1e9edf2eaea --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=65269 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.121.202 waku 15aefd7f71e0c7daf0802368c7f3c10e55e28a026104154ef1dc6ec36549d7ef
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 15aefd7f71e0. Setting up logs at ./log/docker/node1_2024-11-18_04-11-53__7bb4130f-2e1e-4ec0-8e36-18f2eeff5398__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 65265
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container c8afbf164749. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:65265/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:65265/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.121.202/tcp/65266/p2p/16Uiu2HAkwNVTGBfMB5moBafHtdmL7s2rX2GKsTZN1JqKq8SdtjF5","/ip4/172.18.121.202/tcp/65267/ws/p2p/16Uiu2HAkwNVTGBfMB5moBafHtdmL7s2rX2GKsTZN1JqKq8SdtjF5"],"enrUri":"enr:-L24QCreQg2WsUH87N9seTy59fvso5TRpBtYzwx7ZcgErrBfbc5cDFiK-MUtlI6ko70HMLqqVMuYZ3pDbcsR0fd8BWYCgmlkgnY0gmlwhKwSecqKbXVsdGlhZGRyc5YACASsEnnKBv7yAAoErBJ5ygb-890DgnJzhQADAQAAiXNlY3AyNTZrMaECHOa6rF9T4SlZiF-sgw8ePtDSqhSVFfIszkyKvloVfbCDdGNwgv7yg3VkcIL-9IV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-18_04-11-53__7bb4130f-2e1e-4ec0-8e36-18f2eeff5398__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.37.129
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['61037', '61038', '61039', '61040', '61041']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 61037:61037 -p 61038:61038 -p 61039:61039 -p 61040:61040 -p 61041:61041 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=61039 --rest-port=61037 --tcp-port=61038 --discv5-udp-port=61040 --rest-address=0.0.0.0 --nat=extip:172.18.37.129 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=7c35f0c8cac542dfffdb9cf1bc6b2fd3aece9c14e20cdacf8afd59becc234c03 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=61041 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QCreQg2WsUH87N9seTy59fvso5TRpBtYzwx7ZcgErrBfbc5cDFiK-MUtlI6ko70HMLqqVMuYZ3pDbcsR0fd8BWYCgmlkgnY0gmlwhKwSecqKbXVsdGlhZGRyc5YACASsEnnKBv7yAAoErBJ5ygb-890DgnJzhQADAQAAiXNlY3AyNTZrMaECHOa6rF9T4SlZiF-sgw8ePtDSqhSVFfIszkyKvloVfbCDdGNwgv7yg3VkcIL-9IV3YWt1MgU --filternode=/ip4/172.18.121.202/tcp/65266/p2p/16Uiu2HAkwNVTGBfMB5moBafHtdmL7s2rX2GKsTZN1JqKq8SdtjF5
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.37.129 waku b342e2c3342b5874d6fd9e8b14af1d75acf78b6f3d89377d630a537d26f95790
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID b342e2c3342b. Setting up logs at ./log/docker/node2_2024-11-18_04-11-53__7bb4130f-2e1e-4ec0-8e36-18f2eeff5398__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 61037
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:61037/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:61037/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.37.129/tcp/61038/p2p/16Uiu2HAmVPrSbYTypivdLiYX9fYiGvU3XUo1NvnDn4HKjYGoLUyW","/ip4/172.18.37.129/tcp/61039/ws/p2p/16Uiu2HAmVPrSbYTypivdLiYX9fYiGvU3XUo1NvnDn4HKjYGoLUyW"],"enrUri":"enr:-L24QETGHtTDXn4OEw6ZYbp9r_zsoPNV-36q5Ub2RJKP2__7SlPUFKUq13A3_D65_gaQL-bHguivuCabISQdnLy2DXkCgmlkgnY0gmlwhKwSJYGKbXVsdGlhZGRyc5YACASsEiWBBu5uAAoErBIlgQbub90DgnJzhQADAQAAiXNlY3AyNTZrMaED-LYF_68IGo_rdsl53azLR-E2hlHz11OioCxwK8lJXpGDdGNwgu5ug3VkcILucIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:61037/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.121.202/tcp/65266/p2p/16Uiu2HAkwNVTGBfMB5moBafHtdmL7s2rX2GKsTZN1JqKq8SdtjF5"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:65265/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:61037/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "0ce446e6-4725-4b5e-9cb9-071afd08999e", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"0ce446e6-4725-4b5e-9cb9-071afd08999e","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:61037/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:61037/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 15aefd7f71e0
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id b342e2c3342b
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 15aefd7f71e0. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.