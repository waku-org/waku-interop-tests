[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_all_with_invalid_request_id with id: 2024-11-18_04-12-57__6fbef609-cd74-4710-83cd-dc6294e6e307
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-18_04-12-57__6fbef609-cd74-4710-83cd-dc6294e6e307__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.178.216
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['41449', '41450', '41451', '41452', '41453']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 41449:41449 -p 41450:41450 -p 41451:41451 -p 41452:41452 -p 41453:41453 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=41451 --rest-port=41449 --tcp-port=41450 --discv5-udp-port=41452 --rest-address=0.0.0.0 --nat=extip:172.18.178.216 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=fcaaff6569b0efbaaa39b9df1ffbf0f84a2e1aacd6562fb5ccbce5841f2a6bdc --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=41453 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.178.216 waku a94f95c7ea14a25f560049f684d1c1896336722288b886106ae0e9504eb9932b
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container aa24845ef629. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID a94f95c7ea14. Setting up logs at ./log/docker/node1_2024-11-18_04-12-57__6fbef609-cd74-4710-83cd-dc6294e6e307__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 41449
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41449/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41449/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.178.216/tcp/41450/p2p/16Uiu2HAm23YKHPo6ty1NEhDecn39ZsSLMcMAcz7ENnbAj4yHxN99","/ip4/172.18.178.216/tcp/41451/ws/p2p/16Uiu2HAm23YKHPo6ty1NEhDecn39ZsSLMcMAcz7ENnbAj4yHxN99"],"enrUri":"enr:-L24QDHogM6BL8alKrjc9He8tEzaa7xtKTrgA8wjIBJYr5DORcpUObbdV9LNAgDlNAR6tKx0gW78ZpyEguiDCYv2hsQCgmlkgnY0gmlwhKwSstiKbXVsdGlhZGRyc5YACASsErLYBqHqAAoErBKy2Aah690DgnJzhQADAQAAiXNlY3AyNTZrMaECYlZdcU5SMZkyCxNkcFC35cS3O5RZLt6MpQQivsaOFSSDdGNwgqHqg3VkcIKh7IV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-18_04-12-57__6fbef609-cd74-4710-83cd-dc6294e6e307__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.168.133
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['34877', '34878', '34879', '34880', '34881']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 34877:34877 -p 34878:34878 -p 34879:34879 -p 34880:34880 -p 34881:34881 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=34879 --rest-port=34877 --tcp-port=34878 --discv5-udp-port=34880 --rest-address=0.0.0.0 --nat=extip:172.18.168.133 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=dbbf94d5bb9f9acb7b0edaa6f8fde7cae00a1d2aed6b00a9abab61544f5983bb --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=34881 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QDHogM6BL8alKrjc9He8tEzaa7xtKTrgA8wjIBJYr5DORcpUObbdV9LNAgDlNAR6tKx0gW78ZpyEguiDCYv2hsQCgmlkgnY0gmlwhKwSstiKbXVsdGlhZGRyc5YACASsErLYBqHqAAoErBKy2Aah690DgnJzhQADAQAAiXNlY3AyNTZrMaECYlZdcU5SMZkyCxNkcFC35cS3O5RZLt6MpQQivsaOFSSDdGNwgqHqg3VkcIKh7IV3YWt1MgU --filternode=/ip4/172.18.178.216/tcp/41450/p2p/16Uiu2HAm23YKHPo6ty1NEhDecn39ZsSLMcMAcz7ENnbAj4yHxN99
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.168.133 waku 2af6168767bd0ec12160e85bb7fe02e3446cab2989f41800f4a4dd3f5efecbb1
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 2af6168767bd. Setting up logs at ./log/docker/node2_2024-11-18_04-12-57__6fbef609-cd74-4710-83cd-dc6294e6e307__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 34877
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:34877/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:34877/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.168.133/tcp/34878/p2p/16Uiu2HAmEF7X6ruhbHQzymSha7QFy9vLNMPcsYs77A1LgpXaYKHh","/ip4/172.18.168.133/tcp/34879/ws/p2p/16Uiu2HAmEF7X6ruhbHQzymSha7QFy9vLNMPcsYs77A1LgpXaYKHh"],"enrUri":"enr:-L24QN4rDuILSutQDLHJeH8oqkmxzbIFyG-poXmrE1vRTaS-GDqfMUiFERHKenS0uqKrcqm7K6-7HsTyJAmNMgcLglYCgmlkgnY0gmlwhKwSqIWKbXVsdGlhZGRyc5YACASsEqiFBog-AAoErBKohQaIP90DgnJzhQADAQAAiXNlY3AyNTZrMaEDF5mKZ5-jVoLogGn4uJNzLrT4PcfaLXfKHOMrY95F2TiDdGNwgog-g3VkcIKIQIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:34877/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.178.216/tcp/41450/p2p/16Uiu2HAm23YKHPo6ty1NEhDecn39ZsSLMcMAcz7ENnbAj4yHxN99"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:41449/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:34877/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "cf0b22e1-3601-463a-813f-0ac45e39766b", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"cf0b22e1-3601-463a-813f-0ac45e39766b","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:34877/filter/v2/subscriptions/all" -H "Content-Type: application/json" -d '{"requestId": 1}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:34877/filter/v2/subscriptions/all. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id a94f95c7ea14
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 2af6168767bd
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container a94f95c7ea14. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.