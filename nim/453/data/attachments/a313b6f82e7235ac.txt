[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_no_request_id with id: 2024-11-18_04-12-34__38199547-66b3-4e23-bdc0-efa60faf708a
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-18_04-12-34__38199547-66b3-4e23-bdc0-efa60faf708a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.175.170
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['64406', '64407', '64408', '64409', '64410']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 64406:64406 -p 64407:64407 -p 64408:64408 -p 64409:64409 -p 64410:64410 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=64408 --rest-port=64406 --tcp-port=64407 --discv5-udp-port=64409 --rest-address=0.0.0.0 --nat=extip:172.18.175.170 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=dc88ca988fb7e295cc010facc55f4eefff1da5d67bb6701e7f50c0d695cc3edd --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=64410 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.175.170 waku c45603fd6ba1dbfd65ebf26b4cf415ce7da345601c9538b514e30b14883b103e
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID c45603fd6ba1. Setting up logs at ./log/docker/node1_2024-11-18_04-12-34__38199547-66b3-4e23-bdc0-efa60faf708a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 64406
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 0a1a5321c00d. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:64406/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:64406/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.175.170/tcp/64407/p2p/16Uiu2HAm3jNkBJjsKWidJaxdPg2xgP5eT2XS4srUQHMeGWrdJHAD","/ip4/172.18.175.170/tcp/64408/ws/p2p/16Uiu2HAm3jNkBJjsKWidJaxdPg2xgP5eT2XS4srUQHMeGWrdJHAD"],"enrUri":"enr:-L24QAQ37adkhLpi4HW9z5gWTvmoypkYVEb7gHM5vojrpY-HPHufcCprhpIhG1wC36zWiVwqvwF9vuGvNGVMO9YtfFgCgmlkgnY0gmlwhKwSr6qKbXVsdGlhZGRyc5YACASsEq-qBvuXAAoErBKvqgb7mN0DgnJzhQADAQAAiXNlY3AyNTZrMaECe2Z2bEdQVnV-U1Ez0j6J8mHvh16CgvsohNTWSmaCUp6DdGNwgvuXg3VkcIL7mYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-18_04-12-34__38199547-66b3-4e23-bdc0-efa60faf708a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.51.203
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['42945', '42946', '42947', '42948', '42949']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 42945:42945 -p 42946:42946 -p 42947:42947 -p 42948:42948 -p 42949:42949 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=42947 --rest-port=42945 --tcp-port=42946 --discv5-udp-port=42948 --rest-address=0.0.0.0 --nat=extip:172.18.51.203 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=5cf954e2aac4fdb061b0dea66dbb7c2eecfcf6aeddabbebbc31b66a1ca67e0be --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=42949 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QAQ37adkhLpi4HW9z5gWTvmoypkYVEb7gHM5vojrpY-HPHufcCprhpIhG1wC36zWiVwqvwF9vuGvNGVMO9YtfFgCgmlkgnY0gmlwhKwSr6qKbXVsdGlhZGRyc5YACASsEq-qBvuXAAoErBKvqgb7mN0DgnJzhQADAQAAiXNlY3AyNTZrMaECe2Z2bEdQVnV-U1Ez0j6J8mHvh16CgvsohNTWSmaCUp6DdGNwgvuXg3VkcIL7mYV3YWt1MgU --filternode=/ip4/172.18.175.170/tcp/64407/p2p/16Uiu2HAm3jNkBJjsKWidJaxdPg2xgP5eT2XS4srUQHMeGWrdJHAD
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.51.203 waku 79a5fd174214a0d807e1c1a5274eec7344a7353ea91296c5441ba281116a0d36
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 79a5fd174214. Setting up logs at ./log/docker/node2_2024-11-18_04-12-34__38199547-66b3-4e23-bdc0-efa60faf708a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 42945
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:42945/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:42945/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.51.203/tcp/42946/p2p/16Uiu2HAmKvxM9duy9jUDECYcu3td1GDXXRj4NjjvJUBKpGHbVKvN","/ip4/172.18.51.203/tcp/42947/ws/p2p/16Uiu2HAmKvxM9duy9jUDECYcu3td1GDXXRj4NjjvJUBKpGHbVKvN"],"enrUri":"enr:-L24QFWvxgn4_HfM-p9ZVXpyk7id23sRlsK1R_0CfBZ9JRyla3iMknrNlJ3Zwxr0R_RPWGipeyCff8mHrRu9BvvIAl0CgmlkgnY0gmlwhKwSM8uKbXVsdGlhZGRyc5YACASsEjPLBqfCAAoErBIzywanw90DgnJzhQADAQAAiXNlY3AyNTZrMaEDbBjWWKWJC6nmbkoGBfVzRIBTg3o6RppDwPLSZaaK0F-DdGNwgqfCg3VkcIKnxIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:42945/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.175.170/tcp/64407/p2p/16Uiu2HAm3jNkBJjsKWidJaxdPg2xgP5eT2XS4srUQHMeGWrdJHAD"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:64406/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:42945/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "18826bd0-26b4-43c0-984f-9e5c8176b4c3", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"18826bd0-26b4-43c0-984f-9e5c8176b4c3","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:42945/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:42945/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id c45603fd6ba1
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 79a5fd174214
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container c45603fd6ba1. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.