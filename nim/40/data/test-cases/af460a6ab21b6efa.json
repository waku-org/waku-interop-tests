{"uid":"af460a6ab21b6efa","name":"test_filter_update_subscription_with_invalid_content_topic_format","fullName":"tests.filter.test_subscribe_update.TestFilterSubscribeUpdate#test_filter_update_subscription_with_invalid_content_topic_format","historyId":"2a02e8b65abfd27cfc925612aa51b4ba","time":{"start":1706328623112,"stop":1706328623137,"duration":25},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"set_allure_env_variables","time":{"start":1706328532998,"stop":1706328532998,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"attach_logs_on_fail","time":{"start":1706328619324,"stop":1706328619324,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"close_open_nodes","time":{"start":1706328619324,"stop":1706328619325,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"test_setup","time":{"start":1706328619325,"stop":1706328619325,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"test_id","time":{"start":1706328619325,"stop":1706328619325,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"filter_setup","time":{"start":1706328619326,"stop":1706328619326,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"setup_main_relay_node","time":{"start":1706328619326,"stop":1706328621446,"duration":2120},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"setup_main_filter_node","time":{"start":1706328621446,"stop":1706328622999,"duration":1553},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"subscribe_main_nodes","time":{"start":1706328622999,"stop":1706328623109,"duration":110},"status":"passed","steps":[{"name":"wait_for_subscriptions_on_main_nodes","time":{"start":1706328623000,"stop":1706328623109,"duration":109},"status":"passed","steps":[{"name":"create_filter_subscription_with_retry","time":{"start":1706328623031,"stop":1706328623109,"duration":78},"status":"passed","steps":[{"name":"create_filter_subscription","time":{"start":1706328623031,"stop":1706328623109,"duration":78},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"subscription","value":"{'requestId': 'c8b8c856-3cc5-4e8b-a147-135c06599431', 'contentFilters': ['/test/1/waku-filter/proto'], 'pubsubTopic': '/waku/2/rs/0/1'}"},{"name":"node","value":"None"}],"hasContent":true,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"subscription","value":"{'requestId': 'c8b8c856-3cc5-4e8b-a147-135c06599431', 'contentFilters': ['/test/1/waku-filter/proto'], 'pubsubTopic': '/waku/2/rs/0/1'}"},{"name":"node","value":"None"}],"hasContent":true,"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"content_topic_list","value":"['/test/1/waku-filter/proto']"},{"name":"pubsub_topic","value":"None"}],"hasContent":true,"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"attachmentStep":false}],"attachments":[],"parameters":[],"hasContent":true,"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"attachmentStep":false}],"testStage":{"status":"passed","steps":[{"name":"update_filter_subscription","time":{"start":1706328623112,"stop":1706328623119,"duration":7},"status":"broken","statusMessage":"Exception: Error: 400 Client Error: Bad Request for url: http://127.0.0.1:21551/filter/v2/subscriptions with response: b'{\"requestId\":\"unknown\",\"statusCode\":400,\"statusDesc\":\"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\\\\"Invalid content body, could not decode. Unable to deserialize data\\\\\", contentType: \\\\\"text/plain\\\\\"))\"}'\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/steps/filter.py\", line 148, in update_filter_subscription\n    return node.update_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/waku_node.py\", line 150, in update_filter_subscriptions\n    return self._api.update_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 40, in update_filter_subscriptions\n    update_subscriptions_response = self.rest_call(\"put\", \"filter/v2/subscriptions\", json.dumps(subscription))\n                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 16, in rest_call\n    return self.make_request(method, url, headers=headers, data=payload)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/base_client.py\", line 17, in make_request\n    raise Exception(f\"Error: {http_err} with response: {response.content}\")\n","steps":[],"attachments":[],"parameters":[{"name":"subscription","value":"{'requestId': '1', 'contentFilters': [{'description': 'Empty string', 'value': ''}], 'pubsubTopic': '/waku/2/rs/0/1'}"},{"name":"node","value":"None"}],"hasContent":true,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"update_filter_subscription","time":{"start":1706328623120,"stop":1706328623124,"duration":4},"status":"broken","statusMessage":"Exception: Error: 400 Client Error: Bad Request for url: http://127.0.0.1:21551/filter/v2/subscriptions with response: b'{\"requestId\":\"unknown\",\"statusCode\":400,\"statusDesc\":\"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\\\\"Invalid content body, could not decode. Unable to deserialize data\\\\\", contentType: \\\\\"text/plain\\\\\"))\"}'\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/steps/filter.py\", line 148, in update_filter_subscription\n    return node.update_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/waku_node.py\", line 150, in update_filter_subscriptions\n    return self._api.update_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 40, in update_filter_subscriptions\n    update_subscriptions_response = self.rest_call(\"put\", \"filter/v2/subscriptions\", json.dumps(subscription))\n                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 16, in rest_call\n    return self.make_request(method, url, headers=headers, data=payload)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/base_client.py\", line 17, in make_request\n    raise Exception(f\"Error: {http_err} with response: {response.content}\")\n","steps":[],"attachments":[],"parameters":[{"name":"subscription","value":"{'requestId': '1', 'contentFilters': [{'description': 'A dictionary', 'value': {'key': 'YWFh'}}], 'pubsubTopic': '/waku/2/rs/0/1'}"},{"name":"node","value":"None"}],"hasContent":true,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"update_filter_subscription","time":{"start":1706328623125,"stop":1706328623127,"duration":2},"status":"broken","statusMessage":"Exception: Error: 400 Client Error: Bad Request for url: http://127.0.0.1:21551/filter/v2/subscriptions with response: b'{\"requestId\":\"unknown\",\"statusCode\":400,\"statusDesc\":\"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\\\\"Invalid content body, could not decode. Unable to deserialize data\\\\\", contentType: \\\\\"text/plain\\\\\"))\"}'\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/steps/filter.py\", line 148, in update_filter_subscription\n    return node.update_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/waku_node.py\", line 150, in update_filter_subscriptions\n    return self._api.update_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 40, in update_filter_subscriptions\n    update_subscriptions_response = self.rest_call(\"put\", \"filter/v2/subscriptions\", json.dumps(subscription))\n                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 16, in rest_call\n    return self.make_request(method, url, headers=headers, data=payload)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/base_client.py\", line 17, in make_request\n    raise Exception(f\"Error: {http_err} with response: {response.content}\")\n","steps":[],"attachments":[],"parameters":[{"name":"subscription","value":"{'requestId': '1', 'contentFilters': [{'description': 'An integer', 'value': 1234567890}], 'pubsubTopic': '/waku/2/rs/0/1'}"},{"name":"node","value":"None"}],"hasContent":true,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"update_filter_subscription","time":{"start":1706328623128,"stop":1706328623131,"duration":3},"status":"broken","statusMessage":"Exception: Error: 400 Client Error: Bad Request for url: http://127.0.0.1:21551/filter/v2/subscriptions with response: b'{\"requestId\":\"unknown\",\"statusCode\":400,\"statusDesc\":\"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\\\\"Invalid content body, could not decode. Unable to deserialize data\\\\\", contentType: \\\\\"text/plain\\\\\"))\"}'\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/steps/filter.py\", line 148, in update_filter_subscription\n    return node.update_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/waku_node.py\", line 150, in update_filter_subscriptions\n    return self._api.update_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 40, in update_filter_subscriptions\n    update_subscriptions_response = self.rest_call(\"put\", \"filter/v2/subscriptions\", json.dumps(subscription))\n                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 16, in rest_call\n    return self.make_request(method, url, headers=headers, data=payload)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/base_client.py\", line 17, in make_request\n    raise Exception(f\"Error: {http_err} with response: {response.content}\")\n","steps":[],"attachments":[],"parameters":[{"name":"subscription","value":"{'requestId': '1', 'contentFilters': [{'description': 'A list', 'value': ['YWFh']}], 'pubsubTopic': '/waku/2/rs/0/1'}"},{"name":"node","value":"None"}],"hasContent":true,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"update_filter_subscription","time":{"start":1706328623132,"stop":1706328623136,"duration":4},"status":"broken","statusMessage":"Exception: Error: 400 Client Error: Bad Request for url: http://127.0.0.1:21551/filter/v2/subscriptions with response: b'{\"requestId\":\"unknown\",\"statusCode\":400,\"statusDesc\":\"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\\\\"Invalid content body, could not decode. Unable to deserialize data\\\\\", contentType: \\\\\"text/plain\\\\\"))\"}'\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/steps/filter.py\", line 148, in update_filter_subscription\n    return node.update_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/waku_node.py\", line 150, in update_filter_subscriptions\n    return self._api.update_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 40, in update_filter_subscriptions\n    update_subscriptions_response = self.rest_call(\"put\", \"filter/v2/subscriptions\", json.dumps(subscription))\n                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 16, in rest_call\n    return self.make_request(method, url, headers=headers, data=payload)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/base_client.py\", line 17, in make_request\n    raise Exception(f\"Error: {http_err} with response: {response.content}\")\n","steps":[],"attachments":[],"parameters":[{"name":"subscription","value":"{'requestId': '1', 'contentFilters': [{'description': 'A bool', 'value': True}], 'pubsubTopic': '/waku/2/rs/0/1'}"},{"name":"node","value":"None"}],"hasContent":true,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false}],"attachments":[{"uid":"ecc4e5ec5dac8531","name":"log","source":"ecc4e5ec5dac8531.txt","type":"text/plain","size":12393}],"parameters":[],"hasContent":true,"shouldDisplayMessage":false,"stepsCount":5,"attachmentsCount":1,"attachmentStep":false},"afterStages":[{"name":"test_setup::0","time":{"start":1706328623138,"stop":1706328623139,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"close_open_nodes::0","time":{"start":1706328623140,"stop":1706328627432,"duration":4292},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"attach_logs_on_fail::0","time":{"start":1706328627433,"stop":1706328627433,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"set_allure_env_variables::0","time":{"start":1706328995300,"stop":1706328995300,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false}],"labels":[{"name":"tag","value":"@pytest.mark.usefixtures('setup_main_relay_node', 'setup_main_filter_node')"},{"name":"parentSuite","value":"tests.filter"},{"name":"suite","value":"test_subscribe_update"},{"name":"subSuite","value":"TestFilterSubscribeUpdate"},{"name":"host","value":"fv-az1456-261"},{"name":"thread","value":"2057-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.filter.test_subscribe_update"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":9,"unknown":0,"total":9},"items":[{"uid":"57f867ca97b66b88","reportUrl":"https://waku-org.github.io/waku-interop-tests/39//#testresult/57f867ca97b66b88","status":"passed","time":{"start":1706242305922,"stop":1706242305945,"duration":23}},{"uid":"6b9f55f255a3d87b","reportUrl":"https://waku-org.github.io/waku-interop-tests/38//#testresult/6b9f55f255a3d87b","status":"passed","time":{"start":1706155939186,"stop":1706155939215,"duration":29}},{"uid":"58f3ea118f66a43a","reportUrl":"https://waku-org.github.io/waku-interop-tests/37//#testresult/58f3ea118f66a43a","status":"passed","time":{"start":1706069515530,"stop":1706069515555,"duration":25}},{"uid":"ac23eba78d7c46d4","reportUrl":"https://waku-org.github.io/waku-interop-tests/36//#testresult/ac23eba78d7c46d4","status":"passed","time":{"start":1705983107723,"stop":1705983107742,"duration":19}},{"uid":"eb6c04225d253415","reportUrl":"https://waku-org.github.io/waku-interop-tests/35//#testresult/eb6c04225d253415","status":"passed","time":{"start":1705896744626,"stop":1705896744649,"duration":23}},{"uid":"81ce9f78ea4a9b","reportUrl":"https://waku-org.github.io/waku-interop-tests/34//#testresult/81ce9f78ea4a9b","status":"passed","time":{"start":1705810273671,"stop":1705810273695,"duration":24}},{"uid":"7dd14ccf99ff9cac","reportUrl":"https://waku-org.github.io/waku-interop-tests/33//#testresult/7dd14ccf99ff9cac","status":"passed","time":{"start":1705723902396,"stop":1705723902418,"duration":22}},{"uid":"a8e523c60247d9a2","reportUrl":"https://waku-org.github.io/waku-interop-tests/32//#testresult/a8e523c60247d9a2","status":"passed","time":{"start":1705651275955,"stop":1705651275979,"duration":24}}]},"tags":["@pytest.mark.usefixtures('setup_main_relay_node', 'setup_main_filter_node')"]},"source":"af460a6ab21b6efa.json","parameterValues":[]}