[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_invalid_pubsub_topic_format with id: 2024-12-04_04-11-16__4ddd8805-9444-4a55-9ed0-c608885615d4
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-04_04-11-16__4ddd8805-9444-4a55-9ed0-c608885615d4__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.187.91
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['60849', '60850', '60851', '60852', '60853']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 60849:60849 -p 60850:60850 -p 60851:60851 -p 60852:60852 -p 60853:60853 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=60851 --rest-port=60849 --tcp-port=60850 --discv5-udp-port=60852 --rest-address=0.0.0.0 --nat=extip:172.18.187.91 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b7f5a5ecbfa03f06c2a1dd0fdb1b2a39df9c5e487e3e98cbf0e4d3cef706ad1d --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=60853 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.187.91 waku 740d176fec65830c0ad49d38de2fe1caccd17db726635d199240a7fb044d6757
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 840a12972f04. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 740d176fec65. Setting up logs at ./log/docker/node1_2024-12-04_04-11-16__4ddd8805-9444-4a55-9ed0-c608885615d4__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 60849
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:60849/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:60849/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.187.91/tcp/60850/p2p/16Uiu2HAmAqa9qhJeaAQ2rFAJZjnpoJbpA1UBNwGhJzWjwmsCqbwb","/ip4/172.18.187.91/tcp/60851/ws/p2p/16Uiu2HAmAqa9qhJeaAQ2rFAJZjnpoJbpA1UBNwGhJzWjwmsCqbwb"],"enrUri":"enr:-L24QJRGG9Q82HHKIu4-d4XGOuw0rR20KL2jCuEXcuTajHocdZgPA5ZGiy0UrEeDvLKuDe4mbv_frMRvOVvgsifCIOICgmlkgnY0gmlwhKwSu1uKbXVsdGlhZGRyc5YACASsErtbBu2yAAoErBK7Wwbts90DgnJzhQADAQAAiXNlY3AyNTZrMaEC5P6nqxD8oTrvvJmSDMH6zK6pBpTj5Rc9L2Q8057JbZaDdGNwgu2yg3VkcILttIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-04_04-11-16__4ddd8805-9444-4a55-9ed0-c608885615d4__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.218.194
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['42572', '42573', '42574', '42575', '42576']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 42572:42572 -p 42573:42573 -p 42574:42574 -p 42575:42575 -p 42576:42576 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=42574 --rest-port=42572 --tcp-port=42573 --discv5-udp-port=42575 --rest-address=0.0.0.0 --nat=extip:172.18.218.194 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=add23dbe5eee596ec2cea1b54eac8d73ddafccadce1d71c6045dbc549eeabcfa --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=42576 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QJRGG9Q82HHKIu4-d4XGOuw0rR20KL2jCuEXcuTajHocdZgPA5ZGiy0UrEeDvLKuDe4mbv_frMRvOVvgsifCIOICgmlkgnY0gmlwhKwSu1uKbXVsdGlhZGRyc5YACASsErtbBu2yAAoErBK7Wwbts90DgnJzhQADAQAAiXNlY3AyNTZrMaEC5P6nqxD8oTrvvJmSDMH6zK6pBpTj5Rc9L2Q8057JbZaDdGNwgu2yg3VkcILttIV3YWt1MgU --filternode=/ip4/172.18.187.91/tcp/60850/p2p/16Uiu2HAmAqa9qhJeaAQ2rFAJZjnpoJbpA1UBNwGhJzWjwmsCqbwb
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.218.194 waku fa56fa66914afe7b269323d4a9c2225685fe9043eee14294d8958bfa2a516740
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID fa56fa66914a. Setting up logs at ./log/docker/node2_2024-12-04_04-11-16__4ddd8805-9444-4a55-9ed0-c608885615d4__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 42572
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:42572/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:42572/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.218.194/tcp/42573/p2p/16Uiu2HAmAedxJSNDuP87pqXF1sYuc44ucXocFjRqbnCLThWvYBQ5","/ip4/172.18.218.194/tcp/42574/ws/p2p/16Uiu2HAmAedxJSNDuP87pqXF1sYuc44ucXocFjRqbnCLThWvYBQ5"],"enrUri":"enr:-L24QO5l6_3jrW59fw6_yER9_FMHAhykTpb1yeh7luMSGAoaec2uCEkKXmf2_PgS8udMQbtoTpK_KSwtXWK4gkVSJdMCgmlkgnY0gmlwhKwS2sKKbXVsdGlhZGRyc5YACASsEtrCBqZNAAoErBLawgamTt0DgnJzhQADAQAAiXNlY3AyNTZrMaEC4jGQXPeksL_X_UHTvfIruSTgnsBhFsbvb0qiFmKp2uqDdGNwgqZNg3VkcIKmT4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:42572/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.187.91/tcp/60850/p2p/16Uiu2HAmAqa9qhJeaAQ2rFAJZjnpoJbpA1UBNwGhJzWjwmsCqbwb"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:60849/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:42572/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "44fa4b43-6449-4741-bfd3-cf60d9cc730e", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"44fa4b43-6449-4741-bfd3-cf60d9cc730e","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:42572/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": ["/waku/2/rs/3/1"]}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:42572/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 740d176fec65
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id fa56fa66914a
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 740d176fec65. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.