[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_invalid_request_id with id: 2025-01-29_12-56-10__e2eaba76-8e76-4605-acb6-eb577fd80c34
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-29_12-56-10__e2eaba76-8e76-4605-acb6-eb577fd80c34__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.52.155
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['64141', '64142', '64143', '64144', '64145']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 64141:64141 -p 64142:64142 -p 64143:64143 -p 64144:64144 -p 64145:64145 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=64143 --rest-port=64141 --tcp-port=64142 --discv5-udp-port=64144 --rest-address=0.0.0.0 --nat=extip:172.18.52.155 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=077d3e3dab8fb49bc7b0cd8714cd63688bb105fc969b5efcacbee5e9ccbd3eff --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=64145 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.52.155 waku 5735b15a1a3445276af615c39dae2d3449c12080920bfbd909833cd1f3fc3ce8
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 5735b15a1a34. Setting up logs at ./log/docker/node1_2025-01-29_12-56-10__e2eaba76-8e76-4605-acb6-eb577fd80c34__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 64141
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 5716130d83af. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:64141/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:64141/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.52.155/tcp/64142/p2p/16Uiu2HAmASnohxps5ZLTj3hHD3ZwXuNQWeqV1byWw7FnjspPCp4B","/ip4/172.18.52.155/tcp/64143/ws/p2p/16Uiu2HAmASnohxps5ZLTj3hHD3ZwXuNQWeqV1byWw7FnjspPCp4B"],"enrUri":"enr:-L24QDuKRAClak4K1a8SeAN5n30JqkMh2vgEPLHrXNT0jZkPFk9ApnbJu4wX-FrAUHpwK-khvT4uh5KrzEhhCTAXFSgCgmlkgnY0gmlwhKwSNJuKbXVsdGlhZGRyc5YACASsEjSbBvqOAAoErBI0mwb6j90DgnJzhQADAQAAiXNlY3AyNTZrMaEC3yiaXedGKiVSQAMP9kzerToyAvuwihpt0dzs1HTx5EyDdGNwgvqOg3VkcIL6kIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-29_12-56-10__e2eaba76-8e76-4605-acb6-eb577fd80c34__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.56.160
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['8300', '8301', '8302', '8303', '8304']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 8300:8300 -p 8301:8301 -p 8302:8302 -p 8303:8303 -p 8304:8304 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=8302 --rest-port=8300 --tcp-port=8301 --discv5-udp-port=8303 --rest-address=0.0.0.0 --nat=extip:172.18.56.160 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=4712e5556e5d3c5bf9dc0fcb0b2ed4ebac42f76dddd87c208d30effa58d5db54 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=8304 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QDuKRAClak4K1a8SeAN5n30JqkMh2vgEPLHrXNT0jZkPFk9ApnbJu4wX-FrAUHpwK-khvT4uh5KrzEhhCTAXFSgCgmlkgnY0gmlwhKwSNJuKbXVsdGlhZGRyc5YACASsEjSbBvqOAAoErBI0mwb6j90DgnJzhQADAQAAiXNlY3AyNTZrMaEC3yiaXedGKiVSQAMP9kzerToyAvuwihpt0dzs1HTx5EyDdGNwgvqOg3VkcIL6kIV3YWt1MgU --filternode=/ip4/172.18.52.155/tcp/64142/p2p/16Uiu2HAmASnohxps5ZLTj3hHD3ZwXuNQWeqV1byWw7FnjspPCp4B
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.56.160 waku dd5f57eaf66d2acda64811d9eb64fc8d569a965969e18b455f939e34cfd64482
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID dd5f57eaf66d. Setting up logs at ./log/docker/node2_2025-01-29_12-56-10__e2eaba76-8e76-4605-acb6-eb577fd80c34__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 8300
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8300/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8300/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.56.160/tcp/8301/p2p/16Uiu2HAm8ekmoVU6TxxQ1BeDLMPoMJHwHsVbYVqEuipqwHizkTBY","/ip4/172.18.56.160/tcp/8302/ws/p2p/16Uiu2HAm8ekmoVU6TxxQ1BeDLMPoMJHwHsVbYVqEuipqwHizkTBY"],"enrUri":"enr:-L24QIBMCRJGFOQwmGwOu1juAx-2UVa95YLakdrBERwUR0wgX6OlO1xN6iVoOx7fAEUDmc9v68vRq2NGFXCF0B1VlZ4CgmlkgnY0gmlwhKwSOKCKbXVsdGlhZGRyc5YACASsEjigBiBtAAoErBI4oAYgbt0DgnJzhQADAQAAiXNlY3AyNTZrMaECxIHmeuUZWBHNHgCnN8gSPgmgpzOr-cJrdwH2Dp8YIPODdGNwgiBtg3VkcIIgb4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8300/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.52.155/tcp/64142/p2p/16Uiu2HAmASnohxps5ZLTj3hHD3ZwXuNQWeqV1byWw7FnjspPCp4B"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:64141/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8300/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "9d950e9f-a61a-4881-abc6-3825013d6b85", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"9d950e9f-a61a-4881-abc6-3825013d6b85","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8300/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:8300/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 5735b15a1a34
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id dd5f57eaf66d
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 5735b15a1a34. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.