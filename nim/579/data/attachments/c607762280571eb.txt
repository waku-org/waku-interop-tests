[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_invalid_pubsub_topic_format with id: 2024-12-26_04-11-01__25f3b99f-71db-4d00-ba2d-3ba4812fcf11
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-26_04-11-01__25f3b99f-71db-4d00-ba2d-3ba4812fcf11__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.152.170
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['23945', '23946', '23947', '23948', '23949']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 23945:23945 -p 23946:23946 -p 23947:23947 -p 23948:23948 -p 23949:23949 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=23947 --rest-port=23945 --tcp-port=23946 --discv5-udp-port=23948 --rest-address=0.0.0.0 --nat=extip:172.18.152.170 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=3a7eef7a39c30add5a71b16fe317bea4edc5f13e7ecb83ebe8aaa6ccbfed1749 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=23949 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.152.170 waku e79f49db5d346fc6554b6eaf274ac5929cdc61621d982585a8ae0e5abfe819a7
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID e79f49db5d34. Setting up logs at ./log/docker/node1_2024-12-26_04-11-01__25f3b99f-71db-4d00-ba2d-3ba4812fcf11__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 23945
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container e53d5d6c43ef. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:23945/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:23945/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.152.170/tcp/23946/p2p/16Uiu2HAkz4mG5T5BbDswbmzQPYvk3SPkGuhBA9TotJkUaspUrMrA","/ip4/172.18.152.170/tcp/23947/ws/p2p/16Uiu2HAkz4mG5T5BbDswbmzQPYvk3SPkGuhBA9TotJkUaspUrMrA"],"enrUri":"enr:-L24QAS0Sz-D4kAgtXj9NpizcFQbeMIkRAjyMpdt758hPxk7HG0RsfvvYzciDHZQhs9FbkgG0fXnjY061w9UgmlpWxoCgmlkgnY0gmlwhKwSmKqKbXVsdGlhZGRyc5YACASsEpiqBl2KAAoErBKYqgZdi90DgnJzhQADAQAAiXNlY3AyNTZrMaECRO81Z78FBXZxQcRLEa-t93_QKYjnbacxbqKphuXJdKuDdGNwgl2Kg3VkcIJdjIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-26_04-11-01__25f3b99f-71db-4d00-ba2d-3ba4812fcf11__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.131.89
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['3599', '3600', '3601', '3602', '3603']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 3599:3599 -p 3600:3600 -p 3601:3601 -p 3602:3602 -p 3603:3603 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=3601 --rest-port=3599 --tcp-port=3600 --discv5-udp-port=3602 --rest-address=0.0.0.0 --nat=extip:172.18.131.89 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=7708d5f7736e8afd6fa2e0374dba1a880bf24afba52ff3dc3a34c030ec5d7dce --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=3603 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QAS0Sz-D4kAgtXj9NpizcFQbeMIkRAjyMpdt758hPxk7HG0RsfvvYzciDHZQhs9FbkgG0fXnjY061w9UgmlpWxoCgmlkgnY0gmlwhKwSmKqKbXVsdGlhZGRyc5YACASsEpiqBl2KAAoErBKYqgZdi90DgnJzhQADAQAAiXNlY3AyNTZrMaECRO81Z78FBXZxQcRLEa-t93_QKYjnbacxbqKphuXJdKuDdGNwgl2Kg3VkcIJdjIV3YWt1MgU --filternode=/ip4/172.18.152.170/tcp/23946/p2p/16Uiu2HAkz4mG5T5BbDswbmzQPYvk3SPkGuhBA9TotJkUaspUrMrA
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.131.89 waku fbd5c3cdeded2c4e02c65234c232de5ad39b1c0d1f8af546708a3465f63133a2
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID fbd5c3cdeded. Setting up logs at ./log/docker/node2_2024-12-26_04-11-01__25f3b99f-71db-4d00-ba2d-3ba4812fcf11__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 3599
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:3599/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:3599/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.131.89/tcp/3600/p2p/16Uiu2HAmQcPZ1KTGTSa9W5LWwGwto5zjdvtXYaE8tS1DPhiidSZY","/ip4/172.18.131.89/tcp/3601/ws/p2p/16Uiu2HAmQcPZ1KTGTSa9W5LWwGwto5zjdvtXYaE8tS1DPhiidSZY"],"enrUri":"enr:-L24QHtBIb3RFvZ7D0jmNRhdv0NARczpE_54YgbPegbEIHaEM2ZMzC8bu_2NMDrFHdsWHStFlsoqpzunjC42hiN6MdwCgmlkgnY0gmlwhKwSg1mKbXVsdGlhZGRyc5YACASsEoNZBg4QAAoErBKDWQYOEd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDsaG8O3amYgj_VjwtjY7h8GsUovEzRVpUFfX3WN0eRLODdGNwgg4Qg3VkcIIOEoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:3599/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.152.170/tcp/23946/p2p/16Uiu2HAkz4mG5T5BbDswbmzQPYvk3SPkGuhBA9TotJkUaspUrMrA"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:23945/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:3599/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "44c1f610-130d-4854-a38d-042cbf2daac1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"44c1f610-130d-4854-a38d-042cbf2daac1","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:3599/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": ["/waku/2/rs/3/1"]}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:3599/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id e79f49db5d34
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id fbd5c3cdeded
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container e79f49db5d34. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.