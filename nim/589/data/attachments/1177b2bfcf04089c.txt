[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_invalid_request_id with id: 2024-12-27_13-46-06__1c626d6a-3ce9-41ab-b694-e8b509a40c52
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-27_13-46-06__1c626d6a-3ce9-41ab-b694-e8b509a40c52__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.236.108
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['19063', '19064', '19065', '19066', '19067']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 19063:19063 -p 19064:19064 -p 19065:19065 -p 19066:19066 -p 19067:19067 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=19065 --rest-port=19063 --tcp-port=19064 --discv5-udp-port=19066 --rest-address=0.0.0.0 --nat=extip:172.18.236.108 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=cc8c65dffcdacc8daf5a9b7cccac0ec0b76a19f93cf35d9f5bf7d6f9bb21ccac --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=19067 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.236.108 waku 49ef4f12bf4dc20b91b0d2c0613ac3e5bb1ca9ce3480a2d6c5c412063f7dded3
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 49ef4f12bf4d. Setting up logs at ./log/docker/node1_2024-12-27_13-46-06__1c626d6a-3ce9-41ab-b694-e8b509a40c52__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 19063
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 335c49a808bb. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:19063/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:19063/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.236.108/tcp/19064/p2p/16Uiu2HAm6SnjpgRw3P8oBYNC7iHEddsbx15kkeDnbP6ACJzCseYJ","/ip4/172.18.236.108/tcp/19065/ws/p2p/16Uiu2HAm6SnjpgRw3P8oBYNC7iHEddsbx15kkeDnbP6ACJzCseYJ"],"enrUri":"enr:-L24QHbsDmPkA2XMoSMls27PSgYo_XJgnBktjXBvPmfOB7M5GtR4259i3668r-lxXXSWEBZZk4_Y6sRqip__ukLnX68CgmlkgnY0gmlwhKwS7GyKbXVsdGlhZGRyc5YACASsEuxsBkp4AAoErBLsbAZKed0DgnJzhQADAQAAiXNlY3AyNTZrMaECo7nHkcgbqy0DxqnwtssA25t8Tcgzxv1Lp3htEetliiuDdGNwgkp4g3VkcIJKeoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-27_13-46-06__1c626d6a-3ce9-41ab-b694-e8b509a40c52__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.67.213
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['64105', '64106', '64107', '64108', '64109']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 64105:64105 -p 64106:64106 -p 64107:64107 -p 64108:64108 -p 64109:64109 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=64107 --rest-port=64105 --tcp-port=64106 --discv5-udp-port=64108 --rest-address=0.0.0.0 --nat=extip:172.18.67.213 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=1f7647dfc1af8c1cbdccdb0d3ca0fcfbf3a3ccdd6e9b7816eef530e79d64ce38 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=64109 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QHbsDmPkA2XMoSMls27PSgYo_XJgnBktjXBvPmfOB7M5GtR4259i3668r-lxXXSWEBZZk4_Y6sRqip__ukLnX68CgmlkgnY0gmlwhKwS7GyKbXVsdGlhZGRyc5YACASsEuxsBkp4AAoErBLsbAZKed0DgnJzhQADAQAAiXNlY3AyNTZrMaECo7nHkcgbqy0DxqnwtssA25t8Tcgzxv1Lp3htEetliiuDdGNwgkp4g3VkcIJKeoV3YWt1MgU --filternode=/ip4/172.18.236.108/tcp/19064/p2p/16Uiu2HAm6SnjpgRw3P8oBYNC7iHEddsbx15kkeDnbP6ACJzCseYJ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.67.213 waku 94e1e3d70b62cca2450954c714b3f445905c8a88f0508b5b82640b43e0486f30
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 94e1e3d70b62. Setting up logs at ./log/docker/node2_2024-12-27_13-46-06__1c626d6a-3ce9-41ab-b694-e8b509a40c52__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 64105
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:64105/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:64105/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.67.213/tcp/64106/p2p/16Uiu2HAmTJUqJ1CLEomqcGZxfZVJAtVXDP5ey4nmciiPHVPGPQJv","/ip4/172.18.67.213/tcp/64107/ws/p2p/16Uiu2HAmTJUqJ1CLEomqcGZxfZVJAtVXDP5ey4nmciiPHVPGPQJv"],"enrUri":"enr:-L24QMFGBhqtQKvlpdR6dNVuVrdTBCpWwsNDhzLvyIRkKaUVam7V8GdEgTVE64xpxHeQBm4QFeujIqb7iJcepZUi_BsCgmlkgnY0gmlwhKwSQ9WKbXVsdGlhZGRyc5YACASsEkPVBvpqAAoErBJD1Qb6a90DgnJzhQADAQAAiXNlY3AyNTZrMaED2Z5QAsliOUcKwDktz9d-Ovmr-359XC6Bx_OXvvfrBGuDdGNwgvpqg3VkcIL6bIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:64105/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.236.108/tcp/19064/p2p/16Uiu2HAm6SnjpgRw3P8oBYNC7iHEddsbx15kkeDnbP6ACJzCseYJ"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:19063/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:64105/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "3a9f28fb-7179-4691-b5c7-432a2ca9f84f", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"3a9f28fb-7179-4691-b5c7-432a2ca9f84f","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:64105/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:64105/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 49ef4f12bf4d
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 94e1e3d70b62
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 49ef4f12bf4d. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.