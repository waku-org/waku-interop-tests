[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2024-12-27_13-44-43__c0021991-8e11-43ba-b9b4-f49e333f3eaf
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-27_13-44-43__c0021991-8e11-43ba-b9b4-f49e333f3eaf__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.94.161
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['49660', '49661', '49662', '49663', '49664']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 49660:49660 -p 49661:49661 -p 49662:49662 -p 49663:49663 -p 49664:49664 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=49662 --rest-port=49660 --tcp-port=49661 --discv5-udp-port=49663 --rest-address=0.0.0.0 --nat=extip:172.18.94.161 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=2dcb0fa1e1210fd6b4eae28cb2ea44c3dded90cc2bd82aaf8a1e2a8e61dcaebe --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=49664 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.94.161 waku ebcfdd7205171ec9cca029ad1455b474a8534fe745a1204ca9697f58eae6d3b9
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID ebcfdd720517. Setting up logs at ./log/docker/node1_2024-12-27_13-44-43__c0021991-8e11-43ba-b9b4-f49e333f3eaf__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 49660
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 36f11058d289. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:49660/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:49660/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.94.161/tcp/49661/p2p/16Uiu2HAmPsJVdn1yw8m1BzykpPhwr7C9dt592gc364YZyAfTi21L","/ip4/172.18.94.161/tcp/49662/ws/p2p/16Uiu2HAmPsJVdn1yw8m1BzykpPhwr7C9dt592gc364YZyAfTi21L"],"enrUri":"enr:-L24QO2GoktfoSh9qUebunI9OsgsoZXBSLgEYZWgfqKM_A39El5rl8jCSogdUIrHSpRqhunD5WNXwo-INeSJGniCbjcCgmlkgnY0gmlwhKwSXqGKbXVsdGlhZGRyc5YACASsEl6hBsH9AAoErBJeoQbB_t0DgnJzhQADAQAAiXNlY3AyNTZrMaEDppgKj0cxqU8aQwos7fadof38lfgTwnj5gfATwKjVJT-DdGNwgsH9g3VkcILB_4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-27_13-44-43__c0021991-8e11-43ba-b9b4-f49e333f3eaf__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.37.205
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['38354', '38355', '38356', '38357', '38358']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 38354:38354 -p 38355:38355 -p 38356:38356 -p 38357:38357 -p 38358:38358 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=38356 --rest-port=38354 --tcp-port=38355 --discv5-udp-port=38357 --rest-address=0.0.0.0 --nat=extip:172.18.37.205 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=195cadcd667f6ff98e8279995bfc010ed4a60a1cea1007b65de809f857cd56ba --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=38358 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QO2GoktfoSh9qUebunI9OsgsoZXBSLgEYZWgfqKM_A39El5rl8jCSogdUIrHSpRqhunD5WNXwo-INeSJGniCbjcCgmlkgnY0gmlwhKwSXqGKbXVsdGlhZGRyc5YACASsEl6hBsH9AAoErBJeoQbB_t0DgnJzhQADAQAAiXNlY3AyNTZrMaEDppgKj0cxqU8aQwos7fadof38lfgTwnj5gfATwKjVJT-DdGNwgsH9g3VkcILB_4V3YWt1MgU --filternode=/ip4/172.18.94.161/tcp/49661/p2p/16Uiu2HAmPsJVdn1yw8m1BzykpPhwr7C9dt592gc364YZyAfTi21L
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.37.205 waku fcdc34c5730e044dac7e0c9cfc337c24e6bd7aae3a5fee511bc872b96ed68dba
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID fcdc34c5730e. Setting up logs at ./log/docker/node2_2024-12-27_13-44-43__c0021991-8e11-43ba-b9b4-f49e333f3eaf__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 38354
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38354/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38354/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.37.205/tcp/38355/p2p/16Uiu2HAmAzFCm3SBNggrwpuV3jvhAG2CP841UpHSVXW6czfD2aGk","/ip4/172.18.37.205/tcp/38356/ws/p2p/16Uiu2HAmAzFCm3SBNggrwpuV3jvhAG2CP841UpHSVXW6czfD2aGk"],"enrUri":"enr:-L24QKCwyZnx65tdEaIHMUmaUo4o2IQTjU3MM6hGJuyhNr3UJPIiGggZsVNFFvdUFf1DdukubhWz5wqDavZVF1OxkdYCgmlkgnY0gmlwhKwSJc2KbXVsdGlhZGRyc5YACASsEiXNBpXTAAoErBIlzQaV1N0DgnJzhQADAQAAiXNlY3AyNTZrMaEC5zd0roSTki8zo2c1UH-YcmD-VOjSzVgJnWkDpYbu9J2DdGNwgpXTg3VkcIKV1YV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38354/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.94.161/tcp/49661/p2p/16Uiu2HAmPsJVdn1yw8m1BzykpPhwr7C9dt592gc364YZyAfTi21L"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:49660/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38354/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "23e9bc88-a75e-476b-af68-be026c656f46", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"23e9bc88-a75e-476b-af68-be026c656f46","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:38354/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:38354/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id ebcfdd720517
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id fcdc34c5730e
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container ebcfdd720517. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.