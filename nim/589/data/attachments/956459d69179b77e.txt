[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_pubsub_topic_string_instead_of_list with id: 2024-12-27_13-44-53__a0b6a996-f142-48d0-aa3b-437d55f1f71d
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-27_13-44-53__a0b6a996-f142-48d0-aa3b-437d55f1f71d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.108.231
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['13869', '13870', '13871', '13872', '13873']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 13869:13869 -p 13870:13870 -p 13871:13871 -p 13872:13872 -p 13873:13873 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=13871 --rest-port=13869 --tcp-port=13870 --discv5-udp-port=13872 --rest-address=0.0.0.0 --nat=extip:172.18.108.231 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=68079e6a2fabfead3ce3abc399d2f6b04eba8e4ed1cebfac29fda16f100ccceb --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=13873 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.108.231 waku 04e30295fed3817b1c0e3b403f39dca00153de77c7c187c5b75045ccfb7eb4b4
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 04e30295fed3. Setting up logs at ./log/docker/node1_2024-12-27_13-44-53__a0b6a996-f142-48d0-aa3b-437d55f1f71d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 13869
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 1375dbc895e6. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:13869/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:13869/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.108.231/tcp/13870/p2p/16Uiu2HAmHLhs3kQr7JXyTWsPfAMLPZWFb5mfukD4haU6eEu4CVg6","/ip4/172.18.108.231/tcp/13871/ws/p2p/16Uiu2HAmHLhs3kQr7JXyTWsPfAMLPZWFb5mfukD4haU6eEu4CVg6"],"enrUri":"enr:-L24QLfIak3FKeKX7fWeHfsIh8-HAYWtfVMQO29azaUZrVt0Px5yGizzMxpcjvrCqchF6KNDfeNUuS9PbuzlrjQ6fCACgmlkgnY0gmlwhKwSbOeKbXVsdGlhZGRyc5YACASsEmznBjYuAAoErBJs5wY2L90DgnJzhQADAQAAiXNlY3AyNTZrMaEDRZtWlw6etp0s-UiEOKJJ63yEubt_cdIkFH8zPo2xkPODdGNwgjYug3VkcII2MIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-27_13-44-53__a0b6a996-f142-48d0-aa3b-437d55f1f71d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.110.159
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['36673', '36674', '36675', '36676', '36677']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 36673:36673 -p 36674:36674 -p 36675:36675 -p 36676:36676 -p 36677:36677 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=36675 --rest-port=36673 --tcp-port=36674 --discv5-udp-port=36676 --rest-address=0.0.0.0 --nat=extip:172.18.110.159 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=3d217f1a1dace5c0c9b9022b6b5cfde0d9eee490ec28d8cf0caae6ab489e50a1 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=36677 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QLfIak3FKeKX7fWeHfsIh8-HAYWtfVMQO29azaUZrVt0Px5yGizzMxpcjvrCqchF6KNDfeNUuS9PbuzlrjQ6fCACgmlkgnY0gmlwhKwSbOeKbXVsdGlhZGRyc5YACASsEmznBjYuAAoErBJs5wY2L90DgnJzhQADAQAAiXNlY3AyNTZrMaEDRZtWlw6etp0s-UiEOKJJ63yEubt_cdIkFH8zPo2xkPODdGNwgjYug3VkcII2MIV3YWt1MgU --filternode=/ip4/172.18.108.231/tcp/13870/p2p/16Uiu2HAmHLhs3kQr7JXyTWsPfAMLPZWFb5mfukD4haU6eEu4CVg6
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.110.159 waku ae324730d46cbd51b6c5a98a5c302afdd067b04a057d2603989b4d92db593d5a
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID ae324730d46c. Setting up logs at ./log/docker/node2_2024-12-27_13-44-53__a0b6a996-f142-48d0-aa3b-437d55f1f71d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 36673
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:36673/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:36673/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.110.159/tcp/36674/p2p/16Uiu2HAmBiXVjwt68QV1T3VmckA1kJ38wx5qf84KYSHUuPGWARch","/ip4/172.18.110.159/tcp/36675/ws/p2p/16Uiu2HAmBiXVjwt68QV1T3VmckA1kJ38wx5qf84KYSHUuPGWARch"],"enrUri":"enr:-L24QH0KQ8QMjTSyJC0ULWNT8Snitt6RydPWfXn4m2tSjGxHQV0mWmJc4LpIpaMvUW0OK4m1QufR2zC2A65rfMAiZgkCgmlkgnY0gmlwhKwSbp-KbXVsdGlhZGRyc5YACASsEm6fBo9CAAoErBJunwaPQ90DgnJzhQADAQAAiXNlY3AyNTZrMaEC8gxFpnu6FcWYgUgEorrQSBVoYLpz5URAgQcWSUvL8I6DdGNwgo9Cg3VkcIKPRIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:36673/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.108.231/tcp/13870/p2p/16Uiu2HAmHLhs3kQr7JXyTWsPfAMLPZWFb5mfukD4haU6eEu4CVg6"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:13869/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:36673/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "ebffb612-7f3c-4c1f-9575-3f100abf460e", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"ebffb612-7f3c-4c1f-9575-3f100abf460e","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:36673/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": "/test/1/waku-filter/proto", "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:36673/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 04e30295fed3
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id ae324730d46c
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 04e30295fed3. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.