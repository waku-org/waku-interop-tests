[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_extra_field with id: 2024-11-19_04-13-07__7d67d7db-2496-41c9-aba6-e6bd739ba1f9
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-19_04-13-07__7d67d7db-2496-41c9-aba6-e6bd739ba1f9__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.130.47
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['58979', '58980', '58981', '58982', '58983']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 58979:58979 -p 58980:58980 -p 58981:58981 -p 58982:58982 -p 58983:58983 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=58981 --rest-port=58979 --tcp-port=58980 --discv5-udp-port=58982 --rest-address=0.0.0.0 --nat=extip:172.18.130.47 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=bfabbcef879d828c47739ff37e715b211e7ced24942dc6eea77ef71da73b387e --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=58983 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.130.47 waku 167d9f8af477902bdc8bf731c10cc3ed6ef6f5e9cff1f4b18e98421da59816c5
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 167d9f8af477. Setting up logs at ./log/docker/node1_2024-11-19_04-13-07__7d67d7db-2496-41c9-aba6-e6bd739ba1f9__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 58979
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 5b811cd1ede1. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:58979/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:58979/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.130.47/tcp/58980/p2p/16Uiu2HAm2S22zjrWtCqj2sjytKUXZRNzqZi6Ev2xYSoJcsfkHc11","/ip4/172.18.130.47/tcp/58981/ws/p2p/16Uiu2HAm2S22zjrWtCqj2sjytKUXZRNzqZi6Ev2xYSoJcsfkHc11"],"enrUri":"enr:-L24QKSSAZNNLikzdfBl-nVxOZa2hG7hi9D91hVyl01pG4wVQi0Oe5DunWlcIMKDHnLUEUQelz0yeX3qox29gz8CDzwCgmlkgnY0gmlwhKwSgi-KbXVsdGlhZGRyc5YACASsEoIvBuZkAAoErBKCLwbmZd0DgnJzhQADAQAAiXNlY3AyNTZrMaECaBh8KJ1peG4kbaqj4Zk9a3rtlz1arvC5n07fs8lXhtyDdGNwguZkg3VkcILmZoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-19_04-13-07__7d67d7db-2496-41c9-aba6-e6bd739ba1f9__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.135.49
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['8531', '8532', '8533', '8534', '8535']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 8531:8531 -p 8532:8532 -p 8533:8533 -p 8534:8534 -p 8535:8535 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=8533 --rest-port=8531 --tcp-port=8532 --discv5-udp-port=8534 --rest-address=0.0.0.0 --nat=extip:172.18.135.49 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=deed62a7f4797d37faf42b488c5ceda6a936de17b33db56ebc0acc04bd0be2ca --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=8535 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QKSSAZNNLikzdfBl-nVxOZa2hG7hi9D91hVyl01pG4wVQi0Oe5DunWlcIMKDHnLUEUQelz0yeX3qox29gz8CDzwCgmlkgnY0gmlwhKwSgi-KbXVsdGlhZGRyc5YACASsEoIvBuZkAAoErBKCLwbmZd0DgnJzhQADAQAAiXNlY3AyNTZrMaECaBh8KJ1peG4kbaqj4Zk9a3rtlz1arvC5n07fs8lXhtyDdGNwguZkg3VkcILmZoV3YWt1MgU --filternode=/ip4/172.18.130.47/tcp/58980/p2p/16Uiu2HAm2S22zjrWtCqj2sjytKUXZRNzqZi6Ev2xYSoJcsfkHc11
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.135.49 waku 4c4e6f9ffec7ff35ffe95a4232ca611e68c96b1556525f9ed2b24668acd95a55
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 4c4e6f9ffec7. Setting up logs at ./log/docker/node2_2024-11-19_04-13-07__7d67d7db-2496-41c9-aba6-e6bd739ba1f9__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 8531
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8531/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8531/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.135.49/tcp/8532/p2p/16Uiu2HAkz7edL9k42sdivLfa2iYrePgXpz7oJQ7w68maEpzyeoCF","/ip4/172.18.135.49/tcp/8533/ws/p2p/16Uiu2HAkz7edL9k42sdivLfa2iYrePgXpz7oJQ7w68maEpzyeoCF"],"enrUri":"enr:-L24QApbQql67-jm2ZvMQSue464wcbKPH5AsVv5YFFlfBa_RAWYjLo33VSp-R5n7j6lCOSCw_3WgJoh3jJ5vWZTgI4oCgmlkgnY0gmlwhKwShzGKbXVsdGlhZGRyc5YACASsEocxBiFUAAoErBKHMQYhVd0DgnJzhQADAQAAiXNlY3AyNTZrMaECRaxzULZRiY88qoPqlLmzTkr7SwonFjOnJN1LEe5TXiyDdGNwgiFUg3VkcIIhVoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8531/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.130.47/tcp/58980/p2p/16Uiu2HAm2S22zjrWtCqj2sjytKUXZRNzqZi6Ev2xYSoJcsfkHc11"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:58979/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8531/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1b792214-b819-4520-bcc9-71ef0d26958d", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"1b792214-b819-4520-bcc9-71ef0d26958d","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:8531/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:8531/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 167d9f8af477
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 4c4e6f9ffec7
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 167d9f8af477. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.