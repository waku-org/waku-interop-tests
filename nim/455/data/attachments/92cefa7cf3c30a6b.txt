[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_all_with_extra_field with id: 2024-11-19_04-13-25__267a3dbd-9c5c-4fb5-a161-226d0af5575d
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-19_04-13-25__267a3dbd-9c5c-4fb5-a161-226d0af5575d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.4.211
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['8501', '8502', '8503', '8504', '8505']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 8501:8501 -p 8502:8502 -p 8503:8503 -p 8504:8504 -p 8505:8505 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=8503 --rest-port=8501 --tcp-port=8502 --discv5-udp-port=8504 --rest-address=0.0.0.0 --nat=extip:172.18.4.211 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=f8dc2e067cabd9a87868e7cd7a4fa488ca2c3f2209fece9bab3f8fa3e1d4afc1 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=8505 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.4.211 waku cce285ec2b33028b438eef5baea9507d5cfbdf237ee932df9679ea2caa0808fc
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID cce285ec2b33. Setting up logs at ./log/docker/node1_2024-11-19_04-13-25__267a3dbd-9c5c-4fb5-a161-226d0af5575d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 8501
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container f9f0aa5402eb. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8501/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8501/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.4.211/tcp/8502/p2p/16Uiu2HAkutYQrJyyXzQvyT7u9rdQsqy5HxnH4xDhs8tdGNcpmFEC","/ip4/172.18.4.211/tcp/8503/ws/p2p/16Uiu2HAkutYQrJyyXzQvyT7u9rdQsqy5HxnH4xDhs8tdGNcpmFEC"],"enrUri":"enr:-L24QHkIM1WOP1OcFrDq5CJ_BId6oRDrVT4y2hFPShGAXQA5em2uIFgKZ2Aa9f8i5-xZAXUWzL4vlQx5Dm0VKk7JnlwCgmlkgnY0gmlwhKwSBNOKbXVsdGlhZGRyc5YACASsEgTTBiE2AAoErBIE0wYhN90DgnJzhQADAQAAiXNlY3AyNTZrMaECBuIf7OtVX16grNog5o3Ktnw3jFTbGO5pCAI2fbHoc2WDdGNwgiE2g3VkcIIhOIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-19_04-13-25__267a3dbd-9c5c-4fb5-a161-226d0af5575d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.33.68
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['56127', '56128', '56129', '56130', '56131']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 56127:56127 -p 56128:56128 -p 56129:56129 -p 56130:56130 -p 56131:56131 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=56129 --rest-port=56127 --tcp-port=56128 --discv5-udp-port=56130 --rest-address=0.0.0.0 --nat=extip:172.18.33.68 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=1f3b4a22a0e49cb0fddfa715cbd15e662aaee8b1aaabb504d4e3b48cd0fadaa3 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=56131 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QHkIM1WOP1OcFrDq5CJ_BId6oRDrVT4y2hFPShGAXQA5em2uIFgKZ2Aa9f8i5-xZAXUWzL4vlQx5Dm0VKk7JnlwCgmlkgnY0gmlwhKwSBNOKbXVsdGlhZGRyc5YACASsEgTTBiE2AAoErBIE0wYhN90DgnJzhQADAQAAiXNlY3AyNTZrMaECBuIf7OtVX16grNog5o3Ktnw3jFTbGO5pCAI2fbHoc2WDdGNwgiE2g3VkcIIhOIV3YWt1MgU --filternode=/ip4/172.18.4.211/tcp/8502/p2p/16Uiu2HAkutYQrJyyXzQvyT7u9rdQsqy5HxnH4xDhs8tdGNcpmFEC
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.33.68 waku 99c752e0d73544aa6734829526247e078361543e39daaea817ec87858a59f9c1
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 99c752e0d735. Setting up logs at ./log/docker/node2_2024-11-19_04-13-25__267a3dbd-9c5c-4fb5-a161-226d0af5575d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 56127
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:56127/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:56127/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.33.68/tcp/56128/p2p/16Uiu2HAm98gjLASmtwwNP2TAMVH4ootwTR1CnpJfHEdhSFAsZCnx","/ip4/172.18.33.68/tcp/56129/ws/p2p/16Uiu2HAm98gjLASmtwwNP2TAMVH4ootwTR1CnpJfHEdhSFAsZCnx"],"enrUri":"enr:-L24QHCHavZyR_9UQ79GEfNhu-KBrxYzD-H2nRc1FTygxLQJI3k-et3dRxW5hWibM9gQapdKbNjt4PeDv8dyC7JE2rYCgmlkgnY0gmlwhKwSIUSKbXVsdGlhZGRyc5YACASsEiFEBttAAAoErBIhRAbbQd0DgnJzhQADAQAAiXNlY3AyNTZrMaECy6mXi9ESE1N1s--RlkvXPZM2j1RCI7V_sMOpCPcysbWDdGNwgttAg3VkcILbQoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:56127/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.4.211/tcp/8502/p2p/16Uiu2HAkutYQrJyyXzQvyT7u9rdQsqy5HxnH4xDhs8tdGNcpmFEC"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8501/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:56127/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "88ed1cae-52fa-4242-9cfe-97f85a75fa29", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"88ed1cae-52fa-4242-9cfe-97f85a75fa29","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:56127/filter/v2/subscriptions/all" -H "Content-Type: application/json" -d '{"requestId": 1, "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:56127/filter/v2/subscriptions/all. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id cce285ec2b33
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 99c752e0d735
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container cce285ec2b33. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.