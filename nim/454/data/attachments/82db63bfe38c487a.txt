[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_extra_field with id: 2024-11-18_10-09-00__05f4a03d-43db-40e8-b484-5b2bb757a511
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-18_10-09-00__05f4a03d-43db-40e8-b484-5b2bb757a511__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.88.237
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['21541', '21542', '21543', '21544', '21545']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 21541:21541 -p 21542:21542 -p 21543:21543 -p 21544:21544 -p 21545:21545 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=21543 --rest-port=21541 --tcp-port=21542 --discv5-udp-port=21544 --rest-address=0.0.0.0 --nat=extip:172.18.88.237 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=a2b1561f7e0a758fd499a1d216acbaf7e38abce93daacd111f9babaccb53a64c --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=21545 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.88.237 waku b29281297b6ff9efb14edd75124870d11bd69f7afdbbf4cee2889f917bb4d164
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container a2bad08cb85b. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID b29281297b6f. Setting up logs at ./log/docker/node1_2024-11-18_10-09-00__05f4a03d-43db-40e8-b484-5b2bb757a511__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 21541
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:21541/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:21541/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.88.237/tcp/21542/p2p/16Uiu2HAkyyrFVzTd7fVi1TwWSfpTguFYaGoKgt2N9z3oqCYCZXtV","/ip4/172.18.88.237/tcp/21543/ws/p2p/16Uiu2HAkyyrFVzTd7fVi1TwWSfpTguFYaGoKgt2N9z3oqCYCZXtV"],"enrUri":"enr:-L24QKLU9rnDJ7o0t3tDiMqnkitMVOjDEnkkbM5XNAeeRM5ALPyTwx6JTNBf1fn2NF4wWggQ8c10jq15A1WOAiEpl6ACgmlkgnY0gmlwhKwSWO2KbXVsdGlhZGRyc5YACASsEljtBlQmAAoErBJY7QZUJ90DgnJzhQADAQAAiXNlY3AyNTZrMaECQ6zyZCh-G6jKncaSF5H_xXyvFyG2JC7VWnBYNIkuO7KDdGNwglQmg3VkcIJUKIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-18_10-09-00__05f4a03d-43db-40e8-b484-5b2bb757a511__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.38.23
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['4065', '4066', '4067', '4068', '4069']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 4065:4065 -p 4066:4066 -p 4067:4067 -p 4068:4068 -p 4069:4069 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=4067 --rest-port=4065 --tcp-port=4066 --discv5-udp-port=4068 --rest-address=0.0.0.0 --nat=extip:172.18.38.23 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=eacab3e9bdcbbbe1ddaccccbf4b72be1709cffff425d357a38bedb9e882d99ff --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=4069 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QKLU9rnDJ7o0t3tDiMqnkitMVOjDEnkkbM5XNAeeRM5ALPyTwx6JTNBf1fn2NF4wWggQ8c10jq15A1WOAiEpl6ACgmlkgnY0gmlwhKwSWO2KbXVsdGlhZGRyc5YACASsEljtBlQmAAoErBJY7QZUJ90DgnJzhQADAQAAiXNlY3AyNTZrMaECQ6zyZCh-G6jKncaSF5H_xXyvFyG2JC7VWnBYNIkuO7KDdGNwglQmg3VkcIJUKIV3YWt1MgU --filternode=/ip4/172.18.88.237/tcp/21542/p2p/16Uiu2HAkyyrFVzTd7fVi1TwWSfpTguFYaGoKgt2N9z3oqCYCZXtV
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.38.23 waku b09dd37dd6e08e8991bf205be104f1b148aff49898a1f726cb5aa0899f1987ea
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID b09dd37dd6e0. Setting up logs at ./log/docker/node2_2024-11-18_10-09-00__05f4a03d-43db-40e8-b484-5b2bb757a511__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 4065
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:4065/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:4065/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.38.23/tcp/4066/p2p/16Uiu2HAmAvvc5hL4NzrWwZx45TA21zJg2Nt97oPBztFHbknk3iFN","/ip4/172.18.38.23/tcp/4067/ws/p2p/16Uiu2HAmAvvc5hL4NzrWwZx45TA21zJg2Nt97oPBztFHbknk3iFN"],"enrUri":"enr:-L24QCuHad1SRMn66R5RsC0IbL2LU1oyNKJBocF3yETuDPQgY7jSgzWmgR9o2EWgkm0UAOFlUhOYr40v1-WhA41GqzACgmlkgnY0gmlwhKwSJheKbXVsdGlhZGRyc5YACASsEiYXBg_iAAoErBImFwYP490DgnJzhQADAQAAiXNlY3AyNTZrMaEC5l2vRNtcdOtK5Mb95-xzVwZR4HwbLrLZefZeodjR0uWDdGNwgg_ig3VkcIIP5IV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:4065/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.88.237/tcp/21542/p2p/16Uiu2HAkyyrFVzTd7fVi1TwWSfpTguFYaGoKgt2N9z3oqCYCZXtV"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:21541/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:4065/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "70b95d79-95f8-490d-ad42-4f6bb30f26d0", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"70b95d79-95f8-490d-ad42-4f6bb30f26d0","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:4065/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:4065/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id b29281297b6f
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id b09dd37dd6e0
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container b29281297b6f. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.