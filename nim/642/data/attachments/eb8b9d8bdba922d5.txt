2025-02-06 04:05:30.627 DEBUG [tests.conftest] Running fixture setup: test_id
2025-02-06 04:05:30.628 DEBUG [tests.conftest] Running test: test_valid_payloads_n1_with_rln_n2_without_rln_at_spam_rate with id: 2025-02-06_04-05-30__6bdbc830-2b35-440f-a52d-e54b5f557f08
2025-02-06 04:05:30.628 DEBUG [src.steps.common] Running fixture setup: common_setup
2025-02-06 04:05:30.628 DEBUG [src.steps.relay] Running fixture setup: relay_setup
2025-02-06 04:05:30.635 DEBUG [src.node.docker_mananger] Docker client initialized with image wakuorg/nwaku:latest
2025-02-06 04:05:30.635 DEBUG [src.node.waku_node] WakuNode instance initialized with log path ./log/docker/node1_2025-02-06_04-05-30__6bdbc830-2b35-440f-a52d-e54b5f557f08__wakuorg_nwaku:latest.log
2025-02-06 04:05:30.635 DEBUG [src.node.waku_node] Starting Node...
2025-02-06 04:05:30.635 DEBUG [src.node.docker_mananger] Attempting to create or retrieve network waku
2025-02-06 04:05:30.636 DEBUG [src.node.docker_mananger] Network waku already exists
2025-02-06 04:05:30.637 DEBUG [src.node.docker_mananger] Generated random external IP 172.18.89.111
2025-02-06 04:05:30.637 DEBUG [src.node.docker_mananger] Generated ports ['2114', '2115', '2116', '2117', '2118']
2025-02-06 04:05:30.637 DEBUG [src.node.waku_node] Using volumes ['/home/runner/work/waku-interop-tests/waku-interop-tests/rln_tree_svvg_1:/etc/rln_tree', '/home/runner/work/waku-interop-tests/waku-interop-tests/keystore_svvg_1:/keystore']
2025-02-06 04:05:30.637 DEBUG [src.node.docker_mananger] docker run -i -t -p 2114:2114 -p 2115:2115 -p 2116:2116 -p 2117:2117 -p 2118:2118 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=2116 --rest-port=2114 --tcp-port=2115 --discv5-udp-port=2117 --rest-address=0.0.0.0 --nat=extip:172.18.89.111 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=90dc40c1347df41021eaa9fed57cbcbd4e4c3c9ee7c33bae7cfea5bae2ba46cf --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=2118 --metrics-logging=true --relay=true --rln-relay-membership-index=1 --rln-relay-user-message-limit=1 --rln-relay-epoch-sec=1 --rln-relay=true --rln-relay-cred-path=/keystore/keystore.json --rln-relay-cred-password=password
2025-02-06 04:05:30.868 DEBUG [src.node.docker_mananger] docker network connect --ip 172.18.89.111 waku d98cab4ddfbcc9f369e62f3dbd02fd2414071386534e5793c3dc84f31efbd5fd
2025-02-06 04:05:30.919 DEBUG [src.node.docker_mananger] Container started with ID d98cab4ddfbc. Setting up logs at ./log/docker/node1_2025-02-06_04-05-30__6bdbc830-2b35-440f-a52d-e54b5f557f08__wakuorg_nwaku:latest.log
2025-02-06 04:05:30.921 DEBUG [src.node.waku_node] Started container from image wakuorg/nwaku:latest. REST: 2114
2025-02-06 04:05:30.921 DEBUG [src.libs.common] Sleeping for 1 seconds
2025-02-06 04:05:31.430 ERROR [src.node.docker_mananger] Max retries reached for container 3d0dff2a03c9. Exiting log stream.
2025-02-06 04:05:31.921 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:2114/health" -H "Content-Type: application/json" -d 'None'
2025-02-06 04:05:37.847 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"nodeHealth":"Initializing","protocolsHealth":[{"Rln Relay":"Ready"}]}'
2025-02-06 04:05:37.948 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:2114/health" -H "Content-Type: application/json" -d 'None'
2025-02-06 04:05:37.950 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[{"Rln Relay":"Ready"}]}'
2025-02-06 04:05:37.951 INFO [src.node.waku_node] Node protocols are initialized !!
2025-02-06 04:05:37.951 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:2114/debug/v1/info" -H "Content-Type: application/json" -d 'None'
2025-02-06 04:05:37.953 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.89.111/tcp/2115/p2p/16Uiu2HAm6tjudkDBGEjSDwRbcEiUUMgvvxdStbwujyWwuuW1hb1j","/ip4/172.18.89.111/tcp/2116/ws/p2p/16Uiu2HAm6tjudkDBGEjSDwRbcEiUUMgvvxdStbwujyWwuuW1hb1j"],"enrUri":"enr:-L24QHlAHoUgFjMQBKO8kpEl8Ok8aTn3FBI1cMBtm6yzX7UgH6rLujcL19s68_K1nmoylEK4FREoygI1ntHD04tqbWgCgmlkgnY0gmlwhKwSWW-KbXVsdGlhZGRyc5YACASsEllvBghDAAoErBJZbwYIRN0DgnJzhQADAQAAiXNlY3AyNTZrMaECql-uBTMHbVDDbBMEW3svTT4VQPJMBNl7sYk2G2jgh1KDdGNwgghDg3VkcIIIRYV3YWt1MgE"}'
2025-02-06 04:05:37.953 INFO [src.node.waku_node] REST service is ready !!
2025-02-06 04:05:37.959 DEBUG [src.node.docker_mananger] Docker client initialized with image wakuorg/nwaku:latest
2025-02-06 04:05:37.959 DEBUG [src.node.waku_node] WakuNode instance initialized with log path ./log/docker/node2_2025-02-06_04-05-30__6bdbc830-2b35-440f-a52d-e54b5f557f08__wakuorg_nwaku:latest.log
2025-02-06 04:05:37.959 DEBUG [src.node.waku_node] Starting Node...
2025-02-06 04:05:37.959 DEBUG [src.node.docker_mananger] Attempting to create or retrieve network waku
2025-02-06 04:05:37.961 DEBUG [src.node.docker_mananger] Network waku already exists
2025-02-06 04:05:37.961 DEBUG [src.node.docker_mananger] Generated random external IP 172.18.6.201
2025-02-06 04:05:37.961 DEBUG [src.node.docker_mananger] Generated ports ['39302', '39303', '39304', '39305', '39306']
2025-02-06 04:05:37.961 DEBUG [src.node.waku_node] RLN credentials were not set
2025-02-06 04:05:37.961 INFO [src.node.waku_node] RLN credentials not set or credential store not available, starting without RLN
2025-02-06 04:05:37.961 DEBUG [src.node.waku_node] Using volumes []
2025-02-06 04:05:37.962 DEBUG [src.node.docker_mananger] docker run -i -t -p 39302:39302 -p 39303:39303 -p 39304:39304 -p 39305:39305 -p 39306:39306 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=39304 --rest-port=39302 --tcp-port=39303 --discv5-udp-port=39305 --rest-address=0.0.0.0 --nat=extip:172.18.6.201 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=f925c828cbb47bc75362fbe3abe84d0a53bed2530b41aaaba9b7f87eeacd9d38 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=39306 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-L24QHlAHoUgFjMQBKO8kpEl8Ok8aTn3FBI1cMBtm6yzX7UgH6rLujcL19s68_K1nmoylEK4FREoygI1ntHD04tqbWgCgmlkgnY0gmlwhKwSWW-KbXVsdGlhZGRyc5YACASsEllvBghDAAoErBJZbwYIRN0DgnJzhQADAQAAiXNlY3AyNTZrMaECql-uBTMHbVDDbBMEW3svTT4VQPJMBNl7sYk2G2jgh1KDdGNwgghDg3VkcIIIRYV3YWt1MgE
2025-02-06 04:05:38.200 DEBUG [src.node.docker_mananger] docker network connect --ip 172.18.6.201 waku 37ca3ad5fc1fe0ffbb59aef22fd083f9cd99dee2c1a092e34ef048dd8725b422
2025-02-06 04:05:38.251 DEBUG [src.node.docker_mananger] Container started with ID 37ca3ad5fc1f. Setting up logs at ./log/docker/node2_2025-02-06_04-05-30__6bdbc830-2b35-440f-a52d-e54b5f557f08__wakuorg_nwaku:latest.log
2025-02-06 04:05:38.252 DEBUG [src.node.waku_node] Started container from image wakuorg/nwaku:latest. REST: 39302
2025-02-06 04:05:38.252 DEBUG [src.libs.common] Sleeping for 1 seconds
2025-02-06 04:05:39.252 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:39302/health" -H "Content-Type: application/json" -d 'None'
2025-02-06 04:05:39.262 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
2025-02-06 04:05:39.262 INFO [src.node.waku_node] Node protocols are initialized !!
2025-02-06 04:05:39.263 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:39302/debug/v1/info" -H "Content-Type: application/json" -d 'None'
2025-02-06 04:05:39.269 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.6.201/tcp/39303/p2p/16Uiu2HAmS8dRvjQoxVPmwScP1Tkd8BUZVHdXSqoJs11WtvuCPKub","/ip4/172.18.6.201/tcp/39304/ws/p2p/16Uiu2HAmS8dRvjQoxVPmwScP1Tkd8BUZVHdXSqoJs11WtvuCPKub"],"enrUri":"enr:-L24QLNXXZS1OCBcwOKqsHfngaKn4barwnIY8hFK2l_1WNpvPWR2Uw5CXsg7ts0fP13G45259zEYjZhLEf9BWCG7wfgCgmlkgnY0gmlwhKwSBsmKbXVsdGlhZGRyc5YACASsEgbJBpmHAAoErBIGyQaZiN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDyDyJz7H2O079Ee98q5HvHqDmQ1b2GbHeZQTdgYgeC9KDdGNwgpmHg3VkcIKZiYV3YWt1MgE"}'
2025-02-06 04:05:39.269 INFO [src.node.waku_node] REST service is ready !!
2025-02-06 04:05:39.270 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:39302/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.89.111/tcp/2115/p2p/16Uiu2HAm6tjudkDBGEjSDwRbcEiUUMgvvxdStbwujyWwuuW1hb1j"]'
2025-02-06 04:05:39.276 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-06 04:05:39.276 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:2114/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/1/0"]'
2025-02-06 04:05:39.280 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-06 04:05:39.280 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:39302/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/1/0"]'
2025-02-06 04:05:39.286 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-06 04:05:39.287 DEBUG [tests.relay.test_rln] Running test with payload A simple string
2025-02-06 04:05:39.287 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:2114/relay/v1/messages/%2Fwaku%2F2%2Frs%2F1%2F0" -H "Content-Type: application/json" -d '{"payload": "SGVsbG8gV29ybGQh", "contentTopic": "/test/1/waku-rln-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-06 04:05:39.571 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-06 04:05:39.572 DEBUG [tests.relay.test_rln] Running test with payload An integer
2025-02-06 04:05:39.573 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:2114/relay/v1/messages/%2Fwaku%2F2%2Frs%2F1%2F0" -H "Content-Type: application/json" -d '{"payload": "MTIzNDU2Nzg5MA==", "contentTopic": "/test/1/waku-rln-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-06 04:05:39.576 ERROR [src.node.api_clients.base_client] HTTP error occurred: 500 Server Error: Internal Server Error for url: http://127.0.0.1:2114/relay/v1/messages/%2Fwaku%2F2%2Frs%2F1%2F0. Response content: b'Failed to publish: error appending RLN proof to message: could not get new message id to generate an rln proof: NonceLimitReached: Nonce limit reached. Please wait for the next epoch. requested nonce: 1 & nonceLimit: 1'
2025-02-06 04:05:39.577 DEBUG [tests.relay.test_rln] Running test with payload A dictionary
2025-02-06 04:05:39.577 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:2114/relay/v1/messages/%2Fwaku%2F2%2Frs%2F1%2F0" -H "Content-Type: application/json" -d '{"payload": "eyJrZXkiOiAidmFsdWUifQ==", "contentTopic": "/test/1/waku-rln-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-06 04:05:39.579 ERROR [src.node.api_clients.base_client] HTTP error occurred: 500 Server Error: Internal Server Error for url: http://127.0.0.1:2114/relay/v1/messages/%2Fwaku%2F2%2Frs%2F1%2F0. Response content: b'Failed to publish: error appending RLN proof to message: could not get new message id to generate an rln proof: NonceLimitReached: Nonce limit reached. Please wait for the next epoch. requested nonce: 2 & nonceLimit: 1'
2025-02-06 04:05:39.580 DEBUG [tests.relay.test_rln] Running test with payload Chinese characters
2025-02-06 04:05:39.580 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:2114/relay/v1/messages/%2Fwaku%2F2%2Frs%2F1%2F0" -H "Content-Type: application/json" -d '{"payload": "6L+Z5piv5LiA5Lqb5Lit5paH", "contentTopic": "/test/1/waku-rln-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-06 04:05:39.583 ERROR [src.node.api_clients.base_client] HTTP error occurred: 500 Server Error: Internal Server Error for url: http://127.0.0.1:2114/relay/v1/messages/%2Fwaku%2F2%2Frs%2F1%2F0. Response content: b'Failed to publish: error appending RLN proof to message: could not get new message id to generate an rln proof: NonceLimitReached: Nonce limit reached. Please wait for the next epoch. requested nonce: 3 & nonceLimit: 1'
2025-02-06 04:05:39.583 DEBUG [tests.relay.test_rln] Running test with payload Emojis
2025-02-06 04:05:39.584 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:2114/relay/v1/messages/%2Fwaku%2F2%2Frs%2F1%2F0" -H "Content-Type: application/json" -d '{"payload": "8J+agPCfjJ/inKg=", "contentTopic": "/test/1/waku-rln-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-06 04:05:39.586 ERROR [src.node.api_clients.base_client] HTTP error occurred: 500 Server Error: Internal Server Error for url: http://127.0.0.1:2114/relay/v1/messages/%2Fwaku%2F2%2Frs%2F1%2F0. Response content: b'Failed to publish: error appending RLN proof to message: could not get new message id to generate an rln proof: NonceLimitReached: Nonce limit reached. Please wait for the next epoch. requested nonce: 4 & nonceLimit: 1'
2025-02-06 04:05:39.588 DEBUG [tests.conftest] Running fixture teardown: test_setup
2025-02-06 04:05:39.589 DEBUG [tests.conftest] Running fixture teardown: close_open_nodes
2025-02-06 04:05:39.589 DEBUG [src.node.waku_node] Stopping container with id d98cab4ddfbc
2025-02-06 04:05:40.357 DEBUG [src.node.waku_node] Container stopped.
2025-02-06 04:05:40.358 DEBUG [src.node.waku_node] Stopping container with id 37ca3ad5fc1f
2025-02-06 04:05:41.187 ERROR [src.node.docker_mananger] Max retries reached for container d98cab4ddfbc. Exiting log stream.
2025-02-06 04:05:41.856 DEBUG [src.node.waku_node] Container stopped.
2025-02-06 04:05:41.857 DEBUG [tests.conftest] Running fixture teardown: check_waku_log_errors
2025-02-06 04:05:41.867 DEBUG [src.node.docker_mananger] No errors found in the waku logs.
2025-02-06 04:05:41.872 DEBUG [src.node.docker_mananger] No errors found in the waku logs.
