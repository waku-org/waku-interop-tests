2025-02-06 04:04:54.866 DEBUG [tests.conftest] Running fixture setup: test_id
2025-02-06 04:04:54.866 DEBUG [tests.conftest] Running test: test_publish_with_invalid_payloads with id: 2025-02-06_04-04-54__66bae715-d00f-40b2-a837-3fb77ca9763c
2025-02-06 04:04:54.866 DEBUG [src.steps.common] Running fixture setup: common_setup
2025-02-06 04:04:54.867 DEBUG [src.steps.relay] Running fixture setup: relay_setup
2025-02-06 04:04:54.867 DEBUG [src.steps.relay] Running fixture setup: setup_main_relay_nodes
2025-02-06 04:04:54.873 DEBUG [src.node.docker_mananger] Docker client initialized with image wakuorg/nwaku:latest
2025-02-06 04:04:54.873 DEBUG [src.node.waku_node] WakuNode instance initialized with log path ./log/docker/node1_2025-02-06_04-04-54__66bae715-d00f-40b2-a837-3fb77ca9763c__wakuorg_nwaku:latest.log
2025-02-06 04:04:54.873 DEBUG [src.node.waku_node] Starting Node...
2025-02-06 04:04:54.873 DEBUG [src.node.docker_mananger] Attempting to create or retrieve network waku
2025-02-06 04:04:54.875 DEBUG [src.node.docker_mananger] Network waku already exists
2025-02-06 04:04:54.875 DEBUG [src.node.docker_mananger] Generated random external IP 172.18.80.11
2025-02-06 04:04:54.875 DEBUG [src.node.docker_mananger] Generated ports ['53450', '53451', '53452', '53453', '53454']
2025-02-06 04:04:54.875 DEBUG [src.node.waku_node] RLN credentials were not set
2025-02-06 04:04:54.875 INFO [src.node.waku_node] RLN credentials not set or credential store not available, starting without RLN
2025-02-06 04:04:54.876 DEBUG [src.node.waku_node] Using volumes []
2025-02-06 04:04:54.876 DEBUG [src.node.docker_mananger] docker run -i -t -p 53450:53450 -p 53451:53451 -p 53452:53452 -p 53453:53453 -p 53454:53454 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=53452 --rest-port=53450 --tcp-port=53451 --discv5-udp-port=53453 --rest-address=0.0.0.0 --nat=extip:172.18.80.11 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=30d8a8bdfd2dd22db6c3c69a56d9bfaab4c50e11ebcab7bd7d3cad8a51de2dad --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=53454 --metrics-logging=true --relay=true
2025-02-06 04:04:55.107 DEBUG [src.node.docker_mananger] docker network connect --ip 172.18.80.11 waku 860b38356fbfd5b9869b7b7d128ba2c32d79f872d63fed910bd9fc4380a96180
2025-02-06 04:04:55.155 DEBUG [src.node.docker_mananger] Container started with ID 860b38356fbf. Setting up logs at ./log/docker/node1_2025-02-06_04-04-54__66bae715-d00f-40b2-a837-3fb77ca9763c__wakuorg_nwaku:latest.log
2025-02-06 04:04:55.156 DEBUG [src.node.waku_node] Started container from image wakuorg/nwaku:latest. REST: 53450
2025-02-06 04:04:55.157 DEBUG [src.libs.common] Sleeping for 1 seconds
2025-02-06 04:04:55.650 ERROR [src.node.docker_mananger] Max retries reached for container 0bae477036d5. Exiting log stream.
2025-02-06 04:04:56.159 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:53450/health" -H "Content-Type: application/json" -d 'None'
2025-02-06 04:04:56.161 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
2025-02-06 04:04:56.162 INFO [src.node.waku_node] Node protocols are initialized !!
2025-02-06 04:04:56.162 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:53450/debug/v1/info" -H "Content-Type: application/json" -d 'None'
2025-02-06 04:04:56.164 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.80.11/tcp/53451/p2p/16Uiu2HAkv23EJeuGyVdmtxNmuNRas51oyjJ5vHAZxW3bEXjzQqe4","/ip4/172.18.80.11/tcp/53452/ws/p2p/16Uiu2HAkv23EJeuGyVdmtxNmuNRas51oyjJ5vHAZxW3bEXjzQqe4"],"enrUri":"enr:-L24QFaUTxhAlN8X_FDaoeMzs_yKheHAy_bxtZ8qyI7PJaC1I0F7Bknwo9knrXPVfmL9peJ7rBpOQUAqYz-tdLOFVQgCgmlkgnY0gmlwhKwSUAuKbXVsdGlhZGRyc5YACASsElALBtDLAAoErBJQCwbQzN0DgnJzhQADAQAAiXNlY3AyNTZrMaECCM3GcrKgN28UATIF4hHlWcbMAV1yo_RX6VvWVX_eE42DdGNwgtDLg3VkcILQzYV3YWt1MgE"}'
2025-02-06 04:04:56.164 INFO [src.node.waku_node] REST service is ready !!
2025-02-06 04:04:56.170 DEBUG [src.node.docker_mananger] Docker client initialized with image wakuorg/nwaku:latest
2025-02-06 04:04:56.171 DEBUG [src.node.waku_node] WakuNode instance initialized with log path ./log/docker/node2_2025-02-06_04-04-54__66bae715-d00f-40b2-a837-3fb77ca9763c__wakuorg_nwaku:latest.log
2025-02-06 04:04:56.171 DEBUG [src.node.waku_node] Starting Node...
2025-02-06 04:04:56.171 DEBUG [src.node.docker_mananger] Attempting to create or retrieve network waku
2025-02-06 04:04:56.172 DEBUG [src.node.docker_mananger] Network waku already exists
2025-02-06 04:04:56.172 DEBUG [src.node.docker_mananger] Generated random external IP 172.18.97.169
2025-02-06 04:04:56.173 DEBUG [src.node.docker_mananger] Generated ports ['12936', '12937', '12938', '12939', '12940']
2025-02-06 04:04:56.173 DEBUG [src.node.waku_node] RLN credentials were not set
2025-02-06 04:04:56.173 INFO [src.node.waku_node] RLN credentials not set or credential store not available, starting without RLN
2025-02-06 04:04:56.173 DEBUG [src.node.waku_node] Using volumes []
2025-02-06 04:04:56.173 DEBUG [src.node.docker_mananger] docker run -i -t -p 12936:12936 -p 12937:12937 -p 12938:12938 -p 12939:12939 -p 12940:12940 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=12938 --rest-port=12936 --tcp-port=12937 --discv5-udp-port=12939 --rest-address=0.0.0.0 --nat=extip:172.18.97.169 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=4f4fbdebaa3dba249dcd6aa3d2d12f3dbd8532baf9d1ceb0551c6f250bc4c9cd --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=12940 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-L24QFaUTxhAlN8X_FDaoeMzs_yKheHAy_bxtZ8qyI7PJaC1I0F7Bknwo9knrXPVfmL9peJ7rBpOQUAqYz-tdLOFVQgCgmlkgnY0gmlwhKwSUAuKbXVsdGlhZGRyc5YACASsElALBtDLAAoErBJQCwbQzN0DgnJzhQADAQAAiXNlY3AyNTZrMaECCM3GcrKgN28UATIF4hHlWcbMAV1yo_RX6VvWVX_eE42DdGNwgtDLg3VkcILQzYV3YWt1MgE
2025-02-06 04:04:56.404 DEBUG [src.node.docker_mananger] docker network connect --ip 172.18.97.169 waku bd304d56620ed9111f43c73fb40ead47f5f397ad5ea3c26e6b9ca46760bf8bc6
2025-02-06 04:04:56.449 DEBUG [src.node.docker_mananger] Container started with ID bd304d56620e. Setting up logs at ./log/docker/node2_2025-02-06_04-04-54__66bae715-d00f-40b2-a837-3fb77ca9763c__wakuorg_nwaku:latest.log
2025-02-06 04:04:56.449 DEBUG [src.node.waku_node] Started container from image wakuorg/nwaku:latest. REST: 12936
2025-02-06 04:04:56.449 DEBUG [src.libs.common] Sleeping for 1 seconds
2025-02-06 04:04:57.450 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:12936/health" -H "Content-Type: application/json" -d 'None'
2025-02-06 04:04:57.459 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
2025-02-06 04:04:57.460 INFO [src.node.waku_node] Node protocols are initialized !!
2025-02-06 04:04:57.460 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:12936/debug/v1/info" -H "Content-Type: application/json" -d 'None'
2025-02-06 04:04:57.467 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.97.169/tcp/12937/p2p/16Uiu2HAmBqHnghfKaUgQTyxQx2oLyjwv8d3PJ8uXmxKVERjzP9Kv","/ip4/172.18.97.169/tcp/12938/ws/p2p/16Uiu2HAmBqHnghfKaUgQTyxQx2oLyjwv8d3PJ8uXmxKVERjzP9Kv"],"enrUri":"enr:-L24QPDhf5Ma79lfK1Hg-1kXHuWrqg1Xz8UWHrv-uF45Sq7ZE77NXFvPkQ1lXYkDqH3wWflw5YBSwYvJhJj9dO6_v1YCgmlkgnY0gmlwhKwSYamKbXVsdGlhZGRyc5YACASsEmGpBjKJAAoErBJhqQYyit0DgnJzhQADAQAAiXNlY3AyNTZrMaEC88fWlLv07Xmh903z1IrdUOedKPYGOLcME0MrT7iJbCmDdGNwgjKJg3VkcIIyi4V3YWt1MgE"}'
2025-02-06 04:04:57.467 INFO [src.node.waku_node] REST service is ready !!
2025-02-06 04:04:57.467 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:12936/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.80.11/tcp/53451/p2p/16Uiu2HAkv23EJeuGyVdmtxNmuNRas51oyjJ5vHAZxW3bEXjzQqe4"]'
2025-02-06 04:04:57.470 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-06 04:04:57.471 DEBUG [src.steps.relay] Running fixture setup: subscribe_main_relay_nodes
2025-02-06 04:04:57.471 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:53450/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
2025-02-06 04:04:57.475 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-06 04:04:57.475 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:12936/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
2025-02-06 04:04:57.481 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-06 04:04:57.482 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:53450/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-06 04:04:57.487 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-06 04:04:57.488 DEBUG [src.libs.common] Sleeping for 0.1 seconds
2025-02-06 04:04:57.589 DEBUG [src.steps.relay] Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
2025-02-06 04:04:57.589 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:53450/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
2025-02-06 04:04:57.592 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1738814697482320128,"ephemeral":false}]'
2025-02-06 04:04:57.593 DEBUG [src.steps.relay] Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
2025-02-06 04:04:57.593 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:12936/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
2025-02-06 04:04:57.596 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1738814697482320128,"ephemeral":false}]'
2025-02-06 04:04:57.597 INFO [src.steps.relay] WARM UP successful!!
2025-02-06 04:04:57.598 DEBUG [tests.relay.test_publish] Running test with payload Empty string
2025-02-06 04:04:57.598 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:53450/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-06 04:04:57.601 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:53450/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-06 04:04:57.601 DEBUG [tests.relay.test_publish] Running test with payload Unecoded text
2025-02-06 04:04:57.601 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:53450/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "Hello World!", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-06 04:04:57.603 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:53450/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Incorrect base64 string'
2025-02-06 04:04:57.603 DEBUG [tests.relay.test_publish] Running test with payload A dictionary
2025-02-06 04:04:57.604 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:53450/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": {"key": "YWFh"}, "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-06 04:04:57.606 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:53450/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-06 04:04:57.606 DEBUG [tests.relay.test_publish] Running test with payload An integer
2025-02-06 04:04:57.606 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:53450/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": 1234567890, "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-06 04:04:57.609 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:53450/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-06 04:04:57.609 DEBUG [tests.relay.test_publish] Running test with payload A list
2025-02-06 04:04:57.609 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:53450/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": ["YWFh"], "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-06 04:04:57.611 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:53450/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-06 04:04:57.612 DEBUG [tests.relay.test_publish] Running test with payload A bool
2025-02-06 04:04:57.612 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:53450/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": true, "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-06 04:04:57.614 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:53450/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-06 04:04:57.616 DEBUG [tests.conftest] Running fixture teardown: test_setup
2025-02-06 04:04:57.617 DEBUG [tests.conftest] Running fixture teardown: close_open_nodes
2025-02-06 04:04:57.617 DEBUG [src.node.waku_node] Stopping container with id 860b38356fbf
2025-02-06 04:04:58.667 DEBUG [src.node.waku_node] Container stopped.
2025-02-06 04:04:58.668 DEBUG [src.node.waku_node] Stopping container with id bd304d56620e
2025-02-06 04:04:59.481 ERROR [src.node.docker_mananger] Max retries reached for container 860b38356fbf. Exiting log stream.
2025-02-06 04:05:00.187 DEBUG [src.node.waku_node] Container stopped.
2025-02-06 04:05:00.188 DEBUG [tests.conftest] Running fixture teardown: check_waku_log_errors
2025-02-06 04:05:00.193 DEBUG [src.node.docker_mananger] No errors found in the waku logs.
2025-02-06 04:05:00.198 DEBUG [src.node.docker_mananger] No errors found in the waku logs.
