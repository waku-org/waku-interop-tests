[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_invalid_version with id: 2024-10-12_04-24-57__c3839eca-feb3-4b66-8426-ecf03be8b3e1
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-10-12_04-24-57__c3839eca-feb3-4b66-8426-ecf03be8b3e1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.240.34
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['11097', '11098', '11099', '11100', '11101']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 11097:11097 -p 11098:11098 -p 11099:11099 -p 11100:11100 -p 11101:11101 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=11099 --rest-port=11097 --tcp-port=11098 --discv5-udp-port=11100 --rest-address=0.0.0.0 --nat=extip:172.18.240.34 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=47bc986fbf71e59deffd2b11aacd2fc41e8eeafeda627a9b6a4caad461fc5fe5 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=11101 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.240.34 waku 365e8b03a3cb884894636b2cb0625fe4646ae09bfd47f62438a066a291bcfca2
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 365e8b03a3cb. Setting up logs at ./log/docker/node1_2024-10-12_04-24-57__c3839eca-feb3-4b66-8426-ecf03be8b3e1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 11097
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:11097/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:11097/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.240.34/tcp/11098/p2p/16Uiu2HAkz2fkBydxcNrWTrZXkh84hf9R3htamkK3qKRjcF9GN3RH","/ip4/172.18.240.34/tcp/11099/ws/p2p/16Uiu2HAkz2fkBydxcNrWTrZXkh84hf9R3htamkK3qKRjcF9GN3RH"],"enrUri":"enr:-LO4QON9CTm_8F90VUjy2Jos-PygNutcQpoI5u9CmsOXG7kIa6ioQ38u4LGGXCAIffk9B24-oOPwJF4dmOBmBSHW0DsBgmlkgnY0gmlwhKwS8CKKbXVsdGlhZGRyc4wACgSsEvAiBitb3QOCcnOFAAMBAACJc2VjcDI1NmsxoQJEZc-SPqVW717rjpGd07SE1Ps0CKlB62tMW3m0wCffAIN0Y3CCK1qDdWRwgitchXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-10-12_04-24-57__c3839eca-feb3-4b66-8426-ecf03be8b3e1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.53.205
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['47911', '47912', '47913', '47914', '47915']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 47911:47911 -p 47912:47912 -p 47913:47913 -p 47914:47914 -p 47915:47915 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=47913 --rest-port=47911 --tcp-port=47912 --discv5-udp-port=47914 --rest-address=0.0.0.0 --nat=extip:172.18.53.205 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=2f00ff17ea6eebf20bed70bf4ffaca4bccdfca2bb191c9cb1bfbc040b6b16adb --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=47915 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QON9CTm_8F90VUjy2Jos-PygNutcQpoI5u9CmsOXG7kIa6ioQ38u4LGGXCAIffk9B24-oOPwJF4dmOBmBSHW0DsBgmlkgnY0gmlwhKwS8CKKbXVsdGlhZGRyc4wACgSsEvAiBitb3QOCcnOFAAMBAACJc2VjcDI1NmsxoQJEZc-SPqVW717rjpGd07SE1Ps0CKlB62tMW3m0wCffAIN0Y3CCK1qDdWRwgitchXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.53.205 waku 21cf7daf0ebe10106ac4b23a7fbbd3ad746a14732da1ee1f93c5c68676fcc45f
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 21cf7daf0ebe. Setting up logs at ./log/docker/node2_2024-10-12_04-24-57__c3839eca-feb3-4b66-8426-ecf03be8b3e1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 47911
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:47911/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:47911/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.53.205/tcp/47912/p2p/16Uiu2HAmVdGiwvuY9CpX8eLvPudyJmF4mYbrBbedd3n441nn7Zkv","/ip4/172.18.53.205/tcp/47913/ws/p2p/16Uiu2HAmVdGiwvuY9CpX8eLvPudyJmF4mYbrBbedd3n441nn7Zkv"],"enrUri":"enr:-LO4QBRm__3dnjA-cCDchuS1gRQsBjP7duUKHqgSr-_hmyqbSoGtJMhWuuc_DDWsyJ6k02GRlaLZYh7OfdsYPVGG0R0BgmlkgnY0gmlwhKwSNc2KbXVsdGlhZGRyc4wACgSsEjXNBrsp3QOCcnOFAAMBAACJc2VjcDI1NmsxoQP8JgeUYNIOFALembUU2PuhVMvs82_iA1ILLkAo4nuA04N0Y3CCuyiDdWRwgrsqhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:47911/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.240.34/tcp/11098/p2p/16Uiu2HAkz2fkBydxcNrWTrZXkh84hf9R3htamkK3qKRjcF9GN3RH"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:11097/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:47911/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:11097/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:11097/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1728707102305108992,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:47911/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1728707102305108992,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:11097/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)', "version": 2.1}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:11097/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 365e8b03a3cb
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 21cf7daf0ebe
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.