[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_no_request_id with id: 2024-10-12_04-17-27__a6c75748-4e13-41c4-b7ca-658abf64c0b4
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-10-12_04-17-27__a6c75748-4e13-41c4-b7ca-658abf64c0b4__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.215.207
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['50071', '50072', '50073', '50074', '50075']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 50071:50071 -p 50072:50072 -p 50073:50073 -p 50074:50074 -p 50075:50075 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=50073 --rest-port=50071 --tcp-port=50072 --discv5-udp-port=50074 --rest-address=0.0.0.0 --nat=extip:172.18.215.207 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=bfe5df2dc54f68a257e1fceb86e178f00ebba99b3fddd09b06ad67f0144efcae --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=50075 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.215.207 waku 4ca373e53ab2aad42aba1b83c740a679d67fbc9862d1aa6249f33eeac7b1fdf5
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 4ca373e53ab2. Setting up logs at ./log/docker/node1_2024-10-12_04-17-27__a6c75748-4e13-41c4-b7ca-658abf64c0b4__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 50071
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:50071/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:50071/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.215.207/tcp/50072/p2p/16Uiu2HAmHyS31HCJjgHSkbJC3a6vvR7vxaD38QAQarkJJ5LvPfRn","/ip4/172.18.215.207/tcp/50073/ws/p2p/16Uiu2HAmHyS31HCJjgHSkbJC3a6vvR7vxaD38QAQarkJJ5LvPfRn"],"enrUri":"enr:-LO4QNrgjzCihVl4QaNWs0jv29f-ZxTsb2rYh6sWpYdm3x0Pc6KYxpDlo3wEDIr5zuduiDV0bdCeEvloqTeGUreRFO8BgmlkgnY0gmlwhKwS18-KbXVsdGlhZGRyc4wACgSsEtfPBsOZ3QOCcnOFAAMBAACJc2VjcDI1NmsxoQNPA-5YmpNhM2QKlTcmU7cGQy0eZ_OQDuhWYtohB0Q-FYN0Y3CCw5iDdWRwgsOahXdha3UyBQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-10-12_04-17-27__a6c75748-4e13-41c4-b7ca-658abf64c0b4__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.251.209
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['7678', '7679', '7680', '7681', '7682']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 7678:7678 -p 7679:7679 -p 7680:7680 -p 7681:7681 -p 7682:7682 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=7680 --rest-port=7678 --tcp-port=7679 --discv5-udp-port=7681 --rest-address=0.0.0.0 --nat=extip:172.18.251.209 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=a36c60d8d1d1fad7cb9edeaaaef37ea0e8fbf804bd9f1c93f427a3b6c3ce5da1 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=7682 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-LO4QNrgjzCihVl4QaNWs0jv29f-ZxTsb2rYh6sWpYdm3x0Pc6KYxpDlo3wEDIr5zuduiDV0bdCeEvloqTeGUreRFO8BgmlkgnY0gmlwhKwS18-KbXVsdGlhZGRyc4wACgSsEtfPBsOZ3QOCcnOFAAMBAACJc2VjcDI1NmsxoQNPA-5YmpNhM2QKlTcmU7cGQy0eZ_OQDuhWYtohB0Q-FYN0Y3CCw5iDdWRwgsOahXdha3UyBQ --filternode=/ip4/172.18.215.207/tcp/50072/p2p/16Uiu2HAmHyS31HCJjgHSkbJC3a6vvR7vxaD38QAQarkJJ5LvPfRn
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.251.209 waku b701b92dc72fbf6130a53aca75d096ced60c55c64cba7c4c6dd85dcccfa3556e
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID b701b92dc72f. Setting up logs at ./log/docker/node2_2024-10-12_04-17-27__a6c75748-4e13-41c4-b7ca-658abf64c0b4__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 7678
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7678/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7678/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.251.209/tcp/7679/p2p/16Uiu2HAmFz8RcsFnta5KpP7P5mnoyKg8qctS2dkZqSyV2vV7d69D","/ip4/172.18.251.209/tcp/7680/ws/p2p/16Uiu2HAmFz8RcsFnta5KpP7P5mnoyKg8qctS2dkZqSyV2vV7d69D"],"enrUri":"enr:-LO4QEKa_QymCZlI6EskUb9f26dqTT6OXDNwPMLQQFohWJb9Rir_COQKS8p4tE4FRVumKIOLLAWUbhg-pJakEjaSGgwBgmlkgnY0gmlwhKwS-9GKbXVsdGlhZGRyc4wACgSsEvvRBh4A3QOCcnOFAAMBAACJc2VjcDI1NmsxoQMxejnm8Cy5GqD9SYSB9RZ5Aab8SVQm7JRSjBzQFg0i0IN0Y3CCHf-DdWRwgh4BhXdha3UyAA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:7678/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.215.207/tcp/50072/p2p/16Uiu2HAmHyS31HCJjgHSkbJC3a6vvR7vxaD38QAQarkJJ5LvPfRn"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:50071/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:7678/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "65b4e88c-594b-44cd-926f-0fd25d215dce", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"65b4e88c-594b-44cd-926f-0fd25d215dce","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:7678/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:7678/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 4ca373e53ab2
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id b701b92dc72f
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.