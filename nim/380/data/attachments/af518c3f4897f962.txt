[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_on_non_subscribed_pubsub_topic with id: 2024-10-03_07-47-49__6b10e4ba-87fc-4343-93f6-4154d431b2f7
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-10-03_07-47-49__6b10e4ba-87fc-4343-93f6-4154d431b2f7__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.74.133
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['44059', '44060', '44061', '44062', '44063']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 44059:44059 -p 44060:44060 -p 44061:44061 -p 44062:44062 -p 44063:44063 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=44061 --rest-port=44059 --tcp-port=44060 --discv5-udp-port=44062 --rest-address=0.0.0.0 --nat=extip:172.18.74.133 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=7cf78d4baff6ede5d0bfcef8de95fdd7ffbb2a5e022aed178c3af96f98be880d --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=44063 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.74.133 waku 92526df7c4fcfb5743111e1703976c8b56c92ad85a20fd2c2d7c29b683248d43
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 92526df7c4fc. Setting up logs at ./log/docker/node1_2024-10-03_07-47-49__6b10e4ba-87fc-4343-93f6-4154d431b2f7__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 44059
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:44059/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:44059/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.74.133/tcp/44060/p2p/16Uiu2HAkvTzoEFT81JB1TQK3mSkrQHKcw9qk2z9TfX5FGntiyvi2","/ip4/172.18.74.133/tcp/44061/ws/p2p/16Uiu2HAkvTzoEFT81JB1TQK3mSkrQHKcw9qk2z9TfX5FGntiyvi2"],"enrUri":"enr:-LO4QJcjDtM1XvylbaK2iBDmsoi7_12vVQc885YssVjeTlh9N7NefHtV-GQbCqmbz15bCzmY0RNkXYzdh0UbWGXlOr8BgmlkgnY0gmlwhKwSSoWKbXVsdGlhZGRyc4wACgSsEkqFBqwd3QOCcnOFAAMBAACJc2VjcDI1NmsxoQIPdCA_KWEp_AVnbclmiOFdPnmpkUni77PAJa7EHaHVr4N0Y3CCrByDdWRwgqwehXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-10-03_07-47-49__6b10e4ba-87fc-4343-93f6-4154d431b2f7__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.90.134
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['13137', '13138', '13139', '13140', '13141']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 13137:13137 -p 13138:13138 -p 13139:13139 -p 13140:13140 -p 13141:13141 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=13139 --rest-port=13137 --tcp-port=13138 --discv5-udp-port=13140 --rest-address=0.0.0.0 --nat=extip:172.18.90.134 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=bcdab0ffaf94ed33cd3dfffad4feff023c84a4df8f8984ccbcf79cae39fffcac --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=13141 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QJcjDtM1XvylbaK2iBDmsoi7_12vVQc885YssVjeTlh9N7NefHtV-GQbCqmbz15bCzmY0RNkXYzdh0UbWGXlOr8BgmlkgnY0gmlwhKwSSoWKbXVsdGlhZGRyc4wACgSsEkqFBqwd3QOCcnOFAAMBAACJc2VjcDI1NmsxoQIPdCA_KWEp_AVnbclmiOFdPnmpkUni77PAJa7EHaHVr4N0Y3CCrByDdWRwgqwehXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.90.134 waku 6ec96220d17cad1ee958946df00aaa01fc355f3645a8dd004dbf09431a89e745
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 6ec96220d17c. Setting up logs at ./log/docker/node2_2024-10-03_07-47-49__6b10e4ba-87fc-4343-93f6-4154d431b2f7__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 13137
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:13137/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:13137/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.90.134/tcp/13138/p2p/16Uiu2HAmKMTururPpoWm95ArPw7suB1dM1va6WFLV3NkrFMgiNG1","/ip4/172.18.90.134/tcp/13139/ws/p2p/16Uiu2HAmKMTururPpoWm95ArPw7suB1dM1va6WFLV3NkrFMgiNG1"],"enrUri":"enr:-LO4QIODflkELaAre7NEYdOTljSzR4HNQwKjqmhHR4nKY719VIZriCSQ_mxcut4PzqL2UNdDy4Bldp6TpRQgAkNnoW0BgmlkgnY0gmlwhKwSWoaKbXVsdGlhZGRyc4wACgSsElqGBjNT3QOCcnOFAAMBAACJc2VjcDI1NmsxoQNjhISU0kNC0AxmYuUI-1vf18vYfQOUMk6SyIFV0gTUsoN0Y3CCM1KDdWRwgjNUhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:13137/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.74.133/tcp/44060/p2p/16Uiu2HAkvTzoEFT81JB1TQK3mSkrQHKcw9qk2z9TfX5FGntiyvi2"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:44059/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:13137/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:44059/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:44059/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1727941672518372352,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:13137/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1727941672518372352,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:44059/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1000" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:44059/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1000. Response content: b'Failed to publish: Node not subscribed to topic: /waku/2/rs/3/1000'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 92526df7c4fc
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 6ec96220d17c
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.