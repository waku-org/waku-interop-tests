[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_invalid_version with id: 2024-10-03_07-47-59__d8ed2ef8-7fe0-4192-bb8e-949b75b30cf2
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-10-03_07-47-59__d8ed2ef8-7fe0-4192-bb8e-949b75b30cf2__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.32.196
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['52036', '52037', '52038', '52039', '52040']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 52036:52036 -p 52037:52037 -p 52038:52038 -p 52039:52039 -p 52040:52040 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=52038 --rest-port=52036 --tcp-port=52037 --discv5-udp-port=52039 --rest-address=0.0.0.0 --nat=extip:172.18.32.196 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=c31ebea980802262fb8bcd864ad1ffca80cfa8d251ff127a07ad4baded4916be --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=52040 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.32.196 waku cc9977f998402c5ba66e2438547f55fce4950227e4bfbc7f491969d095ae3ad6
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID cc9977f99840. Setting up logs at ./log/docker/node1_2024-10-03_07-47-59__d8ed2ef8-7fe0-4192-bb8e-949b75b30cf2__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 52036
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:52036/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:52036/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.32.196/tcp/52037/p2p/16Uiu2HAm9bCGhacY5TkUp9pZK1x6226jLhdAfBWiELB6ctwXVJQC","/ip4/172.18.32.196/tcp/52038/ws/p2p/16Uiu2HAm9bCGhacY5TkUp9pZK1x6226jLhdAfBWiELB6ctwXVJQC"],"enrUri":"enr:-LO4QEep6AFeBRWAUJyU2RO0irHHeJMbwy4Gj1diAF9jDyWaWiDbpiY4rxTFAqRZob6rTc1ANRJbmG9U1h_6sBksWOwBgmlkgnY0gmlwhKwSIMSKbXVsdGlhZGRyc4wACgSsEiDEBstG3QOCcnOFAAMBAACJc2VjcDI1NmsxoQLSdBhPJ6SdjEWSLWzliO4d7AwOeBG9lFFt8OdqEMIT5YN0Y3CCy0WDdWRwgstHhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-10-03_07-47-59__d8ed2ef8-7fe0-4192-bb8e-949b75b30cf2__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.30.250
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['15644', '15645', '15646', '15647', '15648']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 15644:15644 -p 15645:15645 -p 15646:15646 -p 15647:15647 -p 15648:15648 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=15646 --rest-port=15644 --tcp-port=15645 --discv5-udp-port=15647 --rest-address=0.0.0.0 --nat=extip:172.18.30.250 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=34c5e1cf7c5ffe8afdc4c5ced13b6fc383f24079a26aa86b25306dd1d6bf7abf --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=15648 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QEep6AFeBRWAUJyU2RO0irHHeJMbwy4Gj1diAF9jDyWaWiDbpiY4rxTFAqRZob6rTc1ANRJbmG9U1h_6sBksWOwBgmlkgnY0gmlwhKwSIMSKbXVsdGlhZGRyc4wACgSsEiDEBstG3QOCcnOFAAMBAACJc2VjcDI1NmsxoQLSdBhPJ6SdjEWSLWzliO4d7AwOeBG9lFFt8OdqEMIT5YN0Y3CCy0WDdWRwgstHhXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.30.250 waku 5ea74035263ff75a3e52df42a07b26caca258f8dfe5c1169b15b9b6d8291637f
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 5ea74035263f. Setting up logs at ./log/docker/node2_2024-10-03_07-47-59__d8ed2ef8-7fe0-4192-bb8e-949b75b30cf2__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 15644
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:15644/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:15644/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.30.250/tcp/15645/p2p/16Uiu2HAmHr3TEEpgMjzAhwiBKXSw1ifQfHU35TCdQ5UucqNvcbL1","/ip4/172.18.30.250/tcp/15646/ws/p2p/16Uiu2HAmHr3TEEpgMjzAhwiBKXSw1ifQfHU35TCdQ5UucqNvcbL1"],"enrUri":"enr:-LO4QNMRmjtGzCQSo-HuG6STN7dQxM5TQX4g9VZ9j__nkP-xa5zpgQcH88zcOC5lbhzqYLuTKIUkz7yf_Q_fo-LSfFIBgmlkgnY0gmlwhKwSHvqKbXVsdGlhZGRyc4wACgSsEh76Bj0e3QOCcnOFAAMBAACJc2VjcDI1NmsxoQNNH1TYWO6_jnYR3oNAEmIim1d1vzLo_LQk6GEmfK0GfoN0Y3CCPR2DdWRwgj0fhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:15644/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.32.196/tcp/52037/p2p/16Uiu2HAm9bCGhacY5TkUp9pZK1x6226jLhdAfBWiELB6ctwXVJQC"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:52036/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:15644/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:52036/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:52036/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1727941682906712576,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:15644/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1727941682906712576,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:52036/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)', "version": 2.1}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:52036/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id cc9977f99840
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 5ea74035263f
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.