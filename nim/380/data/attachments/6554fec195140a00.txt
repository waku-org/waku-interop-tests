[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_invalid_request_id with id: 2024-10-03_07-42-34__8e7d98a4-4593-428e-b9ac-7d844c7245b1
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-10-03_07-42-34__8e7d98a4-4593-428e-b9ac-7d844c7245b1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.74.201
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['36341', '36342', '36343', '36344', '36345']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 36341:36341 -p 36342:36342 -p 36343:36343 -p 36344:36344 -p 36345:36345 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=36343 --rest-port=36341 --tcp-port=36342 --discv5-udp-port=36344 --rest-address=0.0.0.0 --nat=extip:172.18.74.201 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=6fa4027d5eddfc3cbd7c0e9fc01a1bf5d2e8d8d2ad4c550e777cad2f482fac1c --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=36345 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.74.201 waku 139e4caeb3985a5d7de88d24abbb4002cfd5db518861e74d836e10e563900779
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 139e4caeb398. Setting up logs at ./log/docker/node1_2024-10-03_07-42-34__8e7d98a4-4593-428e-b9ac-7d844c7245b1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 36341
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:36341/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:36341/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.74.201/tcp/36342/p2p/16Uiu2HAmMasS7muoPnV6ZW4LmeYTXdsbEhBmH1PXRER4i5RsBVv1","/ip4/172.18.74.201/tcp/36343/ws/p2p/16Uiu2HAmMasS7muoPnV6ZW4LmeYTXdsbEhBmH1PXRER4i5RsBVv1"],"enrUri":"enr:-LO4QMXXhxvjIxP7m2zx7em3-LOGcK1CTonz6Py9xz_0x3wIc7ZzdDnQ2utHFTY6MamycyELY2RGoZzpGdYVKMrW6fgBgmlkgnY0gmlwhKwSSsmKbXVsdGlhZGRyc4wACgSsEkrJBo333QOCcnOFAAMBAACJc2VjcDI1NmsxoQOEqwnNfxJ0fJedseW-hV46k2LMexzaYeOoMdVhiMgEIoN0Y3CCjfaDdWRwgo34hXdha3UyBQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-10-03_07-42-34__8e7d98a4-4593-428e-b9ac-7d844c7245b1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.164.80
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['7365', '7366', '7367', '7368', '7369']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 7365:7365 -p 7366:7366 -p 7367:7367 -p 7368:7368 -p 7369:7369 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=7367 --rest-port=7365 --tcp-port=7366 --discv5-udp-port=7368 --rest-address=0.0.0.0 --nat=extip:172.18.164.80 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=9dd6d3ab33bdb98aba4cc78b874afaac60eefc0ac57a2c41cadd98104daef8d4 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=7369 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-LO4QMXXhxvjIxP7m2zx7em3-LOGcK1CTonz6Py9xz_0x3wIc7ZzdDnQ2utHFTY6MamycyELY2RGoZzpGdYVKMrW6fgBgmlkgnY0gmlwhKwSSsmKbXVsdGlhZGRyc4wACgSsEkrJBo333QOCcnOFAAMBAACJc2VjcDI1NmsxoQOEqwnNfxJ0fJedseW-hV46k2LMexzaYeOoMdVhiMgEIoN0Y3CCjfaDdWRwgo34hXdha3UyBQ --filternode=/ip4/172.18.74.201/tcp/36342/p2p/16Uiu2HAmMasS7muoPnV6ZW4LmeYTXdsbEhBmH1PXRER4i5RsBVv1
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.164.80 waku 4b2e9721096dba5529490a0128a90675edda46ae5d5f35707a2dbeda0730ec45
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 4b2e9721096d. Setting up logs at ./log/docker/node2_2024-10-03_07-42-34__8e7d98a4-4593-428e-b9ac-7d844c7245b1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 7365
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7365/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7365/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.164.80/tcp/7366/p2p/16Uiu2HAmHjkYrhoXYrvn94BGsbDyfme26XEZpo7FzWu4G3xh9gUj","/ip4/172.18.164.80/tcp/7367/ws/p2p/16Uiu2HAmHjkYrhoXYrvn94BGsbDyfme26XEZpo7FzWu4G3xh9gUj"],"enrUri":"enr:-LO4QNpFubCMmMpbHvZJGvD44cbmQPZ4eT90lXKEnDlidT3DXYLi0YdehgXnFQ8Y8Jtme6kGRs02v3gvCiuJi7atAS8BgmlkgnY0gmlwhKwSpFCKbXVsdGlhZGRyc4wACgSsEqRQBhzH3QOCcnOFAAMBAACJc2VjcDI1NmsxoQNLgrv9zsJg0wZuwWUmiTrHclRveipLC3jXMkvpBBF45IN0Y3CCHMaDdWRwghzIhXdha3UyAA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:7365/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.74.201/tcp/36342/p2p/16Uiu2HAmMasS7muoPnV6ZW4LmeYTXdsbEhBmH1PXRER4i5RsBVv1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:36341/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:7365/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "d2afb6f1-2f63-4bc0-bbf8-0a48730c08a4", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"d2afb6f1-2f63-4bc0-bbf8-0a48730c08a4","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:7365/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:7365/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 139e4caeb398
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 4b2e9721096d
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.