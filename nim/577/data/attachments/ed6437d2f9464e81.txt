[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_payload_less_than_150_kb with id: 2024-12-25_19-37-37__295c5815-27eb-44dc-bee3-d1a406f88624
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-25_19-37-37__295c5815-27eb-44dc-bee3-d1a406f88624__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.159.19
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['40348', '40349', '40350', '40351', '40352']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 40348:40348 -p 40349:40349 -p 40350:40350 -p 40351:40351 -p 40352:40352 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=40350 --rest-port=40348 --tcp-port=40349 --discv5-udp-port=40351 --rest-address=0.0.0.0 --nat=extip:172.18.159.19 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ebf2b5e3bff08ccef96ad5bee64ff5bd3128cfe8c9a07be4a5ed0c06f017dc05 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=40352 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.159.19 waku cfb380b26dba972a67193d9ccfe5f84584da1c55e05e0539dc28db9829cbbd7d
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID cfb380b26dba. Setting up logs at ./log/docker/node1_2024-12-25_19-37-37__295c5815-27eb-44dc-bee3-d1a406f88624__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 40348
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:40348/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:40348/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.159.19/tcp/40349/p2p/16Uiu2HAmUuvpA4dJ5RJjCPKYouS7XXHAgVW1WNn7ZmHC7Q3hznfB","/ip4/172.18.159.19/tcp/40350/ws/p2p/16Uiu2HAmUuvpA4dJ5RJjCPKYouS7XXHAgVW1WNn7ZmHC7Q3hznfB"],"enrUri":"enr:-L24QNmlJrrH9ZYlfTFXQtE6RRQDIBfAg2apx2fEne-Evu6EecXTb_FwtUPnKvL_-2rhTy35qiy7k3F7OdwElsAY560CgmlkgnY0gmlwhKwSnxOKbXVsdGlhZGRyc5YACASsEp8TBp2dAAoErBKfEwadnt0DgnJzhQADAQAAiXNlY3AyNTZrMaED8Y60M9svVXk3CuENZeSLn-QUhG7UzpQ78RsE8zpx6mKDdGNwgp2dg3VkcIKdn4V3YWt1MgE"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-25_19-37-37__295c5815-27eb-44dc-bee3-d1a406f88624__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.159.219
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['11250', '11251', '11252', '11253', '11254']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 11250:11250 -p 11251:11251 -p 11252:11252 -p 11253:11253 -p 11254:11254 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=11252 --rest-port=11250 --tcp-port=11251 --discv5-udp-port=11253 --rest-address=0.0.0.0 --nat=extip:172.18.159.219 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=57a5eb4fd9687dabaa217bc2a5c5fbaafcedff180f34a6eff0fbd2dff0cfae63 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=11254 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-L24QNmlJrrH9ZYlfTFXQtE6RRQDIBfAg2apx2fEne-Evu6EecXTb_FwtUPnKvL_-2rhTy35qiy7k3F7OdwElsAY560CgmlkgnY0gmlwhKwSnxOKbXVsdGlhZGRyc5YACASsEp8TBp2dAAoErBKfEwadnt0DgnJzhQADAQAAiXNlY3AyNTZrMaED8Y60M9svVXk3CuENZeSLn-QUhG7UzpQ78RsE8zpx6mKDdGNwgp2dg3VkcIKdn4V3YWt1MgE
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.159.219 waku 1462408db17e67e469df133d20a52d863e8aecd183a7bb501363989f4f9ae3af
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 1462408db17e. Setting up logs at ./log/docker/node2_2024-12-25_19-37-37__295c5815-27eb-44dc-bee3-d1a406f88624__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 11250
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:11250/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:11250/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.159.219/tcp/11251/p2p/16Uiu2HAm4SesnUdPS3rKNsJLW12Vr33cE8hE3MMEPGes6uYPEx7z","/ip4/172.18.159.219/tcp/11252/ws/p2p/16Uiu2HAm4SesnUdPS3rKNsJLW12Vr33cE8hE3MMEPGes6uYPEx7z"],"enrUri":"enr:-L24QJEcqVPCcn__ga9dOYs7_R4rghS4IPVyup8P82BuwDuFFK0tEhpMeyJGs8BcTe2s5CBCpwWXXLsNSQohPvKWdn8CgmlkgnY0gmlwhKwSn9uKbXVsdGlhZGRyc5YACASsEp_bBivzAAoErBKf2wYr9N0DgnJzhQADAQAAiXNlY3AyNTZrMaEChfmD6wms9CTsUoHNJPdkuzaYoUaKYKKoaAucA4J3b5mDdGNwgivzg3VkcIIr9YV3YWt1MgE"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:11250/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.159.19/tcp/40349/p2p/16Uiu2HAmUuvpA4dJ5RJjCPKYouS7XXHAgVW1WNn7ZmHC7Q3hznfB"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:40348/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:11250/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:40348/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:40348/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1735155464466356736,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:11250/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1735155464466356736,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[35mDEBUG   [0m tests.relay.test_publish:test_publish.py:49 Running test with payload length of 102400 bytes
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 2 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:40348/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:11250/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id cfb380b26dba
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 1462408db17e
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container cfb380b26dba. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.