[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2024-12-25_19-38-25__ce553d0a-7aa9-4404-a2f2-0e35389c03d1
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-25_19-38-25__ce553d0a-7aa9-4404-a2f2-0e35389c03d1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.70.211
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['17401', '17402', '17403', '17404', '17405']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 17401:17401 -p 17402:17402 -p 17403:17403 -p 17404:17404 -p 17405:17405 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=17403 --rest-port=17401 --tcp-port=17402 --discv5-udp-port=17404 --rest-address=0.0.0.0 --nat=extip:172.18.70.211 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=21f32cb2a99d562a2caf6cd6a3b02a4dbedd6db479dfd3b6b4d63df834fb20cd --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=17405 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.70.211 waku 142f540a12d1caf753a5ad6cde813b1d0424a80e5cb5c046f3d24a08797d6f02
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 142f540a12d1. Setting up logs at ./log/docker/node1_2024-12-25_19-38-25__ce553d0a-7aa9-4404-a2f2-0e35389c03d1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 17401
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container b30c9e2ba877. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17401/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17401/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.70.211/tcp/17402/p2p/16Uiu2HAm483BND83G2eDLq6eXGFoPZ7afJawyvyt9sgQYXrMBzfY","/ip4/172.18.70.211/tcp/17403/ws/p2p/16Uiu2HAm483BND83G2eDLq6eXGFoPZ7afJawyvyt9sgQYXrMBzfY"],"enrUri":"enr:-L24QLf_RzcnRWeW6eEt7STf_TiO0FdYr9PgkCN-lmZUmhrYGJYzpJlpsx7jggKuvbGcjKNgwNz09UP9laQndupBof8CgmlkgnY0gmlwhKwSRtOKbXVsdGlhZGRyc5YACASsEkbTBkP6AAoErBJG0wZD-90DgnJzhQADAQAAiXNlY3AyNTZrMaECgTSyutTp-Z-W0cLoRHswIRTG0f_aMU_AkxTpMzfZai-DdGNwgkP6g3VkcIJD_IV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-25_19-38-25__ce553d0a-7aa9-4404-a2f2-0e35389c03d1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.172.192
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['62415', '62416', '62417', '62418', '62419']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 62415:62415 -p 62416:62416 -p 62417:62417 -p 62418:62418 -p 62419:62419 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=62417 --rest-port=62415 --tcp-port=62416 --discv5-udp-port=62418 --rest-address=0.0.0.0 --nat=extip:172.18.172.192 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=daac7fbbbc1c4a35bde422c6784cd72c4e7e4f9e2adfbdf69fda7ba661fbda49 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=62419 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QLf_RzcnRWeW6eEt7STf_TiO0FdYr9PgkCN-lmZUmhrYGJYzpJlpsx7jggKuvbGcjKNgwNz09UP9laQndupBof8CgmlkgnY0gmlwhKwSRtOKbXVsdGlhZGRyc5YACASsEkbTBkP6AAoErBJG0wZD-90DgnJzhQADAQAAiXNlY3AyNTZrMaECgTSyutTp-Z-W0cLoRHswIRTG0f_aMU_AkxTpMzfZai-DdGNwgkP6g3VkcIJD_IV3YWt1MgU --filternode=/ip4/172.18.70.211/tcp/17402/p2p/16Uiu2HAm483BND83G2eDLq6eXGFoPZ7afJawyvyt9sgQYXrMBzfY
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.172.192 waku 5138391cfdf477287401646edcbe77e3a1e084b6984db54cf9c841a311897050
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 5138391cfdf4. Setting up logs at ./log/docker/node2_2024-12-25_19-38-25__ce553d0a-7aa9-4404-a2f2-0e35389c03d1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 62415
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:62415/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:62415/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.172.192/tcp/62416/p2p/16Uiu2HAmTt4npyvqT7a3adt2abPfA5zGRrkoAFvWAUVgtv8DB37H","/ip4/172.18.172.192/tcp/62417/ws/p2p/16Uiu2HAmTt4npyvqT7a3adt2abPfA5zGRrkoAFvWAUVgtv8DB37H"],"enrUri":"enr:-L24QEqkodzMqW7QPTXdPcH0woH-c7a0DfskmHeMXYiYh45fWgyz-6XKl4CZCkgeR9MYeaptCwzGQAwzmmII1jThA7kCgmlkgnY0gmlwhKwSrMCKbXVsdGlhZGRyc5YACASsEqzABvPQAAoErBKswAbz0d0DgnJzhQADAQAAiXNlY3AyNTZrMaED4jjgBgtVkZXE5speUFcWCg_4TH8jDnBWbEmxMLgn2ySDdGNwgvPQg3VkcILz0oV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:62415/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.70.211/tcp/17402/p2p/16Uiu2HAm483BND83G2eDLq6eXGFoPZ7afJawyvyt9sgQYXrMBzfY"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17401/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:62415/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "2393e81f-eb17-4e1a-af40-5d0d9170be5a", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"2393e81f-eb17-4e1a-af40-5d0d9170be5a","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:62415/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:62415/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 142f540a12d1
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 5138391cfdf4
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 142f540a12d1. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.