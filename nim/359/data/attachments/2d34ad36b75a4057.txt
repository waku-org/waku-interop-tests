[35mDEBUG   [0m src.postgres_setup:postgres_setup.py:36 Postgres container started
[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_on_empty_postgress_db with id: 2024-09-13_04-33-08__85358422-ee90-40dc-b04c-52386eb5c53a
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.store:store.py:28 Running fixture setup: store_setup
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/publishing_node1_2024-09-13_04-33-08__85358422-ee90-40dc-b04c-52386eb5c53a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.6.205
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['61835', '61836', '61837', '61838', '61839']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 61835:61835 -p 61836:61836 -p 61837:61837 -p 61838:61838 -p 61839:61839 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=61837 --rest-port=61835 --tcp-port=61836 --discv5-udp-port=61838 --rest-address=0.0.0.0 --nat=extip:172.18.6.205 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=a4d83b10584cf282481e428db0bdf8b213e4b0d07f906e44cfc65dac539bacea --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=61839 --metrics-logging=true --store=true --relay=true --store-message-db-url=postgres://postgres:test123@postgres:5432/postgres
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.6.205 waku 3919f43882a7167f0184a13e11bbf7d1420986489f1269e2e962ae729a631cc3
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 3919f43882a7. Setting up logs at ./log/docker/publishing_node1_2024-09-13_04-33-08__85358422-ee90-40dc-b04c-52386eb5c53a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 61835
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:61835/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Initializing","protocolsHealth":[]}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:61835/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Initializing","protocolsHealth":[]}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:61835/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:61835/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.6.205/tcp/61836/p2p/16Uiu2HAmFaS6pw92RVpzDPGZgfg7rStQi7GwjxBSFMYLaxV4b12H","/ip4/172.18.6.205/tcp/61837/ws/p2p/16Uiu2HAmFaS6pw92RVpzDPGZgfg7rStQi7GwjxBSFMYLaxV4b12H"],"enrUri":"enr:-LO4QBINOSOTNI7nc9Pz_KZOoTqUZ9xqPIBkpNnF7z7-MmPAcPh6449-ERe8cO_I42cow33jPNvmRRY6GIcVNQuQRbYBgmlkgnY0gmlwhKwSBs2KbXVsdGlhZGRyc4wACgSsEgbNBvGN3QOCcnOFAAMBAACJc2VjcDI1NmsxoQMraEXolXCE1MZx6Em0aO9C9n1892CYbrNeJSr1TryZioN0Y3CC8YyDdWRwgvGOhXdha3UyAw"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/store_node1_2024-09-13_04-33-08__85358422-ee90-40dc-b04c-52386eb5c53a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.181.179
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['26037', '26038', '26039', '26040', '26041']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 26037:26037 -p 26038:26038 -p 26039:26039 -p 26040:26040 -p 26041:26041 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=26039 --rest-port=26037 --tcp-port=26038 --discv5-udp-port=26040 --rest-address=0.0.0.0 --nat=extip:172.18.181.179 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=f776fa25e8df2d43af3beb0eaf1cdf2deccbcb4dbf8ea3233bc9685b70e4edc1 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=26041 --metrics-logging=true --discv5-bootstrap-node=enr:-LO4QBINOSOTNI7nc9Pz_KZOoTqUZ9xqPIBkpNnF7z7-MmPAcPh6449-ERe8cO_I42cow33jPNvmRRY6GIcVNQuQRbYBgmlkgnY0gmlwhKwSBs2KbXVsdGlhZGRyc4wACgSsEgbNBvGN3QOCcnOFAAMBAACJc2VjcDI1NmsxoQMraEXolXCE1MZx6Em0aO9C9n1892CYbrNeJSr1TryZioN0Y3CC8YyDdWRwgvGOhXdha3UyAw --storenode=/ip4/172.18.6.205/tcp/61836/p2p/16Uiu2HAmFaS6pw92RVpzDPGZgfg7rStQi7GwjxBSFMYLaxV4b12H --store=false --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.181.179 waku 5a365cca6d33ed2234f4665b835c1f543b785c06630f944f54eb6012bf84da67
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 5a365cca6d33. Setting up logs at ./log/docker/store_node1_2024-09-13_04-33-08__85358422-ee90-40dc-b04c-52386eb5c53a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 26037
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:26037/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:26037/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.181.179/tcp/26038/p2p/16Uiu2HAmSAxBrTDzHJDzbpw7iR8e2WdfEXw5LtmEUcQDcbVzSVL9","/ip4/172.18.181.179/tcp/26039/ws/p2p/16Uiu2HAmSAxBrTDzHJDzbpw7iR8e2WdfEXw5LtmEUcQDcbVzSVL9"],"enrUri":"enr:-LO4QKGVE3mQ8I7zEdnBXg8IeSmb4e2DfjWP4fyonHXDgrOjNTQWEANjGzO6ixeYDAqkoyIpxk4B1SMcriplgJqfPBIBgmlkgnY0gmlwhKwStbOKbXVsdGlhZGRyc4wACgSsErWzBmW33QOCcnOFAAMBAACJc2VjcDI1NmsxoQPI1OiwpClqDcBcVklNR1lpZU3SnX68-kSma-Hh8QViPoN0Y3CCZbaDdWRwgmW4hXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:26037/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.6.205/tcp/61836/p2p/16Uiu2HAmFaS6pw92RVpzDPGZgfg7rStQi7GwjxBSFMYLaxV4b12H"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:61835/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/0"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:26037/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/0"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.store:store.py:129 Relaying message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:61835/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F0" -H "Content-Type: application/json" -d '{"payload": "U3RvcmUgd29ya3MhIQ==", "contentTopic": "/myapp/1/latest/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.2 seconds
[35mDEBUG   [0m src.steps.store:store.py:215 Checking that peer wakuorg/nwaku:latest can find the stored messages
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:61835/store/v3/messages?pubsubTopic=%2Fwaku%2F2%2Frs%2F3%2F0&pageSize=5&ascending=true" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"","statusCode":200,"statusDesc":"OK","messages":[{"messageHash":"rH1yCtg4uSA/oHwxafup2Pgg87uuVHr96F+ektSV1vY="}]}'
[35mDEBUG   [0m src.steps.store:store.py:215 Checking that peer wakuorg/nwaku:latest can find the stored messages
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:26037/store/v3/messages?pubsubTopic=%2Fwaku%2F2%2Frs%2F3%2F0&pageSize=5&ascending=true" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"230a00b9863ede0c93c5","statusCode":200,"statusDesc":"OK","messages":[{"messageHash":"rH1yCtg4uSA/oHwxafup2Pgg87uuVHr96F+ektSV1vY="}]}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 3919f43882a7
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 5a365cca6d33
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.postgres_setup:postgres_setup.py:44 Postgres container stopped and removed.