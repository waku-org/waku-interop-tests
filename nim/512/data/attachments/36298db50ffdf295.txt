[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_extra_field with id: 2024-12-12_04-11-24__408ebfce-e089-45ef-bd13-4bd6661cdb37
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-12_04-11-24__408ebfce-e089-45ef-bd13-4bd6661cdb37__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.179.233
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['3249', '3250', '3251', '3252', '3253']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 3249:3249 -p 3250:3250 -p 3251:3251 -p 3252:3252 -p 3253:3253 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=3251 --rest-port=3249 --tcp-port=3250 --discv5-udp-port=3252 --rest-address=0.0.0.0 --nat=extip:172.18.179.233 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b0af53e4ca4d9113c0baf7ca4ec47b75c3f5bea5d9b8eb22ccfbace0dfbb9dde --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=3253 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.179.233 waku b53cf8518b85cc09984bda8f470426a65939f216c7b8639331439e57ddd4e802
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID b53cf8518b85. Setting up logs at ./log/docker/node1_2024-12-12_04-11-24__408ebfce-e089-45ef-bd13-4bd6661cdb37__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 3249
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container b1e439034ce1. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:3249/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:3249/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.179.233/tcp/3250/p2p/16Uiu2HAm7krE6RHaq2nQnUhFh4DFpiwrrNUYrEgDefARLUvQS6Pj","/ip4/172.18.179.233/tcp/3251/ws/p2p/16Uiu2HAm7krE6RHaq2nQnUhFh4DFpiwrrNUYrEgDefARLUvQS6Pj"],"enrUri":"enr:-L24QF53w19yY4YT_Wr4djEa512-Khi80ZpQqHHEj40thbPKTGhwmC4I613IRzxmdlXszU6paBuRZcAwEDFTNib9TScCgmlkgnY0gmlwhKwSs-mKbXVsdGlhZGRyc5YACASsErPpBgyyAAoErBKz6QYMs90DgnJzhQADAQAAiXNlY3AyNTZrMaECtzXdQ8xhpr-LGIrto4L3Cce4YTLnpqpsP8Icdb1ibZKDdGNwggyyg3VkcIIMtIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-12_04-11-24__408ebfce-e089-45ef-bd13-4bd6661cdb37__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.116.241
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['17380', '17381', '17382', '17383', '17384']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 17380:17380 -p 17381:17381 -p 17382:17382 -p 17383:17383 -p 17384:17384 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=17382 --rest-port=17380 --tcp-port=17381 --discv5-udp-port=17383 --rest-address=0.0.0.0 --nat=extip:172.18.116.241 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=0e09bb72e0b8dc1e5d14f8c8cbab2e568bfe67ea5ecba46beaec8aad15e9710a --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=17384 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QF53w19yY4YT_Wr4djEa512-Khi80ZpQqHHEj40thbPKTGhwmC4I613IRzxmdlXszU6paBuRZcAwEDFTNib9TScCgmlkgnY0gmlwhKwSs-mKbXVsdGlhZGRyc5YACASsErPpBgyyAAoErBKz6QYMs90DgnJzhQADAQAAiXNlY3AyNTZrMaECtzXdQ8xhpr-LGIrto4L3Cce4YTLnpqpsP8Icdb1ibZKDdGNwggyyg3VkcIIMtIV3YWt1MgU --filternode=/ip4/172.18.179.233/tcp/3250/p2p/16Uiu2HAm7krE6RHaq2nQnUhFh4DFpiwrrNUYrEgDefARLUvQS6Pj
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.116.241 waku 64eba37729dea96416ce252a7bed26fef05e5a6a6e594fc4cebf18bab533106b
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 64eba37729de. Setting up logs at ./log/docker/node2_2024-12-12_04-11-24__408ebfce-e089-45ef-bd13-4bd6661cdb37__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 17380
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17380/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17380/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.116.241/tcp/17381/p2p/16Uiu2HAm512hSQhsNtK4T8GDFYMT3nrdGs7skNDzZnR44rLfajZW","/ip4/172.18.116.241/tcp/17382/ws/p2p/16Uiu2HAm512hSQhsNtK4T8GDFYMT3nrdGs7skNDzZnR44rLfajZW"],"enrUri":"enr:-L24QECkuTe-aIIxtFxB1qBkXscvsLI-8_jia3q_LO4p8PrSOhEemzDPeN7VChf0rta5s54fDMaJR0VTmRBgbQKaLrECgmlkgnY0gmlwhKwSdPGKbXVsdGlhZGRyc5YACASsEnTxBkPlAAoErBJ08QZD5t0DgnJzhQADAQAAiXNlY3AyNTZrMaECjkTGZST6t_fHNNj2GS17z4frUi5BDiREhuz4BlNRYm2DdGNwgkPlg3VkcIJD54V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17380/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.179.233/tcp/3250/p2p/16Uiu2HAm7krE6RHaq2nQnUhFh4DFpiwrrNUYrEgDefARLUvQS6Pj"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:3249/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17380/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "e6b1b71d-4e4f-4a96-b867-e67a6ca6211d", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"e6b1b71d-4e4f-4a96-b867-e67a6ca6211d","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17380/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:17380/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id b53cf8518b85
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 64eba37729de
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container b53cf8518b85. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.