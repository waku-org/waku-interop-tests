[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2024-11-21_04-13-32__6d0454b7-d4c7-4cad-babb-1f0e81e8a788
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-21_04-13-32__6d0454b7-d4c7-4cad-babb-1f0e81e8a788__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.121.208
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['26630', '26631', '26632', '26633', '26634']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 26630:26630 -p 26631:26631 -p 26632:26632 -p 26633:26633 -p 26634:26634 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=26632 --rest-port=26630 --tcp-port=26631 --discv5-udp-port=26633 --rest-address=0.0.0.0 --nat=extip:172.18.121.208 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=bb7edb3acdca9fdb7dcc293f6caf6b9ba95db8608aef56bae4ce16c8f06e94cc --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=26634 --metrics-logging=true --relay=true --filter=true
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 6bf1fc7b9cc4. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.121.208 waku ce7c009cdff55901b52c397fbe5d2cd4bef2af83324556dc68ee983b15a4c729
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID ce7c009cdff5. Setting up logs at ./log/docker/node1_2024-11-21_04-13-32__6d0454b7-d4c7-4cad-babb-1f0e81e8a788__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 26630
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:26630/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:26630/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.121.208/tcp/26631/p2p/16Uiu2HAkyd1vwsSANqJyBFB7SajTUWTPcM7GxoWN4EvFvE4TAiWa","/ip4/172.18.121.208/tcp/26632/ws/p2p/16Uiu2HAkyd1vwsSANqJyBFB7SajTUWTPcM7GxoWN4EvFvE4TAiWa"],"enrUri":"enr:-L24QMFM21EPvj-8W5PLlQCeM5_1bW1SzF9Hi_t_McYyqTpNbWODWELxA3MfEe44SfvQT7yxZPWmNJJvg4xJxy2fZLACgmlkgnY0gmlwhKwSedCKbXVsdGlhZGRyc5YACASsEnnQBmgHAAoErBJ50AZoCN0DgnJzhQADAQAAiXNlY3AyNTZrMaECPlax924ipYelAdyNzW2HVTdLsy_XE2LsE-QLs4blqx-DdGNwgmgHg3VkcIJoCYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-21_04-13-32__6d0454b7-d4c7-4cad-babb-1f0e81e8a788__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.34.218
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['54472', '54473', '54474', '54475', '54476']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 54472:54472 -p 54473:54473 -p 54474:54474 -p 54475:54475 -p 54476:54476 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=54474 --rest-port=54472 --tcp-port=54473 --discv5-udp-port=54475 --rest-address=0.0.0.0 --nat=extip:172.18.34.218 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=aef8b4e32ccb5e6aa2ca4bfaa4f7d4dbcf87f7f9f95c2cbaed72f317eac6a6b8 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=54476 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QMFM21EPvj-8W5PLlQCeM5_1bW1SzF9Hi_t_McYyqTpNbWODWELxA3MfEe44SfvQT7yxZPWmNJJvg4xJxy2fZLACgmlkgnY0gmlwhKwSedCKbXVsdGlhZGRyc5YACASsEnnQBmgHAAoErBJ50AZoCN0DgnJzhQADAQAAiXNlY3AyNTZrMaECPlax924ipYelAdyNzW2HVTdLsy_XE2LsE-QLs4blqx-DdGNwgmgHg3VkcIJoCYV3YWt1MgU --filternode=/ip4/172.18.121.208/tcp/26631/p2p/16Uiu2HAkyd1vwsSANqJyBFB7SajTUWTPcM7GxoWN4EvFvE4TAiWa
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.34.218 waku e99a280e65a8de92e9663608f5e744673ce53fd19aebee5284a1e4a2d3dbb37b
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID e99a280e65a8. Setting up logs at ./log/docker/node2_2024-11-21_04-13-32__6d0454b7-d4c7-4cad-babb-1f0e81e8a788__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 54472
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:54472/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:54472/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.34.218/tcp/54473/p2p/16Uiu2HAmPgmMdino5JR1KdmkvQG5DhgpK1X8XXTR2KyX3svYnpaL","/ip4/172.18.34.218/tcp/54474/ws/p2p/16Uiu2HAmPgmMdino5JR1KdmkvQG5DhgpK1X8XXTR2KyX3svYnpaL"],"enrUri":"enr:-L24QH3QGLio2ogCa4awUD20R3ZkZjHmkFesy5wNyDTUahNgcYDCX7KELv5fSRzicf3e9NF2pcXi9XDl7pz_WV9jo2MCgmlkgnY0gmlwhKwSItqKbXVsdGlhZGRyc5YACASsEiLaBtTJAAoErBIi2gbUyt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDo-UGfoupjIb0Elq6ln9Yq-VGwXbe4mmwkunqcVaPxMGDdGNwgtTJg3VkcILUy4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:54472/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.121.208/tcp/26631/p2p/16Uiu2HAkyd1vwsSANqJyBFB7SajTUWTPcM7GxoWN4EvFvE4TAiWa"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:26630/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:54472/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "8b8f8ede-9be5-4851-ba19-63eb8207fa3e", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"8b8f8ede-9be5-4851-ba19-63eb8207fa3e","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:54472/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:54472/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id ce7c009cdff5
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id e99a280e65a8
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container ce7c009cdff5. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.