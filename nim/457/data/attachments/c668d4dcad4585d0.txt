[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_all_with_invalid_request_id with id: 2024-11-21_04-14-32__deb94749-d572-4e39-a9b0-a1642a6c0c59
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-21_04-14-32__deb94749-d572-4e39-a9b0-a1642a6c0c59__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.86.181
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['41326', '41327', '41328', '41329', '41330']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 41326:41326 -p 41327:41327 -p 41328:41328 -p 41329:41329 -p 41330:41330 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=41328 --rest-port=41326 --tcp-port=41327 --discv5-udp-port=41329 --rest-address=0.0.0.0 --nat=extip:172.18.86.181 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b337cd76bdea1c4ba4895b0cfea359e3fb14336aa94748a83bc94bfb8f663cc4 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=41330 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.86.181 waku f89086c4bfe4772fe2e956ca95c5883a934671edd35c3e4f72c45fdd04f1c86d
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID f89086c4bfe4. Setting up logs at ./log/docker/node1_2024-11-21_04-14-32__deb94749-d572-4e39-a9b0-a1642a6c0c59__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 41326
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container b36a5fc06f9c. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41326/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41326/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.86.181/tcp/41327/p2p/16Uiu2HAm2RCD8NMj7jqjPkoKmZqgtytbZSzrU2QCtRAiRvzTTSUn","/ip4/172.18.86.181/tcp/41328/ws/p2p/16Uiu2HAm2RCD8NMj7jqjPkoKmZqgtytbZSzrU2QCtRAiRvzTTSUn"],"enrUri":"enr:-L24QGcqO386PrfX9jDmodoveGzAJ2PHW1AwH_spCyiaVT5JBaCOEZ1a4XQJG5otp4e1qZQ2uwQg7o8hiF9_-ygFzagCgmlkgnY0gmlwhKwSVrWKbXVsdGlhZGRyc5YACASsEla1BqFvAAoErBJWtQahcN0DgnJzhQADAQAAiXNlY3AyNTZrMaECZ-JootsJWhyAiCbKQylu0rPOE4itLsII0tb9TNNVXV-DdGNwgqFvg3VkcIKhcYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-21_04-14-32__deb94749-d572-4e39-a9b0-a1642a6c0c59__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.88.232
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['18806', '18807', '18808', '18809', '18810']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 18806:18806 -p 18807:18807 -p 18808:18808 -p 18809:18809 -p 18810:18810 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=18808 --rest-port=18806 --tcp-port=18807 --discv5-udp-port=18809 --rest-address=0.0.0.0 --nat=extip:172.18.88.232 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ce75f3bea8eba87a76bfeeaaa2beb44e380602b872cbed0ffc4bbcaa8ea2f7af --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=18810 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QGcqO386PrfX9jDmodoveGzAJ2PHW1AwH_spCyiaVT5JBaCOEZ1a4XQJG5otp4e1qZQ2uwQg7o8hiF9_-ygFzagCgmlkgnY0gmlwhKwSVrWKbXVsdGlhZGRyc5YACASsEla1BqFvAAoErBJWtQahcN0DgnJzhQADAQAAiXNlY3AyNTZrMaECZ-JootsJWhyAiCbKQylu0rPOE4itLsII0tb9TNNVXV-DdGNwgqFvg3VkcIKhcYV3YWt1MgU --filternode=/ip4/172.18.86.181/tcp/41327/p2p/16Uiu2HAm2RCD8NMj7jqjPkoKmZqgtytbZSzrU2QCtRAiRvzTTSUn
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.88.232 waku ea8b73262c8a98bbbd682f67fb7eceb4e92fe74dc9d87591c30ef16951d74d3b
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID ea8b73262c8a. Setting up logs at ./log/docker/node2_2024-11-21_04-14-32__deb94749-d572-4e39-a9b0-a1642a6c0c59__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 18806
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:18806/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:18806/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.88.232/tcp/18807/p2p/16Uiu2HAm6YiMALQ1y4dUL257edCGY78nqZBHBhvoY31tkH3dXom4","/ip4/172.18.88.232/tcp/18808/ws/p2p/16Uiu2HAm6YiMALQ1y4dUL257edCGY78nqZBHBhvoY31tkH3dXom4"],"enrUri":"enr:-L24QMdQU7dAKBB_WWEhVZfremW1BS8AwEzYdmRg7iy7FRVIGiNRQLMz9TPGR5KZap2hrZI5Fxszs5zQCOETMd3R4uYCgmlkgnY0gmlwhKwSWOiKbXVsdGlhZGRyc5YACASsEljoBkl3AAoErBJY6AZJeN0DgnJzhQADAQAAiXNlY3AyNTZrMaECpT5MwcsTN6Eqx2NVpg9aIxAxBdMbZSuMW4r3-wGCsyODdGNwgkl3g3VkcIJJeYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:18806/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.86.181/tcp/41327/p2p/16Uiu2HAm2RCD8NMj7jqjPkoKmZqgtytbZSzrU2QCtRAiRvzTTSUn"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:41326/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:18806/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "22535609-3dd3-40ec-9168-8a5255e09993", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"22535609-3dd3-40ec-9168-8a5255e09993","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:18806/filter/v2/subscriptions/all" -H "Content-Type: application/json" -d '{"requestId": 1}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:18806/filter/v2/subscriptions/all. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id f89086c4bfe4
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id ea8b73262c8a
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container f89086c4bfe4. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.