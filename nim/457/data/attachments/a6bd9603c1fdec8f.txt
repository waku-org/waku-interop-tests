[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_invalid_pubsub_topic_format with id: 2024-11-21_04-12-43__0916c320-cb4b-49f6-9660-0c2e013c60d1
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-21_04-12-43__0916c320-cb4b-49f6-9660-0c2e013c60d1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.211.222
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['22237', '22238', '22239', '22240', '22241']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 22237:22237 -p 22238:22238 -p 22239:22239 -p 22240:22240 -p 22241:22241 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=22239 --rest-port=22237 --tcp-port=22238 --discv5-udp-port=22240 --rest-address=0.0.0.0 --nat=extip:172.18.211.222 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e22c27f3bce4ea75e9ecd6f67e7da66f3280c1a394b30ee19f0dd28cd06733fd --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=22241 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.211.222 waku 828cdfa45b8c2d035ab6bacfb5205a8982571f8151aa3a1e9e6630f59db5ad37
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 828cdfa45b8c. Setting up logs at ./log/docker/node1_2024-11-21_04-12-43__0916c320-cb4b-49f6-9660-0c2e013c60d1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 22237
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container a38e5f4b702e. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:22237/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:22237/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.211.222/tcp/22238/p2p/16Uiu2HAm7aZ4wAxQn4Bo1sJLswC6djdQM9avs2fsXJ1pjTHZz16a","/ip4/172.18.211.222/tcp/22239/ws/p2p/16Uiu2HAm7aZ4wAxQn4Bo1sJLswC6djdQM9avs2fsXJ1pjTHZz16a"],"enrUri":"enr:-L24QAY4VBQ_e9fxJn22-VvhmH4fqXR1qcvZyYaw86IVX8mkNsLrblGYzV23VPldrgoGC9HG9IEGDSBha0VdvZjhbYsCgmlkgnY0gmlwhKwS096KbXVsdGlhZGRyc5YACASsEtPeBlbeAAoErBLT3gZW390DgnJzhQADAQAAiXNlY3AyNTZrMaECtJKn3A-h2oiG2YPsg_wh_Ecyuk9MsQR_HidTCo37zquDdGNwglbeg3VkcIJW4IV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-21_04-12-43__0916c320-cb4b-49f6-9660-0c2e013c60d1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.93.183
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['18942', '18943', '18944', '18945', '18946']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 18942:18942 -p 18943:18943 -p 18944:18944 -p 18945:18945 -p 18946:18946 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=18944 --rest-port=18942 --tcp-port=18943 --discv5-udp-port=18945 --rest-address=0.0.0.0 --nat=extip:172.18.93.183 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=95e1fffba1152e7f0cd00eface91ffb3e3cb96bcb0bcb043c66e417aa35e16b2 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=18946 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QAY4VBQ_e9fxJn22-VvhmH4fqXR1qcvZyYaw86IVX8mkNsLrblGYzV23VPldrgoGC9HG9IEGDSBha0VdvZjhbYsCgmlkgnY0gmlwhKwS096KbXVsdGlhZGRyc5YACASsEtPeBlbeAAoErBLT3gZW390DgnJzhQADAQAAiXNlY3AyNTZrMaECtJKn3A-h2oiG2YPsg_wh_Ecyuk9MsQR_HidTCo37zquDdGNwglbeg3VkcIJW4IV3YWt1MgU --filternode=/ip4/172.18.211.222/tcp/22238/p2p/16Uiu2HAm7aZ4wAxQn4Bo1sJLswC6djdQM9avs2fsXJ1pjTHZz16a
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.93.183 waku 887a6e946d0f1e79d58939a547de44015d56c0ac03ced1aad9429cb052c74531
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 887a6e946d0f. Setting up logs at ./log/docker/node2_2024-11-21_04-12-43__0916c320-cb4b-49f6-9660-0c2e013c60d1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 18942
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:18942/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:18942/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.93.183/tcp/18943/p2p/16Uiu2HAm4jpCKBADDYXUsNTp259WC5RQHG2mZWggbdcWBU6H1UvR","/ip4/172.18.93.183/tcp/18944/ws/p2p/16Uiu2HAm4jpCKBADDYXUsNTp259WC5RQHG2mZWggbdcWBU6H1UvR"],"enrUri":"enr:-L24QClzcR8YZgIcpR8GKoDwEaR_xHob1F4_I1HtGg4dP7DgB-OGBT_GkKoargWJ8FvNi93DoW7LOhykfrGkO63u14oCgmlkgnY0gmlwhKwSXbeKbXVsdGlhZGRyc5YACASsEl23Bkn_AAoErBJdtwZKAN0DgnJzhQADAQAAiXNlY3AyNTZrMaECil7tNtvLEy5ABFc96NDsKU_ykavyxNlhj-Q5IDICWMaDdGNwgkn_g3VkcIJKAYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:18942/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.211.222/tcp/22238/p2p/16Uiu2HAm7aZ4wAxQn4Bo1sJLswC6djdQM9avs2fsXJ1pjTHZz16a"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:22237/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:18942/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "2ff12db9-74a0-4406-96ee-aa76fb22700b", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"2ff12db9-74a0-4406-96ee-aa76fb22700b","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:18942/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": ["/waku/2/rs/3/1"]}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:18942/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 828cdfa45b8c
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 887a6e946d0f
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 828cdfa45b8c. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.