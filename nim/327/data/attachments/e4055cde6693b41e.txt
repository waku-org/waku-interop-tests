[35mDEBUG   [0m src.postgres_setup:postgres_setup.py:36 Postgres container started
[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_on_empty_postgress_db with id: 2024-08-22_04-31-36__959cbc49-4d04-485a-8842-e3c70fa36e3a
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.store:store.py:28 Running fixture setup: store_setup
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:17 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:84 WakuNode instance initialized with log path ./log/docker/publishing_node1_2024-08-22_04-31-36__959cbc49-4d04-485a-8842-e3c70fa36e3a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:88 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:20 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:23 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:80 Generated random external IP 172.18.131.206
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:73 Generated ports ['57872', '57873', '57874', '57875', '57876']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:430 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:162 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:164 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:47 docker run -i -t -p 57872:57872 -p 57873:57873 -p 57874:57874 -p 57875:57875 -p 57876:57876 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=57874 --rest-port=57872 --tcp-port=57873 --discv5-udp-port=57875 --rest-address=0.0.0.0 --nat=extip:172.18.131.206 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=9a2b0f38f35bafaf5daafaaa3e6c45ddc3fd095acec8b2796a197bff2ee5a174 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=57876 --metrics-logging=true --store=true --relay=true --store-message-db-url=postgres://postgres:test123@postgres:5432/postgres
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:53 docker network connect --ip 172.18.131.206 waku 59ba8fce68f41f9e90ef9537d90ef746f35d2ae6ab70dee7ce8fa0099e067719
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:56 Container started with ID 59ba8fce68f4. Setting up logs at ./log/docker/publishing_node1_2024-08-22_04-31-36__959cbc49-4d04-485a-8842-e3c70fa36e3a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:176 Started container from image wakuorg/nwaku:latest. REST: 57872
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:57872/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Initializing","protocolsHealth":[]}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:57872/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Initializing","protocolsHealth":[]}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:57872/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:276 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:57872/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.131.206/tcp/57873/p2p/16Uiu2HAm9JMpLMiCeaPkSjQ8GHgD8e6EaM52JzhbHPNjZ7qEz35r","/ip4/172.18.131.206/tcp/57874/ws/p2p/16Uiu2HAm9JMpLMiCeaPkSjQ8GHgD8e6EaM52JzhbHPNjZ7qEz35r"],"enrUri":"enr:-LO4QOAfLbyP2JnDihQ8jzX5MOLadOXKQy3VvSDhfYCaBB_WVdwdjnua2PQTcSAgJgCmIfFprIZMB6wvtxNmVroJa-MBgmlkgnY0gmlwhKwSg86KbXVsdGlhZGRyc4wACgSsEoPOBuIS3QOCcnOFAAMBAACJc2VjcDI1NmsxoQLOJAOlLc29prTy-iOvc05bPSsV1CoKB-LjLnOLrw6_mYN0Y3CC4hGDdWRwguIThXdha3UyAw"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:281 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:17 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:84 WakuNode instance initialized with log path ./log/docker/store_node1_2024-08-22_04-31-36__959cbc49-4d04-485a-8842-e3c70fa36e3a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:88 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:20 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:23 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:80 Generated random external IP 172.18.102.205
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:73 Generated ports ['8829', '8830', '8831', '8832', '8833']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:430 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:162 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:164 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:47 docker run -i -t -p 8829:8829 -p 8830:8830 -p 8831:8831 -p 8832:8832 -p 8833:8833 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=8831 --rest-port=8829 --tcp-port=8830 --discv5-udp-port=8832 --rest-address=0.0.0.0 --nat=extip:172.18.102.205 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=482b619fea139cc7ccd0bd7b3126aaac4eee6c2acabe248dfc4f45cb51d2cdcb --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=8833 --metrics-logging=true --discv5-bootstrap-node=enr:-LO4QOAfLbyP2JnDihQ8jzX5MOLadOXKQy3VvSDhfYCaBB_WVdwdjnua2PQTcSAgJgCmIfFprIZMB6wvtxNmVroJa-MBgmlkgnY0gmlwhKwSg86KbXVsdGlhZGRyc4wACgSsEoPOBuIS3QOCcnOFAAMBAACJc2VjcDI1NmsxoQLOJAOlLc29prTy-iOvc05bPSsV1CoKB-LjLnOLrw6_mYN0Y3CC4hGDdWRwguIThXdha3UyAw --storenode=/ip4/172.18.131.206/tcp/57873/p2p/16Uiu2HAm9JMpLMiCeaPkSjQ8GHgD8e6EaM52JzhbHPNjZ7qEz35r --store=false --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:53 docker network connect --ip 172.18.102.205 waku 7bd9a47989857ea81c38dea5c5811a1787be4764ba984ef2c6443abeacb2a5cf
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:56 Container started with ID 7bd9a4798985. Setting up logs at ./log/docker/store_node1_2024-08-22_04-31-36__959cbc49-4d04-485a-8842-e3c70fa36e3a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:176 Started container from image wakuorg/nwaku:latest. REST: 8829
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8829/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:276 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8829/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.102.205/tcp/8830/p2p/16Uiu2HAm9BiaL4zJGz9746Dv4EvbXEXyBX9YznZutv843WfBBVLa","/ip4/172.18.102.205/tcp/8831/ws/p2p/16Uiu2HAm9BiaL4zJGz9746Dv4EvbXEXyBX9YznZutv843WfBBVLa"],"enrUri":"enr:-LO4QGxmJtI8Xu4yFOFHLAlCjXDs0mLv_wVbu1IR1NPL1gwfSDzaZ4DRvqdGcsdBTE6-SoGhHEtkvllT2zxHPMeYGUgBgmlkgnY0gmlwhKwSZs2KbXVsdGlhZGRyc4wACgSsEmbNBiJ_3QOCcnOFAAMBAACJc2VjcDI1NmsxoQLMcGuae-i1Sc4hDFQoxQUAL3j12Eu2LXzYShzOQjLBj4N0Y3CCIn6DdWRwgiKAhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:281 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8829/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.131.206/tcp/57873/p2p/16Uiu2HAm9JMpLMiCeaPkSjQ8GHgD8e6EaM52JzhbHPNjZ7qEz35r"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:57872/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/0"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8829/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/0"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.store:store.py:128 Relaying message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:57872/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F0" -H "Content-Type: application/json" -d '{"payload": "U3RvcmUgd29ya3MhIQ==", "contentTopic": "/myapp/1/latest/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.2 seconds
[35mDEBUG   [0m src.steps.store:store.py:216 Checking that peer wakuorg/nwaku:latest can find the stored message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:57872/store/v3/messages?pubsubTopic=%2Fwaku%2F2%2Frs%2F3%2F0&pageSize=5&ascending=true" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"","statusCode":200,"statusDesc":"OK","messages":[{"messageHash":"AWBLNuHdCciqRDwWvrDcqoQRh7ZcpgJ0mGQSHrImOjA="}]}'
[35mDEBUG   [0m src.steps.store:store.py:216 Checking that peer wakuorg/nwaku:latest can find the stored message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8829/store/v3/messages?pubsubTopic=%2Fwaku%2F2%2Frs%2F3%2F0&pageSize=5&ascending=true" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"012a26b62d61d738e312","statusCode":200,"statusDesc":"OK","messages":[{"messageHash":"AWBLNuHdCciqRDwWvrDcqoQRh7ZcpgJ0mGQSHrImOjA="}]}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:220 Stopping container with id 59ba8fce68f4
[35mDEBUG   [0m src.node.waku_node:waku_node.py:227 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:220 Stopping container with id 7bd9a4798985
[35mDEBUG   [0m src.node.waku_node:waku_node.py:227 Container stopped.
[35mDEBUG   [0m src.postgres_setup:postgres_setup.py:44 Postgres container stopped and removed.