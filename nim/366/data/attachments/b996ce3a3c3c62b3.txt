[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_invalid_meta with id: 2024-09-20_04-21-58__e4f3b067-8226-4299-a31e-7c4b471a8371
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-09-20_04-21-58__e4f3b067-8226-4299-a31e-7c4b471a8371__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.183.32
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['6513', '6514', '6515', '6516', '6517']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 6513:6513 -p 6514:6514 -p 6515:6515 -p 6516:6516 -p 6517:6517 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=6515 --rest-port=6513 --tcp-port=6514 --discv5-udp-port=6516 --rest-address=0.0.0.0 --nat=extip:172.18.183.32 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=1acffa306a27c26bcf153b74fc4bcbdd4ef87fad220ccbf7ef2bdcebefcd5efd --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=6517 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.183.32 waku 0ea850472c9fe07cbd02843074c57f4a6cf1501c5974a118e5d91626af43cf81
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 0ea850472c9f. Setting up logs at ./log/docker/node1_2024-09-20_04-21-58__e4f3b067-8226-4299-a31e-7c4b471a8371__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 6513
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:6513/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:6513/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.183.32/tcp/6514/p2p/16Uiu2HAmChG9agyrwp8itig5HKR7beqvdgycW3iEyR1jN6GaYhHK","/ip4/172.18.183.32/tcp/6515/ws/p2p/16Uiu2HAmChG9agyrwp8itig5HKR7beqvdgycW3iEyR1jN6GaYhHK"],"enrUri":"enr:-LO4QCT3FRaW8RU5gFsRtlfdQz95ZUcXioCol6GywXSqn1cLC8ZZKrwZjdQ8GnBwcDxrAOCVg-IgGPborSGl8wyYEEcBgmlkgnY0gmlwhKwStyCKbXVsdGlhZGRyc4wACgSsErcgBhlz3QOCcnOFAAMBAACJc2VjcDI1NmsxoQMAlQZN3JmzP0SqCJR0h6vBAKCtpYih0fJ0c8khHfqFWoN0Y3CCGXKDdWRwghl0hXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-09-20_04-21-58__e4f3b067-8226-4299-a31e-7c4b471a8371__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.82.121
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['24372', '24373', '24374', '24375', '24376']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 24372:24372 -p 24373:24373 -p 24374:24374 -p 24375:24375 -p 24376:24376 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=24374 --rest-port=24372 --tcp-port=24373 --discv5-udp-port=24375 --rest-address=0.0.0.0 --nat=extip:172.18.82.121 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=4e88e3893e72c04f7babf84c4d2d3ecadd0a521c7b6fd6cff32e6064bff1a5ee --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=24376 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QCT3FRaW8RU5gFsRtlfdQz95ZUcXioCol6GywXSqn1cLC8ZZKrwZjdQ8GnBwcDxrAOCVg-IgGPborSGl8wyYEEcBgmlkgnY0gmlwhKwStyCKbXVsdGlhZGRyc4wACgSsErcgBhlz3QOCcnOFAAMBAACJc2VjcDI1NmsxoQMAlQZN3JmzP0SqCJR0h6vBAKCtpYih0fJ0c8khHfqFWoN0Y3CCGXKDdWRwghl0hXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.82.121 waku 3e4ecf988601281f2e1c90ba28d13c4b36ed579f507884640bb0f8786f4c9ef9
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 3e4ecf988601. Setting up logs at ./log/docker/node2_2024-09-20_04-21-58__e4f3b067-8226-4299-a31e-7c4b471a8371__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 24372
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:24372/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:24372/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.82.121/tcp/24373/p2p/16Uiu2HAky5Kh7pzvRyPkQVnz5bJp4kWZSbLaPjbZMQy5GhSgD7qu","/ip4/172.18.82.121/tcp/24374/ws/p2p/16Uiu2HAky5Kh7pzvRyPkQVnz5bJp4kWZSbLaPjbZMQy5GhSgD7qu"],"enrUri":"enr:-LO4QBOH44agZkHTOip59vicKEM7x3xxUMWk1sSaGeIsERAOXDjCWuY7CohZ5aEUYx6JVEZhv62AQUzhzwwxMFGeKVsBgmlkgnY0gmlwhKwSUnmKbXVsdGlhZGRyc4wACgSsElJ5Bl823QOCcnOFAAMBAACJc2VjcDI1NmsxoQI2ODE_ejlzO9PW_WgDbSjVmlFarNuTpeENJo3HpRh1XIN0Y3CCXzWDdWRwgl83hXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:24372/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.183.32/tcp/6514/p2p/16Uiu2HAmChG9agyrwp8itig5HKR7beqvdgycW3iEyR1jN6GaYhHK"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:6513/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:24372/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:6513/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:6513/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1726806122549061888,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:24372/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1726806122549061888,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:6513/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)', "meta": "Relay works!!"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:6513/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Incorrect base64 string'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 0ea850472c9f
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 3e4ecf988601
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.