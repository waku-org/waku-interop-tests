[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_invalid_version with id: 2024-09-20_04-21-51__bf8a0feb-3ed2-456c-aea2-9f05bbff381b
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-09-20_04-21-51__bf8a0feb-3ed2-456c-aea2-9f05bbff381b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.247.43
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['41189', '41190', '41191', '41192', '41193']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 41189:41189 -p 41190:41190 -p 41191:41191 -p 41192:41192 -p 41193:41193 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=41191 --rest-port=41189 --tcp-port=41190 --discv5-udp-port=41192 --rest-address=0.0.0.0 --nat=extip:172.18.247.43 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=7cf47d7bafabaabbe5b5f8bb65c30c92e50ff2dcf53a1b09a5a7fcb69cf24cf4 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=41193 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.247.43 waku a3362698056ecbd0b62c888351cfc5eade220a379bf17bac474403620cb9a24c
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID a3362698056e. Setting up logs at ./log/docker/node1_2024-09-20_04-21-51__bf8a0feb-3ed2-456c-aea2-9f05bbff381b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 41189
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41189/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41189/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.247.43/tcp/41190/p2p/16Uiu2HAkzSdGRTmeJte5rT4eyvvnUFYZwrgb1XmyQEaDPPNfHTS9","/ip4/172.18.247.43/tcp/41191/ws/p2p/16Uiu2HAkzSdGRTmeJte5rT4eyvvnUFYZwrgb1XmyQEaDPPNfHTS9"],"enrUri":"enr:-LO4QEfsx9iQvg5WDBIYWgeTsu7qPb8sxC_DL5KoUFZ5GLcmR9lYQ5fDCMpeeRcyIVQt1We9KOPKYd34l22HzwIwuCIBgmlkgnY0gmlwhKwS9yuKbXVsdGlhZGRyc4wACgSsEvcrBqDn3QOCcnOFAAMBAACJc2VjcDI1NmsxoQJKiPKQHXkTE20w_Rufhv1NEkwOznBqQZaLDbUy6XG22oN0Y3CCoOaDdWRwgqDohXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-09-20_04-21-51__bf8a0feb-3ed2-456c-aea2-9f05bbff381b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.222.52
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['17390', '17391', '17392', '17393', '17394']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 17390:17390 -p 17391:17391 -p 17392:17392 -p 17393:17393 -p 17394:17394 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=17392 --rest-port=17390 --tcp-port=17391 --discv5-udp-port=17393 --rest-address=0.0.0.0 --nat=extip:172.18.222.52 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=5460dcbddbb09708cec91fb8ac21d40ba5ce1bdfc9d7d0a83468d5f972aa9d82 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=17394 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QEfsx9iQvg5WDBIYWgeTsu7qPb8sxC_DL5KoUFZ5GLcmR9lYQ5fDCMpeeRcyIVQt1We9KOPKYd34l22HzwIwuCIBgmlkgnY0gmlwhKwS9yuKbXVsdGlhZGRyc4wACgSsEvcrBqDn3QOCcnOFAAMBAACJc2VjcDI1NmsxoQJKiPKQHXkTE20w_Rufhv1NEkwOznBqQZaLDbUy6XG22oN0Y3CCoOaDdWRwgqDohXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.222.52 waku 937d89079d16ffcfdd93dc9d21a538374dfc3ca0176553ff3982548d75cece5e
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 937d89079d16. Setting up logs at ./log/docker/node2_2024-09-20_04-21-51__bf8a0feb-3ed2-456c-aea2-9f05bbff381b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 17390
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17390/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17390/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.222.52/tcp/17391/p2p/16Uiu2HAkxyiayRCKoR9RuDbpSwB2RXvwabhxs39wsGdZpKbdYaeu","/ip4/172.18.222.52/tcp/17392/ws/p2p/16Uiu2HAkxyiayRCKoR9RuDbpSwB2RXvwabhxs39wsGdZpKbdYaeu"],"enrUri":"enr:-LO4QMRmcPf8jz6lbtvHJnskK4ipLP9ivLAkiJIlAxK0rU-tQSS0CkGFKOvjN1YWm3sFVTJVK3B98Fog8Z6DrxTZ7SEBgmlkgnY0gmlwhKwS3jSKbXVsdGlhZGRyc4wACgSsEt40BkPw3QOCcnOFAAMBAACJc2VjcDI1NmsxoQI0yJgKSxuHZiP8cDySF9w9Jsr6Jbhs754B9hz7qUIMkoN0Y3CCQ--DdWRwgkPxhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17390/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.247.43/tcp/41190/p2p/16Uiu2HAkzSdGRTmeJte5rT4eyvvnUFYZwrgb1XmyQEaDPPNfHTS9"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:41189/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17390/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:41189/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41189/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1726806114787342592,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17390/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1726806114787342592,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:41189/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)', "version": 2.1}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:41189/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id a3362698056e
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 937d89079d16
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.