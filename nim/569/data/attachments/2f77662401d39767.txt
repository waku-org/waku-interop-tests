[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_no_request_id with id: 2024-12-25_17-41-23__5f419ab2-0f1d-4458-aa4b-3317fbbc79b1
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-25_17-41-23__5f419ab2-0f1d-4458-aa4b-3317fbbc79b1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.81.65
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['30998', '30999', '31000', '31001', '31002']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 30998:30998 -p 30999:30999 -p 31000:31000 -p 31001:31001 -p 31002:31002 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=31000 --rest-port=30998 --tcp-port=30999 --discv5-udp-port=31001 --rest-address=0.0.0.0 --nat=extip:172.18.81.65 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=dd14a287c7ad4cfbbfec800aa0b9e40fd90ab8ae50ddb4cff8133876ee7d9a09 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=31002 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.81.65 waku 998ddf140cc0a2e159939b0577bfbd83f3db90cbb9634ed90bf899d6bfbc0f76
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 998ddf140cc0. Setting up logs at ./log/docker/node1_2024-12-25_17-41-23__5f419ab2-0f1d-4458-aa4b-3317fbbc79b1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 30998
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 8562701a92e7. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30998/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30998/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.81.65/tcp/30999/p2p/16Uiu2HAm4E7T7nWfz6VSAAaFV3w97UuqzB3mcjzWGhhEvCQZ8LUL","/ip4/172.18.81.65/tcp/31000/ws/p2p/16Uiu2HAm4E7T7nWfz6VSAAaFV3w97UuqzB3mcjzWGhhEvCQZ8LUL"],"enrUri":"enr:-L24QENE1lgeJk0i6A9lqvvz0FUsslz9TeWXlF0njrQ-nyfQWE1de3oiNoZLY4nOiBPqdj2fKVUK6PpyPwNUsPD43IECgmlkgnY0gmlwhKwSUUGKbXVsdGlhZGRyc5YACASsElFBBnkXAAoErBJRQQZ5GN0DgnJzhQADAQAAiXNlY3AyNTZrMaECgsMDTY4obq1oDS9dVYi82S3LDfielncy-XYQxhoJ4JWDdGNwgnkXg3VkcIJ5GYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-25_17-41-23__5f419ab2-0f1d-4458-aa4b-3317fbbc79b1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.27.189
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['45120', '45121', '45122', '45123', '45124']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 45120:45120 -p 45121:45121 -p 45122:45122 -p 45123:45123 -p 45124:45124 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=45122 --rest-port=45120 --tcp-port=45121 --discv5-udp-port=45123 --rest-address=0.0.0.0 --nat=extip:172.18.27.189 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=d63f0fbb2c38a5a1bd703b2c9af1fc9f9fd070aafacb002fa7e1ce8af58ca9c9 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=45124 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QENE1lgeJk0i6A9lqvvz0FUsslz9TeWXlF0njrQ-nyfQWE1de3oiNoZLY4nOiBPqdj2fKVUK6PpyPwNUsPD43IECgmlkgnY0gmlwhKwSUUGKbXVsdGlhZGRyc5YACASsElFBBnkXAAoErBJRQQZ5GN0DgnJzhQADAQAAiXNlY3AyNTZrMaECgsMDTY4obq1oDS9dVYi82S3LDfielncy-XYQxhoJ4JWDdGNwgnkXg3VkcIJ5GYV3YWt1MgU --filternode=/ip4/172.18.81.65/tcp/30999/p2p/16Uiu2HAm4E7T7nWfz6VSAAaFV3w97UuqzB3mcjzWGhhEvCQZ8LUL
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.27.189 waku b400a4fadc75bc1ef8f62da7d584b0fbd3bb713388bec463d8995741477bbf87
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID b400a4fadc75. Setting up logs at ./log/docker/node2_2024-12-25_17-41-23__5f419ab2-0f1d-4458-aa4b-3317fbbc79b1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 45120
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:45120/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:45120/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.27.189/tcp/45121/p2p/16Uiu2HAkuRpQuEVkSFw3CJggKDZHWXZueUyYzbjEaaKho2AeyXLh","/ip4/172.18.27.189/tcp/45122/ws/p2p/16Uiu2HAkuRpQuEVkSFw3CJggKDZHWXZueUyYzbjEaaKho2AeyXLh"],"enrUri":"enr:-L24QBwXzbWcGha-rnENEUQWX_J2e9MqVaE4isRbS57c6J8JPDKnld7Vv5CsE1LuDqLlqUuFyl6L47EV3bdNMZz6ul8CgmlkgnY0gmlwhKwSG72KbXVsdGlhZGRyc5YACASsEhu9BrBBAAoErBIbvQawQt0DgnJzhQADAQAAiXNlY3AyNTZrMaECAAmI_JD7lmKNXTJhMj-zxHbLCB02S0_eWTyIOZqHDp6DdGNwgrBBg3VkcIKwQ4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:45120/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.81.65/tcp/30999/p2p/16Uiu2HAm4E7T7nWfz6VSAAaFV3w97UuqzB3mcjzWGhhEvCQZ8LUL"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:30998/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:45120/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "91f8637e-98c3-4140-949e-fa1dfcf9bf72", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"91f8637e-98c3-4140-949e-fa1dfcf9bf72","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:45120/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:45120/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 998ddf140cc0
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id b400a4fadc75
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 998ddf140cc0. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.