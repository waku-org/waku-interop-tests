[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_payload_equal_or_more_150_kb with id: 2024-12-25_17-41-15__4c08c43a-0f40-426f-b989-61e0cf34cf4e
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-25_17-41-15__4c08c43a-0f40-426f-b989-61e0cf34cf4e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.89.40
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['30903', '30904', '30905', '30906', '30907']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 30903:30903 -p 30904:30904 -p 30905:30905 -p 30906:30906 -p 30907:30907 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=30905 --rest-port=30903 --tcp-port=30904 --discv5-udp-port=30906 --rest-address=0.0.0.0 --nat=extip:172.18.89.40 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=1a3a8fd8a9ecee65d7cacc0b86d13465fc1b1538bf735b0e776bf4a72afec191 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=30907 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.89.40 waku 92312e71e72b4c0def3860465b121facacf2c28bb2279826a0d4100fc62507bd
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 92312e71e72b. Setting up logs at ./log/docker/node1_2024-12-25_17-41-15__4c08c43a-0f40-426f-b989-61e0cf34cf4e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 30903
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30903/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30903/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.89.40/tcp/30904/p2p/16Uiu2HAm926vv1adG6mvQfo54evF4m3biMTDs4rXynrkiuST2xfU","/ip4/172.18.89.40/tcp/30905/ws/p2p/16Uiu2HAm926vv1adG6mvQfo54evF4m3biMTDs4rXynrkiuST2xfU"],"enrUri":"enr:-L24QPSrtbBJI_v4XYZxBiXCM5ojzW3TqVycgeX6kVqECwSsKa9A7rT6lO8iyxrAHY6foJoN3ys3EcPjwheoeiruRGICgmlkgnY0gmlwhKwSWSiKbXVsdGlhZGRyc5YACASsElkoBni4AAoErBJZKAZ4ud0DgnJzhQADAQAAiXNlY3AyNTZrMaECyfnjltsRPkQwT1zgH9w9w_IdIqyJUmfJml1319228luDdGNwgni4g3VkcIJ4uoV3YWt1MgE"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-25_17-41-15__4c08c43a-0f40-426f-b989-61e0cf34cf4e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.179.106
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['58965', '58966', '58967', '58968', '58969']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 58965:58965 -p 58966:58966 -p 58967:58967 -p 58968:58968 -p 58969:58969 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=58967 --rest-port=58965 --tcp-port=58966 --discv5-udp-port=58968 --rest-address=0.0.0.0 --nat=extip:172.18.179.106 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=abde1a1e44ae99968e9cbfbb8ce8fa60177fc7667d26cc7ab1dcf90ef76710d2 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=58969 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-L24QPSrtbBJI_v4XYZxBiXCM5ojzW3TqVycgeX6kVqECwSsKa9A7rT6lO8iyxrAHY6foJoN3ys3EcPjwheoeiruRGICgmlkgnY0gmlwhKwSWSiKbXVsdGlhZGRyc5YACASsElkoBni4AAoErBJZKAZ4ud0DgnJzhQADAQAAiXNlY3AyNTZrMaECyfnjltsRPkQwT1zgH9w9w_IdIqyJUmfJml1319228luDdGNwgni4g3VkcIJ4uoV3YWt1MgE
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.179.106 waku 76bd664d692f999603e328c484079c7af7ffad14ce09089d79f3dca114198101
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 76bd664d692f. Setting up logs at ./log/docker/node2_2024-12-25_17-41-15__4c08c43a-0f40-426f-b989-61e0cf34cf4e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 58965
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:58965/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:58965/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.179.106/tcp/58966/p2p/16Uiu2HAmBS8rXmEBXHoHmViTDAN84H5AstND4jGNEbiKb6UYGLfH","/ip4/172.18.179.106/tcp/58967/ws/p2p/16Uiu2HAmBS8rXmEBXHoHmViTDAN84H5AstND4jGNEbiKb6UYGLfH"],"enrUri":"enr:-L24QEm1EkBX1e1Vl_jhQQbwErDStMgKdaXJZXDiYOv-KMu-HPWS0FUWr7n7tOovB5cxiUAzO1qKNIMgjGXtm2yQILsCgmlkgnY0gmlwhKwSs2qKbXVsdGlhZGRyc5YACASsErNqBuZWAAoErBKzagbmV90DgnJzhQADAQAAiXNlY3AyNTZrMaEC7dlg1Gba6wrGkWs6WwrTqyCjm5tHHiyGPdMnhF1PB8CDdGNwguZWg3VkcILmWIV3YWt1MgE"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:58965/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.89.40/tcp/30904/p2p/16Uiu2HAm926vv1adG6mvQfo54evF4m3biMTDs4rXynrkiuST2xfU"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:30903/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:58965/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:30903/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30903/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1735148481514304512,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:58965/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1735148481514304512,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[35mDEBUG   [0m tests.relay.test_publish:test_publish.py:55 Running test with payload length of 204800 bytes
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:30903/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Failed to publish: Message size exceeded maximum of 153600 bytes'
[35mDEBUG   [0m tests.relay.test_publish:test_publish.py:55 Running test with payload length of 1048576 bytes
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:30903/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Failed to publish: Message size exceeded maximum of 153600 bytes'
[35mDEBUG   [0m tests.relay.test_publish:test_publish.py:55 Running test with payload length of 10485760 bytes
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:30903/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Failed to publish: Message size exceeded maximum of 153600 bytes'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 92312e71e72b
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 76bd664d692f
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 92312e71e72b. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.