[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_no_request_id with id: 2024-11-08_04-08-19__f03dafa9-fa87-478a-b8c2-60765ec7205e
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-08_04-08-19__f03dafa9-fa87-478a-b8c2-60765ec7205e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.224.143
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['18400', '18401', '18402', '18403', '18404']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 18400:18400 -p 18401:18401 -p 18402:18402 -p 18403:18403 -p 18404:18404 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=18402 --rest-port=18400 --tcp-port=18401 --discv5-udp-port=18403 --rest-address=0.0.0.0 --nat=extip:172.18.224.143 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=6996d07aa06cebaa9a4f4a4d891de9e4cd5b6d5a0ae74fe9b6f8cb3c8d1a8d7d --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=18404 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.224.143 waku f2105a14c5c8fd9db93e4bb99269cd07a7146618ac669ad18e2a2f2ad61b52b9
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID f2105a14c5c8. Setting up logs at ./log/docker/node1_2024-11-08_04-08-19__f03dafa9-fa87-478a-b8c2-60765ec7205e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 18400
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container d990f861d4d8. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:18400/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:18400/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.224.143/tcp/18401/p2p/16Uiu2HAmBRK553s3FftBtXqEkg6wDQc3jpFK5Nc9eKhVfTxxseZ4","/ip4/172.18.224.143/tcp/18402/ws/p2p/16Uiu2HAmBRK553s3FftBtXqEkg6wDQc3jpFK5Nc9eKhVfTxxseZ4"],"enrUri":"enr:-L24QBEkmtExZCCwMSaQKpbvey3zEkYFfXjQckVHDLaUT5RyG7w2sEZZQEQVDa0eHhV83DLNn4e-hpxtmaFHpygbWm8CgmlkgnY0gmlwhKwS4I-KbXVsdGlhZGRyc5YACASsEuCPBkfhAAoErBLgjwZH4t0DgnJzhQADAQAAiXNlY3AyNTZrMaEC7aNZUwAFGpCLnJeURx38VA2Rszq0JBJnq0iT4xWpSpeDdGNwgkfhg3VkcIJH44V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-08_04-08-19__f03dafa9-fa87-478a-b8c2-60765ec7205e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.162.190
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['35842', '35843', '35844', '35845', '35846']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 35842:35842 -p 35843:35843 -p 35844:35844 -p 35845:35845 -p 35846:35846 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=35844 --rest-port=35842 --tcp-port=35843 --discv5-udp-port=35845 --rest-address=0.0.0.0 --nat=extip:172.18.162.190 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e0853f2fd659fdd08edd7ad5afe6fa33a8efbcf182046851addc06d23cf3ec0d --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=35846 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QBEkmtExZCCwMSaQKpbvey3zEkYFfXjQckVHDLaUT5RyG7w2sEZZQEQVDa0eHhV83DLNn4e-hpxtmaFHpygbWm8CgmlkgnY0gmlwhKwS4I-KbXVsdGlhZGRyc5YACASsEuCPBkfhAAoErBLgjwZH4t0DgnJzhQADAQAAiXNlY3AyNTZrMaEC7aNZUwAFGpCLnJeURx38VA2Rszq0JBJnq0iT4xWpSpeDdGNwgkfhg3VkcIJH44V3YWt1MgU --filternode=/ip4/172.18.224.143/tcp/18401/p2p/16Uiu2HAmBRK553s3FftBtXqEkg6wDQc3jpFK5Nc9eKhVfTxxseZ4
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.162.190 waku 3a6090069a83d08a658113e439f17a9eb5e7a48a17c26acc45f43e161346a213
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 3a6090069a83. Setting up logs at ./log/docker/node2_2024-11-08_04-08-19__f03dafa9-fa87-478a-b8c2-60765ec7205e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 35842
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:35842/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:35842/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.162.190/tcp/35843/p2p/16Uiu2HAmBKcTpcQCBuXeMUx4G4JYAwVEv2MNiymNvhFa4hJFLXgg","/ip4/172.18.162.190/tcp/35844/ws/p2p/16Uiu2HAmBKcTpcQCBuXeMUx4G4JYAwVEv2MNiymNvhFa4hJFLXgg"],"enrUri":"enr:-L24QLUc0K6Qf6NA7UJY6GJEksY613y-KTeqUuTnWgscdc14csv5HEvfFsYm64kjTVTpeKZ9BjoyjHHKVCdknqxPtCcCgmlkgnY0gmlwhKwSor6KbXVsdGlhZGRyc5YACASsEqK-BowDAAoErBKivgaMBN0DgnJzhQADAQAAiXNlY3AyNTZrMaEC7C2HkSpi1ct0Zl82AEpk9PESvOgMR9e4UgVDmHbdyS2DdGNwgowDg3VkcIKMBYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:35842/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.224.143/tcp/18401/p2p/16Uiu2HAmBRK553s3FftBtXqEkg6wDQc3jpFK5Nc9eKhVfTxxseZ4"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:18400/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:35842/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "6620827a-59f1-4eae-9b77-f7e610d63f21", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"6620827a-59f1-4eae-9b77-f7e610d63f21","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:35842/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:35842/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id f2105a14c5c8
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 3a6090069a83
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container f2105a14c5c8. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.