[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_no_request_id with id: 2024-11-08_04-07-47__8827422e-f585-4dd7-806d-1e60d8bcdb3d
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-08_04-07-47__8827422e-f585-4dd7-806d-1e60d8bcdb3d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.96.198
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['63302', '63303', '63304', '63305', '63306']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 63302:63302 -p 63303:63303 -p 63304:63304 -p 63305:63305 -p 63306:63306 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=63304 --rest-port=63302 --tcp-port=63303 --discv5-udp-port=63305 --rest-address=0.0.0.0 --nat=extip:172.18.96.198 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=4aebee429a2c5a7345d1fb74facc3a5821daee81ccdcaffee76ad0b0b2e16cab --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=63306 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.96.198 waku c83f02dd81de96f5917c7b201d81e81bbf170db98e8a9d106015025d8bfe847b
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID c83f02dd81de. Setting up logs at ./log/docker/node1_2024-11-08_04-07-47__8827422e-f585-4dd7-806d-1e60d8bcdb3d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 63302
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container d364e69f279f. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:63302/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:63302/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.96.198/tcp/63303/p2p/16Uiu2HAmDeR98jTtAygawFrDF11QBVkEjXaZj6nJHM9fS4xypG6N","/ip4/172.18.96.198/tcp/63304/ws/p2p/16Uiu2HAmDeR98jTtAygawFrDF11QBVkEjXaZj6nJHM9fS4xypG6N"],"enrUri":"enr:-L24QMgQxnOT09yoK3s_obkRPqlV3K9fLaknVtq_8T8nqggSOKiGB0DLq-lzfbEZDJWE5pLdRM0C3aHCF7fKKlT1DjoCgmlkgnY0gmlwhKwSYMaKbXVsdGlhZGRyc5YACASsEmDGBvdHAAoErBJgxgb3SN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDDrYjAOXMeMXH6q_JaR58WkWz2DhbKHS0tmFs4Rmwo8uDdGNwgvdHg3VkcIL3SYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-08_04-07-47__8827422e-f585-4dd7-806d-1e60d8bcdb3d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.179.84
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['21670', '21671', '21672', '21673', '21674']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 21670:21670 -p 21671:21671 -p 21672:21672 -p 21673:21673 -p 21674:21674 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=21672 --rest-port=21670 --tcp-port=21671 --discv5-udp-port=21673 --rest-address=0.0.0.0 --nat=extip:172.18.179.84 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=08f2f7e1d1f8da2f4aecffdbd7b47efe68a07e73d99cecf64f5f66a5edb25f8a --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=21674 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QMgQxnOT09yoK3s_obkRPqlV3K9fLaknVtq_8T8nqggSOKiGB0DLq-lzfbEZDJWE5pLdRM0C3aHCF7fKKlT1DjoCgmlkgnY0gmlwhKwSYMaKbXVsdGlhZGRyc5YACASsEmDGBvdHAAoErBJgxgb3SN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDDrYjAOXMeMXH6q_JaR58WkWz2DhbKHS0tmFs4Rmwo8uDdGNwgvdHg3VkcIL3SYV3YWt1MgU --filternode=/ip4/172.18.96.198/tcp/63303/p2p/16Uiu2HAmDeR98jTtAygawFrDF11QBVkEjXaZj6nJHM9fS4xypG6N
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.179.84 waku d5a699044d0b1bfdf7f634bc9976cca553cd90b4287aa0ee6cfc17578c51a2b8
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID d5a699044d0b. Setting up logs at ./log/docker/node2_2024-11-08_04-07-47__8827422e-f585-4dd7-806d-1e60d8bcdb3d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 21670
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:21670/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:21670/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.179.84/tcp/21671/p2p/16Uiu2HAmF3DohDXzGw5PW6c7LTHdx5JqyK2aYXUnXYkmGwzUdUJS","/ip4/172.18.179.84/tcp/21672/ws/p2p/16Uiu2HAmF3DohDXzGw5PW6c7LTHdx5JqyK2aYXUnXYkmGwzUdUJS"],"enrUri":"enr:-L24QOOSVN3g6u9GjczmKeWO4OBQDPp9z-4qfET9rj9SE4c9Em693kaGcDDRCv1YR_T1qfwwuWGxbRcOKj5A7ZPj4uwCgmlkgnY0gmlwhKwSs1SKbXVsdGlhZGRyc5YACASsErNUBlSnAAoErBKzVAZUqN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDI2ldlJcNJQSb_NC1kDo4QEPnKUpfvbBUGs8qMjOdOq-DdGNwglSng3VkcIJUqYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:21670/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.96.198/tcp/63303/p2p/16Uiu2HAmDeR98jTtAygawFrDF11QBVkEjXaZj6nJHM9fS4xypG6N"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:63302/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:21670/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "14f8bbfe-b584-48fe-b8a0-4b557ada9134", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"14f8bbfe-b584-48fe-b8a0-4b557ada9134","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:21670/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:21670/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id c83f02dd81de
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id d5a699044d0b
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container c83f02dd81de. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.