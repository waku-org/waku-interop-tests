[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2024-11-08_04-08-25__1e0c1237-090c-45db-869b-aabc694c7c42
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-08_04-08-25__1e0c1237-090c-45db-869b-aabc694c7c42__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.251.97
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['18220', '18221', '18222', '18223', '18224']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 18220:18220 -p 18221:18221 -p 18222:18222 -p 18223:18223 -p 18224:18224 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=18222 --rest-port=18220 --tcp-port=18221 --discv5-udp-port=18223 --rest-address=0.0.0.0 --nat=extip:172.18.251.97 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=2d263dd4afbded9dfae8b3ca1fdccea066c9e20ae3fe5ec39350243930f0eaa9 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=18224 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.251.97 waku b7ea61eb49b70baaf0195c6ad72c21c832cededfcb3d6be93cdf9c6581391e9d
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID b7ea61eb49b7. Setting up logs at ./log/docker/node1_2024-11-08_04-08-25__1e0c1237-090c-45db-869b-aabc694c7c42__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 18220
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container e6cc049e9a82. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:18220/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:18220/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.251.97/tcp/18221/p2p/16Uiu2HAmHcBQgaCEJMQyD6LjdcD1R3AwKgo6v58nxbJ2DRkJhyaa","/ip4/172.18.251.97/tcp/18222/ws/p2p/16Uiu2HAmHcBQgaCEJMQyD6LjdcD1R3AwKgo6v58nxbJ2DRkJhyaa"],"enrUri":"enr:-L24QH3Kawk-Y4qhQlN7eGGjVa-zG1FT9xZ3BzNODG3Rhr5OJIajOHvfdeWyTzOO7iNGhRgySEIjOS6SS_DueBFKploCgmlkgnY0gmlwhKwS-2GKbXVsdGlhZGRyc5YACASsEvthBkctAAoErBL7YQZHLt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDSZIyM0KV2abb7FDHY-kpIqaqrNKaLhdUI7meJRfe3KuDdGNwgkctg3VkcIJHL4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-08_04-08-25__1e0c1237-090c-45db-869b-aabc694c7c42__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.174.240
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['34766', '34767', '34768', '34769', '34770']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 34766:34766 -p 34767:34767 -p 34768:34768 -p 34769:34769 -p 34770:34770 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=34768 --rest-port=34766 --tcp-port=34767 --discv5-udp-port=34769 --rest-address=0.0.0.0 --nat=extip:172.18.174.240 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=c5dc5b225ad64addfcaa3dd29e90cf3dfae51fdaa463ed2dd2f16c07e095bcaa --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=34770 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QH3Kawk-Y4qhQlN7eGGjVa-zG1FT9xZ3BzNODG3Rhr5OJIajOHvfdeWyTzOO7iNGhRgySEIjOS6SS_DueBFKploCgmlkgnY0gmlwhKwS-2GKbXVsdGlhZGRyc5YACASsEvthBkctAAoErBL7YQZHLt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDSZIyM0KV2abb7FDHY-kpIqaqrNKaLhdUI7meJRfe3KuDdGNwgkctg3VkcIJHL4V3YWt1MgU --filternode=/ip4/172.18.251.97/tcp/18221/p2p/16Uiu2HAmHcBQgaCEJMQyD6LjdcD1R3AwKgo6v58nxbJ2DRkJhyaa
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.174.240 waku 2a1019b07fa0be579a316e28af6b9314cf5a3786baeef542dffc8f411ba6bebf
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 2a1019b07fa0. Setting up logs at ./log/docker/node2_2024-11-08_04-08-25__1e0c1237-090c-45db-869b-aabc694c7c42__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 34766
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:34766/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:34766/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.174.240/tcp/34767/p2p/16Uiu2HAmAnwXYJyzhgs92RdQ4nSEDDhVkT7Bo2U5bobyqoF1i6VN","/ip4/172.18.174.240/tcp/34768/ws/p2p/16Uiu2HAmAnwXYJyzhgs92RdQ4nSEDDhVkT7Bo2U5bobyqoF1i6VN"],"enrUri":"enr:-L24QH5DBfMaFmySLnu3R38hMmD5mFONKdHrtVIb4XKApU5KX6LiY7sE2ff4e4rg8uxs9un1mqlDxviWSsteRbWcCJcCgmlkgnY0gmlwhKwSrvCKbXVsdGlhZGRyc5YACASsEq7wBofPAAoErBKu8AaH0N0DgnJzhQADAQAAiXNlY3AyNTZrMaEC5FIUkZm7r7zbacwFoZSgGR_A-ikAsOxoOPN1NxRfssmDdGNwgofPg3VkcIKH0YV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:34766/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.251.97/tcp/18221/p2p/16Uiu2HAmHcBQgaCEJMQyD6LjdcD1R3AwKgo6v58nxbJ2DRkJhyaa"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:18220/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:34766/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "ae8520e1-589f-4620-9ed5-11531393f0bc", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"ae8520e1-589f-4620-9ed5-11531393f0bc","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:34766/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:34766/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id b7ea61eb49b7
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 2a1019b07fa0
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container b7ea61eb49b7. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.