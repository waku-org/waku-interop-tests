[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_invalid_request_id with id: 2024-11-08_04-08-24__f77a6a8a-8367-4dcf-b354-4109d734045f
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-08_04-08-24__f77a6a8a-8367-4dcf-b354-4109d734045f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.149.169
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['16330', '16331', '16332', '16333', '16334']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 16330:16330 -p 16331:16331 -p 16332:16332 -p 16333:16333 -p 16334:16334 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=16332 --rest-port=16330 --tcp-port=16331 --discv5-udp-port=16333 --rest-address=0.0.0.0 --nat=extip:172.18.149.169 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=94c2dd8edcdacefa98dcbc4dbc7badc147d35408bebaefef8facce44ca5bebe3 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=16334 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.149.169 waku a8b7edab6a1296805c3fa086aab817ced8321402a26850cc5c38cec758c150b7
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 7ccdb01780bc. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID a8b7edab6a12. Setting up logs at ./log/docker/node1_2024-11-08_04-08-24__f77a6a8a-8367-4dcf-b354-4109d734045f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 16330
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:16330/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:16330/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.149.169/tcp/16331/p2p/16Uiu2HAmBUKJ25HZ1KDWtxi2g5zX5VfYCHCDCotFXx2DTmogutGv","/ip4/172.18.149.169/tcp/16332/ws/p2p/16Uiu2HAmBUKJ25HZ1KDWtxi2g5zX5VfYCHCDCotFXx2DTmogutGv"],"enrUri":"enr:-L24QI0IUIF6TpHZfYopwa-V0QJcwKetxDSNnpOlfIG3iaAsMd3XQvUtMCgOPjf-oFJq67sZnX3USZ4C5sCOHn27lioCgmlkgnY0gmlwhKwSlamKbXVsdGlhZGRyc5YACASsEpWpBj_LAAoErBKVqQY_zN0DgnJzhQADAQAAiXNlY3AyNTZrMaEC7mhYAjCIppsJ9or639Q6PJ7WaXnANksteNYHxCyhCBeDdGNwgj_Lg3VkcII_zYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-08_04-08-24__f77a6a8a-8367-4dcf-b354-4109d734045f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.131.168
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['14641', '14642', '14643', '14644', '14645']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 14641:14641 -p 14642:14642 -p 14643:14643 -p 14644:14644 -p 14645:14645 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=14643 --rest-port=14641 --tcp-port=14642 --discv5-udp-port=14644 --rest-address=0.0.0.0 --nat=extip:172.18.131.168 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=3b3e9f3d826a5efdad3c2f7bfe60612dcae9c3fcbabb4f8722f2edb15a3bf56e --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=14645 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QI0IUIF6TpHZfYopwa-V0QJcwKetxDSNnpOlfIG3iaAsMd3XQvUtMCgOPjf-oFJq67sZnX3USZ4C5sCOHn27lioCgmlkgnY0gmlwhKwSlamKbXVsdGlhZGRyc5YACASsEpWpBj_LAAoErBKVqQY_zN0DgnJzhQADAQAAiXNlY3AyNTZrMaEC7mhYAjCIppsJ9or639Q6PJ7WaXnANksteNYHxCyhCBeDdGNwgj_Lg3VkcII_zYV3YWt1MgU --filternode=/ip4/172.18.149.169/tcp/16331/p2p/16Uiu2HAmBUKJ25HZ1KDWtxi2g5zX5VfYCHCDCotFXx2DTmogutGv
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.131.168 waku 9c332ef3cfae3f7eef2850d844cf2cd7fd8463baa2184292f0ebda7d67ddd247
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 9c332ef3cfae. Setting up logs at ./log/docker/node2_2024-11-08_04-08-24__f77a6a8a-8367-4dcf-b354-4109d734045f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 14641
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:14641/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:14641/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.131.168/tcp/14642/p2p/16Uiu2HAmERk5Fp8434sFVGxcupb6gGEuS2zYAxivuhyojLFsq92T","/ip4/172.18.131.168/tcp/14643/ws/p2p/16Uiu2HAmERk5Fp8434sFVGxcupb6gGEuS2zYAxivuhyojLFsq92T"],"enrUri":"enr:-L24QHkyWvKhknNCw9off2y1HfcJCE84z14e1D9egkFeFTD3TRe1EUPSvF7G8Y2Et9IIvuDznHMvRiq8RRIzvzZEg9ECgmlkgnY0gmlwhKwSg6iKbXVsdGlhZGRyc5YACASsEoOoBjkyAAoErBKDqAY5M90DgnJzhQADAQAAiXNlY3AyNTZrMaEDGlKuUBcd9hoQr5SdykWDGAjn9eELDU3NcdHbZJ1QapSDdGNwgjkyg3VkcII5NIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:14641/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.149.169/tcp/16331/p2p/16Uiu2HAmBUKJ25HZ1KDWtxi2g5zX5VfYCHCDCotFXx2DTmogutGv"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:16330/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:14641/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "20d9de8c-689c-4acc-90cb-c205e61237ac", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"20d9de8c-689c-4acc-90cb-c205e61237ac","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:14641/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:14641/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id a8b7edab6a12
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 9c332ef3cfae
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container a8b7edab6a12. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.