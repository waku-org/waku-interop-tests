[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_invalid_version with id: 2024-09-11_04-27-12__7413bfc4-81ba-47ab-9736-2315753019dd
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-09-11_04-27-12__7413bfc4-81ba-47ab-9736-2315753019dd__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.162.30
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['10748', '10749', '10750', '10751', '10752']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 10748:10748 -p 10749:10749 -p 10750:10750 -p 10751:10751 -p 10752:10752 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=10750 --rest-port=10748 --tcp-port=10749 --discv5-udp-port=10751 --rest-address=0.0.0.0 --nat=extip:172.18.162.30 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=04bd459e0beabbe36121012eebaccfed85e5c8bee3ebed48bada8a4005eced0d --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=10752 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.162.30 waku 73562c9f09fab0af2c48102e28f0095498baef239cbbaaa8a4b9a70c71949e11
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 73562c9f09fa. Setting up logs at ./log/docker/node1_2024-09-11_04-27-12__7413bfc4-81ba-47ab-9736-2315753019dd__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 10748
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10748/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10748/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.162.30/tcp/10749/p2p/16Uiu2HAmVirUDYmwgRPRfuY3iteFRSTGpQP35upVARpJ145KRvqb","/ip4/172.18.162.30/tcp/10750/ws/p2p/16Uiu2HAmVirUDYmwgRPRfuY3iteFRSTGpQP35upVARpJ145KRvqb"],"enrUri":"enr:-LO4QJoPsl47FeGPXVbHuxCGlPJYzL0trMrKFtb49UVPle94QKPq4x6_5rA80xhMi9P1v4Ol9DR3d4QHg6HUifYXUEsBgmlkgnY0gmlwhKwSoh6KbXVsdGlhZGRyc4wACgSsEqIeBin-3QOCcnOFAAMBAACJc2VjcDI1NmsxoQP9lBckluXX8sYopv58uEfNzUabPTwgZ7oEVM0pvk-qloN0Y3CCKf2DdWRwgin_hXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-09-11_04-27-12__7413bfc4-81ba-47ab-9736-2315753019dd__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.143.42
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['56835', '56836', '56837', '56838', '56839']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 56835:56835 -p 56836:56836 -p 56837:56837 -p 56838:56838 -p 56839:56839 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=56837 --rest-port=56835 --tcp-port=56836 --discv5-udp-port=56838 --rest-address=0.0.0.0 --nat=extip:172.18.143.42 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=d03a95076e71a29b7d97bd453fc4328e775f31afbdd58f06dbf3db4c0f67513f --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=56839 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QJoPsl47FeGPXVbHuxCGlPJYzL0trMrKFtb49UVPle94QKPq4x6_5rA80xhMi9P1v4Ol9DR3d4QHg6HUifYXUEsBgmlkgnY0gmlwhKwSoh6KbXVsdGlhZGRyc4wACgSsEqIeBin-3QOCcnOFAAMBAACJc2VjcDI1NmsxoQP9lBckluXX8sYopv58uEfNzUabPTwgZ7oEVM0pvk-qloN0Y3CCKf2DdWRwgin_hXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.143.42 waku 0be96feebdd3f262996f9602e95da7ef4cb884743b9e22018dfdb5c1087b435b
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 0be96feebdd3. Setting up logs at ./log/docker/node2_2024-09-11_04-27-12__7413bfc4-81ba-47ab-9736-2315753019dd__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 56835
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:56835/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:56835/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.143.42/tcp/56836/p2p/16Uiu2HAkzf4T8Lq3bfv37bxX6xdUDDpb1rW8LDY8LYTHojLApp4s","/ip4/172.18.143.42/tcp/56837/ws/p2p/16Uiu2HAkzf4T8Lq3bfv37bxX6xdUDDpb1rW8LDY8LYTHojLApp4s"],"enrUri":"enr:-LO4QJwiHz75_TOEp17-8_c1iWkUEaLHWzZZiPIuytf-D_pKQwCyplyiwQqDyHqLPVAD_zc-0wVX99JjvMd_Dqd5FSIBgmlkgnY0gmlwhKwSjyqKbXVsdGlhZGRyc4wACgSsEo8qBt4F3QOCcnOFAAMBAACJc2VjcDI1NmsxoQJNuGS8a-MKfQO4rumZqQY6ARLk8wBV0VOjpPpo25jpxIN0Y3CC3gSDdWRwgt4GhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:56835/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.162.30/tcp/10749/p2p/16Uiu2HAmVirUDYmwgRPRfuY3iteFRSTGpQP35upVARpJ145KRvqb"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:10748/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:56835/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:10748/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10748/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1726028836362036736,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:56835/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1726028836362036736,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:10748/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)', "version": 2.1}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:10748/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 73562c9f09fa
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 0be96feebdd3
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.