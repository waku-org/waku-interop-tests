[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2025-01-17_04-02-53__35d5f8ae-5ae8-4c9c-a7de-7ab43677ab06
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-17_04-02-53__35d5f8ae-5ae8-4c9c-a7de-7ab43677ab06__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.106.44
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['19801', '19802', '19803', '19804', '19805']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 19801:19801 -p 19802:19802 -p 19803:19803 -p 19804:19804 -p 19805:19805 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=19803 --rest-port=19801 --tcp-port=19802 --discv5-udp-port=19804 --rest-address=0.0.0.0 --nat=extip:172.18.106.44 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=8b42febc817c0880d2a342c20b531873baa6efe9b2fd6c083c494b319ba5b6df --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=19805 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.106.44 waku ba06f63054d6232ecf36c97d484064dd8a025c8b0bea6523aef9a6ee87a1352e
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID ba06f63054d6. Setting up logs at ./log/docker/node1_2025-01-17_04-02-53__35d5f8ae-5ae8-4c9c-a7de-7ab43677ab06__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 19801
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 0ad20f0d8d97. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:19801/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:19801/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.106.44/tcp/19802/p2p/16Uiu2HAm8G3cgYtqqYz8WKf2aRqvEE4sfFHtiGTWiCh51R6gyeGP","/ip4/172.18.106.44/tcp/19803/ws/p2p/16Uiu2HAm8G3cgYtqqYz8WKf2aRqvEE4sfFHtiGTWiCh51R6gyeGP"],"enrUri":"enr:-L24QI5A9raLofSbrTlD5rLidO4aVlQRgjHN_aPZEWATJ1sEWc4vQUh8XcEZsxHQAxkz4Ioz96bydCr6rS69GJ2Xj4UCgmlkgnY0gmlwhKwSaiyKbXVsdGlhZGRyc5YACASsEmosBk1aAAoErBJqLAZNW90DgnJzhQADAQAAiXNlY3AyNTZrMaECvrCV_B7Plx_sI4KOh1-bhYI0y-RXpjwUFqZiGMEr-gCDdGNwgk1ag3VkcIJNXIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-17_04-02-53__35d5f8ae-5ae8-4c9c-a7de-7ab43677ab06__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.211.122
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['42902', '42903', '42904', '42905', '42906']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 42902:42902 -p 42903:42903 -p 42904:42904 -p 42905:42905 -p 42906:42906 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=42904 --rest-port=42902 --tcp-port=42903 --discv5-udp-port=42905 --rest-address=0.0.0.0 --nat=extip:172.18.211.122 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=62a42a67ef4f1b53e6c2ad1fab7cf23fa12b04f2beb2de17b70c8ac74bd99f2d --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=42906 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QI5A9raLofSbrTlD5rLidO4aVlQRgjHN_aPZEWATJ1sEWc4vQUh8XcEZsxHQAxkz4Ioz96bydCr6rS69GJ2Xj4UCgmlkgnY0gmlwhKwSaiyKbXVsdGlhZGRyc5YACASsEmosBk1aAAoErBJqLAZNW90DgnJzhQADAQAAiXNlY3AyNTZrMaECvrCV_B7Plx_sI4KOh1-bhYI0y-RXpjwUFqZiGMEr-gCDdGNwgk1ag3VkcIJNXIV3YWt1MgU --filternode=/ip4/172.18.106.44/tcp/19802/p2p/16Uiu2HAm8G3cgYtqqYz8WKf2aRqvEE4sfFHtiGTWiCh51R6gyeGP
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.211.122 waku fe738f7ff5b6d7aedb7a638a4336733d33917c905f2d8b44193ce3e34704044e
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID fe738f7ff5b6. Setting up logs at ./log/docker/node2_2025-01-17_04-02-53__35d5f8ae-5ae8-4c9c-a7de-7ab43677ab06__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 42902
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:42902/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:42902/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.211.122/tcp/42903/p2p/16Uiu2HAm23n89UrMC2qyEDvVpbGm19d452QXfkPAC42HyKq1CYUr","/ip4/172.18.211.122/tcp/42904/ws/p2p/16Uiu2HAm23n89UrMC2qyEDvVpbGm19d452QXfkPAC42HyKq1CYUr"],"enrUri":"enr:-L24QLCJqY0_LnudwpRxYMEJlmx3muSWht8x-adb748WDgFXFkaa-VVTbMlr10uDA7r7EUB1Uk3nnugGiLcmFTCWUEcCgmlkgnY0gmlwhKwS03qKbXVsdGlhZGRyc5YACASsEtN6BqeXAAoErBLTeganmN0DgnJzhQADAQAAiXNlY3AyNTZrMaECYmX6TkuU7LtCz_y8nI7LAian9cta2FfeZN4K6hh3peODdGNwgqeXg3VkcIKnmYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:42902/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.106.44/tcp/19802/p2p/16Uiu2HAm8G3cgYtqqYz8WKf2aRqvEE4sfFHtiGTWiCh51R6gyeGP"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:19801/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:42902/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "6604176f-3d05-4186-9e53-1adcdb41d6f6", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"6604176f-3d05-4186-9e53-1adcdb41d6f6","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:42902/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:42902/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id ba06f63054d6
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id fe738f7ff5b6
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container ba06f63054d6. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.