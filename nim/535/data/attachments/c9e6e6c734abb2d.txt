[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_no_request_id with id: 2024-12-22_04-10-50__bf4b0244-e5d3-41fe-a785-1cdc5fe778b1
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-22_04-10-50__bf4b0244-e5d3-41fe-a785-1cdc5fe778b1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.160.82
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['62169', '62170', '62171', '62172', '62173']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 62169:62169 -p 62170:62170 -p 62171:62171 -p 62172:62172 -p 62173:62173 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=62171 --rest-port=62169 --tcp-port=62170 --discv5-udp-port=62172 --rest-address=0.0.0.0 --nat=extip:172.18.160.82 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=00a53f2f22fac66b6c6ac3f39aca3ed5e71444dec0afe829a2a49df0ff2ac191 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=62173 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.160.82 waku a5a27abaddb16123fcddd04a8691cd3edd530ae43ddebd4537ea55f671ad1419
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID a5a27abaddb1. Setting up logs at ./log/docker/node1_2024-12-22_04-10-50__bf4b0244-e5d3-41fe-a785-1cdc5fe778b1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 62169
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 58be24ad492d. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:62169/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:62169/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.160.82/tcp/62170/p2p/16Uiu2HAmLQuoMP6FaoDHYGdU67pkZtg1WZ4TBgKfBxwG8MofBc3J","/ip4/172.18.160.82/tcp/62171/ws/p2p/16Uiu2HAmLQuoMP6FaoDHYGdU67pkZtg1WZ4TBgKfBxwG8MofBc3J"],"enrUri":"enr:-L24QPOvTvCLoIi-V9PCOBPJfH_5f06lSgdx8ptcgG2ZyyscaCJM7sTD803F1arfXNKBp3Va8q3tcW-A6WpmLO2WzFoCgmlkgnY0gmlwhKwSoFKKbXVsdGlhZGRyc5YACASsEqBSBvLaAAoErBKgUgby290DgnJzhQADAQAAiXNlY3AyNTZrMaEDc0I3-VIqFGD9IIJKzPBDQpJiwDCDEHbuQ16TFXUD4qGDdGNwgvLag3VkcILy3IV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-22_04-10-50__bf4b0244-e5d3-41fe-a785-1cdc5fe778b1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.36.229
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['26668', '26669', '26670', '26671', '26672']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 26668:26668 -p 26669:26669 -p 26670:26670 -p 26671:26671 -p 26672:26672 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=26670 --rest-port=26668 --tcp-port=26669 --discv5-udp-port=26671 --rest-address=0.0.0.0 --nat=extip:172.18.36.229 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ba7b92670af392aed475b16beaf7fe67c58dda68fbafa6c3ddfb828bcdc8a3c2 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=26672 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QPOvTvCLoIi-V9PCOBPJfH_5f06lSgdx8ptcgG2ZyyscaCJM7sTD803F1arfXNKBp3Va8q3tcW-A6WpmLO2WzFoCgmlkgnY0gmlwhKwSoFKKbXVsdGlhZGRyc5YACASsEqBSBvLaAAoErBKgUgby290DgnJzhQADAQAAiXNlY3AyNTZrMaEDc0I3-VIqFGD9IIJKzPBDQpJiwDCDEHbuQ16TFXUD4qGDdGNwgvLag3VkcILy3IV3YWt1MgU --filternode=/ip4/172.18.160.82/tcp/62170/p2p/16Uiu2HAmLQuoMP6FaoDHYGdU67pkZtg1WZ4TBgKfBxwG8MofBc3J
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.36.229 waku dae2c922bf58ae23d323d0178d75877042c6178551f9bc83deea377f929ba533
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID dae2c922bf58. Setting up logs at ./log/docker/node2_2024-12-22_04-10-50__bf4b0244-e5d3-41fe-a785-1cdc5fe778b1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 26668
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:26668/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:26668/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.36.229/tcp/26669/p2p/16Uiu2HAmTKPARmoyvDL63GMi3FsNHFAbWeHez2a3P8fgTz86vqXy","/ip4/172.18.36.229/tcp/26670/ws/p2p/16Uiu2HAmTKPARmoyvDL63GMi3FsNHFAbWeHez2a3P8fgTz86vqXy"],"enrUri":"enr:-L24QNYdJfWUZXGKVWq7V1TIjpWCZ95F79DTP7oooiB5UJ4iBP-aSA5wVDoxOD_dRuMB_G6JrPBWu4gyfHJdPWZLyT4CgmlkgnY0gmlwhKwSJOWKbXVsdGlhZGRyc5YACASsEiTlBmgtAAoErBIk5QZoLt0DgnJzhQADAQAAiXNlY3AyNTZrMaED2dl7bc5FfEABhJ7cidFV9j3hfhwuuIqYwJNp76sjBPyDdGNwgmgtg3VkcIJoL4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:26668/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.160.82/tcp/62170/p2p/16Uiu2HAmLQuoMP6FaoDHYGdU67pkZtg1WZ4TBgKfBxwG8MofBc3J"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:62169/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:26668/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "d049a082-6580-4572-8b44-555878ecd4e8", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"d049a082-6580-4572-8b44-555878ecd4e8","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:26668/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:26668/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id a5a27abaddb1
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id dae2c922bf58
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container a5a27abaddb1. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.