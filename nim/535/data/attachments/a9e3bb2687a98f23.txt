[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_invalid_request_id with id: 2024-12-22_04-10-51__45167972-d247-4fc7-819b-f211622e6b18
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-22_04-10-51__45167972-d247-4fc7-819b-f211622e6b18__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.213.251
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['33969', '33970', '33971', '33972', '33973']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 33969:33969 -p 33970:33970 -p 33971:33971 -p 33972:33972 -p 33973:33973 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=33971 --rest-port=33969 --tcp-port=33970 --discv5-udp-port=33972 --rest-address=0.0.0.0 --nat=extip:172.18.213.251 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=016f87d3af0dbf8c33eec4be5a10214cdaee1eebb189afed7e1e5d2dd65ba704 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=33973 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.213.251 waku 763d1107c2f1c1662409b68ee32778f24484b7e0ff58632e32934f4b27545649
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 763d1107c2f1. Setting up logs at ./log/docker/node1_2024-12-22_04-10-51__45167972-d247-4fc7-819b-f211622e6b18__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 33969
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 5452183a443e. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33969/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33969/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.213.251/tcp/33970/p2p/16Uiu2HAmR8gLqrp91BsdRq6M1Cj2E8UkfA1Wb8f7YQhp9yixqMh1","/ip4/172.18.213.251/tcp/33971/ws/p2p/16Uiu2HAmR8gLqrp91BsdRq6M1Cj2E8UkfA1Wb8f7YQhp9yixqMh1"],"enrUri":"enr:-L24QG9YUFOqKIiY6s48tsUIoaUYEm7GQIvs18EJM1WfF-emWWGStBae63lv7FJVgEp4UUqJah9FgrGkAJ6oW-2hu34CgmlkgnY0gmlwhKwS1fuKbXVsdGlhZGRyc5YACASsEtX7BoSyAAoErBLV-waEs90DgnJzhQADAQAAiXNlY3AyNTZrMaEDuWQk90AfM8hhBsm9Mz1-3oBMxe-h6dMaCJ3diQO4gXCDdGNwgoSyg3VkcIKEtIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-22_04-10-51__45167972-d247-4fc7-819b-f211622e6b18__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.84.90
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['13436', '13437', '13438', '13439', '13440']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 13436:13436 -p 13437:13437 -p 13438:13438 -p 13439:13439 -p 13440:13440 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=13438 --rest-port=13436 --tcp-port=13437 --discv5-udp-port=13439 --rest-address=0.0.0.0 --nat=extip:172.18.84.90 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=87c3639f2f39dd21c27e257b70fdd497fe7e6b1cf31e79feeec68cd4714a8bfe --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=13440 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QG9YUFOqKIiY6s48tsUIoaUYEm7GQIvs18EJM1WfF-emWWGStBae63lv7FJVgEp4UUqJah9FgrGkAJ6oW-2hu34CgmlkgnY0gmlwhKwS1fuKbXVsdGlhZGRyc5YACASsEtX7BoSyAAoErBLV-waEs90DgnJzhQADAQAAiXNlY3AyNTZrMaEDuWQk90AfM8hhBsm9Mz1-3oBMxe-h6dMaCJ3diQO4gXCDdGNwgoSyg3VkcIKEtIV3YWt1MgU --filternode=/ip4/172.18.213.251/tcp/33970/p2p/16Uiu2HAmR8gLqrp91BsdRq6M1Cj2E8UkfA1Wb8f7YQhp9yixqMh1
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.84.90 waku ce7797a4a4e5cc46750feed26fb44c8b13c6a53905a739c9e09845d62fb3a34f
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID ce7797a4a4e5. Setting up logs at ./log/docker/node2_2024-12-22_04-10-51__45167972-d247-4fc7-819b-f211622e6b18__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 13436
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:13436/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:13436/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.84.90/tcp/13437/p2p/16Uiu2HAmDDYVXKh766RvU5QzdNMhH9FXsR2p5hDqqr4duDxZAc2i","/ip4/172.18.84.90/tcp/13438/ws/p2p/16Uiu2HAmDDYVXKh766RvU5QzdNMhH9FXsR2p5hDqqr4duDxZAc2i"],"enrUri":"enr:-L24QM3ubLPI7YsWsFtcHotGqHOJq1mLNGeopeP9MIM1NBU_V4Bvheh-TMLaZzSEzT66-1DvPXv8ph4JRcPh9NvFXBICgmlkgnY0gmlwhKwSVFqKbXVsdGlhZGRyc5YACASsElRaBjR9AAoErBJUWgY0ft0DgnJzhQADAQAAiXNlY3AyNTZrMaEDCFbtzc3N38AR792gg_ddWkLKbXkXAHqA_awmuOpYoheDdGNwgjR9g3VkcII0f4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:13436/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.213.251/tcp/33970/p2p/16Uiu2HAmR8gLqrp91BsdRq6M1Cj2E8UkfA1Wb8f7YQhp9yixqMh1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:33969/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:13436/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "6dfce5d2-2a4d-446a-bd0d-7eb275a03d3f", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"6dfce5d2-2a4d-446a-bd0d-7eb275a03d3f","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:13436/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:13436/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 763d1107c2f1
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id ce7797a4a4e5
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 763d1107c2f1. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.