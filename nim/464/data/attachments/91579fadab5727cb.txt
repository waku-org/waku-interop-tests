[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_no_request_id with id: 2024-11-26_04-14-54__77bf3585-35cb-42be-8623-b0d1a5145d29
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-26_04-14-54__77bf3585-35cb-42be-8623-b0d1a5145d29__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.217.148
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['38303', '38304', '38305', '38306', '38307']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 38303:38303 -p 38304:38304 -p 38305:38305 -p 38306:38306 -p 38307:38307 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=38305 --rest-port=38303 --tcp-port=38304 --discv5-udp-port=38306 --rest-address=0.0.0.0 --nat=extip:172.18.217.148 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=2a95510e24894c79470eafccab441c843c9e77fdacda4d56df7076e327cac8fd --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=38307 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.217.148 waku 13c94f94b0c307f8110e1ce5b43d7334da670babef660e4ad1c4dd3b7bdfdc8f
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 13c94f94b0c3. Setting up logs at ./log/docker/node1_2024-11-26_04-14-54__77bf3585-35cb-42be-8623-b0d1a5145d29__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 38303
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container db77a38a7241. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38303/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38303/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.217.148/tcp/38304/p2p/16Uiu2HAm7qHRCBetR5RenW7WKh9CiR91FDc3h1eZKLhRSTok1FzD","/ip4/172.18.217.148/tcp/38305/ws/p2p/16Uiu2HAm7qHRCBetR5RenW7WKh9CiR91FDc3h1eZKLhRSTok1FzD"],"enrUri":"enr:-L24QNwTXco7kI8qhaymtl3KMTnyug3hZYC5S6GEbQKvWHmyLDwqD2AbOcGU_WxDq2vSsPmiEZNmT0zscdTFnyHr6LYCgmlkgnY0gmlwhKwS2ZSKbXVsdGlhZGRyc5YACASsEtmUBpWgAAoErBLZlAaVod0DgnJzhQADAQAAiXNlY3AyNTZrMaECuFir6PntiVJ1JQgnoz_PrHYgLOb_wDD1ffF8T32ERl6DdGNwgpWgg3VkcIKVooV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-26_04-14-54__77bf3585-35cb-42be-8623-b0d1a5145d29__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.173.198
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['51938', '51939', '51940', '51941', '51942']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 51938:51938 -p 51939:51939 -p 51940:51940 -p 51941:51941 -p 51942:51942 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=51940 --rest-port=51938 --tcp-port=51939 --discv5-udp-port=51941 --rest-address=0.0.0.0 --nat=extip:172.18.173.198 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b2e2eaf2932e383fbdda57be2faaf2f72a1fb8dc2ecb5b6440cd6eb8df2b7d78 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=51942 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QNwTXco7kI8qhaymtl3KMTnyug3hZYC5S6GEbQKvWHmyLDwqD2AbOcGU_WxDq2vSsPmiEZNmT0zscdTFnyHr6LYCgmlkgnY0gmlwhKwS2ZSKbXVsdGlhZGRyc5YACASsEtmUBpWgAAoErBLZlAaVod0DgnJzhQADAQAAiXNlY3AyNTZrMaECuFir6PntiVJ1JQgnoz_PrHYgLOb_wDD1ffF8T32ERl6DdGNwgpWgg3VkcIKVooV3YWt1MgU --filternode=/ip4/172.18.217.148/tcp/38304/p2p/16Uiu2HAm7qHRCBetR5RenW7WKh9CiR91FDc3h1eZKLhRSTok1FzD
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.173.198 waku 0eb570056c9ed44afe2a0742e22df0bd19d1235a4da42b0b28cfe2ea327ffa0b
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 0eb570056c9e. Setting up logs at ./log/docker/node2_2024-11-26_04-14-54__77bf3585-35cb-42be-8623-b0d1a5145d29__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 51938
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:51938/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:51938/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.173.198/tcp/51939/p2p/16Uiu2HAm7WzR4CPzPiHTeaDvvRhjfUzcRnjHSWtUYXKaYCBcWZFN","/ip4/172.18.173.198/tcp/51940/ws/p2p/16Uiu2HAm7WzR4CPzPiHTeaDvvRhjfUzcRnjHSWtUYXKaYCBcWZFN"],"enrUri":"enr:-L24QMdcJkzS4TyFSgaAPWht9LsGFczcvZPl0Beh2Bw49m4YVm0js1V8LTgpFcCIGAriglpKu6X2JQ-0fVBDhTEG_BsCgmlkgnY0gmlwhKwSrcaKbXVsdGlhZGRyc5YACASsEq3GBsrjAAoErBKtxgbK5N0DgnJzhQADAQAAiXNlY3AyNTZrMaECs6j-CFE2cTTz8pUdkMzLWwVqCFfhLFat8qSrVE-bvvmDdGNwgsrjg3VkcILK5YV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:51938/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.217.148/tcp/38304/p2p/16Uiu2HAm7qHRCBetR5RenW7WKh9CiR91FDc3h1eZKLhRSTok1FzD"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38303/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:51938/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "53b6e9b5-3cb8-4532-a98a-5b7bcb450b70", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"53b6e9b5-3cb8-4532-a98a-5b7bcb450b70","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:51938/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:51938/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 13c94f94b0c3
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 0eb570056c9e
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 13c94f94b0c3. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.