[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_invalid_meta with id: 2024-09-15_04-25-00__d81ca43e-2cbd-488e-b814-7087d7e188c0
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-09-15_04-25-00__d81ca43e-2cbd-488e-b814-7087d7e188c0__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.78.25
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['4101', '4102', '4103', '4104', '4105']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 4101:4101 -p 4102:4102 -p 4103:4103 -p 4104:4104 -p 4105:4105 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=4103 --rest-port=4101 --tcp-port=4102 --discv5-udp-port=4104 --rest-address=0.0.0.0 --nat=extip:172.18.78.25 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=4bfe1f23aaebf86afc567beee04afcdeefbbfb74f6e9005ed9f207ed7beea3f0 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=4105 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.78.25 waku 43dac70a2433abb9e19d1e0ed5f37e9ecac11acadd0cebf84de27e1e8566359f
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 43dac70a2433. Setting up logs at ./log/docker/node1_2024-09-15_04-25-00__d81ca43e-2cbd-488e-b814-7087d7e188c0__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 4101
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:4101/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:4101/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.78.25/tcp/4102/p2p/16Uiu2HAm4J4cBCyVFUSM8Ayj4F15Dsa57EbCNiJaCsohZDLPSMAf","/ip4/172.18.78.25/tcp/4103/ws/p2p/16Uiu2HAm4J4cBCyVFUSM8Ayj4F15Dsa57EbCNiJaCsohZDLPSMAf"],"enrUri":"enr:-LO4QDRLDv7aL4bRhsXkIgRwtC9YX4ORlEe_9pyEThSUQET9P8POMCbavt-Yn15cjmmq9dUZuM1szT_H5ZqJxuzqiuQBgmlkgnY0gmlwhKwSThmKbXVsdGlhZGRyc4wACgSsEk4ZBhAH3QOCcnOFAAMBAACJc2VjcDI1NmsxoQKDxh7huSRQtgyMADVD9qNGZIPFkLgrNXBAxLKv946wKIN0Y3CCEAaDdWRwghAIhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-09-15_04-25-00__d81ca43e-2cbd-488e-b814-7087d7e188c0__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.148.34
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['4437', '4438', '4439', '4440', '4441']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 4437:4437 -p 4438:4438 -p 4439:4439 -p 4440:4440 -p 4441:4441 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=4439 --rest-port=4437 --tcp-port=4438 --discv5-udp-port=4440 --rest-address=0.0.0.0 --nat=extip:172.18.148.34 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=5ab5fae7bfea82af1bdc9f5a75f1aa3c1e1eacfc0ca6eeead6eeb8fa83cdcff2 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=4441 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QDRLDv7aL4bRhsXkIgRwtC9YX4ORlEe_9pyEThSUQET9P8POMCbavt-Yn15cjmmq9dUZuM1szT_H5ZqJxuzqiuQBgmlkgnY0gmlwhKwSThmKbXVsdGlhZGRyc4wACgSsEk4ZBhAH3QOCcnOFAAMBAACJc2VjcDI1NmsxoQKDxh7huSRQtgyMADVD9qNGZIPFkLgrNXBAxLKv946wKIN0Y3CCEAaDdWRwghAIhXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.148.34 waku 5b17e5b9f232af83bbff1deec3c63ee6cc54f62c00698d9638e1369af9b96cab
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 5b17e5b9f232. Setting up logs at ./log/docker/node2_2024-09-15_04-25-00__d81ca43e-2cbd-488e-b814-7087d7e188c0__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 4437
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:4437/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:4437/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.148.34/tcp/4438/p2p/16Uiu2HAm1CzDbntFBpDfaDRkWNmzJzky3kGk2NDdVKCd5gYJhmb8","/ip4/172.18.148.34/tcp/4439/ws/p2p/16Uiu2HAm1CzDbntFBpDfaDRkWNmzJzky3kGk2NDdVKCd5gYJhmb8"],"enrUri":"enr:-LO4QMT9crSjI3PoBK0jOXeLkmFIM47UarRFtD5XzKSPdD19OSsATp2RX8wEAVI74xzHMUS9y7qujZth5S4XkKxiqfMBgmlkgnY0gmlwhKwSlCKKbXVsdGlhZGRyc4wACgSsEpQiBhFX3QOCcnOFAAMBAACJc2VjcDI1NmsxoQJV5jFgLZGoE4OOPXttDX13eVKdqQS4i_dTfsyzFQEkW4N0Y3CCEVaDdWRwghFYhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:4437/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.78.25/tcp/4102/p2p/16Uiu2HAm4J4cBCyVFUSM8Ayj4F15Dsa57EbCNiJaCsohZDLPSMAf"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:4101/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:4437/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:4101/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:4101/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1726374304840656896,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:4437/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1726374304840656896,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:4101/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)', "meta": "Relay works!!"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:4101/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Incorrect base64 string'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 43dac70a2433
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 5b17e5b9f232
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.