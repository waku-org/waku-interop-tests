[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_extra_field with id: 2024-12-12_09-07-13__401a3087-3180-469f-a59a-eafc3f11217e
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-12_09-07-13__401a3087-3180-469f-a59a-eafc3f11217e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.108.154
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['56600', '56601', '56602', '56603', '56604']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 56600:56600 -p 56601:56601 -p 56602:56602 -p 56603:56603 -p 56604:56604 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=56602 --rest-port=56600 --tcp-port=56601 --discv5-udp-port=56603 --rest-address=0.0.0.0 --nat=extip:172.18.108.154 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=949768fc6cda9dedba0315babaeb4edee2acaaed43f30f5cfeefd0bae4fdccba --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=56604 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.108.154 waku 4f9694293e78fb9711d489db79fd398bda1ccf6382795e6c86c826788911e6a8
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 4f9694293e78. Setting up logs at ./log/docker/node1_2024-12-12_09-07-13__401a3087-3180-469f-a59a-eafc3f11217e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 56600
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container c9b7a965c372. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:56600/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:56600/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.108.154/tcp/56601/p2p/16Uiu2HAmFYqz2CijX2p68m2KB5EoK34dBYCjM8sq554i26TmRaxF","/ip4/172.18.108.154/tcp/56602/ws/p2p/16Uiu2HAmFYqz2CijX2p68m2KB5EoK34dBYCjM8sq554i26TmRaxF"],"enrUri":"enr:-L24QBZZB_XUdfi1XPvg5MFSLXQDyOVRhnjFkcnK63QVFq4oS1JB-jB11gyNzSN44Z_sbfaVJXmONx0j7wtviKWIY-0CgmlkgnY0gmlwhKwSbJqKbXVsdGlhZGRyc5YACASsEmyaBt0ZAAoErBJsmgbdGt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDKwAdnK0FMGs8BrBBqwj19GO9uPLv9lIXv7fcGsOsM6iDdGNwgt0Zg3VkcILdG4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-12_09-07-13__401a3087-3180-469f-a59a-eafc3f11217e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.67.171
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['47410', '47411', '47412', '47413', '47414']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 47410:47410 -p 47411:47411 -p 47412:47412 -p 47413:47413 -p 47414:47414 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=47412 --rest-port=47410 --tcp-port=47411 --discv5-udp-port=47413 --rest-address=0.0.0.0 --nat=extip:172.18.67.171 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=9d593eaedaea73ce4ba8c9dc4b87fb5bfd05f724fdbc0ffecbfdfe1ebaaf5dad --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=47414 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QBZZB_XUdfi1XPvg5MFSLXQDyOVRhnjFkcnK63QVFq4oS1JB-jB11gyNzSN44Z_sbfaVJXmONx0j7wtviKWIY-0CgmlkgnY0gmlwhKwSbJqKbXVsdGlhZGRyc5YACASsEmyaBt0ZAAoErBJsmgbdGt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDKwAdnK0FMGs8BrBBqwj19GO9uPLv9lIXv7fcGsOsM6iDdGNwgt0Zg3VkcILdG4V3YWt1MgU --filternode=/ip4/172.18.108.154/tcp/56601/p2p/16Uiu2HAmFYqz2CijX2p68m2KB5EoK34dBYCjM8sq554i26TmRaxF
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.67.171 waku be52524b9caf74cbe4a246cef6e49e61556b9e9fbb3f94d9df4861b31b9cd743
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID be52524b9caf. Setting up logs at ./log/docker/node2_2024-12-12_09-07-13__401a3087-3180-469f-a59a-eafc3f11217e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 47410
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:47410/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:47410/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.67.171/tcp/47411/p2p/16Uiu2HAmE5oRoZoY3qhoPVzhjFkA1FEuBZyJ1BEUuD9CFL8fHYAe","/ip4/172.18.67.171/tcp/47412/ws/p2p/16Uiu2HAmE5oRoZoY3qhoPVzhjFkA1FEuBZyJ1BEUuD9CFL8fHYAe"],"enrUri":"enr:-L24QHjoS1XbQYIWK45T5f1xOaqcV-_ysxw2L41UJS369XdreCaQnpTsqSpDzN2HmKsohORcZY5N9ycAxyauMXPQruoCgmlkgnY0gmlwhKwSQ6uKbXVsdGlhZGRyc5YACASsEkOrBrkzAAoErBJDqwa5NN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDFTbbfzCEn9o5QwbNKPFOzGC7mA2ecxZQXsnML1X3aIuDdGNwgrkzg3VkcIK5NYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:47410/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.108.154/tcp/56601/p2p/16Uiu2HAmFYqz2CijX2p68m2KB5EoK34dBYCjM8sq554i26TmRaxF"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:56600/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:47410/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "9a6ef2fe-4e9e-43c6-ac1b-c69a667769ab", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"9a6ef2fe-4e9e-43c6-ac1b-c69a667769ab","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:47410/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:47410/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 4f9694293e78
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id be52524b9caf
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 4f9694293e78. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.