[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_invalid_request_id with id: 2024-12-12_09-07-40__ade55d26-2882-48f7-9f15-f8dc999c8322
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-12_09-07-40__ade55d26-2882-48f7-9f15-f8dc999c8322__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.228.163
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['51259', '51260', '51261', '51262', '51263']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 51259:51259 -p 51260:51260 -p 51261:51261 -p 51262:51262 -p 51263:51263 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=51261 --rest-port=51259 --tcp-port=51260 --discv5-udp-port=51262 --rest-address=0.0.0.0 --nat=extip:172.18.228.163 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=2a627f8c9cb5a397ffacad2debe1fbcdb7781784ece938c9b0dad59adce342d0 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=51263 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.228.163 waku fc1ccd4a3d41a11acd5bda49a9260044282d4bdbc577f8e7dbbe29bf4eb3a35d
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID fc1ccd4a3d41. Setting up logs at ./log/docker/node1_2024-12-12_09-07-40__ade55d26-2882-48f7-9f15-f8dc999c8322__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 51259
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 60ad0797e821. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:51259/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:51259/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.228.163/tcp/51260/p2p/16Uiu2HAm4ZgZbaQN9Ki8jSteoxfYtwUovZ2379r7Rm3FLKwX1XL8","/ip4/172.18.228.163/tcp/51261/ws/p2p/16Uiu2HAm4ZgZbaQN9Ki8jSteoxfYtwUovZ2379r7Rm3FLKwX1XL8"],"enrUri":"enr:-L24QPbOwd3WLz2exCni_qxBi8vpsAVjfqYb8rQBbWCocPbsVPxRG9xlJ_cZwjZmeXsMaf-u3VGvdQrtBO93NgoTrjwCgmlkgnY0gmlwhKwS5KOKbXVsdGlhZGRyc5YACASsEuSjBsg8AAoErBLkowbIPd0DgnJzhQADAQAAiXNlY3AyNTZrMaECh8Z84Ll9Jxx8zoV0SgUtoMTyGJeXzn8Oq4oniMM7MC2DdGNwgsg8g3VkcILIPoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-12_09-07-40__ade55d26-2882-48f7-9f15-f8dc999c8322__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.206.175
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['38402', '38403', '38404', '38405', '38406']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 38402:38402 -p 38403:38403 -p 38404:38404 -p 38405:38405 -p 38406:38406 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=38404 --rest-port=38402 --tcp-port=38403 --discv5-udp-port=38405 --rest-address=0.0.0.0 --nat=extip:172.18.206.175 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=f7eaffee25fdcecd9dea3ace02af7a75bcdefe4d8aff29e9a5bd431ff8dd914e --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=38406 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QPbOwd3WLz2exCni_qxBi8vpsAVjfqYb8rQBbWCocPbsVPxRG9xlJ_cZwjZmeXsMaf-u3VGvdQrtBO93NgoTrjwCgmlkgnY0gmlwhKwS5KOKbXVsdGlhZGRyc5YACASsEuSjBsg8AAoErBLkowbIPd0DgnJzhQADAQAAiXNlY3AyNTZrMaECh8Z84Ll9Jxx8zoV0SgUtoMTyGJeXzn8Oq4oniMM7MC2DdGNwgsg8g3VkcILIPoV3YWt1MgU --filternode=/ip4/172.18.228.163/tcp/51260/p2p/16Uiu2HAm4ZgZbaQN9Ki8jSteoxfYtwUovZ2379r7Rm3FLKwX1XL8
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.206.175 waku 0955a87c6cdaed9dc9e9b1d76d313b40156c384096ed109e0c68a0a207e56604
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 0955a87c6cda. Setting up logs at ./log/docker/node2_2024-12-12_09-07-40__ade55d26-2882-48f7-9f15-f8dc999c8322__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 38402
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38402/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38402/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.206.175/tcp/38403/p2p/16Uiu2HAmSKzaG3KX6G7FZrrrt58esovY3Z5w11W7jpSKLFmE8Nh6","/ip4/172.18.206.175/tcp/38404/ws/p2p/16Uiu2HAmSKzaG3KX6G7FZrrrt58esovY3Z5w11W7jpSKLFmE8Nh6"],"enrUri":"enr:-L24QBMLdpxjXsvyFVI0RWH-pNAMIBXi8zje8gpTjW2jrKGnNLj2ZeTqqfHMVkZZpjBtYyWWOF_sPfJEWeU2Wxamj0YCgmlkgnY0gmlwhKwSzq-KbXVsdGlhZGRyc5YACASsEs6vBpYDAAoErBLOrwaWBN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDyyXVnoW_kDBE9rYYV-nF-z2_mUJ5MWoVrskqj4ZBHHGDdGNwgpYDg3VkcIKWBYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38402/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.228.163/tcp/51260/p2p/16Uiu2HAm4ZgZbaQN9Ki8jSteoxfYtwUovZ2379r7Rm3FLKwX1XL8"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:51259/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38402/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "9452c607-49a5-4470-b7a1-768a3e153fbc", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"9452c607-49a5-4470-b7a1-768a3e153fbc","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:38402/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:38402/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id fc1ccd4a3d41
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 0955a87c6cda
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container fc1ccd4a3d41. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.