[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_no_request_id with id: 2024-09-30_04-17-42__cdf9c0a9-664b-4277-bbed-4eb01f0cf5b8
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-09-30_04-17-42__cdf9c0a9-664b-4277-bbed-4eb01f0cf5b8__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.121.16
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['7054', '7055', '7056', '7057', '7058']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 7054:7054 -p 7055:7055 -p 7056:7056 -p 7057:7057 -p 7058:7058 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=7056 --rest-port=7054 --tcp-port=7055 --discv5-udp-port=7057 --rest-address=0.0.0.0 --nat=extip:172.18.121.16 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=dcabed2cf30dd8dcb3492af14da97ffbae7dbc003fba0dce224efeeef954bcd3 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=7058 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.121.16 waku 3551d14db307298fa4dfc4e469f560366c23f7728741e70398ce7d2ef27a6cb6
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 3551d14db307. Setting up logs at ./log/docker/node1_2024-09-30_04-17-42__cdf9c0a9-664b-4277-bbed-4eb01f0cf5b8__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 7054
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7054/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7054/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.121.16/tcp/7055/p2p/16Uiu2HAmAKvCiVdZtmwvnSDnzRv14pbvud1K9rtzjTdBMYZyseug","/ip4/172.18.121.16/tcp/7056/ws/p2p/16Uiu2HAmAKvCiVdZtmwvnSDnzRv14pbvud1K9rtzjTdBMYZyseug"],"enrUri":"enr:-LO4QF0H881vPTfzhpP10idCM2CEAdiVT2An2m-DNj9Jv_MHX3fIMUPapPjcpRmuNOf7IYKvnHQG43HNYLtXBbRz1oEBgmlkgnY0gmlwhKwSeRCKbXVsdGlhZGRyc4wACgSsEnkQBhuQ3QOCcnOFAAMBAACJc2VjcDI1NmsxoQLdZeacAuwKJdr3Jk0juRqY_d0gmG7m3iR5ovZDZCerM4N0Y3CCG4-DdWRwghuRhXdha3UyBQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-09-30_04-17-42__cdf9c0a9-664b-4277-bbed-4eb01f0cf5b8__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.224.160
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['45801', '45802', '45803', '45804', '45805']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 45801:45801 -p 45802:45802 -p 45803:45803 -p 45804:45804 -p 45805:45805 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=45803 --rest-port=45801 --tcp-port=45802 --discv5-udp-port=45804 --rest-address=0.0.0.0 --nat=extip:172.18.224.160 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=1cfb4ed7fe46aff6aff9937ab320fe5dc13fc2cfefcdb7cebe1df6d9ffafbc4c --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=45805 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-LO4QF0H881vPTfzhpP10idCM2CEAdiVT2An2m-DNj9Jv_MHX3fIMUPapPjcpRmuNOf7IYKvnHQG43HNYLtXBbRz1oEBgmlkgnY0gmlwhKwSeRCKbXVsdGlhZGRyc4wACgSsEnkQBhuQ3QOCcnOFAAMBAACJc2VjcDI1NmsxoQLdZeacAuwKJdr3Jk0juRqY_d0gmG7m3iR5ovZDZCerM4N0Y3CCG4-DdWRwghuRhXdha3UyBQ --filternode=/ip4/172.18.121.16/tcp/7055/p2p/16Uiu2HAmAKvCiVdZtmwvnSDnzRv14pbvud1K9rtzjTdBMYZyseug
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.224.160 waku 785f0dd872d2e219169b58b00c34c834192f38b871556b7c3692aa11e6ad064f
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 785f0dd872d2. Setting up logs at ./log/docker/node2_2024-09-30_04-17-42__cdf9c0a9-664b-4277-bbed-4eb01f0cf5b8__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 45801
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:45801/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:45801/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.224.160/tcp/45802/p2p/16Uiu2HAmKRteBpYuuACQGMroezgWDw8dj5kUAgeMSUXQWBbQ7skY","/ip4/172.18.224.160/tcp/45803/ws/p2p/16Uiu2HAmKRteBpYuuACQGMroezgWDw8dj5kUAgeMSUXQWBbQ7skY"],"enrUri":"enr:-LO4QDTGcexbs_yU2D2I1xLu8NlorzeOQGjsjpwOnaKOvwQ4WLj9vQXpwC6XJn6ez4DLqFg3YNbHd2CnHJFP5jdITb8BgmlkgnY0gmlwhKwS4KCKbXVsdGlhZGRyc4wACgSsEuCgBrLr3QOCcnOFAAMBAACJc2VjcDI1NmsxoQNkps2b3USCb_n_eDe_k5XofxxnPSLwUZd2E-LWXI6JhYN0Y3CCsuqDdWRwgrLshXdha3UyAA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:45801/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.121.16/tcp/7055/p2p/16Uiu2HAmAKvCiVdZtmwvnSDnzRv14pbvud1K9rtzjTdBMYZyseug"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:7054/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:45801/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "14acbf5b-db52-4282-bf12-1c7af0733401", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"14acbf5b-db52-4282-bf12-1c7af0733401","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:45801/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:45801/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 3551d14db307
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 785f0dd872d2
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.