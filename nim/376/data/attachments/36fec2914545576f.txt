[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_missing_payload with id: 2024-09-30_04-22-47__35671bbb-c5b5-41ea-9964-b7d993b07540
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-09-30_04-22-47__35671bbb-c5b5-41ea-9964-b7d993b07540__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.32.5
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['61770', '61771', '61772', '61773', '61774']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 61770:61770 -p 61771:61771 -p 61772:61772 -p 61773:61773 -p 61774:61774 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=61772 --rest-port=61770 --tcp-port=61771 --discv5-udp-port=61773 --rest-address=0.0.0.0 --nat=extip:172.18.32.5 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=063082e6fb6660d7d68f0d4b161d4b830eabc1fe1daf7eead66d6b6ccad7ffe5 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=61774 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.32.5 waku e979f272d4302c68561f91d4827f634a265a7620410fd145d99e81d2a7dca7e1
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID e979f272d430. Setting up logs at ./log/docker/node1_2024-09-30_04-22-47__35671bbb-c5b5-41ea-9964-b7d993b07540__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 61770
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:61770/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:61770/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.32.5/tcp/61771/p2p/16Uiu2HAmU92PJ8aqHtM3vRMMrK29EdSLb3pmf3JgookTsqGS5FQW","/ip4/172.18.32.5/tcp/61772/ws/p2p/16Uiu2HAmU92PJ8aqHtM3vRMMrK29EdSLb3pmf3JgookTsqGS5FQW"],"enrUri":"enr:-LO4QO-bvjphi1bXyDcxP5YLvdjiSc_4hg0iKVQFENTKWiFVSFLJpC6TjeBZAOg6du0bPx11GXr_rlNv_DynryQoLzQBgmlkgnY0gmlwhKwSIAWKbXVsdGlhZGRyc4wACgSsEiAFBvFM3QOCcnOFAAMBAACJc2VjcDI1NmsxoQPmDd34PoON0I3o5w6XLYxPyh45ztxb4NnQcd90mwQ524N0Y3CC8UuDdWRwgvFNhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-09-30_04-22-47__35671bbb-c5b5-41ea-9964-b7d993b07540__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.113.251
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['8729', '8730', '8731', '8732', '8733']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 8729:8729 -p 8730:8730 -p 8731:8731 -p 8732:8732 -p 8733:8733 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=8731 --rest-port=8729 --tcp-port=8730 --discv5-udp-port=8732 --rest-address=0.0.0.0 --nat=extip:172.18.113.251 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=a999d0871ef678991fc09adf0aa30fadd15e9fdc6e4caba47cb06ab81f33bd4d --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=8733 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QO-bvjphi1bXyDcxP5YLvdjiSc_4hg0iKVQFENTKWiFVSFLJpC6TjeBZAOg6du0bPx11GXr_rlNv_DynryQoLzQBgmlkgnY0gmlwhKwSIAWKbXVsdGlhZGRyc4wACgSsEiAFBvFM3QOCcnOFAAMBAACJc2VjcDI1NmsxoQPmDd34PoON0I3o5w6XLYxPyh45ztxb4NnQcd90mwQ524N0Y3CC8UuDdWRwgvFNhXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.113.251 waku 8aeda509c7f7b6063ef75b0bec63a0d1420197b63d537b8cccfcd22edf4a9a72
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 8aeda509c7f7. Setting up logs at ./log/docker/node2_2024-09-30_04-22-47__35671bbb-c5b5-41ea-9964-b7d993b07540__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 8729
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8729/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8729/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.113.251/tcp/8730/p2p/16Uiu2HAkzckG8XQ2kQoBbw6paHQccTg9zExEh3zx8D4zofYPZsni","/ip4/172.18.113.251/tcp/8731/ws/p2p/16Uiu2HAkzckG8XQ2kQoBbw6paHQccTg9zExEh3zx8D4zofYPZsni"],"enrUri":"enr:-LO4QOwchIiRSn-9Hcj5nvjL-aake2QSqxfDVVW4CQxyy4tjODBfsvjIe1bdBd6GlsuV3EklU2yATYz134VqGiXSEXkBgmlkgnY0gmlwhKwScfuKbXVsdGlhZGRyc4wACgSsEnH7BiIb3QOCcnOFAAMBAACJc2VjcDI1NmsxoQJNIKoymCOcnNf-aXPzUsc5h8VenYU0Yl9xTz2nZIYto4N0Y3CCIhqDdWRwgiIchXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8729/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.32.5/tcp/61771/p2p/16Uiu2HAmU92PJ8aqHtM3vRMMrK29EdSLb3pmf3JgookTsqGS5FQW"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:61770/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8729/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:61770/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:61770/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1727670170525990400,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8729/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1727670170525990400,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:61770/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:61770/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id e979f272d430
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 8aeda509c7f7
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.