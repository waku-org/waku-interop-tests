[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_extra_field with id: 2024-10-23_12-49-35__6a7df930-1dcd-4af3-8a35-37fe015b6940
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-10-23_12-49-35__6a7df930-1dcd-4af3-8a35-37fe015b6940__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.245.232
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['62898', '62899', '62900', '62901', '62902']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 62898:62898 -p 62899:62899 -p 62900:62900 -p 62901:62901 -p 62902:62902 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=62900 --rest-port=62898 --tcp-port=62899 --discv5-udp-port=62901 --rest-address=0.0.0.0 --nat=extip:172.18.245.232 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ce3095dd39012b3f3d6ae4fa4ab65ffab4afe6ce01effc2dbe2db7eebdccca8d --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=62902 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.245.232 waku cac87f9f363fe724bdfb0bb1653de919a0affd846b5c0d4173056721013dbd02
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID cac87f9f363f. Setting up logs at ./log/docker/node1_2024-10-23_12-49-35__6a7df930-1dcd-4af3-8a35-37fe015b6940__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 62898
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 64c5fcdbe73e. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:62898/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:62898/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.245.232/tcp/62899/p2p/16Uiu2HAm2XrK7CNYTEeLe1BuBgCSKVHHM6XohgBUz6rSrHfb37wm","/ip4/172.18.245.232/tcp/62900/ws/p2p/16Uiu2HAm2XrK7CNYTEeLe1BuBgCSKVHHM6XohgBUz6rSrHfb37wm"],"enrUri":"enr:-LO4QImN4Ax6pz-nvAc4j8wF8RXmbtBXK-2jLI_y5gt_G3wXex6iBVNmUgxIZKpb_bS2VytiHoN8G_y_qTlG7noajL8BgmlkgnY0gmlwhKwS9eiKbXVsdGlhZGRyc4wACgSsEvXoBvW03QOCcnOFAAMBAACJc2VjcDI1NmsxoQJplvoWO9SXltgho5qOyDR7axiaiQ8NhuwxKwZAVyYm8IN0Y3CC9bODdWRwgvW1hXdha3UyBQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-10-23_12-49-35__6a7df930-1dcd-4af3-8a35-37fe015b6940__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.17.218
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['41805', '41806', '41807', '41808', '41809']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 41805:41805 -p 41806:41806 -p 41807:41807 -p 41808:41808 -p 41809:41809 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=41807 --rest-port=41805 --tcp-port=41806 --discv5-udp-port=41808 --rest-address=0.0.0.0 --nat=extip:172.18.17.218 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=123113ecf3dbb4cc0aed7668d72c0f8ab2c5b0baf4ffbe592e1b85a8b3ddddff --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=41809 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-LO4QImN4Ax6pz-nvAc4j8wF8RXmbtBXK-2jLI_y5gt_G3wXex6iBVNmUgxIZKpb_bS2VytiHoN8G_y_qTlG7noajL8BgmlkgnY0gmlwhKwS9eiKbXVsdGlhZGRyc4wACgSsEvXoBvW03QOCcnOFAAMBAACJc2VjcDI1NmsxoQJplvoWO9SXltgho5qOyDR7axiaiQ8NhuwxKwZAVyYm8IN0Y3CC9bODdWRwgvW1hXdha3UyBQ --filternode=/ip4/172.18.245.232/tcp/62899/p2p/16Uiu2HAm2XrK7CNYTEeLe1BuBgCSKVHHM6XohgBUz6rSrHfb37wm
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.17.218 waku da0bca080b206eb7b1d7370e485698f07ebd8c88af73a0a79c6698f65deaa3c6
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID da0bca080b20. Setting up logs at ./log/docker/node2_2024-10-23_12-49-35__6a7df930-1dcd-4af3-8a35-37fe015b6940__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 41805
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41805/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41805/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.17.218/tcp/41806/p2p/16Uiu2HAmNyEqMegHS9Ay8ydnDx4Ws98L8QtepVcsN7GKUmyJoi6p","/ip4/172.18.17.218/tcp/41807/ws/p2p/16Uiu2HAmNyEqMegHS9Ay8ydnDx4Ws98L8QtepVcsN7GKUmyJoi6p"],"enrUri":"enr:-LO4QKVZuV9_eUtLpbHeaqMIvUFlES53rwQbAKSvb26-DdqrCA6Sf4qg8BxMSWJ6d_EToWu6rduk5_BvYcZNo92pFFgBgmlkgnY0gmlwhKwSEdqKbXVsdGlhZGRyc4wACgSsEhHaBqNP3QOCcnOFAAMBAACJc2VjcDI1NmsxoQOZQbNqPIX2nDxkrKN8MuJWE1ty2-awjVKMjjpLWGbu1YN0Y3CCo06DdWRwgqNQhXdha3UyAA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:41805/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.245.232/tcp/62899/p2p/16Uiu2HAm2XrK7CNYTEeLe1BuBgCSKVHHM6XohgBUz6rSrHfb37wm"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:62898/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:41805/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1cde82eb-1a89-42f7-a906-7294445cb4d5", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"1cde82eb-1a89-42f7-a906-7294445cb4d5","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:41805/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:41805/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id cac87f9f363f
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id da0bca080b20
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container cac87f9f363f. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.