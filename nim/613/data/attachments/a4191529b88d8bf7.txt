[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_invalid_request_id with id: 2025-01-11_04-04-59__07c1eda6-1e33-4e2f-9eab-c5541003e653
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-11_04-04-59__07c1eda6-1e33-4e2f-9eab-c5541003e653__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.83.217
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['58564', '58565', '58566', '58567', '58568']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 58564:58564 -p 58565:58565 -p 58566:58566 -p 58567:58567 -p 58568:58568 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=58566 --rest-port=58564 --tcp-port=58565 --discv5-udp-port=58567 --rest-address=0.0.0.0 --nat=extip:172.18.83.217 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=2ce7cbc48d7eb9cc6cdfada7dbbedfaf6fe3c9fdd1e0cfccec19bbe8b36fbf5f --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=58568 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.83.217 waku 16c0b9f6e4b217a4d4bba42833f6482649983b83dc6138c7cec4729df3c0b0b4
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 16c0b9f6e4b2. Setting up logs at ./log/docker/node1_2025-01-11_04-04-59__07c1eda6-1e33-4e2f-9eab-c5541003e653__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 58564
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 72df72a09542. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:58564/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:58564/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.83.217/tcp/58565/p2p/16Uiu2HAm2ThLRUxAjnYENo11ntEQnWXAzffGQMJ27N48WDnj9uWA","/ip4/172.18.83.217/tcp/58566/ws/p2p/16Uiu2HAm2ThLRUxAjnYENo11ntEQnWXAzffGQMJ27N48WDnj9uWA"],"enrUri":"enr:-L24QGIonRkIHmF0Z0RvC2309O77jdgPqjlmtjGhBROy5f89LVDJUJEuhySKhxgJsQ0kT4npnrqXJm99qslnS279erMCgmlkgnY0gmlwhKwSU9mKbXVsdGlhZGRyc5YACASsElPZBuTFAAoErBJT2Qbkxt0DgnJzhQADAQAAiXNlY3AyNTZrMaECaIaAwumRUOKS2wnZmS_IXrtcZcjy30tGHjJlr0gn2WuDdGNwguTFg3VkcILkx4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-11_04-04-59__07c1eda6-1e33-4e2f-9eab-c5541003e653__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.21.253
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['32067', '32068', '32069', '32070', '32071']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 32067:32067 -p 32068:32068 -p 32069:32069 -p 32070:32070 -p 32071:32071 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=32069 --rest-port=32067 --tcp-port=32068 --discv5-udp-port=32070 --rest-address=0.0.0.0 --nat=extip:172.18.21.253 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e94e5ada1f8f35eabe6d8cbe8ddfed8434fcc6a5d4f174fcef19fcc3c4f5efc4 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=32071 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QGIonRkIHmF0Z0RvC2309O77jdgPqjlmtjGhBROy5f89LVDJUJEuhySKhxgJsQ0kT4npnrqXJm99qslnS279erMCgmlkgnY0gmlwhKwSU9mKbXVsdGlhZGRyc5YACASsElPZBuTFAAoErBJT2Qbkxt0DgnJzhQADAQAAiXNlY3AyNTZrMaECaIaAwumRUOKS2wnZmS_IXrtcZcjy30tGHjJlr0gn2WuDdGNwguTFg3VkcILkx4V3YWt1MgU --filternode=/ip4/172.18.83.217/tcp/58565/p2p/16Uiu2HAm2ThLRUxAjnYENo11ntEQnWXAzffGQMJ27N48WDnj9uWA
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.21.253 waku 074d10d5699704bd633789b8a830f0c036f63855e74f93eda7e3c8c8ff226479
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 074d10d56997. Setting up logs at ./log/docker/node2_2025-01-11_04-04-59__07c1eda6-1e33-4e2f-9eab-c5541003e653__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 32067
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:32067/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:32067/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.21.253/tcp/32068/p2p/16Uiu2HAmQNk3wUjsGbUBnpdhstmnKoatRF5mmAiGzKVzq7EMAWRF","/ip4/172.18.21.253/tcp/32069/ws/p2p/16Uiu2HAmQNk3wUjsGbUBnpdhstmnKoatRF5mmAiGzKVzq7EMAWRF"],"enrUri":"enr:-L24QK6ThXB9WzQeIP_offPw3_BpKtjSfH6QCQ_JzNGchxqdXpYxl448NjzP0QVA9olW_-I2IGdI1jAUF0Wk2So-8hkCgmlkgnY0gmlwhKwSFf2KbXVsdGlhZGRyc5YACASsEhX9Bn1EAAoErBIV_QZ9Rd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDriLINvQmlGywKFUFaUgArYCQSb7t5XAltZCQG-k_2tqDdGNwgn1Eg3VkcIJ9RoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:32067/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.83.217/tcp/58565/p2p/16Uiu2HAm2ThLRUxAjnYENo11ntEQnWXAzffGQMJ27N48WDnj9uWA"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:58564/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:32067/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "fb4e6c92-4c73-4327-b5b3-fc2595f96dd7", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"fb4e6c92-4c73-4327-b5b3-fc2595f96dd7","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:32067/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:32067/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 16c0b9f6e4b2
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 074d10d56997
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 16c0b9f6e4b2. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.