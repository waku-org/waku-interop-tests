[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_no_pubsub_topic with id: 2025-01-11_04-07-00__34576463-e454-4ea5-8a0c-e7181f2a0150
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-11_04-07-00__34576463-e454-4ea5-8a0c-e7181f2a0150__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.136.174
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['58737', '58738', '58739', '58740', '58741']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 58737:58737 -p 58738:58738 -p 58739:58739 -p 58740:58740 -p 58741:58741 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=58739 --rest-port=58737 --tcp-port=58738 --discv5-udp-port=58740 --rest-address=0.0.0.0 --nat=extip:172.18.136.174 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=7affcc5d5afd1eda9c6fef640bd6ddeae0e25df94ddf97d26cebdc6b97cfdf5f --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=58741 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.136.174 waku 173c9b9d6ad7e3eb8dcf171bd141ae670cdbb40d37381dd862852c57105ea45f
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 173c9b9d6ad7. Setting up logs at ./log/docker/node1_2025-01-11_04-07-00__34576463-e454-4ea5-8a0c-e7181f2a0150__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 58737
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 38fcbfb43a25. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:58737/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:58737/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.136.174/tcp/58738/p2p/16Uiu2HAmSm2sRBUDcnt379thZM33kGnGKmAjWGdkfXpTFSejpHcM","/ip4/172.18.136.174/tcp/58739/ws/p2p/16Uiu2HAmSm2sRBUDcnt379thZM33kGnGKmAjWGdkfXpTFSejpHcM"],"enrUri":"enr:-L24QC8FQP_PfwCmACfhHj84XjCSQ0A1GGT188vplEXqxSWxLkjo-EGY6VyL5LNj7QtEhMNNOeL09NphGm5BytUSe80CgmlkgnY0gmlwhKwSiK6KbXVsdGlhZGRyc5YACASsEoiuBuVyAAoErBKIrgblc90DgnJzhQADAQAAiXNlY3AyNTZrMaED0Y_zWIfbjR5KQTb8-OADZlvo8aZFIX8sVv9UlzZHU5qDdGNwguVyg3VkcILldIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-11_04-07-00__34576463-e454-4ea5-8a0c-e7181f2a0150__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.132.129
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['34298', '34299', '34300', '34301', '34302']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 34298:34298 -p 34299:34299 -p 34300:34300 -p 34301:34301 -p 34302:34302 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=34300 --rest-port=34298 --tcp-port=34299 --discv5-udp-port=34301 --rest-address=0.0.0.0 --nat=extip:172.18.132.129 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=d6dcb4e4fda7debd9eb72d8ac29d4e5fa3befa60b05927dab21b942fafd22cb5 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=34302 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QC8FQP_PfwCmACfhHj84XjCSQ0A1GGT188vplEXqxSWxLkjo-EGY6VyL5LNj7QtEhMNNOeL09NphGm5BytUSe80CgmlkgnY0gmlwhKwSiK6KbXVsdGlhZGRyc5YACASsEoiuBuVyAAoErBKIrgblc90DgnJzhQADAQAAiXNlY3AyNTZrMaED0Y_zWIfbjR5KQTb8-OADZlvo8aZFIX8sVv9UlzZHU5qDdGNwguVyg3VkcILldIV3YWt1MgU --filternode=/ip4/172.18.136.174/tcp/58738/p2p/16Uiu2HAmSm2sRBUDcnt379thZM33kGnGKmAjWGdkfXpTFSejpHcM
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.132.129 waku 940deb4ab00d4aa0a780feeb057cb2d4955ec58c682fa63607da8be2b3794903
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 940deb4ab00d. Setting up logs at ./log/docker/node2_2025-01-11_04-07-00__34576463-e454-4ea5-8a0c-e7181f2a0150__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 34298
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:34298/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:34298/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.132.129/tcp/34299/p2p/16Uiu2HAm5vnxo4GS48KP52KMyjpmXjLWLHDo3PmdthEyrAT8NUaz","/ip4/172.18.132.129/tcp/34300/ws/p2p/16Uiu2HAm5vnxo4GS48KP52KMyjpmXjLWLHDo3PmdthEyrAT8NUaz"],"enrUri":"enr:-L24QN5jmG9DBnthd6j-6zHZA67fSeI4RuPTPndbnEAhz3gbJnL_EHP-rszVOJuDBEgaWWaQTpC7MDK8h09EQDvRxpcCgmlkgnY0gmlwhKwShIGKbXVsdGlhZGRyc5YACASsEoSBBoX7AAoErBKEgQaF_N0DgnJzhQADAQAAiXNlY3AyNTZrMaECnAqbse9gyVsZy9sdDroLkytpS_ck0komLKsoIIsCWjeDdGNwgoX7g3VkcIKF_YV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:34298/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.136.174/tcp/58738/p2p/16Uiu2HAmSm2sRBUDcnt379thZM33kGnGKmAjWGdkfXpTFSejpHcM"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:58737/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:34298/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "a73c1cf9-ef51-43ae-a567-5f753a8ce947", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"a73c1cf9-ef51-43ae-a567-5f753a8ce947","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:34298/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": "/test/1/waku-filter/proto"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:34298/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 173c9b9d6ad7
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 940deb4ab00d
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 173c9b9d6ad7. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.