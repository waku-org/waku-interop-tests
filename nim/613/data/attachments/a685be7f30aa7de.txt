[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2025-01-11_04-03-18__b55313a2-a69d-4728-922c-4f85ff73d89e
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-11_04-03-18__b55313a2-a69d-4728-922c-4f85ff73d89e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.91.187
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['49371', '49372', '49373', '49374', '49375']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 49371:49371 -p 49372:49372 -p 49373:49373 -p 49374:49374 -p 49375:49375 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=49373 --rest-port=49371 --tcp-port=49372 --discv5-udp-port=49374 --rest-address=0.0.0.0 --nat=extip:172.18.91.187 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=3eda3d1119427faff2af553484bdeb51af5c8b6910d7e60bbb7e6107f7be4fd3 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=49375 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.91.187 waku 59bc03bd8720cb91dbfbfad6d64087c8759784a620cca02cfe339a0ceb31e896
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 59bc03bd8720. Setting up logs at ./log/docker/node1_2025-01-11_04-03-18__b55313a2-a69d-4728-922c-4f85ff73d89e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 49371
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 4ce88fe86f87. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:49371/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:49371/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.91.187/tcp/49372/p2p/16Uiu2HAmTGQqB2UpEu9tWtWMq7996dzXnx2oCcVBAB9x4chqrP67","/ip4/172.18.91.187/tcp/49373/ws/p2p/16Uiu2HAmTGQqB2UpEu9tWtWMq7996dzXnx2oCcVBAB9x4chqrP67"],"enrUri":"enr:-L24QBy2YdAY5L-MVuv3iMr_o8EPC64Vhg4iv0MEhs_9ZBYSA1czmPIRhsFF09geTrLkWze2Nx4-eIRL1eds3ZsShiACgmlkgnY0gmlwhKwSW7uKbXVsdGlhZGRyc5YACASsElu7BsDcAAoErBJbuwbA3d0DgnJzhQADAQAAiXNlY3AyNTZrMaED2RagMhs6xoJXq4-69BuLev_ZMPd6Oov4EbJJPw_kqSiDdGNwgsDcg3VkcILA3oV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-11_04-03-18__b55313a2-a69d-4728-922c-4f85ff73d89e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.36.14
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['7400', '7401', '7402', '7403', '7404']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 7400:7400 -p 7401:7401 -p 7402:7402 -p 7403:7403 -p 7404:7404 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=7402 --rest-port=7400 --tcp-port=7401 --discv5-udp-port=7403 --rest-address=0.0.0.0 --nat=extip:172.18.36.14 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=155d83b47ca8b6deb84d7ede4c7c33428ef33e3adf62d965e3a5a4c6ceeac3f8 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=7404 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QBy2YdAY5L-MVuv3iMr_o8EPC64Vhg4iv0MEhs_9ZBYSA1czmPIRhsFF09geTrLkWze2Nx4-eIRL1eds3ZsShiACgmlkgnY0gmlwhKwSW7uKbXVsdGlhZGRyc5YACASsElu7BsDcAAoErBJbuwbA3d0DgnJzhQADAQAAiXNlY3AyNTZrMaED2RagMhs6xoJXq4-69BuLev_ZMPd6Oov4EbJJPw_kqSiDdGNwgsDcg3VkcILA3oV3YWt1MgU --filternode=/ip4/172.18.91.187/tcp/49372/p2p/16Uiu2HAmTGQqB2UpEu9tWtWMq7996dzXnx2oCcVBAB9x4chqrP67
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.36.14 waku 397cc8e8455a4436e1f0b63fbf232697d16ec360e5fcf4d25efb7138cb38424f
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 397cc8e8455a. Setting up logs at ./log/docker/node2_2025-01-11_04-03-18__b55313a2-a69d-4728-922c-4f85ff73d89e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 7400
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7400/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7400/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.36.14/tcp/7401/p2p/16Uiu2HAmK67SWJd7DhUtxzeviuTv7bmeafYr1xcagmyHAiaF1va1","/ip4/172.18.36.14/tcp/7402/ws/p2p/16Uiu2HAmK67SWJd7DhUtxzeviuTv7bmeafYr1xcagmyHAiaF1va1"],"enrUri":"enr:-L24QJIPmbkx3jFdv_xDgMgnMzBtdKgoJx9VQU3tQlDN9zvQfmmAXxkbwp68161M3q6Z3t7imUDk3kZbEDO8emp1fo0CgmlkgnY0gmlwhKwSJA6KbXVsdGlhZGRyc5YACASsEiQOBhzpAAoErBIkDgYc6t0DgnJzhQADAQAAiXNlY3AyNTZrMaEDX5WojNcvQVf2ujVRqoTCHDDBffdMEwmR-Njf_QM09y6DdGNwghzpg3VkcIIc64V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:7400/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.91.187/tcp/49372/p2p/16Uiu2HAmTGQqB2UpEu9tWtWMq7996dzXnx2oCcVBAB9x4chqrP67"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:49371/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:7400/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "bcd58d11-ff02-4168-ab74-81ed7725497d", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"bcd58d11-ff02-4168-ab74-81ed7725497d","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:7400/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:7400/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 59bc03bd8720
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 397cc8e8455a
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 59bc03bd8720. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.