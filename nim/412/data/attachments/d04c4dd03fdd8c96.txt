[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_extra_field with id: 2024-10-29_04-08-13__9e8820ac-4450-435e-bd6b-c8250b69b216
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-10-29_04-08-13__9e8820ac-4450-435e-bd6b-c8250b69b216__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.219.51
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['40065', '40066', '40067', '40068', '40069']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 40065:40065 -p 40066:40066 -p 40067:40067 -p 40068:40068 -p 40069:40069 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=40067 --rest-port=40065 --tcp-port=40066 --discv5-udp-port=40068 --rest-address=0.0.0.0 --nat=extip:172.18.219.51 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=a6cedec5c6a28c0bfd0c20f3b7f4afbecc4beb6bac1b6873f4d9cb1a5f3cfc13 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=40069 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.219.51 waku 57bd9a7553a3198fa7c317337ac09868ce729ff1614e73be7a7da7971af058ba
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 57bd9a7553a3. Setting up logs at ./log/docker/node1_2024-10-29_04-08-13__9e8820ac-4450-435e-bd6b-c8250b69b216__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 40065
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 63cb9bff8ccd. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:40065/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:40065/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.219.51/tcp/40066/p2p/16Uiu2HAm9qLSnh8P2KRaMmWgxFvogbipT5mbZXhmgvzqZahR6Jq4","/ip4/172.18.219.51/tcp/40067/ws/p2p/16Uiu2HAm9qLSnh8P2KRaMmWgxFvogbipT5mbZXhmgvzqZahR6Jq4"],"enrUri":"enr:-L24QJHL82fcXwirgqivZM2zXZwrnBZSbeWBzLJXDwFFLKteO4ryLCBlNL9epyfeSskluXzOSScKRMVM_Vfe1NkeiXACgmlkgnY0gmlwhKwS2zOKbXVsdGlhZGRyc5YACASsEtszBpyCAAoErBLbMwacg90DgnJzhQADAQAAiXNlY3AyNTZrMaEC1hN39OukRfo2uQkJMiSYqbZS87TFQ-gXiebSE03nS8-DdGNwgpyCg3VkcIKchIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-10-29_04-08-13__9e8820ac-4450-435e-bd6b-c8250b69b216__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.191.253
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['42833', '42834', '42835', '42836', '42837']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 42833:42833 -p 42834:42834 -p 42835:42835 -p 42836:42836 -p 42837:42837 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=42835 --rest-port=42833 --tcp-port=42834 --discv5-udp-port=42836 --rest-address=0.0.0.0 --nat=extip:172.18.191.253 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=7b7da46a0a5b400bcadffe4956dbbdd58f9f8a4bd2b83b1f326f4d6aec6634b7 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=42837 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QJHL82fcXwirgqivZM2zXZwrnBZSbeWBzLJXDwFFLKteO4ryLCBlNL9epyfeSskluXzOSScKRMVM_Vfe1NkeiXACgmlkgnY0gmlwhKwS2zOKbXVsdGlhZGRyc5YACASsEtszBpyCAAoErBLbMwacg90DgnJzhQADAQAAiXNlY3AyNTZrMaEC1hN39OukRfo2uQkJMiSYqbZS87TFQ-gXiebSE03nS8-DdGNwgpyCg3VkcIKchIV3YWt1MgU --filternode=/ip4/172.18.219.51/tcp/40066/p2p/16Uiu2HAm9qLSnh8P2KRaMmWgxFvogbipT5mbZXhmgvzqZahR6Jq4
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.191.253 waku 3a5cf7ceb37a8371fabe477735542298e5537e671624aa1c4bb8174bfcc29ca7
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 3a5cf7ceb37a. Setting up logs at ./log/docker/node2_2024-10-29_04-08-13__9e8820ac-4450-435e-bd6b-c8250b69b216__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 42833
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:42833/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:42833/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.191.253/tcp/42834/p2p/16Uiu2HAmSjKdgFKk5jPbsNKMzLA5z7BH7buRnRCQnGj7zyR1Y9HP","/ip4/172.18.191.253/tcp/42835/ws/p2p/16Uiu2HAmSjKdgFKk5jPbsNKMzLA5z7BH7buRnRCQnGj7zyR1Y9HP"],"enrUri":"enr:-L24QKO2ORdXyA1SgpliLgQ1JnS2u9LvUgVytpHMLm-t7bldecN22PmMQkjRdYhtj8guiJWEHiLEIUBficHr6zHASCICgmlkgnY0gmlwhKwSv_2KbXVsdGlhZGRyc5YACASsEr_9BqdSAAoErBK__QanU90DgnJzhQADAQAAiXNlY3AyNTZrMaED0R--OGuw4PuDqw-wP6FlsJn_gLgBQlfEm5GGIAf_US6DdGNwgqdSg3VkcIKnVIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:42833/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.219.51/tcp/40066/p2p/16Uiu2HAm9qLSnh8P2KRaMmWgxFvogbipT5mbZXhmgvzqZahR6Jq4"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:40065/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:42833/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "71f57a37-956a-4fc5-928b-355e454e96ae", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"71f57a37-956a-4fc5-928b-355e454e96ae","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:42833/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:42833/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 57bd9a7553a3
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 3a5cf7ceb37a
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 57bd9a7553a3. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.