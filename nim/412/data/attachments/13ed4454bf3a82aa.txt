[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_no_content_topic with id: 2024-10-29_04-07-19__5a89bd27-72b9-430c-9615-2c1592c32fe0
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-10-29_04-07-19__5a89bd27-72b9-430c-9615-2c1592c32fe0__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.86.156
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['53847', '53848', '53849', '53850', '53851']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 53847:53847 -p 53848:53848 -p 53849:53849 -p 53850:53850 -p 53851:53851 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=53849 --rest-port=53847 --tcp-port=53848 --discv5-udp-port=53850 --rest-address=0.0.0.0 --nat=extip:172.18.86.156 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=c1ab04e7980acecf72eb2bbec3e3fcdffe3d2fe63baa6bbebe3ccdcb11beb330 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=53851 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.86.156 waku a319387aa0e1c8925862f4821c008c91410988723ac8336f6dec785ce83028e4
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID a319387aa0e1. Setting up logs at ./log/docker/node1_2024-10-29_04-07-19__5a89bd27-72b9-430c-9615-2c1592c32fe0__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 53847
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 5f1f331d46b0. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:53847/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:53847/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.86.156/tcp/53848/p2p/16Uiu2HAmK3MuAyZ6nQtzR7Ht75Pa83njbzV9urm3rxedod27G3gg","/ip4/172.18.86.156/tcp/53849/ws/p2p/16Uiu2HAmK3MuAyZ6nQtzR7Ht75Pa83njbzV9urm3rxedod27G3gg"],"enrUri":"enr:-L24QN_ajsRDkHBXWssgwRlGfKv11HP3fuMTmoYRebr-4WeLNNpHq0eDpjh2Sz50ShoezONiR9qSGpxiPiEz3mV1pHMCgmlkgnY0gmlwhKwSVpyKbXVsdGlhZGRyc5YACASsElacBtJYAAoErBJWnAbSWd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDXuFEBBmBNA9L8lLIVP71DzUqEtjfQFKb-wFbdIHtHZ2DdGNwgtJYg3VkcILSWoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-10-29_04-07-19__5a89bd27-72b9-430c-9615-2c1592c32fe0__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.240.32
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['33332', '33333', '33334', '33335', '33336']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 33332:33332 -p 33333:33333 -p 33334:33334 -p 33335:33335 -p 33336:33336 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=33334 --rest-port=33332 --tcp-port=33333 --discv5-udp-port=33335 --rest-address=0.0.0.0 --nat=extip:172.18.240.32 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=bec6d9a821cd5dc94bf312bfafdb5cdd7513be0cdead4791baf86ed332af301c --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=33336 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QN_ajsRDkHBXWssgwRlGfKv11HP3fuMTmoYRebr-4WeLNNpHq0eDpjh2Sz50ShoezONiR9qSGpxiPiEz3mV1pHMCgmlkgnY0gmlwhKwSVpyKbXVsdGlhZGRyc5YACASsElacBtJYAAoErBJWnAbSWd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDXuFEBBmBNA9L8lLIVP71DzUqEtjfQFKb-wFbdIHtHZ2DdGNwgtJYg3VkcILSWoV3YWt1MgU --filternode=/ip4/172.18.86.156/tcp/53848/p2p/16Uiu2HAmK3MuAyZ6nQtzR7Ht75Pa83njbzV9urm3rxedod27G3gg
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.240.32 waku 0493b1e41a41d22ab021d6983e59e8ffe1245c025e5209981ded3908c4ee8d10
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 0493b1e41a41. Setting up logs at ./log/docker/node2_2024-10-29_04-07-19__5a89bd27-72b9-430c-9615-2c1592c32fe0__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 33332
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33332/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33332/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.240.32/tcp/33333/p2p/16Uiu2HAmE1gq7G5guYAD79DCybigup21xZXewcSyXDJXh5FQVSiX","/ip4/172.18.240.32/tcp/33334/ws/p2p/16Uiu2HAmE1gq7G5guYAD79DCybigup21xZXewcSyXDJXh5FQVSiX"],"enrUri":"enr:-L24QFS71zHUOcu2rv7F8K8jhpSmB7zyAfpKPFo8BSPVdmIHCLigvWmF7rYxye83P1KdHkdRZkYnn4mCM6J5TBxJ7vgCgmlkgnY0gmlwhKwS8CCKbXVsdGlhZGRyc5YACASsEvAgBoI1AAoErBLwIAaCNt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDFCkS1f_0G-xp2e-7xzAvTZTEbO9p0ojZKfBQTlxonnyDdGNwgoI1g3VkcIKCN4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:33332/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.86.156/tcp/53848/p2p/16Uiu2HAmK3MuAyZ6nQtzR7Ht75Pa83njbzV9urm3rxedod27G3gg"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:53847/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:33332/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "3c6982a5-e8a9-4388-9674-8a561a80cfb1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"3c6982a5-e8a9-4388-9674-8a561a80cfb1","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:33332/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:33332/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id a319387aa0e1
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 0493b1e41a41
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container a319387aa0e1. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.