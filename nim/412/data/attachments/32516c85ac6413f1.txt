[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_invalid_request_id with id: 2024-10-29_04-07-28__cc247129-f6af-41a3-a7cf-32abe61057b1
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-10-29_04-07-28__cc247129-f6af-41a3-a7cf-32abe61057b1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.47.100
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['20572', '20573', '20574', '20575', '20576']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 20572:20572 -p 20573:20573 -p 20574:20574 -p 20575:20575 -p 20576:20576 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=20574 --rest-port=20572 --tcp-port=20573 --discv5-udp-port=20575 --rest-address=0.0.0.0 --nat=extip:172.18.47.100 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=88ba66a043b615e143a726c8fb6e9df44dfa4f3cb07dedae84007f5b9cb0eece --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=20576 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.47.100 waku 1b231c6dc2e273cf48e20485fb153aaef009638ffca90147e1cdfab200fb5b1a
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 1b231c6dc2e2. Setting up logs at ./log/docker/node1_2024-10-29_04-07-28__cc247129-f6af-41a3-a7cf-32abe61057b1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 20572
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container e5bfbed7c5cf. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:20572/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:20572/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.47.100/tcp/20573/p2p/16Uiu2HAmCNZfUWCrtgZiZwHATFYsTG6N7mPt4FR6ksYDzF8KcUEz","/ip4/172.18.47.100/tcp/20574/ws/p2p/16Uiu2HAmCNZfUWCrtgZiZwHATFYsTG6N7mPt4FR6ksYDzF8KcUEz"],"enrUri":"enr:-L24QLz4u2-tgd0Pb-0O25OZ8w48COK2OJmUlxVo0hnqZ4NqFAQNErB3oClzyqS7zISs7-eZf4cmwtKtLD40oeiB4lACgmlkgnY0gmlwhKwSL2SKbXVsdGlhZGRyc5YACASsEi9kBlBdAAoErBIvZAZQXt0DgnJzhQADAQAAiXNlY3AyNTZrMaEC-8rLQmbgHbPLKpgkztXIbKbQ2KsHN1fafQNqCpN0q--DdGNwglBdg3VkcIJQX4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-10-29_04-07-28__cc247129-f6af-41a3-a7cf-32abe61057b1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.192.242
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['40654', '40655', '40656', '40657', '40658']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 40654:40654 -p 40655:40655 -p 40656:40656 -p 40657:40657 -p 40658:40658 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=40656 --rest-port=40654 --tcp-port=40655 --discv5-udp-port=40657 --rest-address=0.0.0.0 --nat=extip:172.18.192.242 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=fa5f02d8cfbf9bbcebe40dfb9e78a0bd7f92bada78bfa57dc53f769f178d94c5 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=40658 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QLz4u2-tgd0Pb-0O25OZ8w48COK2OJmUlxVo0hnqZ4NqFAQNErB3oClzyqS7zISs7-eZf4cmwtKtLD40oeiB4lACgmlkgnY0gmlwhKwSL2SKbXVsdGlhZGRyc5YACASsEi9kBlBdAAoErBIvZAZQXt0DgnJzhQADAQAAiXNlY3AyNTZrMaEC-8rLQmbgHbPLKpgkztXIbKbQ2KsHN1fafQNqCpN0q--DdGNwglBdg3VkcIJQX4V3YWt1MgU --filternode=/ip4/172.18.47.100/tcp/20573/p2p/16Uiu2HAmCNZfUWCrtgZiZwHATFYsTG6N7mPt4FR6ksYDzF8KcUEz
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.192.242 waku dfed5c7f64ab29e696d13cf0ed25915db07163d2b290453b05e53b21d071eaae
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID dfed5c7f64ab. Setting up logs at ./log/docker/node2_2024-10-29_04-07-28__cc247129-f6af-41a3-a7cf-32abe61057b1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 40654
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:40654/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:40654/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.192.242/tcp/40655/p2p/16Uiu2HAkxW26KML1UdVtmS4GwGJgDPdQ6mcBKsnnBP9uRSAHD69v","/ip4/172.18.192.242/tcp/40656/ws/p2p/16Uiu2HAkxW26KML1UdVtmS4GwGJgDPdQ6mcBKsnnBP9uRSAHD69v"],"enrUri":"enr:-L24QHsxODsfWE2acIAb9ydOoIxucuj2siZLW1lr7xKTZyCvUxN6ARtnQmpW9pAkXtl-DK8caHgpk9CSYCl7ZMVaecgCgmlkgnY0gmlwhKwSwPKKbXVsdGlhZGRyc5YACASsEsDyBp7PAAoErBLA8gae0N0DgnJzhQADAQAAiXNlY3AyNTZrMaECLbAgEW7lwC9727AeJXSgHVKJC094TOS57zmQH_ROBXmDdGNwgp7Pg3VkcIKe0YV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:40654/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.47.100/tcp/20573/p2p/16Uiu2HAmCNZfUWCrtgZiZwHATFYsTG6N7mPt4FR6ksYDzF8KcUEz"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:20572/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:40654/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "afcc7a23-e026-4a52-80aa-6760cc7dd1a7", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"afcc7a23-e026-4a52-80aa-6760cc7dd1a7","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:40654/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:40654/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 1b231c6dc2e2
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id dfed5c7f64ab
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 1b231c6dc2e2. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.