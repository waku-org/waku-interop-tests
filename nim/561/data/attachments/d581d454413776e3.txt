[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_extra_field with id: 2024-12-25_15-03-39__87ab70a2-71b6-4c22-a502-982e0fecaf20
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-25_15-03-39__87ab70a2-71b6-4c22-a502-982e0fecaf20__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.26.87
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['2360', '2361', '2362', '2363', '2364']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 2360:2360 -p 2361:2361 -p 2362:2362 -p 2363:2363 -p 2364:2364 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=2362 --rest-port=2360 --tcp-port=2361 --discv5-udp-port=2363 --rest-address=0.0.0.0 --nat=extip:172.18.26.87 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=eabb17a8e1cce255a0b7f748da0ce0172b03c0e9ea1295ff9bdb15c0ac58b2d7 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=2364 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.26.87 waku 37b6d5b1a212f98779dc223033f346118a51fcbbcc083aaa288540895ee299b7
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 37b6d5b1a212. Setting up logs at ./log/docker/node1_2024-12-25_15-03-39__87ab70a2-71b6-4c22-a502-982e0fecaf20__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 2360
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:2360/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:2360/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.26.87/tcp/2361/p2p/16Uiu2HAmN1zyVTeEEKgUwkJJu5rk5thDHMjeed7DPtzQC3DkEaxM","/ip4/172.18.26.87/tcp/2362/ws/p2p/16Uiu2HAmN1zyVTeEEKgUwkJJu5rk5thDHMjeed7DPtzQC3DkEaxM"],"enrUri":"enr:-L24QPnDGsNwKo5ZX39W5_R-cky1VKjLwPwYG_fT6xCpJiW3cyWQSwx7mEx7sWhGdQ10R5d4RRlwq0RnG9TOE8HXbdACgmlkgnY0gmlwhKwSGleKbXVsdGlhZGRyc5YACASsEhpXBgk5AAoErBIaVwYJOt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDixsVx24aR5_7agQ5TCKick1TmYA_6djkw1RRqcOvZGaDdGNwggk5g3VkcIIJO4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-25_15-03-39__87ab70a2-71b6-4c22-a502-982e0fecaf20__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.197.212
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['56682', '56683', '56684', '56685', '56686']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 56682:56682 -p 56683:56683 -p 56684:56684 -p 56685:56685 -p 56686:56686 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=56684 --rest-port=56682 --tcp-port=56683 --discv5-udp-port=56685 --rest-address=0.0.0.0 --nat=extip:172.18.197.212 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e356c4dbbff3d85d4ff7f4bbd94e58cb1ff4326f8ccce40da8c34ad408c7fd2b --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=56686 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QPnDGsNwKo5ZX39W5_R-cky1VKjLwPwYG_fT6xCpJiW3cyWQSwx7mEx7sWhGdQ10R5d4RRlwq0RnG9TOE8HXbdACgmlkgnY0gmlwhKwSGleKbXVsdGlhZGRyc5YACASsEhpXBgk5AAoErBIaVwYJOt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDixsVx24aR5_7agQ5TCKick1TmYA_6djkw1RRqcOvZGaDdGNwggk5g3VkcIIJO4V3YWt1MgU --filternode=/ip4/172.18.26.87/tcp/2361/p2p/16Uiu2HAmN1zyVTeEEKgUwkJJu5rk5thDHMjeed7DPtzQC3DkEaxM
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.197.212 waku 06e23f2bc35f4071a91dd462724d4911905f892b24132ca94022e4f6b4585963
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 06e23f2bc35f. Setting up logs at ./log/docker/node2_2024-12-25_15-03-39__87ab70a2-71b6-4c22-a502-982e0fecaf20__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 56682
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:56682/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:56682/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.197.212/tcp/56683/p2p/16Uiu2HAmGm9EtFkK1iztB4DUnSJnb6a6jK141VRSptDhxep4AYYK","/ip4/172.18.197.212/tcp/56684/ws/p2p/16Uiu2HAmGm9EtFkK1iztB4DUnSJnb6a6jK141VRSptDhxep4AYYK"],"enrUri":"enr:-L24QCd6JJ9ITr8xlzdJ5BcNsuWhrKhaH-ZNoKgU1fe-Ah0gajzEnrco89wGEd2hoIwLumOpVELYFPreWgT1yNMlM74CgmlkgnY0gmlwhKwSxdSKbXVsdGlhZGRyc5YACASsEsXUBt1rAAoErBLF1AbdbN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDPQJItY-0DURsxzt6h6LZg3-P3GFOQCQ5X6j6xXdL5iyDdGNwgt1rg3VkcILdbYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:56682/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.26.87/tcp/2361/p2p/16Uiu2HAmN1zyVTeEEKgUwkJJu5rk5thDHMjeed7DPtzQC3DkEaxM"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:2360/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:56682/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "e3ce15e5-cc9a-4601-8e5b-4d6198a508fd", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"e3ce15e5-cc9a-4601-8e5b-4d6198a508fd","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:56682/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:56682/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 37b6d5b1a212
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 06e23f2bc35f
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 37b6d5b1a212. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.