[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_extra_field with id: 2024-12-25_15-03-53__380ce7ec-feaa-4c54-beb8-ab0c6a86c400
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-25_15-03-53__380ce7ec-feaa-4c54-beb8-ab0c6a86c400__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.62.81
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['21806', '21807', '21808', '21809', '21810']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 21806:21806 -p 21807:21807 -p 21808:21808 -p 21809:21809 -p 21810:21810 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=21808 --rest-port=21806 --tcp-port=21807 --discv5-udp-port=21809 --rest-address=0.0.0.0 --nat=extip:172.18.62.81 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=91df163bf6ae184be3fecd8787bf85fdc1d32bfdb60656fd80cdfaa548bfa15b --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=21810 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.62.81 waku 9be076ea6d8dc27f6201d629b8b66763045338731aab44041cfc16395c53a159
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 9be076ea6d8d. Setting up logs at ./log/docker/node1_2024-12-25_15-03-53__380ce7ec-feaa-4c54-beb8-ab0c6a86c400__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 21806
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 991d7fb0fe38. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:21806/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:21806/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.62.81/tcp/21807/p2p/16Uiu2HAmTT3v5BSnAY5omMnSUKWKsD1LtXF6r5GAhE5fnBNEUfVV","/ip4/172.18.62.81/tcp/21808/ws/p2p/16Uiu2HAmTT3v5BSnAY5omMnSUKWKsD1LtXF6r5GAhE5fnBNEUfVV"],"enrUri":"enr:-L24QFfrsaAgETMjokHuuw2jjFk08JFx-E4B1Dj62TXW3hdjPRCnBvRVaV0mpcvnOj_7lrndDcEGgizf_12LvRKgxCgCgmlkgnY0gmlwhKwSPlGKbXVsdGlhZGRyc5YACASsEj5RBlUvAAoErBI-UQZVMN0DgnJzhQADAQAAiXNlY3AyNTZrMaED29Bdir-AQQ0VUkuatU3-hstUO0tKj2LIRGPhvaUF1PSDdGNwglUvg3VkcIJVMYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-25_15-03-53__380ce7ec-feaa-4c54-beb8-ab0c6a86c400__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.44.87
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['37854', '37855', '37856', '37857', '37858']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 37854:37854 -p 37855:37855 -p 37856:37856 -p 37857:37857 -p 37858:37858 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=37856 --rest-port=37854 --tcp-port=37855 --discv5-udp-port=37857 --rest-address=0.0.0.0 --nat=extip:172.18.44.87 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=4acdcc8b978332eda7c3b476cedceea2e7b9b4d617055dadcf3baf8edb9725a6 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=37858 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QFfrsaAgETMjokHuuw2jjFk08JFx-E4B1Dj62TXW3hdjPRCnBvRVaV0mpcvnOj_7lrndDcEGgizf_12LvRKgxCgCgmlkgnY0gmlwhKwSPlGKbXVsdGlhZGRyc5YACASsEj5RBlUvAAoErBI-UQZVMN0DgnJzhQADAQAAiXNlY3AyNTZrMaED29Bdir-AQQ0VUkuatU3-hstUO0tKj2LIRGPhvaUF1PSDdGNwglUvg3VkcIJVMYV3YWt1MgU --filternode=/ip4/172.18.62.81/tcp/21807/p2p/16Uiu2HAmTT3v5BSnAY5omMnSUKWKsD1LtXF6r5GAhE5fnBNEUfVV
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.44.87 waku 8854abe3aed0cda7f0b173898d46a55e8c1d94ecd39d03e5ba947b824577772b
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 8854abe3aed0. Setting up logs at ./log/docker/node2_2024-12-25_15-03-53__380ce7ec-feaa-4c54-beb8-ab0c6a86c400__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 37854
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:37854/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:37854/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.44.87/tcp/37855/p2p/16Uiu2HAmV9aDXMzd7imQ6TfhRZ8tRzMmAPhgpfpAWttvnMG8zm6V","/ip4/172.18.44.87/tcp/37856/ws/p2p/16Uiu2HAmV9aDXMzd7imQ6TfhRZ8tRzMmAPhgpfpAWttvnMG8zm6V"],"enrUri":"enr:-L24QPxeW73NAV7haYzMbIgpBzGvyUWtQZNN7npPWUIbAkH3T-Vur0T-QJ2ZdWizVFInJgDuFYS7r4y14XDxTA2ejpoCgmlkgnY0gmlwhKwSLFeKbXVsdGlhZGRyc5YACASsEixXBpPfAAoErBIsVwaT4N0DgnJzhQADAQAAiXNlY3AyNTZrMaED9Q2Lx0KipcAUZ3TcK7kU3DxFV95jNmA7qe7SeEcgkqaDdGNwgpPfg3VkcIKT4YV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:37854/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.62.81/tcp/21807/p2p/16Uiu2HAmTT3v5BSnAY5omMnSUKWKsD1LtXF6r5GAhE5fnBNEUfVV"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:21806/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:37854/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "da11e755-95a8-40fb-b8b3-4f2757a3069b", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"da11e755-95a8-40fb-b8b3-4f2757a3069b","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:37854/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:37854/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 9be076ea6d8d
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 8854abe3aed0
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 9be076ea6d8d. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.