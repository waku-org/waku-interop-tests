[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_all_with_invalid_request_id with id: 2024-12-25_15-04-13__464e602c-4aec-4427-a579-c290c0a07b70
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-25_15-04-13__464e602c-4aec-4427-a579-c290c0a07b70__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.224.217
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['45546', '45547', '45548', '45549', '45550']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 45546:45546 -p 45547:45547 -p 45548:45548 -p 45549:45549 -p 45550:45550 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=45548 --rest-port=45546 --tcp-port=45547 --discv5-udp-port=45549 --rest-address=0.0.0.0 --nat=extip:172.18.224.217 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=0b7dda6ddac2835effedff58e268c21cd52d0fcae795d4ab514acc8ff0daadd6 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=45550 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.224.217 waku 5cc0dfa70dbc4216d6364b7fc051159e10b8b4ef0e149e2189952a486a0df501
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 5cc0dfa70dbc. Setting up logs at ./log/docker/node1_2024-12-25_15-04-13__464e602c-4aec-4427-a579-c290c0a07b70__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 45546
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 8ec040025139. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:45546/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:45546/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.224.217/tcp/45547/p2p/16Uiu2HAmBNEAqcJAVprkeX9jj8Wj66FVMaa3qkYHsZXEpFdScNXn","/ip4/172.18.224.217/tcp/45548/ws/p2p/16Uiu2HAmBNEAqcJAVprkeX9jj8Wj66FVMaa3qkYHsZXEpFdScNXn"],"enrUri":"enr:-L24QPw6rCI2D5q760LG81B0U8OkW5yH37-WrLi2EPW2_SWVIk138qizAf3xu6eIN_gfxZwpvzG16A_OcCfbPZ7KXjACgmlkgnY0gmlwhKwS4NmKbXVsdGlhZGRyc5YACASsEuDZBrHrAAoErBLg2Qax7N0DgnJzhQADAQAAiXNlY3AyNTZrMaEC7NkQv_ZaQKutN6ALy-j5Sg6pR1G5ufPn5oasfw6iDXWDdGNwgrHrg3VkcIKx7YV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-25_15-04-13__464e602c-4aec-4427-a579-c290c0a07b70__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.42.170
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['12786', '12787', '12788', '12789', '12790']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 12786:12786 -p 12787:12787 -p 12788:12788 -p 12789:12789 -p 12790:12790 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=12788 --rest-port=12786 --tcp-port=12787 --discv5-udp-port=12789 --rest-address=0.0.0.0 --nat=extip:172.18.42.170 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=f2143bace154ba83d1bc6cd7b8f2f4ac1b80080f65d665afcc6ebdf0e6f83675 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=12790 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QPw6rCI2D5q760LG81B0U8OkW5yH37-WrLi2EPW2_SWVIk138qizAf3xu6eIN_gfxZwpvzG16A_OcCfbPZ7KXjACgmlkgnY0gmlwhKwS4NmKbXVsdGlhZGRyc5YACASsEuDZBrHrAAoErBLg2Qax7N0DgnJzhQADAQAAiXNlY3AyNTZrMaEC7NkQv_ZaQKutN6ALy-j5Sg6pR1G5ufPn5oasfw6iDXWDdGNwgrHrg3VkcIKx7YV3YWt1MgU --filternode=/ip4/172.18.224.217/tcp/45547/p2p/16Uiu2HAmBNEAqcJAVprkeX9jj8Wj66FVMaa3qkYHsZXEpFdScNXn
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.42.170 waku e21f17d1c7b92b8cc75d656a55844723e06dc2e1a148101015f0fe90f8b32c6f
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID e21f17d1c7b9. Setting up logs at ./log/docker/node2_2024-12-25_15-04-13__464e602c-4aec-4427-a579-c290c0a07b70__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 12786
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:12786/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:12786/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.42.170/tcp/12787/p2p/16Uiu2HAm6SAaG2geV3yT9EqHXgbKiSXmw9x4ZF6gGMsJ5HCg4Asy","/ip4/172.18.42.170/tcp/12788/ws/p2p/16Uiu2HAm6SAaG2geV3yT9EqHXgbKiSXmw9x4ZF6gGMsJ5HCg4Asy"],"enrUri":"enr:-L24QEjpq7UZQontMP7HaJ4vvN6j2684YawTcV1BQ2VxA-i1S_8xeRSj35At4biXhFJ5ngMjMryh0ZETmpOoK1_iDSQCgmlkgnY0gmlwhKwSKqqKbXVsdGlhZGRyc5YACASsEiqqBjHzAAoErBIqqgYx9N0DgnJzhQADAQAAiXNlY3AyNTZrMaECo5DjR4IRWvxRUDvxFAguzw0nVpHce0D1GTdyST_g5piDdGNwgjHzg3VkcIIx9YV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:12786/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.224.217/tcp/45547/p2p/16Uiu2HAmBNEAqcJAVprkeX9jj8Wj66FVMaa3qkYHsZXEpFdScNXn"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:45546/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:12786/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "4ae7eddd-5931-4e55-b3eb-88733e8ef94e", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"4ae7eddd-5931-4e55-b3eb-88733e8ef94e","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:12786/filter/v2/subscriptions/all" -H "Content-Type: application/json" -d '{"requestId": 1}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:12786/filter/v2/subscriptions/all. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 5cc0dfa70dbc
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id e21f17d1c7b9
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 5cc0dfa70dbc. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.