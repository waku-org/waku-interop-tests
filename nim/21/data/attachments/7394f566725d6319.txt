[35mDEBUG   [0m tests.conftest:conftest.py:43 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:49 Running test: test_filter_subscribe_with_no_content_topic with id: 2024-05-07_12-17-32__7e77cbb3-483a-4f15-8d51-6464071fa225
[35mDEBUG   [0m src.steps.common:common.py:15 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:17 Docker client initialized with image harbor.status.im/wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:48 WakuNode instance initialized with log path ./log/docker/node1_2024-05-07_12-17-32__7e77cbb3-483a-4f15-8d51-6464071fa225__harbor.status.im_wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:52 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:20 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:23 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:80 Generated random external IP 172.18.178.190
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:73 Generated ports ['53919', '53920', '53921', '53922', '53923']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:337 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:114 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:116 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:47 docker run -i -t -p 53919:53919 -p 53920:53920 -p 53921:53921 -p 53922:53922 -p 53923:53923 harbor.status.im/wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=53921 --rest-port=53919 --tcp-port=53920 --discv5-udp-port=53922 --rest-address=0.0.0.0 --nat=extip:172.18.178.190 --peer-exchange=true --discv5-discovery=true --cluster-id=0 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=53923 --metrics-logging=true --relay=true --filter=true --nodekey=30348dd51465150e04a5d9d932c72864c8967f806cce60b5d26afeca1e77eb68
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:53 docker network connect --ip 172.18.178.190 waku dcb0176384df7f69030db802665ad4598fd87658a531d724a63905ea4995f4b6
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:56 Container started with ID dcb0176384df. Setting up logs at ./log/docker/node1_2024-05-07_12-17-32__7e77cbb3-483a-4f15-8d51-6464071fa225__harbor.status.im_wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:122 Started container from image harbor.status.im/wakuorg/nwaku:latest. REST: 53919
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:53919/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[35mDEBUG   [0m src.node.waku_node:waku_node.py:194 Health endpoint response object {'nodeHealth': 'Ready', 'protocolsHealth': []}
[32mINFO    [0m src.node.waku_node:waku_node.py:202 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:53919/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.178.190/tcp/53920/p2p/16Uiu2HAmGNtM2rQ8abySFNhqPDFY4cmfAEpfo9Z9fD3NekoFR2ip","/ip4/172.18.178.190/tcp/53921/ws/p2p/16Uiu2HAmGNtM2rQ8abySFNhqPDFY4cmfAEpfo9Z9fD3NekoFR2ip"],"enrUri":"enr:-LO4QC3oDYWdKrqpug83u-WoPB5RZQDcDlDL5ffL0TkN5iKicbQLnoUD1vf_bsDPwYVCW62qb6-TGwXbIisXe4KN6sIBgmlkgnY0gmlwhKwSsr6KbXVsdGlhZGRyc4wACgSsErK-BtKh3QOCcnOFAAABAACJc2VjcDI1NmsxoQM3Tqpf5eFn4Jztm4gB0Y0JVSJyxyZsW8QR-QU5DZb-PYN0Y3CC0qCDdWRwgtKihXdha3UyBQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:207 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:17 Docker client initialized with image harbor.status.im/wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:48 WakuNode instance initialized with log path ./log/docker/node2_2024-05-07_12-17-32__7e77cbb3-483a-4f15-8d51-6464071fa225__harbor.status.im_wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:52 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:20 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:23 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:80 Generated random external IP 172.18.86.55
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:73 Generated ports ['46468', '46469', '46470', '46471', '46472']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:337 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:114 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:116 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:47 docker run -i -t -p 46468:46468 -p 46469:46469 -p 46470:46470 -p 46471:46471 -p 46472:46472 harbor.status.im/wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=46470 --rest-port=46468 --tcp-port=46469 --discv5-udp-port=46471 --rest-address=0.0.0.0 --nat=extip:172.18.86.55 --peer-exchange=true --discv5-discovery=true --cluster-id=0 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=46472 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-LO4QC3oDYWdKrqpug83u-WoPB5RZQDcDlDL5ffL0TkN5iKicbQLnoUD1vf_bsDPwYVCW62qb6-TGwXbIisXe4KN6sIBgmlkgnY0gmlwhKwSsr6KbXVsdGlhZGRyc4wACgSsErK-BtKh3QOCcnOFAAABAACJc2VjcDI1NmsxoQM3Tqpf5eFn4Jztm4gB0Y0JVSJyxyZsW8QR-QU5DZb-PYN0Y3CC0qCDdWRwgtKihXdha3UyBQ --filternode=/ip4/172.18.178.190/tcp/53920/p2p/16Uiu2HAmGNtM2rQ8abySFNhqPDFY4cmfAEpfo9Z9fD3NekoFR2ip
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:53 docker network connect --ip 172.18.86.55 waku f92da2c91ef28e2508aac6c2c3c70716900cebc25ed99c353f48cf576aad47d7
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:56 Container started with ID f92da2c91ef2. Setting up logs at ./log/docker/node2_2024-05-07_12-17-32__7e77cbb3-483a-4f15-8d51-6464071fa225__harbor.status.im_wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:122 Started container from image harbor.status.im/wakuorg/nwaku:latest. REST: 46468
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:46468/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[35mDEBUG   [0m src.node.waku_node:waku_node.py:194 Health endpoint response object {'nodeHealth': 'Ready', 'protocolsHealth': []}
[32mINFO    [0m src.node.waku_node:waku_node.py:202 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:46468/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.86.55/tcp/46469/p2p/16Uiu2HAkvaBZEumi2NnWrfnqJqqNmD9RbRFYUrCB85BoT4hwBAV4","/ip4/172.18.86.55/tcp/46470/ws/p2p/16Uiu2HAkvaBZEumi2NnWrfnqJqqNmD9RbRFYUrCB85BoT4hwBAV4"],"enrUri":"enr:-LO4QGDi1yZGPf1oKjfXz6c3bRgCgP0Ti_B-hVtseAp6M2BrDABLbdAQzDbpp14dQhNUry90Gl3VFaDa9QhCzShfS8oBgmlkgnY0gmlwhKwSVjeKbXVsdGlhZGRyc4wACgSsElY3BrWG3QOCcnOFAAABAACJc2VjcDI1NmsxoQIRCcaeNAQe9R2NKDiTDhVoKelkeazNsYhbpVMcnDaCT4N0Y3CCtYWDdWRwgrWHhXdha3UyAA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:207 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:46468/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.178.190/tcp/53920/p2p/16Uiu2HAmGNtM2rQ8abySFNhqPDFY4cmfAEpfo9Z9fD3NekoFR2ip"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:53919/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/0/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:46468/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "bc67dadd-dde1-4fe2-b47a-e54af0e452a0", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/0/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"bc67dadd-dde1-4fe2-b47a-e54af0e452a0","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:46468/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "pubsubTopic": "/waku/2/rs/0/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:46468/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:75 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:169 Stopping container with id dcb0176384df
[35mDEBUG   [0m src.node.waku_node:waku_node.py:172 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:169 Stopping container with id f92da2c91ef2
[35mDEBUG   [0m src.node.waku_node:waku_node.py:172 Container stopped.