[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_all_with_invalid_request_id with id: 2024-12-29_19-00-30__e3fa7f65-83ec-4ebc-ae9d-f188a3455421
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-29_19-00-30__e3fa7f65-83ec-4ebc-ae9d-f188a3455421__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.154.137
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['19601', '19602', '19603', '19604', '19605']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 19601:19601 -p 19602:19602 -p 19603:19603 -p 19604:19604 -p 19605:19605 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=19603 --rest-port=19601 --tcp-port=19602 --discv5-udp-port=19604 --rest-address=0.0.0.0 --nat=extip:172.18.154.137 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=950c7aaeef1dc89e8ac961e4a7adb9ab0a90dcbfbde9c3c330bef7ca9ec131ee --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=19605 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.154.137 waku f59f370d41aba5fd18e6c7513caa45054ec621b4310e5ad2724f9e5c7ca60cf8
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID f59f370d41ab. Setting up logs at ./log/docker/node1_2024-12-29_19-00-30__e3fa7f65-83ec-4ebc-ae9d-f188a3455421__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 19601
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container e00e95780b35. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:19601/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:19601/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.154.137/tcp/19602/p2p/16Uiu2HAmMWr9WLsnpq1pH4U1ST4TRBN8to3E8GwsiLhDzFzWBcmC","/ip4/172.18.154.137/tcp/19603/ws/p2p/16Uiu2HAmMWr9WLsnpq1pH4U1ST4TRBN8to3E8GwsiLhDzFzWBcmC"],"enrUri":"enr:-L24QDqtkkSgwswkFF6XLXRGeustkhHlDufdeWdTLi3JzYoZbz0LORhEuDe9m3Jdsv1U7bvbrXO-ZAayMyECoNlMFbMCgmlkgnY0gmlwhKwSmomKbXVsdGlhZGRyc5YACASsEpqJBkySAAoErBKaiQZMk90DgnJzhQADAQAAiXNlY3AyNTZrMaEDg6NCsbvGflff1lJdKewvK8HMapWFwIlvLI71B-BMhO-DdGNwgkySg3VkcIJMlIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-29_19-00-30__e3fa7f65-83ec-4ebc-ae9d-f188a3455421__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.248.202
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['38413', '38414', '38415', '38416', '38417']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 38413:38413 -p 38414:38414 -p 38415:38415 -p 38416:38416 -p 38417:38417 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=38415 --rest-port=38413 --tcp-port=38414 --discv5-udp-port=38416 --rest-address=0.0.0.0 --nat=extip:172.18.248.202 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=dd20f393bcd21bfaaad1c5a30f46d0dfcd0bd32c60f9f3d1316cecbc280428db --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=38417 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QDqtkkSgwswkFF6XLXRGeustkhHlDufdeWdTLi3JzYoZbz0LORhEuDe9m3Jdsv1U7bvbrXO-ZAayMyECoNlMFbMCgmlkgnY0gmlwhKwSmomKbXVsdGlhZGRyc5YACASsEpqJBkySAAoErBKaiQZMk90DgnJzhQADAQAAiXNlY3AyNTZrMaEDg6NCsbvGflff1lJdKewvK8HMapWFwIlvLI71B-BMhO-DdGNwgkySg3VkcIJMlIV3YWt1MgU --filternode=/ip4/172.18.154.137/tcp/19602/p2p/16Uiu2HAmMWr9WLsnpq1pH4U1ST4TRBN8to3E8GwsiLhDzFzWBcmC
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.248.202 waku 49f00d6f3509558a3cc6b65b70679de818ce17f1ce92ce18c8f5e5af572eb6bb
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 49f00d6f3509. Setting up logs at ./log/docker/node2_2024-12-29_19-00-30__e3fa7f65-83ec-4ebc-ae9d-f188a3455421__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 38413
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38413/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38413/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.248.202/tcp/38414/p2p/16Uiu2HAmVJ4FUL4CJiA6mxrL5dB76pTb1VxaCtgKY9TsJkDta2uR","/ip4/172.18.248.202/tcp/38415/ws/p2p/16Uiu2HAmVJ4FUL4CJiA6mxrL5dB76pTb1VxaCtgKY9TsJkDta2uR"],"enrUri":"enr:-L24QE-hvtHvREeVJ2nOrzO9oQahDzS6I2lSFcCnn_GNB6VfUtZXL08LUnh2HEqQsgChv6wPP1ifzMt4wPrjYnBf0OYCgmlkgnY0gmlwhKwS-MqKbXVsdGlhZGRyc5YACASsEvjKBpYOAAoErBL4ygaWD90DgnJzhQADAQAAiXNlY3AyNTZrMaED9znj4RA1Wd5-ARW3RG8VlJaaJ_mnpvAJx4V9FKxBoxyDdGNwgpYOg3VkcIKWEIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38413/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.154.137/tcp/19602/p2p/16Uiu2HAmMWr9WLsnpq1pH4U1ST4TRBN8to3E8GwsiLhDzFzWBcmC"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:19601/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38413/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "eeadb606-a114-47ae-9e6b-4e8788909644", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"eeadb606-a114-47ae-9e6b-4e8788909644","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:38413/filter/v2/subscriptions/all" -H "Content-Type: application/json" -d '{"requestId": 1}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:38413/filter/v2/subscriptions/all. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id f59f370d41ab
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 49f00d6f3509
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container f59f370d41ab. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.