[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_invalid_meta with id: 2024-10-07_04-23-03__6ae0ede6-4d4d-4919-8c91-428e18d5046c
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-10-07_04-23-03__6ae0ede6-4d4d-4919-8c91-428e18d5046c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.32.14
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['33589', '33590', '33591', '33592', '33593']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 33589:33589 -p 33590:33590 -p 33591:33591 -p 33592:33592 -p 33593:33593 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=33591 --rest-port=33589 --tcp-port=33590 --discv5-udp-port=33592 --rest-address=0.0.0.0 --nat=extip:172.18.32.14 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=56fab6b04affcf4dab02bf5cde35fa8cf60de0fee8c50eb0f17da2fee4d72a4c --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=33593 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.32.14 waku 73378f655e9c952890afdbcffb0f0248a036ef54e61732730fc4372048d29ecc
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 73378f655e9c. Setting up logs at ./log/docker/node1_2024-10-07_04-23-03__6ae0ede6-4d4d-4919-8c91-428e18d5046c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 33589
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33589/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33589/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.32.14/tcp/33590/p2p/16Uiu2HAmM8EQD7zmmeLTruijHjzFuiScxyc7QrG7XDnxFZhZQmJb","/ip4/172.18.32.14/tcp/33591/ws/p2p/16Uiu2HAmM8EQD7zmmeLTruijHjzFuiScxyc7QrG7XDnxFZhZQmJb"],"enrUri":"enr:-LO4QLIR9aSDfQtjCjXOxv64WBfuSENoLbE6dlbfMeBcXUqMaeG9Z-hHvtEkCnVDLge206dWeGdyQqBzgwu5vuo713IBgmlkgnY0gmlwhKwSIA6KbXVsdGlhZGRyc4wACgSsEiAOBoM33QOCcnOFAAMBAACJc2VjcDI1NmsxoQN92BBkQSyqfLa2kh_yDuL1OQ88M9suayvHkJuTNFnGxIN0Y3CCgzaDdWRwgoM4hXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-10-07_04-23-03__6ae0ede6-4d4d-4919-8c91-428e18d5046c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.152.139
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['6839', '6840', '6841', '6842', '6843']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 6839:6839 -p 6840:6840 -p 6841:6841 -p 6842:6842 -p 6843:6843 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=6841 --rest-port=6839 --tcp-port=6840 --discv5-udp-port=6842 --rest-address=0.0.0.0 --nat=extip:172.18.152.139 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=5d8de8a65fc8c119eeefb47bee0de8ad547e8c18c21edcafd7cce8aafbedc1ae --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=6843 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QLIR9aSDfQtjCjXOxv64WBfuSENoLbE6dlbfMeBcXUqMaeG9Z-hHvtEkCnVDLge206dWeGdyQqBzgwu5vuo713IBgmlkgnY0gmlwhKwSIA6KbXVsdGlhZGRyc4wACgSsEiAOBoM33QOCcnOFAAMBAACJc2VjcDI1NmsxoQN92BBkQSyqfLa2kh_yDuL1OQ88M9suayvHkJuTNFnGxIN0Y3CCgzaDdWRwgoM4hXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.152.139 waku a48ad0925dfb3f7a206dc876a6133737a1d0b3b5eeb3940a4ab018dab4946bb2
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID a48ad0925dfb. Setting up logs at ./log/docker/node2_2024-10-07_04-23-03__6ae0ede6-4d4d-4919-8c91-428e18d5046c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 6839
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:6839/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:6839/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.152.139/tcp/6840/p2p/16Uiu2HAmNNffysvhe7BXANCMTXMj91T9ryQcvkrCLsERLbmksxF7","/ip4/172.18.152.139/tcp/6841/ws/p2p/16Uiu2HAmNNffysvhe7BXANCMTXMj91T9ryQcvkrCLsERLbmksxF7"],"enrUri":"enr:-LO4QBQlF8D1YkJxlsgdXeA1L3RMKx4HwMRzEsF8IDgcfrhVCRW5x5t90f7NF5KtowMONyJbskJ1KaK_qifNmPOP_S8BgmlkgnY0gmlwhKwSmIuKbXVsdGlhZGRyc4wACgSsEpiLBhq53QOCcnOFAAMBAACJc2VjcDI1NmsxoQOQZnUUQ09DPp5ZUJkzkn0T6Lzd4Hy_qgn6P43qBL6Q7oN0Y3CCGriDdWRwghq6hXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:6839/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.32.14/tcp/33590/p2p/16Uiu2HAmM8EQD7zmmeLTruijHjzFuiScxyc7QrG7XDnxFZhZQmJb"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:33589/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:6839/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:33589/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33589/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1728274987552904192,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:6839/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1728274987552904192,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:33589/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)', "meta": "Relay works!!"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:33589/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Incorrect base64 string'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 73378f655e9c
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id a48ad0925dfb
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.