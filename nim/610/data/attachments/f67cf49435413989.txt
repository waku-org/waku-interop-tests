[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2025-01-08_04-02-48__98f1f0b3-454a-405d-baa1-acc1a7099e03
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-08_04-02-48__98f1f0b3-454a-405d-baa1-acc1a7099e03__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.28.120
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['31467', '31468', '31469', '31470', '31471']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 31467:31467 -p 31468:31468 -p 31469:31469 -p 31470:31470 -p 31471:31471 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=31469 --rest-port=31467 --tcp-port=31468 --discv5-udp-port=31470 --rest-address=0.0.0.0 --nat=extip:172.18.28.120 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=be0ef8672aaba5fcf82545ed6bafb84fbbdcf837e81c35c6c3cb614db3ba03fe --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=31471 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.28.120 waku 9ffdfcfcd9f276d7e4a6c488bbc832058399107e92dab4f2f5ddf1abbcc2d11a
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 9ffdfcfcd9f2. Setting up logs at ./log/docker/node1_2025-01-08_04-02-48__98f1f0b3-454a-405d-baa1-acc1a7099e03__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 31467
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 53dab496e9b7. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:31467/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:31467/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.28.120/tcp/31468/p2p/16Uiu2HAmQskymhwJ9axpdjVfFYcqGarnqXk17c2aZ6YbvRajFHUf","/ip4/172.18.28.120/tcp/31469/ws/p2p/16Uiu2HAmQskymhwJ9axpdjVfFYcqGarnqXk17c2aZ6YbvRajFHUf"],"enrUri":"enr:-L24QNU5bxN97sUSl_6fhSrser_QG2AaPuv6-pzLHcDWRCCfB5Z9zL8fxtGe3aamE5MgKCmVWh1gjX6FqfRN8pCDRi0CgmlkgnY0gmlwhKwSHHiKbXVsdGlhZGRyc5YACASsEhx4BnrsAAoErBIceAZ67d0DgnJzhQADAQAAiXNlY3AyNTZrMaEDtZGszDZ6dShKIQ1nbGUeJe3WX-W0uMazH-tZTiKxg3SDdGNwgnrsg3VkcIJ67oV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-08_04-02-48__98f1f0b3-454a-405d-baa1-acc1a7099e03__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.44.126
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['17982', '17983', '17984', '17985', '17986']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 17982:17982 -p 17983:17983 -p 17984:17984 -p 17985:17985 -p 17986:17986 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=17984 --rest-port=17982 --tcp-port=17983 --discv5-udp-port=17985 --rest-address=0.0.0.0 --nat=extip:172.18.44.126 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=6efeebc4b92b652aaeaa14aeddae9767aa6a39d2cade634299f19b3b29d1cbea --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=17986 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QNU5bxN97sUSl_6fhSrser_QG2AaPuv6-pzLHcDWRCCfB5Z9zL8fxtGe3aamE5MgKCmVWh1gjX6FqfRN8pCDRi0CgmlkgnY0gmlwhKwSHHiKbXVsdGlhZGRyc5YACASsEhx4BnrsAAoErBIceAZ67d0DgnJzhQADAQAAiXNlY3AyNTZrMaEDtZGszDZ6dShKIQ1nbGUeJe3WX-W0uMazH-tZTiKxg3SDdGNwgnrsg3VkcIJ67oV3YWt1MgU --filternode=/ip4/172.18.28.120/tcp/31468/p2p/16Uiu2HAmQskymhwJ9axpdjVfFYcqGarnqXk17c2aZ6YbvRajFHUf
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.44.126 waku d918cea1c57bbbf171290bde13967822a9a9c3d66588e0ba3fb3d1d512dd2ac2
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID d918cea1c57b. Setting up logs at ./log/docker/node2_2025-01-08_04-02-48__98f1f0b3-454a-405d-baa1-acc1a7099e03__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 17982
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17982/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17982/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.44.126/tcp/17983/p2p/16Uiu2HAmGC4HiCYjRWhT1jz7sBBkoDn75YZzGcDneBY3n3NTWsWV","/ip4/172.18.44.126/tcp/17984/ws/p2p/16Uiu2HAmGC4HiCYjRWhT1jz7sBBkoDn75YZzGcDneBY3n3NTWsWV"],"enrUri":"enr:-L24QOK_vlZafYhFLaHGM38TI7F32lCv00uIfY5jQ_NWbLjRQYeXyktwoVr3kY-RfEe3hwtJdlqEZFiA1zbSlDBJCGICgmlkgnY0gmlwhKwSLH6KbXVsdGlhZGRyc5YACASsEix-BkY_AAoErBIsfgZGQN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDNIiE1yUANU4wD9yenFflAAx-lTECIaBo387jFOA79P6DdGNwgkY_g3VkcIJGQYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17982/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.28.120/tcp/31468/p2p/16Uiu2HAmQskymhwJ9axpdjVfFYcqGarnqXk17c2aZ6YbvRajFHUf"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:31467/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17982/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "d51815be-7385-44a1-86aa-e87c38d4ab19", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"d51815be-7385-44a1-86aa-e87c38d4ab19","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:17982/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:17982/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 9ffdfcfcd9f2
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id d918cea1c57b
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 9ffdfcfcd9f2. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.