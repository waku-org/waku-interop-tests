[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_no_request_id with id: 2024-12-29_11-31-12__66fa6e39-b74e-432a-bfb8-fdaebf586c92
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-29_11-31-12__66fa6e39-b74e-432a-bfb8-fdaebf586c92__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.12.16
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['8379', '8380', '8381', '8382', '8383']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 8379:8379 -p 8380:8380 -p 8381:8381 -p 8382:8382 -p 8383:8383 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=8381 --rest-port=8379 --tcp-port=8380 --discv5-udp-port=8382 --rest-address=0.0.0.0 --nat=extip:172.18.12.16 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=37dee16e25fa2dcfe081d71d8cee6cefbee845dedcced20bc3b9a36ebcd7cbb6 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=8383 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.12.16 waku fe4b199c208c8aac022fc4a4b224380d7ab1854f4b9834de6610ca45a1f23c5e
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID fe4b199c208c. Setting up logs at ./log/docker/node1_2024-12-29_11-31-12__66fa6e39-b74e-432a-bfb8-fdaebf586c92__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 8379
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 430b7e33fd39. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8379/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8379/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.12.16/tcp/8380/p2p/16Uiu2HAkw7CBkast6y7oQRNqXBWRvX3YwneAJj9hyZJGhJV5Cydp","/ip4/172.18.12.16/tcp/8381/ws/p2p/16Uiu2HAkw7CBkast6y7oQRNqXBWRvX3YwneAJj9hyZJGhJV5Cydp"],"enrUri":"enr:-L24QLMQk9fgL58q0eFd2rN4PZvXr9BFXnDVcyXXLtZFW54wU6JtLxU8Cqx6Cexqt9bV1WZAC_wdZaC9aGpKhwqQLBECgmlkgnY0gmlwhKwSDBCKbXVsdGlhZGRyc5YACASsEgwQBiC8AAoErBIMEAYgvd0DgnJzhQADAQAAiXNlY3AyNTZrMaECGPt-IxbU_9geoNFzWTDScUyjTFxXDqfFKPZ9DNr3sO-DdGNwgiC8g3VkcIIgvoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-29_11-31-12__66fa6e39-b74e-432a-bfb8-fdaebf586c92__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.226.142
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['47694', '47695', '47696', '47697', '47698']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 47694:47694 -p 47695:47695 -p 47696:47696 -p 47697:47697 -p 47698:47698 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=47696 --rest-port=47694 --tcp-port=47695 --discv5-udp-port=47697 --rest-address=0.0.0.0 --nat=extip:172.18.226.142 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=26174a71c0d6cecbebb1abeddedcf7baafa0a7fa98bfaf1149ebd6a0bbc59daa --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=47698 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QLMQk9fgL58q0eFd2rN4PZvXr9BFXnDVcyXXLtZFW54wU6JtLxU8Cqx6Cexqt9bV1WZAC_wdZaC9aGpKhwqQLBECgmlkgnY0gmlwhKwSDBCKbXVsdGlhZGRyc5YACASsEgwQBiC8AAoErBIMEAYgvd0DgnJzhQADAQAAiXNlY3AyNTZrMaECGPt-IxbU_9geoNFzWTDScUyjTFxXDqfFKPZ9DNr3sO-DdGNwgiC8g3VkcIIgvoV3YWt1MgU --filternode=/ip4/172.18.12.16/tcp/8380/p2p/16Uiu2HAkw7CBkast6y7oQRNqXBWRvX3YwneAJj9hyZJGhJV5Cydp
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.226.142 waku 6969dbcdab317d881074a7a4289e38c54888f8f7263d592f2f0d49ebffad9891
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 6969dbcdab31. Setting up logs at ./log/docker/node2_2024-12-29_11-31-12__66fa6e39-b74e-432a-bfb8-fdaebf586c92__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 47694
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:47694/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:47694/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.226.142/tcp/47695/p2p/16Uiu2HAm3Ngjn9Ad5q748c39FwmCHu2ePrPYht3kxY3VUHZtZAes","/ip4/172.18.226.142/tcp/47696/ws/p2p/16Uiu2HAm3Ngjn9Ad5q748c39FwmCHu2ePrPYht3kxY3VUHZtZAes"],"enrUri":"enr:-L24QC4lFtnLVV0szPtcOaEBdjbyfiJNlH5WUKNZ8aYzzoZmY_-i_EPkOORB3fkZp0l3Fg8DGZDyh3YasO5kFIih0sECgmlkgnY0gmlwhKwS4o6KbXVsdGlhZGRyc5YACASsEuKOBrpPAAoErBLijga6UN0DgnJzhQADAQAAiXNlY3AyNTZrMaECdhmcSEXmAJEUCZ7sTK5Yx0ZXYZcb-cF04SpFEt2DBYiDdGNwgrpPg3VkcIK6UYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:47694/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.12.16/tcp/8380/p2p/16Uiu2HAkw7CBkast6y7oQRNqXBWRvX3YwneAJj9hyZJGhJV5Cydp"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8379/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:47694/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "70c8a477-3e9c-4261-87ec-5bbadd6eb772", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"70c8a477-3e9c-4261-87ec-5bbadd6eb772","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:47694/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:47694/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id fe4b199c208c
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 6969dbcdab31
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container fe4b199c208c. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.