[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_no_request_id with id: 2024-12-29_11-30-56__c7ae63a1-3a85-4506-84fa-625a89c6879f
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-29_11-30-56__c7ae63a1-3a85-4506-84fa-625a89c6879f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.48.128
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['44211', '44212', '44213', '44214', '44215']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 44211:44211 -p 44212:44212 -p 44213:44213 -p 44214:44214 -p 44215:44215 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=44213 --rest-port=44211 --tcp-port=44212 --discv5-udp-port=44214 --rest-address=0.0.0.0 --nat=extip:172.18.48.128 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=85f1f260d28ba38544ce5ab2637133ffa14bbfae4d682f8e9cfaef80df2904ee --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=44215 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.48.128 waku 1c46270fd6b9df3649501bf3d4b07935dad607177be6d29333a67f9eabfc0fbc
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 1c46270fd6b9. Setting up logs at ./log/docker/node1_2024-12-29_11-30-56__c7ae63a1-3a85-4506-84fa-625a89c6879f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 44211
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 5ce1e0bb0f53. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:44211/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:44211/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.48.128/tcp/44212/p2p/16Uiu2HAm5jEDGwG1oFWsgPwgMNJ1bbieBpJfxpxr3dSSVw9PkubN","/ip4/172.18.48.128/tcp/44213/ws/p2p/16Uiu2HAm5jEDGwG1oFWsgPwgMNJ1bbieBpJfxpxr3dSSVw9PkubN"],"enrUri":"enr:-L24QFyzGn6B-yVwAsJuLPzmfPpyPtI_GPVbOfqfdwlqFkREUrdhUjzK1ZuLGFDsNdeaWgJFpUC7ae6GXyz9MLzRXUgCgmlkgnY0gmlwhKwSMICKbXVsdGlhZGRyc5YACASsEjCABqy0AAoErBIwgAastd0DgnJzhQADAQAAiXNlY3AyNTZrMaECmRQwOKMk0_7ifvoxcep9V6GmXgZF1QXJqYrzkwfDrrGDdGNwgqy0g3VkcIKstoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-29_11-30-56__c7ae63a1-3a85-4506-84fa-625a89c6879f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.240.11
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['40208', '40209', '40210', '40211', '40212']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 40208:40208 -p 40209:40209 -p 40210:40210 -p 40211:40211 -p 40212:40212 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=40210 --rest-port=40208 --tcp-port=40209 --discv5-udp-port=40211 --rest-address=0.0.0.0 --nat=extip:172.18.240.11 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e0c6c85be304156c41db3ab0f49523dbac0fa765acc7de3d3bc7c27a287b80ff --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=40212 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QFyzGn6B-yVwAsJuLPzmfPpyPtI_GPVbOfqfdwlqFkREUrdhUjzK1ZuLGFDsNdeaWgJFpUC7ae6GXyz9MLzRXUgCgmlkgnY0gmlwhKwSMICKbXVsdGlhZGRyc5YACASsEjCABqy0AAoErBIwgAastd0DgnJzhQADAQAAiXNlY3AyNTZrMaECmRQwOKMk0_7ifvoxcep9V6GmXgZF1QXJqYrzkwfDrrGDdGNwgqy0g3VkcIKstoV3YWt1MgU --filternode=/ip4/172.18.48.128/tcp/44212/p2p/16Uiu2HAm5jEDGwG1oFWsgPwgMNJ1bbieBpJfxpxr3dSSVw9PkubN
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.240.11 waku 7a907a84fd6475e1329a277fb584915813fd1f17ae2895a058ed79c3eb45092c
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 7a907a84fd64. Setting up logs at ./log/docker/node2_2024-12-29_11-30-56__c7ae63a1-3a85-4506-84fa-625a89c6879f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 40208
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:40208/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:40208/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.240.11/tcp/40209/p2p/16Uiu2HAm8xi8dZZdtHPX56pkKXza3fqrfjS94h1Hdi5rJxV3QSAt","/ip4/172.18.240.11/tcp/40210/ws/p2p/16Uiu2HAm8xi8dZZdtHPX56pkKXza3fqrfjS94h1Hdi5rJxV3QSAt"],"enrUri":"enr:-L24QLu7KAI24aVi9dl-4xr5mezetI0_k_epgMopEAMoen-wI3wDGeVopSTf0ZzwYGv-nK5ZOE70YFKNDUDQ0DV_Z08CgmlkgnY0gmlwhKwS8AuKbXVsdGlhZGRyc5YACASsEvALBp0RAAoErBLwCwadEt0DgnJzhQADAQAAiXNlY3AyNTZrMaECyRteawUcUEHXBVp7TPxr3Aqr5HKrOqu5is_PHGSIozmDdGNwgp0Rg3VkcIKdE4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:40208/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.48.128/tcp/44212/p2p/16Uiu2HAm5jEDGwG1oFWsgPwgMNJ1bbieBpJfxpxr3dSSVw9PkubN"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:44211/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:40208/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "8cfff441-9201-45b6-8140-2c05c1b031d7", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"8cfff441-9201-45b6-8140-2c05c1b031d7","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:40208/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:40208/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 1c46270fd6b9
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 7a907a84fd64
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 1c46270fd6b9. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.