[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_extra_field with id: 2024-12-29_11-32-08__f015d4b9-0e63-4a02-8474-c91add27763c
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-29_11-32-08__f015d4b9-0e63-4a02-8474-c91add27763c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.109.18
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['38199', '38200', '38201', '38202', '38203']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 38199:38199 -p 38200:38200 -p 38201:38201 -p 38202:38202 -p 38203:38203 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=38201 --rest-port=38199 --tcp-port=38200 --discv5-udp-port=38202 --rest-address=0.0.0.0 --nat=extip:172.18.109.18 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=dd0a9724f4d47fbda69232c586c8fa95005f05c3d458ee3237f80df5eaf9bf80 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=38203 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.109.18 waku d6415d1412ad4d9431df28dba45769681ee0d1d40936e3949f592cf0b3f1759c
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID d6415d1412ad. Setting up logs at ./log/docker/node1_2024-12-29_11-32-08__f015d4b9-0e63-4a02-8474-c91add27763c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 38199
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 0c5f89d9aec3. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38199/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38199/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.109.18/tcp/38200/p2p/16Uiu2HAmE6sUcJ7gsvHQmpgFf6C18EbYfz7fG5KGW9dVUToacUjK","/ip4/172.18.109.18/tcp/38201/ws/p2p/16Uiu2HAmE6sUcJ7gsvHQmpgFf6C18EbYfz7fG5KGW9dVUToacUjK"],"enrUri":"enr:-L24QCkAKmlf4A3uOsNCwntgCj15s2f69uoiLWxn4MZnNHxHeLi9Ees8uXzgoJtuUPAG6QF06C30xpzw_cKzAHO3K24CgmlkgnY0gmlwhKwSbRKKbXVsdGlhZGRyc5YACASsEm0SBpU4AAoErBJtEgaVOd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDFX0EBth618mObfVF7MjejqwCvJuc_2cGJQcR3Wjci6qDdGNwgpU4g3VkcIKVOoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-29_11-32-08__f015d4b9-0e63-4a02-8474-c91add27763c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.178.194
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['16593', '16594', '16595', '16596', '16597']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 16593:16593 -p 16594:16594 -p 16595:16595 -p 16596:16596 -p 16597:16597 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=16595 --rest-port=16593 --tcp-port=16594 --discv5-udp-port=16596 --rest-address=0.0.0.0 --nat=extip:172.18.178.194 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=2d8894bbc4c69416bc0e63ed7558e0a6c48c6e8c17f4da3eabd65cad5bcbaf1e --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=16597 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QCkAKmlf4A3uOsNCwntgCj15s2f69uoiLWxn4MZnNHxHeLi9Ees8uXzgoJtuUPAG6QF06C30xpzw_cKzAHO3K24CgmlkgnY0gmlwhKwSbRKKbXVsdGlhZGRyc5YACASsEm0SBpU4AAoErBJtEgaVOd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDFX0EBth618mObfVF7MjejqwCvJuc_2cGJQcR3Wjci6qDdGNwgpU4g3VkcIKVOoV3YWt1MgU --filternode=/ip4/172.18.109.18/tcp/38200/p2p/16Uiu2HAmE6sUcJ7gsvHQmpgFf6C18EbYfz7fG5KGW9dVUToacUjK
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.178.194 waku 5f17fe8613d4580a91de321e64d1e3b7a8d26581f3ebfb3bdbbf6f6e5e9927af
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 5f17fe8613d4. Setting up logs at ./log/docker/node2_2024-12-29_11-32-08__f015d4b9-0e63-4a02-8474-c91add27763c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 16593
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:16593/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:16593/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.178.194/tcp/16594/p2p/16Uiu2HAmBw4aNwvfYFa19FGzF75Vuo5Xsx4RdzJ9fGs7RKEGZn8n","/ip4/172.18.178.194/tcp/16595/ws/p2p/16Uiu2HAmBw4aNwvfYFa19FGzF75Vuo5Xsx4RdzJ9fGs7RKEGZn8n"],"enrUri":"enr:-L24QLccxtqnFwRMUPXr12Q_RViIebLtIswsxgET--8OZ5YEU_usqt7NMxaWRoc_CwRf2WwpAQF1Km9KdgFgf46O7GwCgmlkgnY0gmlwhKwSssKKbXVsdGlhZGRyc5YACASsErLCBkDSAAoErBKywgZA090DgnJzhQADAQAAiXNlY3AyNTZrMaEC9UJiTmCWwSJbhXQX5YzBOdt_xdOl15XMj7ErWooWpaeDdGNwgkDSg3VkcIJA1IV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:16593/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.109.18/tcp/38200/p2p/16Uiu2HAmE6sUcJ7gsvHQmpgFf6C18EbYfz7fG5KGW9dVUToacUjK"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38199/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:16593/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "7706f4a2-8aa8-4ada-b1e1-c2b3a4fd730e", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"7706f4a2-8aa8-4ada-b1e1-c2b3a4fd730e","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:16593/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:16593/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id d6415d1412ad
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 5f17fe8613d4
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container d6415d1412ad. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.