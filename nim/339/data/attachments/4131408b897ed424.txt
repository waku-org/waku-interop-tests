[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_invalid_version with id: 2024-08-30_04-24-27__74d2c1fa-2dba-4397-8e89-b53496e38a04
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-08-30_04-24-27__74d2c1fa-2dba-4397-8e89-b53496e38a04__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.110.242
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['6961', '6962', '6963', '6964', '6965']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:431 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 6961:6961 -p 6962:6962 -p 6963:6963 -p 6964:6964 -p 6965:6965 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=6963 --rest-port=6961 --tcp-port=6962 --discv5-udp-port=6964 --rest-address=0.0.0.0 --nat=extip:172.18.110.242 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=f34ce6e3a16faa7594eacff1ef8fa93e1681b98afef7f6f42cd6ada19c2199e5 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=6965 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.110.242 waku 743c89de707878218084adcdf5cc3b46884c3444ed1c5c78cd646e75d30a3912
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 743c89de7078. Setting up logs at ./log/docker/node1_2024-08-30_04-24-27__74d2c1fa-2dba-4397-8e89-b53496e38a04__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 6961
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:6961/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:6961/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.110.242/tcp/6962/p2p/16Uiu2HAmNMrWY1sgcLtZJJhXSuQEj7Q1SZ8y5tdm6c84h6fLhVyE","/ip4/172.18.110.242/tcp/6963/ws/p2p/16Uiu2HAmNMrWY1sgcLtZJJhXSuQEj7Q1SZ8y5tdm6c84h6fLhVyE"],"enrUri":"enr:-LO4QGTiGI--mbguTpBQ1-xtQ2RB8lpVh6WubolicmVuZuDCOp592G-wzZjSTC45V8LYrzpFeHtZdbgg5dymmMV_pEwBgmlkgnY0gmlwhKwSbvKKbXVsdGlhZGRyc4wACgSsEm7yBhsz3QOCcnOFAAMBAACJc2VjcDI1NmsxoQOQMSFPzhe_beqj_RmDAKACqp5KU0e4kpzQYFtOU-8xHYN0Y3CCGzKDdWRwghs0hXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-08-30_04-24-27__74d2c1fa-2dba-4397-8e89-b53496e38a04__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.83.170
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['34853', '34854', '34855', '34856', '34857']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:431 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 34853:34853 -p 34854:34854 -p 34855:34855 -p 34856:34856 -p 34857:34857 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=34855 --rest-port=34853 --tcp-port=34854 --discv5-udp-port=34856 --rest-address=0.0.0.0 --nat=extip:172.18.83.170 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=2ea8ff72aef7ec7e0b3dfaa75e1eba23d6f6b1325f38af1e23f6a09126d9d0a8 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=34857 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QGTiGI--mbguTpBQ1-xtQ2RB8lpVh6WubolicmVuZuDCOp592G-wzZjSTC45V8LYrzpFeHtZdbgg5dymmMV_pEwBgmlkgnY0gmlwhKwSbvKKbXVsdGlhZGRyc4wACgSsEm7yBhsz3QOCcnOFAAMBAACJc2VjcDI1NmsxoQOQMSFPzhe_beqj_RmDAKACqp5KU0e4kpzQYFtOU-8xHYN0Y3CCGzKDdWRwghs0hXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.83.170 waku f027c0622b6529dc3f57bcdcaaf912e5a1b349c9f4b999230f02524ef9028e15
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID f027c0622b65. Setting up logs at ./log/docker/node2_2024-08-30_04-24-27__74d2c1fa-2dba-4397-8e89-b53496e38a04__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 34853
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:34853/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:34853/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.83.170/tcp/34854/p2p/16Uiu2HAm1xrUW32usLfcj6a51ndD9nvDqq6GkXAfKNo3zx5KPwb3","/ip4/172.18.83.170/tcp/34855/ws/p2p/16Uiu2HAm1xrUW32usLfcj6a51ndD9nvDqq6GkXAfKNo3zx5KPwb3"],"enrUri":"enr:-LO4QLs-tvLJYZ01GCRJu0XYmErdaIAukwlO9aRZFdvEvigne25821MxBaCDFzSHY9IVSRfO0eiR2slc3Ik9dF4iEZQBgmlkgnY0gmlwhKwSU6qKbXVsdGlhZGRyc4wACgSsElOqBogn3QOCcnOFAAMBAACJc2VjcDI1NmsxoQJhIv5LELWoneNEqyl6nh3W3S_JrM-ZjqFzQn6fRoDunoN0Y3CCiCaDdWRwgogohXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:34853/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.110.242/tcp/6962/p2p/16Uiu2HAmNMrWY1sgcLtZJJhXSuQEj7Q1SZ8y5tdm6c84h6fLhVyE"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:6961/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:34853/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:6961/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:6961/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1724991871323262720,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:34853/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1724991871323262720,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:6961/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)', "version": 2.1}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:6961/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 743c89de7078
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id f027c0622b65
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.