[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_on_non_subscribed_pubsub_topic with id: 2024-08-30_04-24-13__8a689c55-53f1-4f11-9640-1d0e3bcef924
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-08-30_04-24-13__8a689c55-53f1-4f11-9640-1d0e3bcef924__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.77.121
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['42070', '42071', '42072', '42073', '42074']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:431 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 42070:42070 -p 42071:42071 -p 42072:42072 -p 42073:42073 -p 42074:42074 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=42072 --rest-port=42070 --tcp-port=42071 --discv5-udp-port=42073 --rest-address=0.0.0.0 --nat=extip:172.18.77.121 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b62d0eb6caa3edcbecbda19ebbfebb6edd7b17ce9b96eaa39bd0acbcf76e1d65 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=42074 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.77.121 waku 7fd4566f6c3a9e95d6524ffc443333c582ac097dd9523b45bd4a41c223a0c533
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 7fd4566f6c3a. Setting up logs at ./log/docker/node1_2024-08-30_04-24-13__8a689c55-53f1-4f11-9640-1d0e3bcef924__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 42070
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:42070/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:42070/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.77.121/tcp/42071/p2p/16Uiu2HAmEknJ2hi5XWaxvdBa8u4nfyVJe3p3PyjQBA4jZc1zYC17","/ip4/172.18.77.121/tcp/42072/ws/p2p/16Uiu2HAmEknJ2hi5XWaxvdBa8u4nfyVJe3p3PyjQBA4jZc1zYC17"],"enrUri":"enr:-LO4QIF4O3TVm76wtZlx_sJ3d_fYEpxQdaoC7JfZAFWXs0G-JeD48ked-QvgzfQLKnjPeTnx5_hibdrnoBPUOrwd9UMBgmlkgnY0gmlwhKwSTXmKbXVsdGlhZGRyc4wACgSsEk15BqRY3QOCcnOFAAMBAACJc2VjcDI1NmsxoQMfMzoKEIPZiCFMOnix03m99DvFDcaAWYcswP54Z4PKuoN0Y3CCpFeDdWRwgqRZhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-08-30_04-24-13__8a689c55-53f1-4f11-9640-1d0e3bcef924__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.100.75
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['65478', '65479', '65480', '65481', '65482']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:431 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 65478:65478 -p 65479:65479 -p 65480:65480 -p 65481:65481 -p 65482:65482 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=65480 --rest-port=65478 --tcp-port=65479 --discv5-udp-port=65481 --rest-address=0.0.0.0 --nat=extip:172.18.100.75 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=9ebbb9810c3ae696baa40bc5469f76eed30db0bf94ac2b08ce34c7c5baacbce1 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=65482 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QIF4O3TVm76wtZlx_sJ3d_fYEpxQdaoC7JfZAFWXs0G-JeD48ked-QvgzfQLKnjPeTnx5_hibdrnoBPUOrwd9UMBgmlkgnY0gmlwhKwSTXmKbXVsdGlhZGRyc4wACgSsEk15BqRY3QOCcnOFAAMBAACJc2VjcDI1NmsxoQMfMzoKEIPZiCFMOnix03m99DvFDcaAWYcswP54Z4PKuoN0Y3CCpFeDdWRwgqRZhXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.100.75 waku 1a39f7315f0c5af65964b45e8ce666f40f96da2c3319b5c6f860a03c8d34947e
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 1a39f7315f0c. Setting up logs at ./log/docker/node2_2024-08-30_04-24-13__8a689c55-53f1-4f11-9640-1d0e3bcef924__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 65478
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:65478/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:65478/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.100.75/tcp/65479/p2p/16Uiu2HAm3XiiRUC8SocsmxdDyK7KTosZLMXWJ4VuweCyY5gjoyin","/ip4/172.18.100.75/tcp/65480/ws/p2p/16Uiu2HAm3XiiRUC8SocsmxdDyK7KTosZLMXWJ4VuweCyY5gjoyin"],"enrUri":"enr:-LO4QJZCNU_8IhzIa4yr8ZuGr0t-K9JDXL2u0fMHNDp06qhHTdKq41kwknBQY8Qre505zyNwSwc3bY__qXBKd2YKrn0BgmlkgnY0gmlwhKwSZEuKbXVsdGlhZGRyc4wACgSsEmRLBv_I3QOCcnOFAAMBAACJc2VjcDI1NmsxoQJ4ahKeAtdVF5HA0vn21hAaUG6FJ4zPvP26gDVDHG9FB4N0Y3CC_8eDdWRwgv_JhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:65478/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.77.121/tcp/42071/p2p/16Uiu2HAmEknJ2hi5XWaxvdBa8u4nfyVJe3p3PyjQBA4jZc1zYC17"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:42070/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:65478/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:42070/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:42070/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1724991856362734592,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:65478/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1724991856362734592,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:42070/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1000" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:42070/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1000. Response content: b'Failed to publish: Node not subscribed to topic: /waku/2/rs/3/1000'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 7fd4566f6c3a
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 1a39f7315f0c
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.