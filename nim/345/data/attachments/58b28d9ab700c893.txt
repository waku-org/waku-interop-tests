[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_invalid_version with id: 2024-09-05_04-24-43__7351331a-2c69-4d13-afa4-42d81538ce6a
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-09-05_04-24-43__7351331a-2c69-4d13-afa4-42d81538ce6a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.165.246
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['8004', '8005', '8006', '8007', '8008']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 8004:8004 -p 8005:8005 -p 8006:8006 -p 8007:8007 -p 8008:8008 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=8006 --rest-port=8004 --tcp-port=8005 --discv5-udp-port=8007 --rest-address=0.0.0.0 --nat=extip:172.18.165.246 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=00e0e5788f4aca02413fc4fe035faa6a8353f2a5b97b904d3d1f58df1bf499b7 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=8008 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.165.246 waku db5f0ae40126ede5d29eea9742e34cb000909f70a065c61e25c0fe85a2dbd028
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID db5f0ae40126. Setting up logs at ./log/docker/node1_2024-09-05_04-24-43__7351331a-2c69-4d13-afa4-42d81538ce6a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 8004
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8004/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8004/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.165.246/tcp/8005/p2p/16Uiu2HAm2MDDJcDTFDCyLv2WvoSD28ybBmNkFFxoEzFk3cSpU76P","/ip4/172.18.165.246/tcp/8006/ws/p2p/16Uiu2HAm2MDDJcDTFDCyLv2WvoSD28ybBmNkFFxoEzFk3cSpU76P"],"enrUri":"enr:-LO4QPZNRUVVsWfmB90mw3_VjMjJvoOfoUxhl4AaX8pehvhHd5fa0A3WiitNoCpqoTjjMh4oDspPXP9WD1IP3TuSs6gBgmlkgnY0gmlwhKwSpfaKbXVsdGlhZGRyc4wACgSsEqX2Bh9G3QOCcnOFAAMBAACJc2VjcDI1NmsxoQJm3Tg6kxhtHTRJK6opF9wNYiye6gAknqBTJUNehi9HmIN0Y3CCH0WDdWRwgh9HhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-09-05_04-24-43__7351331a-2c69-4d13-afa4-42d81538ce6a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.57.36
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['10459', '10460', '10461', '10462', '10463']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 10459:10459 -p 10460:10460 -p 10461:10461 -p 10462:10462 -p 10463:10463 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=10461 --rest-port=10459 --tcp-port=10460 --discv5-udp-port=10462 --rest-address=0.0.0.0 --nat=extip:172.18.57.36 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=f29dadded0bb1aedce8b1d8ceee714b105dd46ee1badcee6ebba4e7eccc7acc7 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=10463 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QPZNRUVVsWfmB90mw3_VjMjJvoOfoUxhl4AaX8pehvhHd5fa0A3WiitNoCpqoTjjMh4oDspPXP9WD1IP3TuSs6gBgmlkgnY0gmlwhKwSpfaKbXVsdGlhZGRyc4wACgSsEqX2Bh9G3QOCcnOFAAMBAACJc2VjcDI1NmsxoQJm3Tg6kxhtHTRJK6opF9wNYiye6gAknqBTJUNehi9HmIN0Y3CCH0WDdWRwgh9HhXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.57.36 waku 01b6e96c89003af030ff4e59e481743c2e5ac15fa09fa10c41223e7a8ab026b3
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 01b6e96c8900. Setting up logs at ./log/docker/node2_2024-09-05_04-24-43__7351331a-2c69-4d13-afa4-42d81538ce6a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 10459
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10459/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10459/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.57.36/tcp/10460/p2p/16Uiu2HAkxRtPvxBiH1zBoGs8TKZbX4tCrmZbtbC1mDCKpumm3mk3","/ip4/172.18.57.36/tcp/10461/ws/p2p/16Uiu2HAkxRtPvxBiH1zBoGs8TKZbX4tCrmZbtbC1mDCKpumm3mk3"],"enrUri":"enr:-LO4QGt3IKn6Lc1DnbUbMfSJxSQVf86113DHgRop988ckluANbGNRV-7BETl6J4gDWEx4QqYQ45cs8uEaGkKR0uw_E8BgmlkgnY0gmlwhKwSOSSKbXVsdGlhZGRyc4wACgSsEjkkBijd3QOCcnOFAAMBAACJc2VjcDI1NmsxoQIsoRmLMTnktHXS_vAjzUofh6dO91jhoeUcwBXbn6lJAIN0Y3CCKNyDdWRwgijehXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:10459/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.165.246/tcp/8005/p2p/16Uiu2HAm2MDDJcDTFDCyLv2WvoSD28ybBmNkFFxoEzFk3cSpU76P"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8004/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:10459/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8004/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8004/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1725510286656344832,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10459/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1725510286656344832,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8004/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)', "version": 2.1}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:8004/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id db5f0ae40126
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 01b6e96c8900
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.