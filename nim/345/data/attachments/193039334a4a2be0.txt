[35mDEBUG   [0m src.postgres_setup:postgres_setup.py:36 Postgres container started
[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_on_empty_postgress_db with id: 2024-09-05_04-32-01__ce1e8367-f093-426d-9518-6cc74cd71774
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.store:store.py:28 Running fixture setup: store_setup
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/publishing_node1_2024-09-05_04-32-01__ce1e8367-f093-426d-9518-6cc74cd71774__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.26.228
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['55234', '55235', '55236', '55237', '55238']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 55234:55234 -p 55235:55235 -p 55236:55236 -p 55237:55237 -p 55238:55238 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=55236 --rest-port=55234 --tcp-port=55235 --discv5-udp-port=55237 --rest-address=0.0.0.0 --nat=extip:172.18.26.228 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e3d76caeef1bc8a6134eaf5c549ae6d3021bac0f92abfb471fe9292f29b0d56e --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=55238 --metrics-logging=true --store=true --relay=true --store-message-db-url=postgres://postgres:test123@postgres:5432/postgres
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.26.228 waku d3004eab039fd523e2325fc61c3bde783d9c8d62783fda77a249d840542491fa
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID d3004eab039f. Setting up logs at ./log/docker/publishing_node1_2024-09-05_04-32-01__ce1e8367-f093-426d-9518-6cc74cd71774__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 55234
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:55234/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Initializing","protocolsHealth":[]}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:55234/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Initializing","protocolsHealth":[]}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:55234/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:55234/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.26.228/tcp/55235/p2p/16Uiu2HAkx66aPjyvz5rqPmPhj5R6DeN3bmqQxRctLeUjQZFwPR2R","/ip4/172.18.26.228/tcp/55236/ws/p2p/16Uiu2HAkx66aPjyvz5rqPmPhj5R6DeN3bmqQxRctLeUjQZFwPR2R"],"enrUri":"enr:-LO4QBohiFgDUUGpQEMSnyOdnF4xJrmb189gyRpwWj5BN-waLzIMqLtj22R7kotlFLrHHdDJnFSHMNdsienuhmvQvYcBgmlkgnY0gmlwhKwSGuSKbXVsdGlhZGRyc4wACgSsEhrkBtfE3QOCcnOFAAMBAACJc2VjcDI1NmsxoQInj0GI6GcqHZrdNnJMGDRnjzO03wFOI6hGMVYUsvHIwoN0Y3CC18ODdWRwgtfFhXdha3UyAw"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/store_node1_2024-09-05_04-32-01__ce1e8367-f093-426d-9518-6cc74cd71774__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.202.39
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['12679', '12680', '12681', '12682', '12683']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 12679:12679 -p 12680:12680 -p 12681:12681 -p 12682:12682 -p 12683:12683 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=12681 --rest-port=12679 --tcp-port=12680 --discv5-udp-port=12682 --rest-address=0.0.0.0 --nat=extip:172.18.202.39 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=549ebaadac20b1db33fae0b8de8bf892d9cbc4db5f9dcafddd4bc8c7fd98c7e0 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=12683 --metrics-logging=true --discv5-bootstrap-node=enr:-LO4QBohiFgDUUGpQEMSnyOdnF4xJrmb189gyRpwWj5BN-waLzIMqLtj22R7kotlFLrHHdDJnFSHMNdsienuhmvQvYcBgmlkgnY0gmlwhKwSGuSKbXVsdGlhZGRyc4wACgSsEhrkBtfE3QOCcnOFAAMBAACJc2VjcDI1NmsxoQInj0GI6GcqHZrdNnJMGDRnjzO03wFOI6hGMVYUsvHIwoN0Y3CC18ODdWRwgtfFhXdha3UyAw --storenode=/ip4/172.18.26.228/tcp/55235/p2p/16Uiu2HAkx66aPjyvz5rqPmPhj5R6DeN3bmqQxRctLeUjQZFwPR2R --store=false --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.202.39 waku 2a08ce36e99d69468722dc000dab84d50b8b79ea2cefa22ed0efc5ec3ca7227b
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 2a08ce36e99d. Setting up logs at ./log/docker/store_node1_2024-09-05_04-32-01__ce1e8367-f093-426d-9518-6cc74cd71774__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 12679
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:12679/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:12679/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.202.39/tcp/12680/p2p/16Uiu2HAkz9Rrpifu4s7aR2hiJemjHdnyuYLDdmjqetouNcE7pMqn","/ip4/172.18.202.39/tcp/12681/ws/p2p/16Uiu2HAkz9Rrpifu4s7aR2hiJemjHdnyuYLDdmjqetouNcE7pMqn"],"enrUri":"enr:-LO4QJKombvkjFrwFBmzI7oIdRpA04e0CDXaQLLyFa4hHvS7R2zn883xp_180Tx8f9C1sALLSJUzz6ooJBbFXvPw4zYBgmlkgnY0gmlwhKwSyieKbXVsdGlhZGRyc4wACgSsEsonBjGJ3QOCcnOFAAMBAACJc2VjcDI1NmsxoQJGIS0LihFCcNHNoNy50A7L20md3rTxkWvdFN0x-vNR9YN0Y3CCMYiDdWRwgjGKhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:12679/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.26.228/tcp/55235/p2p/16Uiu2HAkx66aPjyvz5rqPmPhj5R6DeN3bmqQxRctLeUjQZFwPR2R"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:55234/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/0"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:12679/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/0"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.store:store.py:129 Relaying message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:55234/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F0" -H "Content-Type: application/json" -d '{"payload": "U3RvcmUgd29ya3MhIQ==", "contentTopic": "/myapp/1/latest/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.2 seconds
[35mDEBUG   [0m src.steps.store:store.py:217 Checking that peer wakuorg/nwaku:latest can find the stored message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:55234/store/v3/messages?pubsubTopic=%2Fwaku%2F2%2Frs%2F3%2F0&pageSize=5&ascending=true" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"","statusCode":200,"statusDesc":"OK","messages":[{"messageHash":"OfA8Cfbt3ZwgbGVbpwxYdi5l5uA0yuj4UE7Ztn/pUBw="}]}'
[35mDEBUG   [0m src.steps.store:store.py:217 Checking that peer wakuorg/nwaku:latest can find the stored message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:12679/store/v3/messages?pubsubTopic=%2Fwaku%2F2%2Frs%2F3%2F0&pageSize=5&ascending=true" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"b193e38f00471a5cf034","statusCode":200,"statusDesc":"OK","messages":[{"messageHash":"OfA8Cfbt3ZwgbGVbpwxYdi5l5uA0yuj4UE7Ztn/pUBw="}]}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id d3004eab039f
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 2a08ce36e99d
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.postgres_setup:postgres_setup.py:44 Postgres container stopped and removed.