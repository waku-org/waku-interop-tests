[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_invalid_pubsub_topic_format with id: 2025-02-11_15-02-29__5ac93856-4e0c-42d8-b9ff-f90d920a45f8
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-02-11_15-02-29__5ac93856-4e0c-42d8-b9ff-f90d920a45f8__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.31.13
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['21121', '21122', '21123', '21124', '21125']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 21121:21121 -p 21122:21122 -p 21123:21123 -p 21124:21124 -p 21125:21125 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=21123 --rest-port=21121 --tcp-port=21122 --discv5-udp-port=21124 --rest-address=0.0.0.0 --nat=extip:172.18.31.13 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b753ddd8bb40a1eef69fceba1eb55db8ab99ad8cc0bdf422cea7dcef6e632d8b --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=21125 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.31.13 waku 5dbb1931ad5fe3c19b6c4313f77399d42eb4df374cf5650ff9c155e0ce9e5e8d
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 5dbb1931ad5f. Setting up logs at ./log/docker/node1_2025-02-11_15-02-29__5ac93856-4e0c-42d8-b9ff-f90d920a45f8__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 21121
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container f010b49f711e. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:21121/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:21121/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.31.13/tcp/21122/p2p/16Uiu2HAmLH9a78ZMm6yJDNiVVTjLhLXLgmcARqzpPNYCWf4JzkZc","/ip4/172.18.31.13/tcp/21123/ws/p2p/16Uiu2HAmLH9a78ZMm6yJDNiVVTjLhLXLgmcARqzpPNYCWf4JzkZc"],"enrUri":"enr:-L24QOBPECkikXGFHaZzyWqU7ecHHgDZApC2XBzKl_LigfnZQjLB5oIhZbC2tvODgM6ubkf0SQzaXa2VHxfAdnDFOTsCgmlkgnY0gmlwhKwSHw2KbXVsdGlhZGRyc5YACASsEh8NBlKCAAoErBIfDQZSg90DgnJzhQADAQAAiXNlY3AyNTZrMaEDcUUk0D2pOQ7p8xxyje59RNYeFtAZ_RpWvWN7C6WzMUeDdGNwglKCg3VkcIJShIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-02-11_15-02-29__5ac93856-4e0c-42d8-b9ff-f90d920a45f8__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.150.47
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['38031', '38032', '38033', '38034', '38035']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 38031:38031 -p 38032:38032 -p 38033:38033 -p 38034:38034 -p 38035:38035 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=38033 --rest-port=38031 --tcp-port=38032 --discv5-udp-port=38034 --rest-address=0.0.0.0 --nat=extip:172.18.150.47 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ae31fabd0b2bbada5cdde0eddf26e3251ddcd76a5949e9cdf1a543b26eb9e8ce --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=38035 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QOBPECkikXGFHaZzyWqU7ecHHgDZApC2XBzKl_LigfnZQjLB5oIhZbC2tvODgM6ubkf0SQzaXa2VHxfAdnDFOTsCgmlkgnY0gmlwhKwSHw2KbXVsdGlhZGRyc5YACASsEh8NBlKCAAoErBIfDQZSg90DgnJzhQADAQAAiXNlY3AyNTZrMaEDcUUk0D2pOQ7p8xxyje59RNYeFtAZ_RpWvWN7C6WzMUeDdGNwglKCg3VkcIJShIV3YWt1MgU --filternode=/ip4/172.18.31.13/tcp/21122/p2p/16Uiu2HAmLH9a78ZMm6yJDNiVVTjLhLXLgmcARqzpPNYCWf4JzkZc
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.150.47 waku 6ce7bb32ffa8a636e3f5908cf76aa3d5a1fe0e9f4be4b3c113425be10b80ae38
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 6ce7bb32ffa8. Setting up logs at ./log/docker/node2_2025-02-11_15-02-29__5ac93856-4e0c-42d8-b9ff-f90d920a45f8__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 38031
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38031/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38031/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.150.47/tcp/38032/p2p/16Uiu2HAmVB5rf25t1ucXNcnKdhMUzZHaiBnxLWinMDTYSz6jg8FD","/ip4/172.18.150.47/tcp/38033/ws/p2p/16Uiu2HAmVB5rf25t1ucXNcnKdhMUzZHaiBnxLWinMDTYSz6jg8FD"],"enrUri":"enr:-L24QBw7pbpkPUfZScIDGPi9K7e-SbYf9jsWrIHdxxeCr2HJAwGK1Rjt_NOyI1q4wvg529aZX0vhFTLkjOGw9sSP5r4CgmlkgnY0gmlwhKwSli-KbXVsdGlhZGRyc5YACASsEpYvBpSQAAoErBKWLwaUkd0DgnJzhQADAQAAiXNlY3AyNTZrMaED9XCkH5wXD-QQAj3VibRiv0d-Q0lgseECH_QGmhOu-cyDdGNwgpSQg3VkcIKUkoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38031/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.31.13/tcp/21122/p2p/16Uiu2HAmLH9a78ZMm6yJDNiVVTjLhLXLgmcARqzpPNYCWf4JzkZc"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:21121/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38031/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "fb01c854-bfb1-458b-9464-9dfca1251cc4", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"fb01c854-bfb1-458b-9464-9dfca1251cc4","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38031/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": ["/waku/2/rs/3/1"]}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:38031/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 5dbb1931ad5f
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 6ce7bb32ffa8
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 5dbb1931ad5f. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.