[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2025-02-11_15-02-56__c40d3ac5-cfde-44a1-91d2-bc74aa6a8b32
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-02-11_15-02-56__c40d3ac5-cfde-44a1-91d2-bc74aa6a8b32__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.103.137
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['56877', '56878', '56879', '56880', '56881']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 56877:56877 -p 56878:56878 -p 56879:56879 -p 56880:56880 -p 56881:56881 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=56879 --rest-port=56877 --tcp-port=56878 --discv5-udp-port=56880 --rest-address=0.0.0.0 --nat=extip:172.18.103.137 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=aa163dfaa870eaac56ebc9a97e0fbaab350e76eb58caff33bcf11a26eaf43dd7 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=56881 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.103.137 waku fbe6ca1c56bbf7e0a571147cd2d54f70ab47a4f830d493a8af35692f51c82996
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID fbe6ca1c56bb. Setting up logs at ./log/docker/node1_2025-02-11_15-02-56__c40d3ac5-cfde-44a1-91d2-bc74aa6a8b32__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 56877
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container f8dec1df9001. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:56877/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:56877/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.103.137/tcp/56878/p2p/16Uiu2HAmLofyso8HCsAbpADiuwsjp7vuW8rg71Va21KNNWPsJ5Us","/ip4/172.18.103.137/tcp/56879/ws/p2p/16Uiu2HAmLofyso8HCsAbpADiuwsjp7vuW8rg71Va21KNNWPsJ5Us"],"enrUri":"enr:-L24QKBpeTdC-wmVnvjkoElY84n4R18GzxE-n4zSG_B4f_fpNNh7BTHTasJprti5_lc6Tr6YPNm6_lhi9oZdYgSP8CICgmlkgnY0gmlwhKwSZ4mKbXVsdGlhZGRyc5YACASsEmeJBt4uAAoErBJniQbeL90DgnJzhQADAQAAiXNlY3AyNTZrMaEDeRbz3ChrBb0rE-oqY8alfJIGOOTZD252Cl6tQZR9EyiDdGNwgt4ug3VkcILeMIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-02-11_15-02-56__c40d3ac5-cfde-44a1-91d2-bc74aa6a8b32__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.192.63
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['14256', '14257', '14258', '14259', '14260']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 14256:14256 -p 14257:14257 -p 14258:14258 -p 14259:14259 -p 14260:14260 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=14258 --rest-port=14256 --tcp-port=14257 --discv5-udp-port=14259 --rest-address=0.0.0.0 --nat=extip:172.18.192.63 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=6b84b2f98e96ee9eb94c3b14dca17adebead45dc32a5dceca08fdc47c3debbb9 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=14260 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QKBpeTdC-wmVnvjkoElY84n4R18GzxE-n4zSG_B4f_fpNNh7BTHTasJprti5_lc6Tr6YPNm6_lhi9oZdYgSP8CICgmlkgnY0gmlwhKwSZ4mKbXVsdGlhZGRyc5YACASsEmeJBt4uAAoErBJniQbeL90DgnJzhQADAQAAiXNlY3AyNTZrMaEDeRbz3ChrBb0rE-oqY8alfJIGOOTZD252Cl6tQZR9EyiDdGNwgt4ug3VkcILeMIV3YWt1MgU --filternode=/ip4/172.18.103.137/tcp/56878/p2p/16Uiu2HAmLofyso8HCsAbpADiuwsjp7vuW8rg71Va21KNNWPsJ5Us
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.192.63 waku 28c8f626e33863739eb792a22356a1b59f072241e7d9f13b272ff19517f4ab3b
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 28c8f626e338. Setting up logs at ./log/docker/node2_2025-02-11_15-02-56__c40d3ac5-cfde-44a1-91d2-bc74aa6a8b32__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 14256
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:14256/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:14256/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.192.63/tcp/14257/p2p/16Uiu2HAmUWWYjnqLSRQwETKy6dTnJfkj1ypgnPQqFoWgzTxcTfuB","/ip4/172.18.192.63/tcp/14258/ws/p2p/16Uiu2HAmUWWYjnqLSRQwETKy6dTnJfkj1ypgnPQqFoWgzTxcTfuB"],"enrUri":"enr:-L24QME0T3O35AkDU2o3a4s5mZI9z5_gsOZ4N-2bCcGwiKRTD4Ft3mY0J3KVVB1BzdZ3jDlYhFNBFIzFvJ9PcvrOPvQCgmlkgnY0gmlwhKwSwD-KbXVsdGlhZGRyc5YACASsEsA_BjexAAoErBLAPwY3st0DgnJzhQADAQAAiXNlY3AyNTZrMaED647oaCgj070Y-PBBHgqpsZUA2AHbFK2ut1wYn_e0z8qDdGNwgjexg3VkcII3s4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:14256/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.103.137/tcp/56878/p2p/16Uiu2HAmLofyso8HCsAbpADiuwsjp7vuW8rg71Va21KNNWPsJ5Us"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:56877/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:14256/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "04631b46-ebb9-4804-826b-55c189075caa", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"04631b46-ebb9-4804-826b-55c189075caa","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:14256/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:14256/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id fbe6ca1c56bb
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 28c8f626e338
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container fbe6ca1c56bb. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.