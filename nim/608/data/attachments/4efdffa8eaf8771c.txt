[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_payload_less_than_150_kb with id: 2025-01-06_13-32-40__9c9afabe-2cc2-4e2a-bbbb-be0ab22dc045
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-06_13-32-40__9c9afabe-2cc2-4e2a-bbbb-be0ab22dc045__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.141.72
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['39065', '39066', '39067', '39068', '39069']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 39065:39065 -p 39066:39066 -p 39067:39067 -p 39068:39068 -p 39069:39069 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=39067 --rest-port=39065 --tcp-port=39066 --discv5-udp-port=39068 --rest-address=0.0.0.0 --nat=extip:172.18.141.72 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=be7eccf4a5a8abc16c9cdce2c1bd6b3c59d71ba06ede8f19ed0c6eaced3bb6f5 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=39069 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.141.72 waku 67b724b3b231b45c4ee3a390cf2f05c12a3cb91179ed92d092a611d5acdcc221
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 67b724b3b231. Setting up logs at ./log/docker/node1_2025-01-06_13-32-40__9c9afabe-2cc2-4e2a-bbbb-be0ab22dc045__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 39065
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container a961323bf2d5. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:39065/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:39065/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.141.72/tcp/39066/p2p/16Uiu2HAm7iYXFKJYq5oxoEdLsUx4kNFj4Z5TztjptUBm2Mf4Yx4b","/ip4/172.18.141.72/tcp/39067/ws/p2p/16Uiu2HAm7iYXFKJYq5oxoEdLsUx4kNFj4Z5TztjptUBm2Mf4Yx4b"],"enrUri":"enr:-L24QNEzzdmXD_qwriQICJJ8i20JZ1cHIrSJhbsoSlhIVkcEMHuRSDIws69gSYBVBZGHdhv3AIVNbUckoVX_XLaFIOICgmlkgnY0gmlwhKwSjUiKbXVsdGlhZGRyc5YACASsEo1IBpiaAAoErBKNSAaYm90DgnJzhQADAQAAiXNlY3AyNTZrMaECtp6vNzbmbXJBngMTZdMpTcGUCujkjlztJQEUHP3p5tSDdGNwgpiag3VkcIKYnIV3YWt1MgE"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-06_13-32-40__9c9afabe-2cc2-4e2a-bbbb-be0ab22dc045__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.173.152
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['12767', '12768', '12769', '12770', '12771']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 12767:12767 -p 12768:12768 -p 12769:12769 -p 12770:12770 -p 12771:12771 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=12769 --rest-port=12767 --tcp-port=12768 --discv5-udp-port=12770 --rest-address=0.0.0.0 --nat=extip:172.18.173.152 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=d5be9bbcbacfad5c9747d23c9ee26a19c45e88efd34fa423eeb4b99be63ffa3e --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=12771 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-L24QNEzzdmXD_qwriQICJJ8i20JZ1cHIrSJhbsoSlhIVkcEMHuRSDIws69gSYBVBZGHdhv3AIVNbUckoVX_XLaFIOICgmlkgnY0gmlwhKwSjUiKbXVsdGlhZGRyc5YACASsEo1IBpiaAAoErBKNSAaYm90DgnJzhQADAQAAiXNlY3AyNTZrMaECtp6vNzbmbXJBngMTZdMpTcGUCujkjlztJQEUHP3p5tSDdGNwgpiag3VkcIKYnIV3YWt1MgE
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.173.152 waku 9fb66a2d848e6fbec948ea7a481ef33f554a675e89494ec66360109b91abe27f
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 9fb66a2d848e. Setting up logs at ./log/docker/node2_2025-01-06_13-32-40__9c9afabe-2cc2-4e2a-bbbb-be0ab22dc045__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 12767
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:12767/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:12767/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.173.152/tcp/12768/p2p/16Uiu2HAmSmdooejeXN6EyaWVbQxYV97hsK6u8Hk4gHppcZN2XbX8","/ip4/172.18.173.152/tcp/12769/ws/p2p/16Uiu2HAmSmdooejeXN6EyaWVbQxYV97hsK6u8Hk4gHppcZN2XbX8"],"enrUri":"enr:-L24QES74I_DfM4EyYzdNrhwCiFsufjwvHyJk3FV-dAu2jiHS7PEmvz9G-rrCoswarN2WDHNUrHtpnZhwv2GqC00C0kCgmlkgnY0gmlwhKwSrZiKbXVsdGlhZGRyc5YACASsEq2YBjHgAAoErBKtmAYx4d0DgnJzhQADAQAAiXNlY3AyNTZrMaED0bd0a7tD3kq-7KuQkw2z5TgQYmUxDGcQgxGxAv4hHfuDdGNwgjHgg3VkcIIx4oV3YWt1MgE"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:12767/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.141.72/tcp/39066/p2p/16Uiu2HAm7iYXFKJYq5oxoEdLsUx4kNFj4Z5TztjptUBm2Mf4Yx4b"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:39065/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:12767/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:39065/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:39065/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1736170363585056256,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:12767/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1736170363585056256,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[35mDEBUG   [0m tests.relay.test_publish:test_publish.py:49 Running test with payload length of 102400 bytes
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 2 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:39065/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:12767/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 67b724b3b231
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 9fb66a2d848e
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 67b724b3b231. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.