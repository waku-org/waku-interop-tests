[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_invalid_request_id with id: 2025-01-06_13-33-54__e08c9108-0ee5-4668-a029-cb3c24f3e1c5
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-06_13-33-54__e08c9108-0ee5-4668-a029-cb3c24f3e1c5__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.240.112
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['57702', '57703', '57704', '57705', '57706']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 57702:57702 -p 57703:57703 -p 57704:57704 -p 57705:57705 -p 57706:57706 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=57704 --rest-port=57702 --tcp-port=57703 --discv5-udp-port=57705 --rest-address=0.0.0.0 --nat=extip:172.18.240.112 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=bf4ab9a16e60f1efc5235ffcad0aab5ad4ab1cdc7af842b4ed3bcad00c7b557a --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=57706 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.240.112 waku 90d62eaf23c74987c47052ee970ab7b4a0448f46c96030aa567a971a38939be6
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 90d62eaf23c7. Setting up logs at ./log/docker/node1_2025-01-06_13-33-54__e08c9108-0ee5-4668-a029-cb3c24f3e1c5__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 57702
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 62525cd513a5. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:57702/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:57702/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.240.112/tcp/57703/p2p/16Uiu2HAmKMdQxAVWpU5dKec17YnaAX5LF3smKTuUHVkWUb5AqWZu","/ip4/172.18.240.112/tcp/57704/ws/p2p/16Uiu2HAmKMdQxAVWpU5dKec17YnaAX5LF3smKTuUHVkWUb5AqWZu"],"enrUri":"enr:-L24QIEN3w8E5za-mk09PBEzVxMu7VuwcDFiJOJFsIayKHybCEh8jrCbUkveJiknBCeE3Teaj5HtbDLy2_DWWOITbGICgmlkgnY0gmlwhKwS8HCKbXVsdGlhZGRyc5YACASsEvBwBuFnAAoErBLwcAbhaN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDY49C54ohYhXPnn9UyN0pleURObbAnj2Yapo6XyJ-QxiDdGNwguFng3VkcILhaYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-06_13-33-54__e08c9108-0ee5-4668-a029-cb3c24f3e1c5__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.73.51
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['12875', '12876', '12877', '12878', '12879']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 12875:12875 -p 12876:12876 -p 12877:12877 -p 12878:12878 -p 12879:12879 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=12877 --rest-port=12875 --tcp-port=12876 --discv5-udp-port=12878 --rest-address=0.0.0.0 --nat=extip:172.18.73.51 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=4428bd4aafae0ac1e0f1aa43dcbfea1edd4cefde7a484af4ecb92c2d648de7fc --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=12879 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QIEN3w8E5za-mk09PBEzVxMu7VuwcDFiJOJFsIayKHybCEh8jrCbUkveJiknBCeE3Teaj5HtbDLy2_DWWOITbGICgmlkgnY0gmlwhKwS8HCKbXVsdGlhZGRyc5YACASsEvBwBuFnAAoErBLwcAbhaN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDY49C54ohYhXPnn9UyN0pleURObbAnj2Yapo6XyJ-QxiDdGNwguFng3VkcILhaYV3YWt1MgU --filternode=/ip4/172.18.240.112/tcp/57703/p2p/16Uiu2HAmKMdQxAVWpU5dKec17YnaAX5LF3smKTuUHVkWUb5AqWZu
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.73.51 waku e63a962833198f8a1bdb56a5daa5e48a4ed66074c7c726298b97799d9fa97e04
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID e63a96283319. Setting up logs at ./log/docker/node2_2025-01-06_13-33-54__e08c9108-0ee5-4668-a029-cb3c24f3e1c5__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 12875
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:12875/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:12875/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.73.51/tcp/12876/p2p/16Uiu2HAm5JsGhBgjoV28EWi7rvJSCRtFD9DdRnkVBJGUnm4m6gs7","/ip4/172.18.73.51/tcp/12877/ws/p2p/16Uiu2HAm5JsGhBgjoV28EWi7rvJSCRtFD9DdRnkVBJGUnm4m6gs7"],"enrUri":"enr:-L24QOysnzrat8RLB2YyfT4hXzaAa-aE7rFoS4Rk9Z5VHACUKJ4cGtdIhdqjzLt6PFTT2RIbi3xG8x0DlECqmo7wwvgCgmlkgnY0gmlwhKwSSTOKbXVsdGlhZGRyc5YACASsEkkzBjJMAAoErBJJMwYyTd0DgnJzhQADAQAAiXNlY3AyNTZrMaECktaSIFTYI7v4C9XBh1j6jJrYBqsYWDg3SgIquYbZTr6DdGNwgjJMg3VkcIIyToV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:12875/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.240.112/tcp/57703/p2p/16Uiu2HAmKMdQxAVWpU5dKec17YnaAX5LF3smKTuUHVkWUb5AqWZu"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:57702/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:12875/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "3cb30867-3bb5-458a-beed-8015257fcc44", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"3cb30867-3bb5-458a-beed-8015257fcc44","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:12875/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:12875/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 90d62eaf23c7
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id e63a96283319
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 90d62eaf23c7. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.