[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_content_topic_string_instead_of_list with id: 2025-01-06_13-33-43__469ea3bd-3e95-44a4-b8ea-d4b8de1c2f31
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-06_13-33-43__469ea3bd-3e95-44a4-b8ea-d4b8de1c2f31__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.232.68
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['36722', '36723', '36724', '36725', '36726']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 36722:36722 -p 36723:36723 -p 36724:36724 -p 36725:36725 -p 36726:36726 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=36724 --rest-port=36722 --tcp-port=36723 --discv5-udp-port=36725 --rest-address=0.0.0.0 --nat=extip:172.18.232.68 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e59cccfaf7dedeaaedcca6b8b3d584eb3e5eb122d3bebff52c3d28d5e7bf0ca5 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=36726 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.232.68 waku 78f628ef2d76f6fa034b07cdcbc6f99a5cc58dbb4fd58425e6d652305b4e1056
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 78f628ef2d76. Setting up logs at ./log/docker/node1_2025-01-06_13-33-43__469ea3bd-3e95-44a4-b8ea-d4b8de1c2f31__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 36722
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container b8c745617d02. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:36722/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:36722/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.232.68/tcp/36723/p2p/16Uiu2HAmATPmxLYUoLEg1Lj42T3fZE9vdKC6wfJyYCDebogH2mU8","/ip4/172.18.232.68/tcp/36724/ws/p2p/16Uiu2HAmATPmxLYUoLEg1Lj42T3fZE9vdKC6wfJyYCDebogH2mU8"],"enrUri":"enr:-L24QI-DiYO_w2Vj1wxjURXZFiAmqdKHeLLb04occgt3AOx7Ow7mS7d-DYhU5nMh2eSoQAAxS2Ol4R5bMYwrXjAuE4oCgmlkgnY0gmlwhKwS6ESKbXVsdGlhZGRyc5YACASsEuhEBo9zAAoErBLoRAaPdN0DgnJzhQADAQAAiXNlY3AyNTZrMaEC31AkugISPMp6u-nXIXR3gKzrSe6gaL1SaJiY7Cr2RF2DdGNwgo9zg3VkcIKPdYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-06_13-33-43__469ea3bd-3e95-44a4-b8ea-d4b8de1c2f31__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.153.246
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['33760', '33761', '33762', '33763', '33764']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 33760:33760 -p 33761:33761 -p 33762:33762 -p 33763:33763 -p 33764:33764 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=33762 --rest-port=33760 --tcp-port=33761 --discv5-udp-port=33763 --rest-address=0.0.0.0 --nat=extip:172.18.153.246 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=9eb55626efbcaadcbd6aa7f44eeb4d2342f1b74c18c6371bbea003aefcfa31f1 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=33764 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QI-DiYO_w2Vj1wxjURXZFiAmqdKHeLLb04occgt3AOx7Ow7mS7d-DYhU5nMh2eSoQAAxS2Ol4R5bMYwrXjAuE4oCgmlkgnY0gmlwhKwS6ESKbXVsdGlhZGRyc5YACASsEuhEBo9zAAoErBLoRAaPdN0DgnJzhQADAQAAiXNlY3AyNTZrMaEC31AkugISPMp6u-nXIXR3gKzrSe6gaL1SaJiY7Cr2RF2DdGNwgo9zg3VkcIKPdYV3YWt1MgU --filternode=/ip4/172.18.232.68/tcp/36723/p2p/16Uiu2HAmATPmxLYUoLEg1Lj42T3fZE9vdKC6wfJyYCDebogH2mU8
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.153.246 waku 05f8b90809639de5e8545519f1f148fd1271ca1ac001d4a9f0a98461e8f888b1
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 05f8b9080963. Setting up logs at ./log/docker/node2_2025-01-06_13-33-43__469ea3bd-3e95-44a4-b8ea-d4b8de1c2f31__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 33760
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33760/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33760/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.153.246/tcp/33761/p2p/16Uiu2HAmT3tqAoh3Gyzx6kcjikLTsZsoqy9RKWb3s9SyaLyAcgYU","/ip4/172.18.153.246/tcp/33762/ws/p2p/16Uiu2HAmT3tqAoh3Gyzx6kcjikLTsZsoqy9RKWb3s9SyaLyAcgYU"],"enrUri":"enr:-L24QOhnLEOLD4e2Sm_u9l0HDFhpIUELNjgLGY7Y0fy6Ns0mKTJo33WhFe0sqiSEo6qgtOghDRixp7Me-GXlu2EJp1oCgmlkgnY0gmlwhKwSmfaKbXVsdGlhZGRyc5YACASsEpn2BoPhAAoErBKZ9gaD4t0DgnJzhQADAQAAiXNlY3AyNTZrMaED1eG8IKnVtZ0q6DRxGsAXDxqilgFsmKWstelB-cn8juWDdGNwgoPhg3VkcIKD44V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:33760/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.232.68/tcp/36723/p2p/16Uiu2HAmATPmxLYUoLEg1Lj42T3fZE9vdKC6wfJyYCDebogH2mU8"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:36722/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:33760/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "db922933-8ef7-4358-8e69-57dd338f6e36", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"db922933-8ef7-4358-8e69-57dd338f6e36","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:33760/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": "/test/1/waku-filter/proto", "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:33760/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 78f628ef2d76
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 05f8b9080963
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 78f628ef2d76. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.