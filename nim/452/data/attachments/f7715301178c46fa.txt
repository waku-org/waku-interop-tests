[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_pubsub_topic_string_instead_of_list with id: 2024-11-17_04-12-25__24e3aceb-ee80-4619-b7f3-653f4b8a0659
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-17_04-12-25__24e3aceb-ee80-4619-b7f3-653f4b8a0659__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.131.68
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['57396', '57397', '57398', '57399', '57400']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 57396:57396 -p 57397:57397 -p 57398:57398 -p 57399:57399 -p 57400:57400 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=57398 --rest-port=57396 --tcp-port=57397 --discv5-udp-port=57399 --rest-address=0.0.0.0 --nat=extip:172.18.131.68 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=d3506b08cc9154fea5c1532bffa1dafb1b9f8765de3128fceceb942cda1fc34e --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=57400 --metrics-logging=true --relay=true --filter=true
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container eeef6c91f345. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.131.68 waku 801d382ec394549c7662a20beab74f61058b31e17a710ab2289002bc74d46880
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 801d382ec394. Setting up logs at ./log/docker/node1_2024-11-17_04-12-25__24e3aceb-ee80-4619-b7f3-653f4b8a0659__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 57396
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:57396/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:57396/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.131.68/tcp/57397/p2p/16Uiu2HAm8Af36xcuSaxxzqRbGdnyV9tPaMA993P9isRXcoajKQeH","/ip4/172.18.131.68/tcp/57398/ws/p2p/16Uiu2HAm8Af36xcuSaxxzqRbGdnyV9tPaMA993P9isRXcoajKQeH"],"enrUri":"enr:-L24QPqm_uyyprEFlqEc0ii2xXxSLf6sg2OOeP9V2kardWyffSELt7xsjUlvXv088PgAcGdmS4NbjLkFLrz-PfbmsPQCgmlkgnY0gmlwhKwSg0SKbXVsdGlhZGRyc5YACASsEoNEBuA1AAoErBKDRAbgNt0DgnJzhQADAQAAiXNlY3AyNTZrMaECvU8m1-O4aFKpyS3YA6zMj-YkgRjSfRXQtS5fszCvyL6DdGNwguA1g3VkcILgN4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-17_04-12-25__24e3aceb-ee80-4619-b7f3-653f4b8a0659__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.174.60
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['64683', '64684', '64685', '64686', '64687']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 64683:64683 -p 64684:64684 -p 64685:64685 -p 64686:64686 -p 64687:64687 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=64685 --rest-port=64683 --tcp-port=64684 --discv5-udp-port=64686 --rest-address=0.0.0.0 --nat=extip:172.18.174.60 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=202ad9ad4f32cf686f2cf49c12049a2f83c47b5474df3bdfecd20e2a737dcaaf --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=64687 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QPqm_uyyprEFlqEc0ii2xXxSLf6sg2OOeP9V2kardWyffSELt7xsjUlvXv088PgAcGdmS4NbjLkFLrz-PfbmsPQCgmlkgnY0gmlwhKwSg0SKbXVsdGlhZGRyc5YACASsEoNEBuA1AAoErBKDRAbgNt0DgnJzhQADAQAAiXNlY3AyNTZrMaECvU8m1-O4aFKpyS3YA6zMj-YkgRjSfRXQtS5fszCvyL6DdGNwguA1g3VkcILgN4V3YWt1MgU --filternode=/ip4/172.18.131.68/tcp/57397/p2p/16Uiu2HAm8Af36xcuSaxxzqRbGdnyV9tPaMA993P9isRXcoajKQeH
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.174.60 waku 82e022b8b1fa1d22dedd961b90cadc3d3cd1095157009e154dd718759f15d9df
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 82e022b8b1fa. Setting up logs at ./log/docker/node2_2024-11-17_04-12-25__24e3aceb-ee80-4619-b7f3-653f4b8a0659__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 64683
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:64683/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:64683/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.174.60/tcp/64684/p2p/16Uiu2HAmASR6JGT28Ws7FiYfioUnz19KQi4R29uDwpXgZNM9Lb4n","/ip4/172.18.174.60/tcp/64685/ws/p2p/16Uiu2HAmASR6JGT28Ws7FiYfioUnz19KQi4R29uDwpXgZNM9Lb4n"],"enrUri":"enr:-L24QGQ3cFV_NT3J2lJaioOBKEcv6Ha1lquGCCdr-pAm5-hSGjySsOlqjLLhPY0Ohg4foxBgTHOPbSE1cNAFDxQymOICgmlkgnY0gmlwhKwSrjyKbXVsdGlhZGRyc5YACASsEq48BvysAAoErBKuPAb8rd0DgnJzhQADAQAAiXNlY3AyNTZrMaEC3xANDAGiJsxpfgwONBcuOsCi_CqRUvOvNXTBnh8we9uDdGNwgvysg3VkcIL8roV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:64683/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.131.68/tcp/57397/p2p/16Uiu2HAm8Af36xcuSaxxzqRbGdnyV9tPaMA993P9isRXcoajKQeH"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:57396/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:64683/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "15e4cfd0-cc16-43e9-959f-04e240195a7d", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"15e4cfd0-cc16-43e9-959f-04e240195a7d","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:64683/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": "/test/1/waku-filter/proto", "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:64683/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 801d382ec394
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 82e022b8b1fa
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 801d382ec394. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.