[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_no_content_topic with id: 2024-11-17_04-11-07__ef3af98f-45e9-41d9-b2fe-c5e3451325de
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-17_04-11-07__ef3af98f-45e9-41d9-b2fe-c5e3451325de__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.177.149
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['41584', '41585', '41586', '41587', '41588']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 41584:41584 -p 41585:41585 -p 41586:41586 -p 41587:41587 -p 41588:41588 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=41586 --rest-port=41584 --tcp-port=41585 --discv5-udp-port=41587 --rest-address=0.0.0.0 --nat=extip:172.18.177.149 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=1384c519d0df967a9dba45bddec1d4c8fb3db6a5ea6b88d0ced0f463edcfb65a --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=41588 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.177.149 waku 7a7370e05dd144e86d0b4c857af29a51b3eb76b1601881828827cbd060e29102
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 17c2544d34c6. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 7a7370e05dd1. Setting up logs at ./log/docker/node1_2024-11-17_04-11-07__ef3af98f-45e9-41d9-b2fe-c5e3451325de__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 41584
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41584/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41584/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.177.149/tcp/41585/p2p/16Uiu2HAm3ZvWExxTTzJc86BQdJQBEcbBHzN4eLwP26LSz5x1aCwX","/ip4/172.18.177.149/tcp/41586/ws/p2p/16Uiu2HAm3ZvWExxTTzJc86BQdJQBEcbBHzN4eLwP26LSz5x1aCwX"],"enrUri":"enr:-L24QC9xR4eRy9a3dm310PmQ9UUwVqNAc2GwtKs7P_J5AQNtVXhhZBBuB1MiQKvs2VJPibvzjhwlaQ3C6c_BL1_WUacCgmlkgnY0gmlwhKwSsZWKbXVsdGlhZGRyc5YACASsErGVBqJxAAoErBKxlQaict0DgnJzhQADAQAAiXNlY3AyNTZrMaECePqQuIcvQhLTRixm7F8uxgG6uJz4g9hUC6PgHrs1c-6DdGNwgqJxg3VkcIKic4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-17_04-11-07__ef3af98f-45e9-41d9-b2fe-c5e3451325de__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.105.111
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['11338', '11339', '11340', '11341', '11342']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 11338:11338 -p 11339:11339 -p 11340:11340 -p 11341:11341 -p 11342:11342 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=11340 --rest-port=11338 --tcp-port=11339 --discv5-udp-port=11341 --rest-address=0.0.0.0 --nat=extip:172.18.105.111 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=deafd6ab2c0de2beef5b02de4bd9c72b5c5af6b48cbbe59c4f5c5f64dd51acb9 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=11342 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QC9xR4eRy9a3dm310PmQ9UUwVqNAc2GwtKs7P_J5AQNtVXhhZBBuB1MiQKvs2VJPibvzjhwlaQ3C6c_BL1_WUacCgmlkgnY0gmlwhKwSsZWKbXVsdGlhZGRyc5YACASsErGVBqJxAAoErBKxlQaict0DgnJzhQADAQAAiXNlY3AyNTZrMaECePqQuIcvQhLTRixm7F8uxgG6uJz4g9hUC6PgHrs1c-6DdGNwgqJxg3VkcIKic4V3YWt1MgU --filternode=/ip4/172.18.177.149/tcp/41585/p2p/16Uiu2HAm3ZvWExxTTzJc86BQdJQBEcbBHzN4eLwP26LSz5x1aCwX
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.105.111 waku e02f46d085dfd82689d681dfb377a0e4f5d643508adbdc828fa804ee18caf0d7
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID e02f46d085df. Setting up logs at ./log/docker/node2_2024-11-17_04-11-07__ef3af98f-45e9-41d9-b2fe-c5e3451325de__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 11338
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:11338/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:11338/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.105.111/tcp/11339/p2p/16Uiu2HAkxA66DFR8nRDYVzdU8Byynv8RgNbbf7iG53DhqkVitvgJ","/ip4/172.18.105.111/tcp/11340/ws/p2p/16Uiu2HAkxA66DFR8nRDYVzdU8Byynv8RgNbbf7iG53DhqkVitvgJ"],"enrUri":"enr:-L24QMsF3CWDDBptyV8GT5L_q8aiDrQSOW5GPmNXWENjO5VlUmjAMW4qhZ-ooMwLoZAGl8k9iWt5EK6_JIbZh3KKFkoCgmlkgnY0gmlwhKwSaW-KbXVsdGlhZGRyc5YACASsEmlvBixLAAoErBJpbwYsTN0DgnJzhQADAQAAiXNlY3AyNTZrMaECKJUHpB2bSJl1UxjqedXC6xShkJLxCNeLiZivd7VmaSODdGNwgixLg3VkcIIsTYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:11338/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.177.149/tcp/41585/p2p/16Uiu2HAm3ZvWExxTTzJc86BQdJQBEcbBHzN4eLwP26LSz5x1aCwX"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:41584/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:11338/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "3da99ba3-85f5-4e84-baaf-ad9f76970a99", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"3da99ba3-85f5-4e84-baaf-ad9f76970a99","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:11338/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:11338/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 7a7370e05dd1
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id e02f46d085df
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 7a7370e05dd1. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.