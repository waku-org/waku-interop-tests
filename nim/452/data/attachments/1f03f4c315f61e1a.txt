[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_invalid_request_id with id: 2024-11-17_04-12-34__e15e80ff-d9c9-4434-872d-287abe8cef29
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-17_04-12-34__e15e80ff-d9c9-4434-872d-287abe8cef29__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.220.119
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['13840', '13841', '13842', '13843', '13844']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 13840:13840 -p 13841:13841 -p 13842:13842 -p 13843:13843 -p 13844:13844 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=13842 --rest-port=13840 --tcp-port=13841 --discv5-udp-port=13843 --rest-address=0.0.0.0 --nat=extip:172.18.220.119 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=bc74ccd100c5e0808ac5efe63eece1d6224cdfbba75c17bfa0cea2421d3ee360 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=13844 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.220.119 waku f008419bc0ecc283871edb1d8ed2f11e5df27012f7e99d81ff229cd103fbc5c8
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 82e022b8b1fa. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID f008419bc0ec. Setting up logs at ./log/docker/node1_2024-11-17_04-12-34__e15e80ff-d9c9-4434-872d-287abe8cef29__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 13840
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:13840/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:13840/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.220.119/tcp/13841/p2p/16Uiu2HAmF7UJLtXEHNbqC6YoD7C4u6kQ8PFi7zrr5JfnrtVXf6Zu","/ip4/172.18.220.119/tcp/13842/ws/p2p/16Uiu2HAmF7UJLtXEHNbqC6YoD7C4u6kQ8PFi7zrr5JfnrtVXf6Zu"],"enrUri":"enr:-L24QDz12bN6AuGOhaawV7D5OJyQpAaMn6pcVdagmDmuanOzGbAOxfea8-UfA0wvr4Rgkitshv1T9newxj8x3gSNBoMCgmlkgnY0gmlwhKwS3HeKbXVsdGlhZGRyc5YACASsEtx3BjYRAAoErBLcdwY2Et0DgnJzhQADAQAAiXNlY3AyNTZrMaEDJIATwGbHiIPfZzkcO5BEP0HNJA7Us_ZdNDmFjqYarriDdGNwgjYRg3VkcII2E4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-17_04-12-34__e15e80ff-d9c9-4434-872d-287abe8cef29__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.132.190
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['22503', '22504', '22505', '22506', '22507']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 22503:22503 -p 22504:22504 -p 22505:22505 -p 22506:22506 -p 22507:22507 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=22505 --rest-port=22503 --tcp-port=22504 --discv5-udp-port=22506 --rest-address=0.0.0.0 --nat=extip:172.18.132.190 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=f6520c6b89c3afc5ea66826b4d3ace88dac06eccc9e0cb327f5d3c0b6b9ffa3e --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=22507 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QDz12bN6AuGOhaawV7D5OJyQpAaMn6pcVdagmDmuanOzGbAOxfea8-UfA0wvr4Rgkitshv1T9newxj8x3gSNBoMCgmlkgnY0gmlwhKwS3HeKbXVsdGlhZGRyc5YACASsEtx3BjYRAAoErBLcdwY2Et0DgnJzhQADAQAAiXNlY3AyNTZrMaEDJIATwGbHiIPfZzkcO5BEP0HNJA7Us_ZdNDmFjqYarriDdGNwgjYRg3VkcII2E4V3YWt1MgU --filternode=/ip4/172.18.220.119/tcp/13841/p2p/16Uiu2HAmF7UJLtXEHNbqC6YoD7C4u6kQ8PFi7zrr5JfnrtVXf6Zu
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.132.190 waku cf23c567d75876969f519edabff06a980128c20b529327f9d4c610e7a3ba5ec5
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID cf23c567d758. Setting up logs at ./log/docker/node2_2024-11-17_04-12-34__e15e80ff-d9c9-4434-872d-287abe8cef29__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 22503
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:22503/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:22503/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.132.190/tcp/22504/p2p/16Uiu2HAmSSbDWhzfi7VGaYq5yPqvEK1N8ye1RPB8JfUDNEtXdAJj","/ip4/172.18.132.190/tcp/22505/ws/p2p/16Uiu2HAmSSbDWhzfi7VGaYq5yPqvEK1N8ye1RPB8JfUDNEtXdAJj"],"enrUri":"enr:-L24QI2buSdcd5s4xhPFd76I1tUJHRsIE72YTXSzgcj9Wi9Rbc4WGKEBhRiiSGrBaIVlf-kwM-Oijsk4u_zTalwkSSoCgmlkgnY0gmlwhKwShL6KbXVsdGlhZGRyc5YACASsEoS-BlfoAAoErBKEvgZX6d0DgnJzhQADAQAAiXNlY3AyNTZrMaEDzNZ9TcOOZqE7EpoaYUJFRYBwN4-xi8XEpFJc62rjJmiDdGNwglfog3VkcIJX6oV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:22503/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.220.119/tcp/13841/p2p/16Uiu2HAmF7UJLtXEHNbqC6YoD7C4u6kQ8PFi7zrr5JfnrtVXf6Zu"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:13840/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:22503/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "61607749-04c5-483c-97f1-1149c1af0d56", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"61607749-04c5-483c-97f1-1149c1af0d56","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:22503/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:22503/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id f008419bc0ec
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id cf23c567d758
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container f008419bc0ec. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.