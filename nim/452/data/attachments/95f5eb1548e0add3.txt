[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_no_content_topic with id: 2024-11-17_04-11-43__bbb797e2-2072-4a47-8181-43ce10fca1aa
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-17_04-11-43__bbb797e2-2072-4a47-8181-43ce10fca1aa__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.190.38
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['65371', '65372', '65373', '65374', '65375']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 65371:65371 -p 65372:65372 -p 65373:65373 -p 65374:65374 -p 65375:65375 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=65373 --rest-port=65371 --tcp-port=65372 --discv5-udp-port=65374 --rest-address=0.0.0.0 --nat=extip:172.18.190.38 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=fccbded7daa1a835d66ed04afebe8184edfe102761a9440fac53e11baeaa2d7f --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=65375 --metrics-logging=true --relay=true --filter=true
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 979aa7168ebe. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.190.38 waku 817c6181c78518df8efebe4e485072ec0546196592fb579f8bf383f58242b198
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 817c6181c785. Setting up logs at ./log/docker/node1_2024-11-17_04-11-43__bbb797e2-2072-4a47-8181-43ce10fca1aa__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 65371
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:65371/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:65371/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.190.38/tcp/65372/p2p/16Uiu2HAmBYrV4Dg6Ad3Ft8fCxiDuDBMLHzT9NNPEGBk5d3G7vzZe","/ip4/172.18.190.38/tcp/65373/ws/p2p/16Uiu2HAmBYrV4Dg6Ad3Ft8fCxiDuDBMLHzT9NNPEGBk5d3G7vzZe"],"enrUri":"enr:-L24QNruixYHKmntitMTpdTat9-wmjWhghWdv1Yasd5L3hwWT1F5k00Eo6P7QoLhpMj6u4xkP5E2lzq5jrvA2EBh-PoCgmlkgnY0gmlwhKwSviaKbXVsdGlhZGRyc5YACASsEr4mBv9cAAoErBK-Jgb_Xd0DgnJzhQADAQAAiXNlY3AyNTZrMaEC75HvGl48AKL9h9tTasU_62GNQPX_6SqRcI0-JmQnSfGDdGNwgv9cg3VkcIL_XoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-17_04-11-43__bbb797e2-2072-4a47-8181-43ce10fca1aa__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.82.225
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['18699', '18700', '18701', '18702', '18703']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 18699:18699 -p 18700:18700 -p 18701:18701 -p 18702:18702 -p 18703:18703 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=18701 --rest-port=18699 --tcp-port=18700 --discv5-udp-port=18702 --rest-address=0.0.0.0 --nat=extip:172.18.82.225 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=a7d8fc37aee0501bfb57ab37eb4bbbe83f2affd5dfa10ffc7e4beab0bf34071c --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=18703 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QNruixYHKmntitMTpdTat9-wmjWhghWdv1Yasd5L3hwWT1F5k00Eo6P7QoLhpMj6u4xkP5E2lzq5jrvA2EBh-PoCgmlkgnY0gmlwhKwSviaKbXVsdGlhZGRyc5YACASsEr4mBv9cAAoErBK-Jgb_Xd0DgnJzhQADAQAAiXNlY3AyNTZrMaEC75HvGl48AKL9h9tTasU_62GNQPX_6SqRcI0-JmQnSfGDdGNwgv9cg3VkcIL_XoV3YWt1MgU --filternode=/ip4/172.18.190.38/tcp/65372/p2p/16Uiu2HAmBYrV4Dg6Ad3Ft8fCxiDuDBMLHzT9NNPEGBk5d3G7vzZe
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.82.225 waku bcbb3e581e7ec2ca9bed5b96224050352380c9c97b216936b46b87226065974b
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID bcbb3e581e7e. Setting up logs at ./log/docker/node2_2024-11-17_04-11-43__bbb797e2-2072-4a47-8181-43ce10fca1aa__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 18699
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:18699/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:18699/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.82.225/tcp/18700/p2p/16Uiu2HAm1AgzwG1DCyeb9dYBUubNu9dRx7uBbnYbWe3richXBpq8","/ip4/172.18.82.225/tcp/18701/ws/p2p/16Uiu2HAm1AgzwG1DCyeb9dYBUubNu9dRx7uBbnYbWe3richXBpq8"],"enrUri":"enr:-L24QFZ-PumdhqeuSXGCPNrzETZLu_vLvdTLXoiPGEtCn8imYFOd9_FsF9VWd--geMgDNGCi4B7ynlAfOD2rO6SidjwCgmlkgnY0gmlwhKwSUuGKbXVsdGlhZGRyc5YACASsElLhBkkMAAoErBJS4QZJDd0DgnJzhQADAQAAiXNlY3AyNTZrMaECVU-P-blTDTfGGF9MoBrhBiJYFwcyZfpnqVwHcyw6LTODdGNwgkkMg3VkcIJJDoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:18699/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.190.38/tcp/65372/p2p/16Uiu2HAmBYrV4Dg6Ad3Ft8fCxiDuDBMLHzT9NNPEGBk5d3G7vzZe"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:65371/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:18699/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "ce61ae55-4241-4035-a19a-2e4140b5c75d", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"ce61ae55-4241-4035-a19a-2e4140b5c75d","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:18699/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:18699/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 817c6181c785
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id bcbb3e581e7e
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 817c6181c785. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.