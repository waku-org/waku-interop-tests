[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_no_content_topic with id: 2024-11-07_04-41-27__3d2c13a8-fd64-48cc-ab10-bd1e07effbfb
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-07_04-41-27__3d2c13a8-fd64-48cc-ab10-bd1e07effbfb__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.183.27
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['7428', '7429', '7430', '7431', '7432']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 7428:7428 -p 7429:7429 -p 7430:7430 -p 7431:7431 -p 7432:7432 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=7430 --rest-port=7428 --tcp-port=7429 --discv5-udp-port=7431 --rest-address=0.0.0.0 --nat=extip:172.18.183.27 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e5db6d68aebcb83e2bc4c344c5b64d30f12aad0f531aa1d0cd40f2a3d1b882cc --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=7432 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.183.27 waku 4a7e9f650f0cae6ab07452129b53b426fc0f2b48debb72765cd9a1965b6be259
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 4a7e9f650f0c. Setting up logs at ./log/docker/node1_2024-11-07_04-41-27__3d2c13a8-fd64-48cc-ab10-bd1e07effbfb__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 7428
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 239591ffa8bd. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7428/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7428/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.183.27/tcp/7429/p2p/16Uiu2HAmDrV5vqVE7hippteSqindvTQfgy9xjo6PxkiDmL7NdbNd","/ip4/172.18.183.27/tcp/7430/ws/p2p/16Uiu2HAmDrV5vqVE7hippteSqindvTQfgy9xjo6PxkiDmL7NdbNd"],"enrUri":"enr:-L24QCFs0a9tVIGjXAhrZE0v26FTtmbwlLf1oWY2c5AtHIrnfZPl1RdBPWHoNNEjwVxnzxd9Qnp5-QSMEv5EhaKDvn8CgmlkgnY0gmlwhKwStxuKbXVsdGlhZGRyc5YACASsErcbBh0FAAoErBK3GwYdBt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDEc2RGAHyp3gw00gz9A9WWM4RNRgMD3blR40-aY2AxB6DdGNwgh0Fg3VkcIIdB4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-07_04-41-27__3d2c13a8-fd64-48cc-ab10-bd1e07effbfb__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.56.80
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['42778', '42779', '42780', '42781', '42782']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 42778:42778 -p 42779:42779 -p 42780:42780 -p 42781:42781 -p 42782:42782 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=42780 --rest-port=42778 --tcp-port=42779 --discv5-udp-port=42781 --rest-address=0.0.0.0 --nat=extip:172.18.56.80 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=d69423da506af105d4d6a438a808eaeccd2adbf8ce6cde50ee3e85cf5007af25 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=42782 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QCFs0a9tVIGjXAhrZE0v26FTtmbwlLf1oWY2c5AtHIrnfZPl1RdBPWHoNNEjwVxnzxd9Qnp5-QSMEv5EhaKDvn8CgmlkgnY0gmlwhKwStxuKbXVsdGlhZGRyc5YACASsErcbBh0FAAoErBK3GwYdBt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDEc2RGAHyp3gw00gz9A9WWM4RNRgMD3blR40-aY2AxB6DdGNwgh0Fg3VkcIIdB4V3YWt1MgU --filternode=/ip4/172.18.183.27/tcp/7429/p2p/16Uiu2HAmDrV5vqVE7hippteSqindvTQfgy9xjo6PxkiDmL7NdbNd
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.56.80 waku d42730d6039182dab3cd2202f298300ca9ec410681e1b2d5936a40b45ca62dcd
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID d42730d60391. Setting up logs at ./log/docker/node2_2024-11-07_04-41-27__3d2c13a8-fd64-48cc-ab10-bd1e07effbfb__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 42778
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:42778/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:42778/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.56.80/tcp/42779/p2p/16Uiu2HAm8QbgfRyAXEsMpMjZB5W1uFfnWuWefRUyPNAAJXfL1aFY","/ip4/172.18.56.80/tcp/42780/ws/p2p/16Uiu2HAm8QbgfRyAXEsMpMjZB5W1uFfnWuWefRUyPNAAJXfL1aFY"],"enrUri":"enr:-L24QF13s2JNJLmh94o_-7DeIdxyISHcMxvpHrM0E9e3jwtzPw2guOR2akUNhEADLJCLGoFuh2BbF6YUxrHEAxGihrkCgmlkgnY0gmlwhKwSOFCKbXVsdGlhZGRyc5YACASsEjhQBqcbAAoErBI4UAanHN0DgnJzhQADAQAAiXNlY3AyNTZrMaECwOF-EnwrpqZ1cLAJIAChC0BwjxxZuFbJwxUGIRxRh9-DdGNwgqcbg3VkcIKnHYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:42778/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.183.27/tcp/7429/p2p/16Uiu2HAmDrV5vqVE7hippteSqindvTQfgy9xjo6PxkiDmL7NdbNd"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:7428/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:42778/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "47003a8a-fd3b-4ec3-b561-ab5a482b7f23", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"47003a8a-fd3b-4ec3-b561-ab5a482b7f23","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:42778/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:42778/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 4a7e9f650f0c
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id d42730d60391
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 4a7e9f650f0c. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.