[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2024-11-07_04-42-13__d80dcb92-4775-4ea5-b39e-7cdb708ac38e
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-07_04-42-13__d80dcb92-4775-4ea5-b39e-7cdb708ac38e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.28.42
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['34459', '34460', '34461', '34462', '34463']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 34459:34459 -p 34460:34460 -p 34461:34461 -p 34462:34462 -p 34463:34463 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=34461 --rest-port=34459 --tcp-port=34460 --discv5-udp-port=34462 --rest-address=0.0.0.0 --nat=extip:172.18.28.42 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b9033af52a57ae7e2dcceceadfecdb0f5c4ddeefc61cf41abddad7eecf4a35ff --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=34463 --metrics-logging=true --relay=true --filter=true
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 241bec128389. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.28.42 waku 9f2a5ad452ffb4b1d47388a57383ed6a4dffd9a6db00c9cad8a9a740efbd6ddd
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 9f2a5ad452ff. Setting up logs at ./log/docker/node1_2024-11-07_04-42-13__d80dcb92-4775-4ea5-b39e-7cdb708ac38e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 34459
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:34459/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:34459/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.28.42/tcp/34460/p2p/16Uiu2HAmQnYWLHPVdNMUXzhwZzuLi4qddUPYWnX19JUyS1bB6g5i","/ip4/172.18.28.42/tcp/34461/ws/p2p/16Uiu2HAmQnYWLHPVdNMUXzhwZzuLi4qddUPYWnX19JUyS1bB6g5i"],"enrUri":"enr:-L24QA7k-0OKcc5JaagGbYEhcfIv58O2pLEjZvCWSnQivVykPB-nLTvupOyt7DIWzzibHywTGY-5vE9JcuEhPau9jqECgmlkgnY0gmlwhKwSHCqKbXVsdGlhZGRyc5YACASsEhwqBoacAAoErBIcKgaGnd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDtDuq54QaW5uxYsL8AClOSlcRNcylK23xfbRGwBmKJrWDdGNwgoacg3VkcIKGnoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-07_04-42-13__d80dcb92-4775-4ea5-b39e-7cdb708ac38e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.85.122
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['8401', '8402', '8403', '8404', '8405']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 8401:8401 -p 8402:8402 -p 8403:8403 -p 8404:8404 -p 8405:8405 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=8403 --rest-port=8401 --tcp-port=8402 --discv5-udp-port=8404 --rest-address=0.0.0.0 --nat=extip:172.18.85.122 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=4bf96c49f6e22a3beaf7ca3485a7f7d850c2cd7aeb6e04f896853d323aa2a258 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=8405 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QA7k-0OKcc5JaagGbYEhcfIv58O2pLEjZvCWSnQivVykPB-nLTvupOyt7DIWzzibHywTGY-5vE9JcuEhPau9jqECgmlkgnY0gmlwhKwSHCqKbXVsdGlhZGRyc5YACASsEhwqBoacAAoErBIcKgaGnd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDtDuq54QaW5uxYsL8AClOSlcRNcylK23xfbRGwBmKJrWDdGNwgoacg3VkcIKGnoV3YWt1MgU --filternode=/ip4/172.18.28.42/tcp/34460/p2p/16Uiu2HAmQnYWLHPVdNMUXzhwZzuLi4qddUPYWnX19JUyS1bB6g5i
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.85.122 waku 4a1c6f4ad091f65c10f908683dc9116115ce68373d935ca459245f87198ad213
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 4a1c6f4ad091. Setting up logs at ./log/docker/node2_2024-11-07_04-42-13__d80dcb92-4775-4ea5-b39e-7cdb708ac38e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 8401
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8401/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8401/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.85.122/tcp/8402/p2p/16Uiu2HAmL6ZLREBdZPjC6zZNhbPaoHdiDt7LKRifmFgJF4LiHSwv","/ip4/172.18.85.122/tcp/8403/ws/p2p/16Uiu2HAmL6ZLREBdZPjC6zZNhbPaoHdiDt7LKRifmFgJF4LiHSwv"],"enrUri":"enr:-L24QMzVL1Mvx8dBPyprY_k4M3_rdyOM40jvS81gxwXgGP_UYMFhZ_5k21bqQZa6WzgDQ_fixx7bmEbr7cZ0UeZvck8CgmlkgnY0gmlwhKwSVXqKbXVsdGlhZGRyc5YACASsElV6BiDSAAoErBJVegYg090DgnJzhQADAQAAiXNlY3AyNTZrMaEDbo6f_Euk_45qvA0nn7695QLYtFcw9SvZNfJFW7vvjqWDdGNwgiDSg3VkcIIg1IV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8401/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.28.42/tcp/34460/p2p/16Uiu2HAmQnYWLHPVdNMUXzhwZzuLi4qddUPYWnX19JUyS1bB6g5i"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:34459/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8401/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "b674c2d6-8a69-4c22-9cc1-b8a46e8d75a0", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"b674c2d6-8a69-4c22-9cc1-b8a46e8d75a0","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:8401/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:8401/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 9f2a5ad452ff
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 4a1c6f4ad091
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 9f2a5ad452ff. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.