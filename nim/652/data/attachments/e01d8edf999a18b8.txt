[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_invalid_pubsub_topic_format with id: 2025-02-15_04-02-27__e4b37ab4-b6e0-43f1-b669-e9e3d222510b
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-02-15_04-02-27__e4b37ab4-b6e0-43f1-b669-e9e3d222510b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.92.240
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['19097', '19098', '19099', '19100', '19101']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 19097:19097 -p 19098:19098 -p 19099:19099 -p 19100:19100 -p 19101:19101 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=19099 --rest-port=19097 --tcp-port=19098 --discv5-udp-port=19100 --rest-address=0.0.0.0 --nat=extip:172.18.92.240 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=a82d7a67fc6a729ceeee7fe9eaeefb374fdfd74e7c42e87ca0dd361dbd8ac7ad --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=19101 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.92.240 waku dc8ffd4e6577a70defa8bb03cdf87a67c3f5e389bbd5a5078c73c03bbdb37217
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID dc8ffd4e6577. Setting up logs at ./log/docker/node1_2025-02-15_04-02-27__e4b37ab4-b6e0-43f1-b669-e9e3d222510b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 19097
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 0931ea68e68b. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:19097/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:19097/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.92.240/tcp/19098/p2p/16Uiu2HAmJhC2SXVL9prZDqwsdAtDjPQqd7PWFmRf5MVpw9mt9jiE","/ip4/172.18.92.240/tcp/19099/ws/p2p/16Uiu2HAmJhC2SXVL9prZDqwsdAtDjPQqd7PWFmRf5MVpw9mt9jiE"],"enrUri":"enr:-L24QGIpKkJtQDnGxxdg6dKSfHeB2d-AyztKDA3BM5RarHFiSqBjhdTn-hMXPHBNrReXAq8jsKc0yhTDG9FCmss33CMCgmlkgnY0gmlwhKwSXPCKbXVsdGlhZGRyc5YACASsElzwBkqaAAoErBJc8AZKm90DgnJzhQADAQAAiXNlY3AyNTZrMaEDWbZ78fsbbau3vomBjTy57SjZQqWcRhAw3Zhc8DynlC-DdGNwgkqag3VkcIJKnIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-02-15_04-02-27__e4b37ab4-b6e0-43f1-b669-e9e3d222510b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.201.234
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['34571', '34572', '34573', '34574', '34575']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 34571:34571 -p 34572:34572 -p 34573:34573 -p 34574:34574 -p 34575:34575 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=34573 --rest-port=34571 --tcp-port=34572 --discv5-udp-port=34574 --rest-address=0.0.0.0 --nat=extip:172.18.201.234 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b74cc5987bd1fef2ffeff2ef0dcd5feafaa6fe9befe71cbcfb7ecdf8c11e6bf1 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=34575 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QGIpKkJtQDnGxxdg6dKSfHeB2d-AyztKDA3BM5RarHFiSqBjhdTn-hMXPHBNrReXAq8jsKc0yhTDG9FCmss33CMCgmlkgnY0gmlwhKwSXPCKbXVsdGlhZGRyc5YACASsElzwBkqaAAoErBJc8AZKm90DgnJzhQADAQAAiXNlY3AyNTZrMaEDWbZ78fsbbau3vomBjTy57SjZQqWcRhAw3Zhc8DynlC-DdGNwgkqag3VkcIJKnIV3YWt1MgU --filternode=/ip4/172.18.92.240/tcp/19098/p2p/16Uiu2HAmJhC2SXVL9prZDqwsdAtDjPQqd7PWFmRf5MVpw9mt9jiE
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.201.234 waku 180f22b5cc1c25bb2bd643e9c9c1abc76af60c83b05f7ae71d7f08ddf1e307b3
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 180f22b5cc1c. Setting up logs at ./log/docker/node2_2025-02-15_04-02-27__e4b37ab4-b6e0-43f1-b669-e9e3d222510b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 34571
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:34571/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:34571/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.201.234/tcp/34572/p2p/16Uiu2HAmVrMmxEH6zc2HqNjuAumAQtDMVD8N6NdGihKcqh84EXtQ","/ip4/172.18.201.234/tcp/34573/ws/p2p/16Uiu2HAmVrMmxEH6zc2HqNjuAumAQtDMVD8N6NdGihKcqh84EXtQ"],"enrUri":"enr:-L24QOoBWA52Bv7DoW8Q-RRXxVxMGDCUwDhSHbeA0cU0NKM0IweInBzQt7Zb6_TCuZ_Sgk9zhnQfQde4DyzK3Xlw0foCgmlkgnY0gmlwhKwSyeqKbXVsdGlhZGRyc5YACASsEsnqBocMAAoErBLJ6gaHDd0DgnJzhQADAQAAiXNlY3AyNTZrMaED_4BKz4fIUFiOZ7BRT9VLcg3M8EkNfqQMtOmxSJfpiXWDdGNwgocMg3VkcIKHDoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:34571/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.92.240/tcp/19098/p2p/16Uiu2HAmJhC2SXVL9prZDqwsdAtDjPQqd7PWFmRf5MVpw9mt9jiE"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:19097/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:34571/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "a4c366e9-15a9-4b58-9156-9fba5fb40364", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"a4c366e9-15a9-4b58-9156-9fba5fb40364","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:34571/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": ["/waku/2/rs/3/1"]}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:34571/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id dc8ffd4e6577
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 180f22b5cc1c
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container dc8ffd4e6577. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.