2025-02-15 04:03:47.791 DEBUG [tests.conftest] Running fixture setup: test_id
2025-02-15 04:03:47.792 DEBUG [tests.conftest] Running test: test_publish_with_invalid_payloads with id: 2025-02-15_04-03-47__bf1db4b7-f820-4df0-bf59-eff2d510850d
2025-02-15 04:03:47.792 DEBUG [src.steps.common] Running fixture setup: common_setup
2025-02-15 04:03:47.792 DEBUG [src.steps.relay] Running fixture setup: relay_setup
2025-02-15 04:03:47.793 DEBUG [src.steps.relay] Running fixture setup: setup_main_relay_nodes
2025-02-15 04:03:47.799 DEBUG [src.node.docker_mananger] Docker client initialized with image wakuorg/nwaku:latest
2025-02-15 04:03:47.799 DEBUG [src.node.waku_node] WakuNode instance initialized with log path ./log/docker/node1_2025-02-15_04-03-47__bf1db4b7-f820-4df0-bf59-eff2d510850d__wakuorg_nwaku:latest.log
2025-02-15 04:03:47.799 DEBUG [src.node.waku_node] Starting Node...
2025-02-15 04:03:47.799 DEBUG [src.node.docker_mananger] Attempting to create or retrieve network waku
2025-02-15 04:03:47.800 DEBUG [src.node.docker_mananger] Network waku already exists
2025-02-15 04:03:47.800 DEBUG [src.node.docker_mananger] Generated random external IP 172.18.215.35
2025-02-15 04:03:47.800 DEBUG [src.node.docker_mananger] Generated ports ['43861', '43862', '43863', '43864', '43865']
2025-02-15 04:03:47.801 DEBUG [src.node.waku_node] RLN credentials were not set
2025-02-15 04:03:47.801 INFO [src.node.waku_node] RLN credentials not set or credential store not available, starting without RLN
2025-02-15 04:03:47.801 DEBUG [src.node.waku_node] Using volumes []
2025-02-15 04:03:47.801 DEBUG [src.node.docker_mananger] docker run -i -t -p 43861:43861 -p 43862:43862 -p 43863:43863 -p 43864:43864 -p 43865:43865 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=43863 --rest-port=43861 --tcp-port=43862 --discv5-udp-port=43864 --rest-address=0.0.0.0 --nat=extip:172.18.215.35 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=8cb9fe20155198ac2af1ecccd97b6bbcd3a41e43eb8d7ea0ba685b7cb4df6b1c --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=43865 --metrics-logging=true --relay=true
2025-02-15 04:03:48.015 DEBUG [src.node.docker_mananger] docker network connect --ip 172.18.215.35 waku b99fce95e9720318c0598dc946bfbe0c7036274d200d1f9f862c01c30b235698
2025-02-15 04:03:48.070 DEBUG [src.node.docker_mananger] Container started with ID b99fce95e972. Setting up logs at ./log/docker/node1_2025-02-15_04-03-47__bf1db4b7-f820-4df0-bf59-eff2d510850d__wakuorg_nwaku:latest.log
2025-02-15 04:03:48.071 DEBUG [src.node.waku_node] Started container from image wakuorg/nwaku:latest. REST: 43861
2025-02-15 04:03:48.071 DEBUG [src.libs.common] Sleeping for 1 seconds
2025-02-15 04:03:48.585 ERROR [src.node.docker_mananger] Max retries reached for container b35080ab0a09. Exiting log stream.
2025-02-15 04:03:49.072 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:43861/health" -H "Content-Type: application/json" -d 'None'
2025-02-15 04:03:49.074 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
2025-02-15 04:03:49.075 INFO [src.node.waku_node] Node protocols are initialized !!
2025-02-15 04:03:49.075 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:43861/debug/v1/info" -H "Content-Type: application/json" -d 'None'
2025-02-15 04:03:49.077 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.215.35/tcp/43862/p2p/16Uiu2HAm9LoGZzpSv9kwoFjKEeyz42211fPUKYSARGA7E2TmDzCL","/ip4/172.18.215.35/tcp/43863/ws/p2p/16Uiu2HAm9LoGZzpSv9kwoFjKEeyz42211fPUKYSARGA7E2TmDzCL"],"enrUri":"enr:-L24QFxXjgABtMlsFQaI12QicGFmBJgK2uhGrv05Z1zukuGcJDEJSTzW3_DovjN0gLnQmqCVjZpTBKo2pqu9GikG4H8CgmlkgnY0gmlwhKwS1yOKbXVsdGlhZGRyc5YACASsEtcjBqtWAAoErBLXIwarV90DgnJzhQADAQAAiXNlY3AyNTZrMaECzsP0dEWmlgsS0SbctRe5jk8GRzaH2zcJACrEktXzBTWDdGNwgqtWg3VkcIKrWIV3YWt1MgE"}'
2025-02-15 04:03:49.077 INFO [src.node.waku_node] REST service is ready !!
2025-02-15 04:03:49.083 DEBUG [src.node.docker_mananger] Docker client initialized with image wakuorg/nwaku:latest
2025-02-15 04:03:49.083 DEBUG [src.node.waku_node] WakuNode instance initialized with log path ./log/docker/node2_2025-02-15_04-03-47__bf1db4b7-f820-4df0-bf59-eff2d510850d__wakuorg_nwaku:latest.log
2025-02-15 04:03:49.083 DEBUG [src.node.waku_node] Starting Node...
2025-02-15 04:03:49.084 DEBUG [src.node.docker_mananger] Attempting to create or retrieve network waku
2025-02-15 04:03:49.085 DEBUG [src.node.docker_mananger] Network waku already exists
2025-02-15 04:03:49.085 DEBUG [src.node.docker_mananger] Generated random external IP 172.18.156.112
2025-02-15 04:03:49.085 DEBUG [src.node.docker_mananger] Generated ports ['34694', '34695', '34696', '34697', '34698']
2025-02-15 04:03:49.085 DEBUG [src.node.waku_node] RLN credentials were not set
2025-02-15 04:03:49.085 INFO [src.node.waku_node] RLN credentials not set or credential store not available, starting without RLN
2025-02-15 04:03:49.086 DEBUG [src.node.waku_node] Using volumes []
2025-02-15 04:03:49.086 DEBUG [src.node.docker_mananger] docker run -i -t -p 34694:34694 -p 34695:34695 -p 34696:34696 -p 34697:34697 -p 34698:34698 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=34696 --rest-port=34694 --tcp-port=34695 --discv5-udp-port=34697 --rest-address=0.0.0.0 --nat=extip:172.18.156.112 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=1cabe78e2320cf1df63b55f0fb1d65eed54c902c0eade35880381be7d6f727ec --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=34698 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-L24QFxXjgABtMlsFQaI12QicGFmBJgK2uhGrv05Z1zukuGcJDEJSTzW3_DovjN0gLnQmqCVjZpTBKo2pqu9GikG4H8CgmlkgnY0gmlwhKwS1yOKbXVsdGlhZGRyc5YACASsEtcjBqtWAAoErBLXIwarV90DgnJzhQADAQAAiXNlY3AyNTZrMaECzsP0dEWmlgsS0SbctRe5jk8GRzaH2zcJACrEktXzBTWDdGNwgqtWg3VkcIKrWIV3YWt1MgE
2025-02-15 04:03:49.309 DEBUG [src.node.docker_mananger] docker network connect --ip 172.18.156.112 waku c2a0ffb3e0ea3ec0bf56bc61db6b90726205338d9207c6b7a06bc06681783264
2025-02-15 04:03:49.354 DEBUG [src.node.docker_mananger] Container started with ID c2a0ffb3e0ea. Setting up logs at ./log/docker/node2_2025-02-15_04-03-47__bf1db4b7-f820-4df0-bf59-eff2d510850d__wakuorg_nwaku:latest.log
2025-02-15 04:03:49.355 DEBUG [src.node.waku_node] Started container from image wakuorg/nwaku:latest. REST: 34694
2025-02-15 04:03:49.355 DEBUG [src.libs.common] Sleeping for 1 seconds
2025-02-15 04:03:50.355 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:34694/health" -H "Content-Type: application/json" -d 'None'
2025-02-15 04:03:50.368 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
2025-02-15 04:03:50.368 INFO [src.node.waku_node] Node protocols are initialized !!
2025-02-15 04:03:50.368 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:34694/debug/v1/info" -H "Content-Type: application/json" -d 'None'
2025-02-15 04:03:50.374 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.156.112/tcp/34695/p2p/16Uiu2HAkzfjkqUqgk53hSfyGA5aGhQdicpvSb8FeTMcsM4KEbhqt","/ip4/172.18.156.112/tcp/34696/ws/p2p/16Uiu2HAkzfjkqUqgk53hSfyGA5aGhQdicpvSb8FeTMcsM4KEbhqt"],"enrUri":"enr:-L24QIQuLBc9G45HMVcIlSU6M0Upr4oW0iYdke80pTIxqx5XcxjxHoNVOXaTkxUYpn09tkILGSasveHln7K-W1P7qhACgmlkgnY0gmlwhKwSnHCKbXVsdGlhZGRyc5YACASsEpxwBoeHAAoErBKccAaHiN0DgnJzhQADAQAAiXNlY3AyNTZrMaECTeTWD_a-YS3TuCbG-Nxh9IhSAIfyOkAQeVNO4bQsddODdGNwgoeHg3VkcIKHiYV3YWt1MgE"}'
2025-02-15 04:03:50.375 INFO [src.node.waku_node] REST service is ready !!
2025-02-15 04:03:50.376 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:34694/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.215.35/tcp/43862/p2p/16Uiu2HAm9LoGZzpSv9kwoFjKEeyz42211fPUKYSARGA7E2TmDzCL"]'
2025-02-15 04:03:50.380 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-15 04:03:50.381 DEBUG [src.steps.relay] Running fixture setup: subscribe_main_relay_nodes
2025-02-15 04:03:50.381 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:43861/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
2025-02-15 04:03:50.385 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-15 04:03:50.385 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:34694/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
2025-02-15 04:03:50.390 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-15 04:03:50.391 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:43861/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-15 04:03:50.397 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-15 04:03:50.397 DEBUG [src.libs.common] Sleeping for 0.1 seconds
2025-02-15 04:03:50.498 DEBUG [src.steps.relay] Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
2025-02-15 04:03:50.498 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:43861/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
2025-02-15 04:03:50.500 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1739592230391587840,"ephemeral":false}]'
2025-02-15 04:03:50.502 DEBUG [src.steps.relay] Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
2025-02-15 04:03:50.502 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:34694/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
2025-02-15 04:03:50.505 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1739592230391587840,"ephemeral":false}]'
2025-02-15 04:03:50.506 INFO [src.steps.relay] WARM UP successful!!
2025-02-15 04:03:50.507 DEBUG [tests.relay.test_publish] Running test with payload Empty string
2025-02-15 04:03:50.508 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:43861/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-15 04:03:50.510 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:43861/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-15 04:03:50.510 DEBUG [tests.relay.test_publish] Running test with payload Unecoded text
2025-02-15 04:03:50.511 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:43861/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "Hello World!", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-15 04:03:50.513 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:43861/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Incorrect base64 string'
2025-02-15 04:03:50.513 DEBUG [tests.relay.test_publish] Running test with payload A dictionary
2025-02-15 04:03:50.513 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:43861/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": {"key": "YWFh"}, "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-15 04:03:50.515 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:43861/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-15 04:03:50.516 DEBUG [tests.relay.test_publish] Running test with payload An integer
2025-02-15 04:03:50.516 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:43861/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": 1234567890, "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-15 04:03:50.518 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:43861/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-15 04:03:50.518 DEBUG [tests.relay.test_publish] Running test with payload A list
2025-02-15 04:03:50.519 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:43861/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": ["YWFh"], "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-15 04:03:50.521 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:43861/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-15 04:03:50.521 DEBUG [tests.relay.test_publish] Running test with payload A bool
2025-02-15 04:03:50.521 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:43861/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": true, "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-15 04:03:50.523 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:43861/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-15 04:03:50.525 DEBUG [tests.conftest] Running fixture teardown: test_setup
2025-02-15 04:03:50.526 DEBUG [tests.conftest] Running fixture teardown: close_open_nodes
2025-02-15 04:03:50.526 DEBUG [src.node.waku_node] Stopping container with id b99fce95e972
2025-02-15 04:03:51.553 DEBUG [src.node.waku_node] Container stopped.
2025-02-15 04:03:51.554 DEBUG [src.node.waku_node] Stopping container with id c2a0ffb3e0ea
2025-02-15 04:03:52.366 ERROR [src.node.docker_mananger] Max retries reached for container b99fce95e972. Exiting log stream.
2025-02-15 04:03:53.059 DEBUG [src.node.waku_node] Container stopped.
2025-02-15 04:03:53.060 DEBUG [tests.conftest] Running fixture teardown: check_waku_log_errors
2025-02-15 04:03:53.066 DEBUG [src.node.docker_mananger] No errors found in the waku logs.
2025-02-15 04:03:53.072 DEBUG [src.node.docker_mananger] No errors found in the waku logs.
