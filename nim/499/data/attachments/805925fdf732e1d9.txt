[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_no_request_id with id: 2024-12-04_11-02-54__efa8027c-117e-429a-b79f-3848e01f12e6
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-04_11-02-54__efa8027c-117e-429a-b79f-3848e01f12e6__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.53.217
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['27650', '27651', '27652', '27653', '27654']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 27650:27650 -p 27651:27651 -p 27652:27652 -p 27653:27653 -p 27654:27654 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=27652 --rest-port=27650 --tcp-port=27651 --discv5-udp-port=27653 --rest-address=0.0.0.0 --nat=extip:172.18.53.217 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=03073f2c6a1c1abccd8cd4ac6eef7d670ab0f7135b1adf22869ea9c8ea19ef40 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=27654 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.53.217 waku 621fb6c406e77bc5711f2b85ac9aa38d1253a642ddb4926d97bb0b6b3b891a7b
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 190dff63658f. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 621fb6c406e7. Setting up logs at ./log/docker/node1_2024-12-04_11-02-54__efa8027c-117e-429a-b79f-3848e01f12e6__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 27650
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:27650/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:27650/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.53.217/tcp/27651/p2p/16Uiu2HAm3EZHYTNnAz9Nvs4Q3ezKNfAkxpS1ms4ysoe3w5wU6UNo","/ip4/172.18.53.217/tcp/27652/ws/p2p/16Uiu2HAm3EZHYTNnAz9Nvs4Q3ezKNfAkxpS1ms4ysoe3w5wU6UNo"],"enrUri":"enr:-L24QHGReBngPaY0GZkwHzM9D_TOPELXjpUt7skPKipLyRleeBxsdiucwYcgGFyQAn0DRbXfo3DHdpBGcfyWOEjGHxwCgmlkgnY0gmlwhKwSNdmKbXVsdGlhZGRyc5YACASsEjXZBmwDAAoErBI12QZsBN0DgnJzhQADAQAAiXNlY3AyNTZrMaECdASJoPxWbdOxJLdeauiXZ7lHpiwi7CQgvSzQiMOBdvSDdGNwgmwDg3VkcIJsBYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-04_11-02-54__efa8027c-117e-429a-b79f-3848e01f12e6__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.229.170
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['20184', '20185', '20186', '20187', '20188']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 20184:20184 -p 20185:20185 -p 20186:20186 -p 20187:20187 -p 20188:20188 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=20186 --rest-port=20184 --tcp-port=20185 --discv5-udp-port=20187 --rest-address=0.0.0.0 --nat=extip:172.18.229.170 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=f67bcb6cdfcef35e2e36cf46ddd2b1779e43f30b00c5c5db26420eb0383a1b2d --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=20188 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QHGReBngPaY0GZkwHzM9D_TOPELXjpUt7skPKipLyRleeBxsdiucwYcgGFyQAn0DRbXfo3DHdpBGcfyWOEjGHxwCgmlkgnY0gmlwhKwSNdmKbXVsdGlhZGRyc5YACASsEjXZBmwDAAoErBI12QZsBN0DgnJzhQADAQAAiXNlY3AyNTZrMaECdASJoPxWbdOxJLdeauiXZ7lHpiwi7CQgvSzQiMOBdvSDdGNwgmwDg3VkcIJsBYV3YWt1MgU --filternode=/ip4/172.18.53.217/tcp/27651/p2p/16Uiu2HAm3EZHYTNnAz9Nvs4Q3ezKNfAkxpS1ms4ysoe3w5wU6UNo
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.229.170 waku af08fbae2b525a5c557c7e9dbf23714ef48814430676b83aed63150a50ece15d
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID af08fbae2b52. Setting up logs at ./log/docker/node2_2024-12-04_11-02-54__efa8027c-117e-429a-b79f-3848e01f12e6__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 20184
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:20184/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:20184/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.229.170/tcp/20185/p2p/16Uiu2HAmARjzEVmXQnQansRmJZBa3mfYei31X9SACAcWsnUZdEfV","/ip4/172.18.229.170/tcp/20186/ws/p2p/16Uiu2HAmARjzEVmXQnQansRmJZBa3mfYei31X9SACAcWsnUZdEfV"],"enrUri":"enr:-L24QCu0USqNr6f56v8tTHsinTEMVUnoc5ypfDxD2tlB6wlFR_EddLQu-sLnL5ObzNKBF8MTvbQtiMlb-KvAngMrAzYCgmlkgnY0gmlwhKwS5aqKbXVsdGlhZGRyc5YACASsEuWqBk7ZAAoErBLlqgZO2t0DgnJzhQADAQAAiXNlY3AyNTZrMaEC3uPV1WJzfw7vKrhn9k10YSmCwjJ1Wdc7LJITkfTXyEyDdGNwgk7Zg3VkcIJO24V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:20184/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.53.217/tcp/27651/p2p/16Uiu2HAm3EZHYTNnAz9Nvs4Q3ezKNfAkxpS1ms4ysoe3w5wU6UNo"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:27650/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:20184/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "05efc53f-b650-43be-80bf-654c03a79ed4", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"05efc53f-b650-43be-80bf-654c03a79ed4","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:20184/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:20184/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 621fb6c406e7
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id af08fbae2b52
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 621fb6c406e7. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.