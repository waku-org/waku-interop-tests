[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_all_with_invalid_request_id with id: 2024-12-04_11-04-19__c210c540-8226-40c1-87a4-bc622a799ff2
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-04_11-04-19__c210c540-8226-40c1-87a4-bc622a799ff2__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.103.206
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['26358', '26359', '26360', '26361', '26362']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 26358:26358 -p 26359:26359 -p 26360:26360 -p 26361:26361 -p 26362:26362 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=26360 --rest-port=26358 --tcp-port=26359 --discv5-udp-port=26361 --rest-address=0.0.0.0 --nat=extip:172.18.103.206 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=0b285202c2f6c7ee5bd1eb29e2d464126ed975bba89cfeaf1a268dbb4eba2bfe --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=26362 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.103.206 waku b396e0a226ff3a09382fe56f10606814a34f53c1221043adc8a1702755052c29
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID b396e0a226ff. Setting up logs at ./log/docker/node1_2024-12-04_11-04-19__c210c540-8226-40c1-87a4-bc622a799ff2__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 26358
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 33aa5c5e000d. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:26358/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:26358/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.103.206/tcp/26359/p2p/16Uiu2HAmMHKVjt6fuF8hAGu9obYLKAGahikSyLxeb8uDHWY6nYPW","/ip4/172.18.103.206/tcp/26360/ws/p2p/16Uiu2HAmMHKVjt6fuF8hAGu9obYLKAGahikSyLxeb8uDHWY6nYPW"],"enrUri":"enr:-L24QLpLhdarFm8n76AHULyTJLSaP44vvDAV2GTUvXWsZADFW0B985xT5e0lHna_sCn7mfumq31C5xfv_rI3-I_uVrQCgmlkgnY0gmlwhKwSZ86KbXVsdGlhZGRyc5YACASsEmfOBmb3AAoErBJnzgZm-N0DgnJzhQADAQAAiXNlY3AyNTZrMaEDgCwNegPWxC7qAgwOZ0aivGvmFHZnS8Lt89rblTvZAm2DdGNwgmb3g3VkcIJm-YV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-04_11-04-19__c210c540-8226-40c1-87a4-bc622a799ff2__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.29.151
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['40399', '40400', '40401', '40402', '40403']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 40399:40399 -p 40400:40400 -p 40401:40401 -p 40402:40402 -p 40403:40403 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=40401 --rest-port=40399 --tcp-port=40400 --discv5-udp-port=40402 --rest-address=0.0.0.0 --nat=extip:172.18.29.151 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=a572f04fa1acc6228bb1783e146a1c2e414b636e965dccf8b2bcffed3f69d9af --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=40403 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QLpLhdarFm8n76AHULyTJLSaP44vvDAV2GTUvXWsZADFW0B985xT5e0lHna_sCn7mfumq31C5xfv_rI3-I_uVrQCgmlkgnY0gmlwhKwSZ86KbXVsdGlhZGRyc5YACASsEmfOBmb3AAoErBJnzgZm-N0DgnJzhQADAQAAiXNlY3AyNTZrMaEDgCwNegPWxC7qAgwOZ0aivGvmFHZnS8Lt89rblTvZAm2DdGNwgmb3g3VkcIJm-YV3YWt1MgU --filternode=/ip4/172.18.103.206/tcp/26359/p2p/16Uiu2HAmMHKVjt6fuF8hAGu9obYLKAGahikSyLxeb8uDHWY6nYPW
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.29.151 waku 4560c90b7e8172adfda82137403292d498ff33c4f519f1fdd1997940c1c51b8b
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 4560c90b7e81. Setting up logs at ./log/docker/node2_2024-12-04_11-04-19__c210c540-8226-40c1-87a4-bc622a799ff2__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 40399
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:40399/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:40399/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.29.151/tcp/40400/p2p/16Uiu2HAkxGc8YFU7LeKnDoRekRN5w8btZSRA26tzf4azKR4AWxGM","/ip4/172.18.29.151/tcp/40401/ws/p2p/16Uiu2HAkxGc8YFU7LeKnDoRekRN5w8btZSRA26tzf4azKR4AWxGM"],"enrUri":"enr:-L24QGsURLGPz8na57d8Y0TA7aAB541iQm3XOKP0SBekovJ0Ma55vCSTp8RgIsf8arx9kFIX73IxDB9tCznuPxyF31gCgmlkgnY0gmlwhKwSHZeKbXVsdGlhZGRyc5YACASsEh2XBp3QAAoErBIdlwad0d0DgnJzhQADAQAAiXNlY3AyNTZrMaECKkB7LxBC1gRognBFHHGnpeslvI2kYuLsU-EQqlxJFS6DdGNwgp3Qg3VkcIKd0oV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:40399/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.103.206/tcp/26359/p2p/16Uiu2HAmMHKVjt6fuF8hAGu9obYLKAGahikSyLxeb8uDHWY6nYPW"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:26358/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:40399/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "c7071461-85d5-452c-bd2d-3d94e51556c6", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"c7071461-85d5-452c-bd2d-3d94e51556c6","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:40399/filter/v2/subscriptions/all" -H "Content-Type: application/json" -d '{"requestId": 1}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:40399/filter/v2/subscriptions/all. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id b396e0a226ff
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 4560c90b7e81
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container b396e0a226ff. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.