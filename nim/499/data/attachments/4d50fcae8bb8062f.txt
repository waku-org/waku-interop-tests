[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_all_on_peer_with_no_subscription with id: 2024-12-04_11-04-20__455b3178-262f-4614-a77f-585d68f0fb85
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-04_11-04-20__455b3178-262f-4614-a77f-585d68f0fb85__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.228.229
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['7382', '7383', '7384', '7385', '7386']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 7382:7382 -p 7383:7383 -p 7384:7384 -p 7385:7385 -p 7386:7386 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=7384 --rest-port=7382 --tcp-port=7383 --discv5-udp-port=7385 --rest-address=0.0.0.0 --nat=extip:172.18.228.229 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b9ce1d8e4b30aab4de3a84c16ed4bcc8ddbdb5f6d647e35efba120b62b5028fc --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=7386 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.228.229 waku a5fd43d6fa7e3c7b8c0a43b6988155b94c067c4e4c23e78f6e10ee6abda77cd8
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID a5fd43d6fa7e. Setting up logs at ./log/docker/node1_2024-12-04_11-04-20__455b3178-262f-4614-a77f-585d68f0fb85__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 7382
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container b36a06aa55d0. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7382/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7382/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.228.229/tcp/7383/p2p/16Uiu2HAm6fEkvuUvHWLFvqN7sk6HqPxMG6xE4hN3qNojV8Yz1fDb","/ip4/172.18.228.229/tcp/7384/ws/p2p/16Uiu2HAm6fEkvuUvHWLFvqN7sk6HqPxMG6xE4hN3qNojV8Yz1fDb"],"enrUri":"enr:-L24QDqEjZmC8Obm3pXFlVIv3q4jiJBgBh5UiQ2zfH1TXgiYIcGBoe3jcHL5Q0dgW5CCVfQ-xrkfBLl9I3gFlxwlIioCgmlkgnY0gmlwhKwS5OWKbXVsdGlhZGRyc5YACASsEuTlBhzXAAoErBLk5QYc2N0DgnJzhQADAQAAiXNlY3AyNTZrMaECpuorTfFeZQE1jHv8wrCfwv6HsYe6ANCBoIe82vtWuOKDdGNwghzXg3VkcIIc2YV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-04_11-04-20__455b3178-262f-4614-a77f-585d68f0fb85__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.121.90
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['37839', '37840', '37841', '37842', '37843']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 37839:37839 -p 37840:37840 -p 37841:37841 -p 37842:37842 -p 37843:37843 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=37841 --rest-port=37839 --tcp-port=37840 --discv5-udp-port=37842 --rest-address=0.0.0.0 --nat=extip:172.18.121.90 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=0a4ee14df39ac486db2f4e1b595fd872fac5a3bae1ee825aea35a1ae41d4ade6 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=37843 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QDqEjZmC8Obm3pXFlVIv3q4jiJBgBh5UiQ2zfH1TXgiYIcGBoe3jcHL5Q0dgW5CCVfQ-xrkfBLl9I3gFlxwlIioCgmlkgnY0gmlwhKwS5OWKbXVsdGlhZGRyc5YACASsEuTlBhzXAAoErBLk5QYc2N0DgnJzhQADAQAAiXNlY3AyNTZrMaECpuorTfFeZQE1jHv8wrCfwv6HsYe6ANCBoIe82vtWuOKDdGNwghzXg3VkcIIc2YV3YWt1MgU --filternode=/ip4/172.18.228.229/tcp/7383/p2p/16Uiu2HAm6fEkvuUvHWLFvqN7sk6HqPxMG6xE4hN3qNojV8Yz1fDb
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.121.90 waku 74b34600a8771b2205659ac8558170cfba006cb5ae7fa7ec324281245db5d4ec
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 74b34600a877. Setting up logs at ./log/docker/node2_2024-12-04_11-04-20__455b3178-262f-4614-a77f-585d68f0fb85__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 37839
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:37839/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:37839/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.121.90/tcp/37840/p2p/16Uiu2HAkuu5kWsefg5uvyje1zsCt6dFKkCocT68mCtFCUwYFiXuk","/ip4/172.18.121.90/tcp/37841/ws/p2p/16Uiu2HAkuu5kWsefg5uvyje1zsCt6dFKkCocT68mCtFCUwYFiXuk"],"enrUri":"enr:-L24QNZDiffMiKIZy_Pt8kUHDbv6VudYnbXclJ3FTM4xhzUJcIzystLhXDosBVlrg9SZnLiFhASGpgINfDWPkvIxjd4CgmlkgnY0gmlwhKwSeVqKbXVsdGlhZGRyc5YACASsEnlaBpPQAAoErBJ5WgaT0d0DgnJzhQADAQAAiXNlY3AyNTZrMaECBwWPVKUVL1dFQsJ5nkov17YrC6AQZIU1B0wkVgpgA9ODdGNwgpPQg3VkcIKT0oV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:37839/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.228.229/tcp/7383/p2p/16Uiu2HAm6fEkvuUvHWLFvqN7sk6HqPxMG6xE4hN3qNojV8Yz1fDb"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:37839/filter/v2/subscriptions/all" -H "Content-Type: application/json" -d '{"requestId": "1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 404 Client Error: Not Found for url: http://127.0.0.1:37839/filter/v2/subscriptions/all. Response content: b'{"requestId":"1","statusDesc":"NOT_FOUND: peer has no subscriptions"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id a5fd43d6fa7e
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 74b34600a877
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container a5fd43d6fa7e. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.