[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_payload_equal_or_more_150_kb with id: 2024-12-04_11-08-16__2ad37d0f-8271-4a8c-a1d2-8778b4a123bf
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-04_11-08-16__2ad37d0f-8271-4a8c-a1d2-8778b4a123bf__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.70.208
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['18013', '18014', '18015', '18016', '18017']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 18013:18013 -p 18014:18014 -p 18015:18015 -p 18016:18016 -p 18017:18017 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=18015 --rest-port=18013 --tcp-port=18014 --discv5-udp-port=18016 --rest-address=0.0.0.0 --nat=extip:172.18.70.208 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=c552b1f17b1b92609dd92a95c311bfb8ef00b23c850cec4e71c90f381cc95f3a --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=18017 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.70.208 waku 4827b645f718d61f503d92b06f952283d28a17d594a6bebaaa5bb7fa69bc830c
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 4827b645f718. Setting up logs at ./log/docker/node1_2024-12-04_11-08-16__2ad37d0f-8271-4a8c-a1d2-8778b4a123bf__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 18013
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container f18f20f6efd3. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:18013/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:18013/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.70.208/tcp/18014/p2p/16Uiu2HAkvwVBttbEGhiwbNhQFzXMjuTEx3WkkQTuegbYRnVagaZz","/ip4/172.18.70.208/tcp/18015/ws/p2p/16Uiu2HAkvwVBttbEGhiwbNhQFzXMjuTEx3WkkQTuegbYRnVagaZz"],"enrUri":"enr:-L24QDwV8UhG2fHkplEsdONohSEgYCWVz7WV0SYi83CduPzFdjpaUU5xA8qO4RY4hDZVB9zPSjtIQrIsFrL9ibN-u_4CgmlkgnY0gmlwhKwSRtCKbXVsdGlhZGRyc5YACASsEkbQBkZeAAoErBJG0AZGX90DgnJzhQADAQAAiXNlY3AyNTZrMaECFn7ozXVgR6k5aPl5DBQb-CXm9MEopVERuBVhw-2k7gWDdGNwgkZeg3VkcIJGYIV3YWt1MgE"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-04_11-08-16__2ad37d0f-8271-4a8c-a1d2-8778b4a123bf__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.22.119
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['43580', '43581', '43582', '43583', '43584']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 43580:43580 -p 43581:43581 -p 43582:43582 -p 43583:43583 -p 43584:43584 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=43582 --rest-port=43580 --tcp-port=43581 --discv5-udp-port=43583 --rest-address=0.0.0.0 --nat=extip:172.18.22.119 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=fb5f85e634211210ebe5b540afd0a9fb0546c0deeee20edababfc9c0bd63d1f9 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=43584 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-L24QDwV8UhG2fHkplEsdONohSEgYCWVz7WV0SYi83CduPzFdjpaUU5xA8qO4RY4hDZVB9zPSjtIQrIsFrL9ibN-u_4CgmlkgnY0gmlwhKwSRtCKbXVsdGlhZGRyc5YACASsEkbQBkZeAAoErBJG0AZGX90DgnJzhQADAQAAiXNlY3AyNTZrMaECFn7ozXVgR6k5aPl5DBQb-CXm9MEopVERuBVhw-2k7gWDdGNwgkZeg3VkcIJGYIV3YWt1MgE
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.22.119 waku 91bc00351acb6e8fd539fe3cfa1d0da27eaebb5dd1cbd3158e54269c5014101c
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 91bc00351acb. Setting up logs at ./log/docker/node2_2024-12-04_11-08-16__2ad37d0f-8271-4a8c-a1d2-8778b4a123bf__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 43580
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:43580/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:43580/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.22.119/tcp/43581/p2p/16Uiu2HAmRH4tDETdcdDgPd8Em8c2paC6oXTWECQqLjVGguRNxE3P","/ip4/172.18.22.119/tcp/43582/ws/p2p/16Uiu2HAmRH4tDETdcdDgPd8Em8c2paC6oXTWECQqLjVGguRNxE3P"],"enrUri":"enr:-L24QMTN7gH6Zj6DH7f_kzSphhRQGfmXhFZlZqWKbmu33lw_PeEvJpiymYUvks_4Tom7hdeZM4loQXrdQ66wzFEHstsCgmlkgnY0gmlwhKwSFneKbXVsdGlhZGRyc5YACASsEhZ3Bqo9AAoErBIWdwaqPt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDu4pHItO4M8Y57o7U6wYUOhJwWt0t7KpwNZYqUG_1qMaDdGNwgqo9g3VkcIKqP4V3YWt1MgE"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:43580/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.70.208/tcp/18014/p2p/16Uiu2HAkvwVBttbEGhiwbNhQFzXMjuTEx3WkkQTuegbYRnVagaZz"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:18013/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:43580/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:18013/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:18013/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1733310500036714752,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:43580/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1733310500036714752,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[35mDEBUG   [0m tests.relay.test_publish:test_publish.py:55 Running test with payload length of 204800 bytes
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:18013/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
[35mDEBUG   [0m tests.relay.test_publish:test_publish.py:55 Running test with payload length of 1048576 bytes
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:18013/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Failed to publish: Message size exceeded maximum of 153600 bytes'
[35mDEBUG   [0m tests.relay.test_publish:test_publish.py:55 Running test with payload length of 10485760 bytes
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:18013/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Failed to publish: Message size exceeded maximum of 153600 bytes'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 4827b645f718
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 91bc00351acb
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 4827b645f718. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.