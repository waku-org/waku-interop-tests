[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_extra_field with id: 2025-01-29_04-05-14__12b9aac1-f3e9-442a-803b-28bbfd5eac99
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-29_04-05-14__12b9aac1-f3e9-442a-803b-28bbfd5eac99__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.197.100
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['44054', '44055', '44056', '44057', '44058']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 44054:44054 -p 44055:44055 -p 44056:44056 -p 44057:44057 -p 44058:44058 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=44056 --rest-port=44054 --tcp-port=44055 --discv5-udp-port=44057 --rest-address=0.0.0.0 --nat=extip:172.18.197.100 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=6c7de5759de4914fe04adf9a74b7fffdfcc870131dacd23ec52c8b5ffb5f9cfb --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=44058 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.197.100 waku c31a0db2cc31676b44f917721738e9e8863f432015d8339e44604782eb5cab6b
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID c31a0db2cc31. Setting up logs at ./log/docker/node1_2025-01-29_04-05-14__12b9aac1-f3e9-442a-803b-28bbfd5eac99__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 44054
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container ff025198f50f. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:44054/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:44054/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.197.100/tcp/44055/p2p/16Uiu2HAmEpU1FaUSsUK8kdJzDjp5xVpPMYVoTQiwHGGTN9hyp5kk","/ip4/172.18.197.100/tcp/44056/ws/p2p/16Uiu2HAmEpU1FaUSsUK8kdJzDjp5xVpPMYVoTQiwHGGTN9hyp5kk"],"enrUri":"enr:-L24QJpGKAlxU9Gx2ocTsRru703o1dL6oKx9cqmQG6qSfZL8dJ_T2pd4wy84fnrN-LYsZKILnK9o1XqAfAb9nLesGlkCgmlkgnY0gmlwhKwSxWSKbXVsdGlhZGRyc5YACASsEsVkBqwXAAoErBLFZAasGN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDICTexY6LBKszrKdaM0FWLtPhhUzGS4WsuvPx_7HU8tGDdGNwgqwXg3VkcIKsGYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-29_04-05-14__12b9aac1-f3e9-442a-803b-28bbfd5eac99__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.249.77
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['8498', '8499', '8500', '8501', '8502']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 8498:8498 -p 8499:8499 -p 8500:8500 -p 8501:8501 -p 8502:8502 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=8500 --rest-port=8498 --tcp-port=8499 --discv5-udp-port=8501 --rest-address=0.0.0.0 --nat=extip:172.18.249.77 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=81e76fecdabf61c5e91fc977de899a084f4ca16241b5749adf2e0cee9d67ee5d --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=8502 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QJpGKAlxU9Gx2ocTsRru703o1dL6oKx9cqmQG6qSfZL8dJ_T2pd4wy84fnrN-LYsZKILnK9o1XqAfAb9nLesGlkCgmlkgnY0gmlwhKwSxWSKbXVsdGlhZGRyc5YACASsEsVkBqwXAAoErBLFZAasGN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDICTexY6LBKszrKdaM0FWLtPhhUzGS4WsuvPx_7HU8tGDdGNwgqwXg3VkcIKsGYV3YWt1MgU --filternode=/ip4/172.18.197.100/tcp/44055/p2p/16Uiu2HAmEpU1FaUSsUK8kdJzDjp5xVpPMYVoTQiwHGGTN9hyp5kk
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.249.77 waku 7dcb558f03bc4c2d79209be46aeaafaf3df88c035aa763e53cba2be187308ffa
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 7dcb558f03bc. Setting up logs at ./log/docker/node2_2025-01-29_04-05-14__12b9aac1-f3e9-442a-803b-28bbfd5eac99__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 8498
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8498/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8498/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.249.77/tcp/8499/p2p/16Uiu2HAmHTGV34ig1Ej5T8pGZR6Gzwy4HLqeuKvkZGkURDw9w9JP","/ip4/172.18.249.77/tcp/8500/ws/p2p/16Uiu2HAmHTGV34ig1Ej5T8pGZR6Gzwy4HLqeuKvkZGkURDw9w9JP"],"enrUri":"enr:-L24QOyNg_WvHdancifbbPus0Cr8C-FmsSJrdatWPFK3FEtRFX6xI1U_OrLCZVXQq-0bC9woJAAgieGvGu-7SJii-MYCgmlkgnY0gmlwhKwS-U2KbXVsdGlhZGRyc5YACASsEvlNBiEzAAoErBL5TQYhNN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDR0m1CvHlzm6BVQmdzZJ2pbXOJm_FcTBDZgmayBW6FcCDdGNwgiEzg3VkcIIhNYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8498/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.197.100/tcp/44055/p2p/16Uiu2HAmEpU1FaUSsUK8kdJzDjp5xVpPMYVoTQiwHGGTN9hyp5kk"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:44054/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8498/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "941eb164-01ad-4d80-a6e1-b81019ea2b52", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"941eb164-01ad-4d80-a6e1-b81019ea2b52","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:8498/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:8498/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id c31a0db2cc31
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 7dcb558f03bc
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container c31a0db2cc31. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.