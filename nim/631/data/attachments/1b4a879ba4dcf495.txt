[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_invalid_request_id with id: 2025-01-29_04-04-06__13885426-f34e-43ae-b9e6-3f1e1ca3497a
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-29_04-04-06__13885426-f34e-43ae-b9e6-3f1e1ca3497a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.238.13
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['28652', '28653', '28654', '28655', '28656']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 28652:28652 -p 28653:28653 -p 28654:28654 -p 28655:28655 -p 28656:28656 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=28654 --rest-port=28652 --tcp-port=28653 --discv5-udp-port=28655 --rest-address=0.0.0.0 --nat=extip:172.18.238.13 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=27c0ce45574db842a2eecad69bf5b242da13b5e037df188c89c02ecd6bcdfab4 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=28656 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.238.13 waku 832aeef48311a971435e482b385326cbccb27bf9e0bc080972010e34bd56e5d9
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 832aeef48311. Setting up logs at ./log/docker/node1_2025-01-29_04-04-06__13885426-f34e-43ae-b9e6-3f1e1ca3497a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 28652
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 91e943d0daa5. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:28652/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:28652/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.238.13/tcp/28653/p2p/16Uiu2HAm273iMaJr9yJBpcNTjaPNmKy2nek6iCSpaQDBaLpMjk7m","/ip4/172.18.238.13/tcp/28654/ws/p2p/16Uiu2HAm273iMaJr9yJBpcNTjaPNmKy2nek6iCSpaQDBaLpMjk7m"],"enrUri":"enr:-L24QKIng74N9Exw0NQYJLUA04_HA2GoTRUBEH4_-McVReBdEyiYcXsGXnZVLrAwYTZeWfCHh-kU5vpFlzFFYFg-_VgCgmlkgnY0gmlwhKwS7g2KbXVsdGlhZGRyc5YACASsEu4NBm_tAAoErBLuDQZv7t0DgnJzhQADAQAAiXNlY3AyNTZrMaECYzxY_kQFhYyA29jnChGqVTu4eyFzezeDD6BVkCNFJgSDdGNwgm_tg3VkcIJv74V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-29_04-04-06__13885426-f34e-43ae-b9e6-3f1e1ca3497a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.223.30
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['26874', '26875', '26876', '26877', '26878']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 26874:26874 -p 26875:26875 -p 26876:26876 -p 26877:26877 -p 26878:26878 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=26876 --rest-port=26874 --tcp-port=26875 --discv5-udp-port=26877 --rest-address=0.0.0.0 --nat=extip:172.18.223.30 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=3cffc2ccbe46acd1acc98d708a4a7a3faeec4d37ec37bc65baef0e1fa283873a --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=26878 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QKIng74N9Exw0NQYJLUA04_HA2GoTRUBEH4_-McVReBdEyiYcXsGXnZVLrAwYTZeWfCHh-kU5vpFlzFFYFg-_VgCgmlkgnY0gmlwhKwS7g2KbXVsdGlhZGRyc5YACASsEu4NBm_tAAoErBLuDQZv7t0DgnJzhQADAQAAiXNlY3AyNTZrMaECYzxY_kQFhYyA29jnChGqVTu4eyFzezeDD6BVkCNFJgSDdGNwgm_tg3VkcIJv74V3YWt1MgU --filternode=/ip4/172.18.238.13/tcp/28653/p2p/16Uiu2HAm273iMaJr9yJBpcNTjaPNmKy2nek6iCSpaQDBaLpMjk7m
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.223.30 waku b7262083bc5ae5e2cb136a623a66d214b23bb5d14ef96f3ba0c29a39b7d1e4fc
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID b7262083bc5a. Setting up logs at ./log/docker/node2_2025-01-29_04-04-06__13885426-f34e-43ae-b9e6-3f1e1ca3497a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 26874
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:26874/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:26874/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.223.30/tcp/26875/p2p/16Uiu2HAm3Uck2Gb5hw2jhqfkzNryVUvhnacj9F9UqQkCF8QjVsEJ","/ip4/172.18.223.30/tcp/26876/ws/p2p/16Uiu2HAm3Uck2Gb5hw2jhqfkzNryVUvhnacj9F9UqQkCF8QjVsEJ"],"enrUri":"enr:-L24QOGiuI5Fq3aBr7C4kM6YNIFggr_kHlYjIjt7uBomzW6YWQw-qTQU5nPFFKaAoNthigEVD4jMfYl04XCYGaOlDyICgmlkgnY0gmlwhKwS3x6KbXVsdGlhZGRyc5YACASsEt8eBmj7AAoErBLfHgZo_N0DgnJzhQADAQAAiXNlY3AyNTZrMaECd56Tx7zQ1Jbq9XgsRwV0jMZcOctyzeHGjppDcxSsWiuDdGNwgmj7g3VkcIJo_YV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:26874/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.238.13/tcp/28653/p2p/16Uiu2HAm273iMaJr9yJBpcNTjaPNmKy2nek6iCSpaQDBaLpMjk7m"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:28652/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:26874/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "33371bdd-6f1e-491a-b7bb-8900f57ada12", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"33371bdd-6f1e-491a-b7bb-8900f57ada12","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:26874/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:26874/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 832aeef48311
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id b7262083bc5a
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 832aeef48311. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.