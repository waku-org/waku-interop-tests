[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2025-01-29_04-03-25__4f4453e7-e429-4e36-a050-79d6b29edeb3
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-29_04-03-25__4f4453e7-e429-4e36-a050-79d6b29edeb3__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.102.110
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['17798', '17799', '17800', '17801', '17802']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 17798:17798 -p 17799:17799 -p 17800:17800 -p 17801:17801 -p 17802:17802 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=17800 --rest-port=17798 --tcp-port=17799 --discv5-udp-port=17801 --rest-address=0.0.0.0 --nat=extip:172.18.102.110 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=70b02ecb66b9b5bd7cdf77c465efe5bd0fa1bc932de2dfa0e1f971cd476e01c6 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=17802 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.102.110 waku 9c75ba7426e7fba110fba0ffff92bf0d7434896003acfe0004add4a9cf8ad14b
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 9c75ba7426e7. Setting up logs at ./log/docker/node1_2025-01-29_04-03-25__4f4453e7-e429-4e36-a050-79d6b29edeb3__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 17798
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 05af5251cc0c. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17798/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17798/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.102.110/tcp/17799/p2p/16Uiu2HAmEPXnqGNSGKFbNyuS4LbT69yVjf3ozHiEKJiRSWDpanNJ","/ip4/172.18.102.110/tcp/17800/ws/p2p/16Uiu2HAmEPXnqGNSGKFbNyuS4LbT69yVjf3ozHiEKJiRSWDpanNJ"],"enrUri":"enr:-L24QPtaR9r3y2u2pBYRQny1Vd9SrAq3DJUsbhrlouA4qnloNmNLODeT-mbPBxkmNXQlgjmZJL6Yyl2huyTAG-fqFvgCgmlkgnY0gmlwhKwSZm6KbXVsdGlhZGRyc5YACASsEmZuBkWHAAoErBJmbgZFiN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDGcGhdC8lDu94XB8NdobOfgsU_f8O9XFhYkLlqnN2Hn-DdGNwgkWHg3VkcIJFiYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-29_04-03-25__4f4453e7-e429-4e36-a050-79d6b29edeb3__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.81.190
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['36070', '36071', '36072', '36073', '36074']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 36070:36070 -p 36071:36071 -p 36072:36072 -p 36073:36073 -p 36074:36074 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=36072 --rest-port=36070 --tcp-port=36071 --discv5-udp-port=36073 --rest-address=0.0.0.0 --nat=extip:172.18.81.190 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ef680cacfa614cbea4996de667d3bc71d9dfc01e22ec8d4b64bafdaf90a4e61b --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=36074 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QPtaR9r3y2u2pBYRQny1Vd9SrAq3DJUsbhrlouA4qnloNmNLODeT-mbPBxkmNXQlgjmZJL6Yyl2huyTAG-fqFvgCgmlkgnY0gmlwhKwSZm6KbXVsdGlhZGRyc5YACASsEmZuBkWHAAoErBJmbgZFiN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDGcGhdC8lDu94XB8NdobOfgsU_f8O9XFhYkLlqnN2Hn-DdGNwgkWHg3VkcIJFiYV3YWt1MgU --filternode=/ip4/172.18.102.110/tcp/17799/p2p/16Uiu2HAmEPXnqGNSGKFbNyuS4LbT69yVjf3ozHiEKJiRSWDpanNJ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.81.190 waku b868c562704436e9b6e52161a8238f20af3bbc18dde416eafd88202daf0f226e
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID b868c5627044. Setting up logs at ./log/docker/node2_2025-01-29_04-03-25__4f4453e7-e429-4e36-a050-79d6b29edeb3__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 36070
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:36070/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:36070/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.81.190/tcp/36071/p2p/16Uiu2HAmSUbAWEaDQ1c6uvCZNv2rrRnoG7QjJcM4nCLGtt3Dgjs2","/ip4/172.18.81.190/tcp/36072/ws/p2p/16Uiu2HAmSUbAWEaDQ1c6uvCZNv2rrRnoG7QjJcM4nCLGtt3Dgjs2"],"enrUri":"enr:-L24QB9VWofLoB543cZKp3t1sayZHv7u93KM48_cGlSVg4ulPBq0xaBCwrVADghMnJ3aLHkHvX0jFFadkA0iEB1lvLUCgmlkgnY0gmlwhKwSUb6KbXVsdGlhZGRyc5YACASsElG-BoznAAoErBJRvgaM6N0DgnJzhQADAQAAiXNlY3AyNTZrMaEDzVmXqk4iP95Tg1fD93sBXWraQSLViZK7nvwbRD8N7pWDdGNwgozng3VkcIKM6YV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:36070/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.102.110/tcp/17799/p2p/16Uiu2HAmEPXnqGNSGKFbNyuS4LbT69yVjf3ozHiEKJiRSWDpanNJ"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17798/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:36070/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "e8d962fd-7d0e-4169-9251-979be1150920", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"e8d962fd-7d0e-4169-9251-979be1150920","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:36070/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:36070/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 9c75ba7426e7
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id b868c5627044
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 9c75ba7426e7. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.