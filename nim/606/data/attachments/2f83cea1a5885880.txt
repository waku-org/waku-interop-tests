[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_payload_equal_or_more_150_kb with id: 2025-01-05_19-20-02__0360f0db-98c3-403c-bfa9-1007e147f892
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-05_19-20-02__0360f0db-98c3-403c-bfa9-1007e147f892__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.61.174
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['40072', '40073', '40074', '40075', '40076']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 40072:40072 -p 40073:40073 -p 40074:40074 -p 40075:40075 -p 40076:40076 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=40074 --rest-port=40072 --tcp-port=40073 --discv5-udp-port=40075 --rest-address=0.0.0.0 --nat=extip:172.18.61.174 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=42db17b78df66ee6e9ab3b2c7092b5b8c9aae712dbb1aa2fcbdfdf46ede355cf --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=40076 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.61.174 waku 9718d3c05e6c9aca5a5daaa0c7672a1d6cb64cb56c4b8642716860b5f147a1ef
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 9718d3c05e6c. Setting up logs at ./log/docker/node1_2025-01-05_19-20-02__0360f0db-98c3-403c-bfa9-1007e147f892__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 40072
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 48e5659e7a4d. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:40072/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:40072/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.61.174/tcp/40073/p2p/16Uiu2HAm21vmN1fRWFBYt4uTu6yBpHn6WahErtSySZpYQU15UZDY","/ip4/172.18.61.174/tcp/40074/ws/p2p/16Uiu2HAm21vmN1fRWFBYt4uTu6yBpHn6WahErtSySZpYQU15UZDY"],"enrUri":"enr:-L24QB0t-plA8L8J-NPLmQNp0FVfj-LOZU2XCgsiDrVybHZZLujkTCwQSc3LzHModkM4OwN4qT4LpvKikP-Yx_oqejYCgmlkgnY0gmlwhKwSPa6KbXVsdGlhZGRyc5YACASsEj2uBpyJAAoErBI9rgacit0DgnJzhQADAQAAiXNlY3AyNTZrMaECYeyWWLBOzO82CY1fD9wm-_J4SenTD19qqSRu6mzvxQ-DdGNwgpyJg3VkcIKci4V3YWt1MgE"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-05_19-20-02__0360f0db-98c3-403c-bfa9-1007e147f892__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.26.2
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['49659', '49660', '49661', '49662', '49663']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 49659:49659 -p 49660:49660 -p 49661:49661 -p 49662:49662 -p 49663:49663 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=49661 --rest-port=49659 --tcp-port=49660 --discv5-udp-port=49662 --rest-address=0.0.0.0 --nat=extip:172.18.26.2 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=37ea87136fdabefd7123eebe017ce2f9e2075caedddf0484c27cdb031dad7a19 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=49663 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-L24QB0t-plA8L8J-NPLmQNp0FVfj-LOZU2XCgsiDrVybHZZLujkTCwQSc3LzHModkM4OwN4qT4LpvKikP-Yx_oqejYCgmlkgnY0gmlwhKwSPa6KbXVsdGlhZGRyc5YACASsEj2uBpyJAAoErBI9rgacit0DgnJzhQADAQAAiXNlY3AyNTZrMaECYeyWWLBOzO82CY1fD9wm-_J4SenTD19qqSRu6mzvxQ-DdGNwgpyJg3VkcIKci4V3YWt1MgE
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.26.2 waku 77295ac33a2b22e0c101c354432d7b10c148b272d0ad1174b3e4f0069fbf7268
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 77295ac33a2b. Setting up logs at ./log/docker/node2_2025-01-05_19-20-02__0360f0db-98c3-403c-bfa9-1007e147f892__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 49659
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:49659/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:49659/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.26.2/tcp/49660/p2p/16Uiu2HAm48shg3EneokU2ShyoRT4yXsMo7hxnoWX6JfXjwuJ1sxZ","/ip4/172.18.26.2/tcp/49661/ws/p2p/16Uiu2HAm48shg3EneokU2ShyoRT4yXsMo7hxnoWX6JfXjwuJ1sxZ"],"enrUri":"enr:-L24QMMtszvy_bTmO21WJd62UIjHiDXQ8uKBxtM1oWG48cBTHN063GsT8BIdiHWZKTaQAr58zzMBNJJK_3HBgq3LB9cCgmlkgnY0gmlwhKwSGgKKbXVsdGlhZGRyc5YACASsEhoCBsH8AAoErBIaAgbB_d0DgnJzhQADAQAAiXNlY3AyNTZrMaECgWuQEhTvnHcKDUutDlsmZZxAbZTyPXx6q9zdew9JsK6DdGNwgsH8g3VkcILB_oV3YWt1MgE"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:49659/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.61.174/tcp/40073/p2p/16Uiu2HAm21vmN1fRWFBYt4uTu6yBpHn6WahErtSySZpYQU15UZDY"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:40072/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:49659/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:40072/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:40072/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1736104805552014592,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:49659/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1736104805552014592,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[35mDEBUG   [0m tests.relay.test_publish:test_publish.py:55 Running test with payload length of 204800 bytes
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:40072/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Failed to publish: Message size exceeded maximum of 153600 bytes'
[35mDEBUG   [0m tests.relay.test_publish:test_publish.py:55 Running test with payload length of 1048576 bytes
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:40072/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Failed to publish: Message size exceeded maximum of 153600 bytes'
[35mDEBUG   [0m tests.relay.test_publish:test_publish.py:55 Running test with payload length of 10485760 bytes
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:40072/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Failed to publish: Message size exceeded maximum of 153600 bytes'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 9718d3c05e6c
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 77295ac33a2b
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 9718d3c05e6c. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.