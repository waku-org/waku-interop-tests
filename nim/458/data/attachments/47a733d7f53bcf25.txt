[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_all_with_invalid_request_id with id: 2024-11-22_04-13-21__c450c0fc-88c2-457b-b6c9-52a52d0e9d8e
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-22_04-13-21__c450c0fc-88c2-457b-b6c9-52a52d0e9d8e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.107.213
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['11899', '11900', '11901', '11902', '11903']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 11899:11899 -p 11900:11900 -p 11901:11901 -p 11902:11902 -p 11903:11903 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=11901 --rest-port=11899 --tcp-port=11900 --discv5-udp-port=11902 --rest-address=0.0.0.0 --nat=extip:172.18.107.213 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ee2dac1ae0cfcb974526cbdfae5724d8cdb2e90971da7265e8c5be617ed7d0f2 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=11903 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.107.213 waku da3c76f7a6c513cd7bceed34d8179ab39df1922ef9bf781c706e11d342fbf786
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID da3c76f7a6c5. Setting up logs at ./log/docker/node1_2024-11-22_04-13-21__c450c0fc-88c2-457b-b6c9-52a52d0e9d8e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 11899
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 0c02fd5d9a05. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:11899/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:11899/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.107.213/tcp/11900/p2p/16Uiu2HAm9hx2G3Zu2x7TPjwWWQZsdLAt3USPFLTFvGX2Kvd8Fgmp","/ip4/172.18.107.213/tcp/11901/ws/p2p/16Uiu2HAm9hx2G3Zu2x7TPjwWWQZsdLAt3USPFLTFvGX2Kvd8Fgmp"],"enrUri":"enr:-L24QDb0V40g0iWcAuz0_mVu5tAtDvdVdxOhEEnz8-uaaZ1Jfzaym7JoWgH99yv3XRxwg3s0QhVLVsSRhp9UxGvpfm0CgmlkgnY0gmlwhKwSa9WKbXVsdGlhZGRyc5YACASsEmvVBi58AAoErBJr1QYufd0DgnJzhQADAQAAiXNlY3AyNTZrMaEC1C8MnEW4emTPC3u4wNupkyJUDuizkIn3RbkLHncrmAODdGNwgi58g3VkcIIufoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-22_04-13-21__c450c0fc-88c2-457b-b6c9-52a52d0e9d8e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.98.241
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['14710', '14711', '14712', '14713', '14714']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 14710:14710 -p 14711:14711 -p 14712:14712 -p 14713:14713 -p 14714:14714 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=14712 --rest-port=14710 --tcp-port=14711 --discv5-udp-port=14713 --rest-address=0.0.0.0 --nat=extip:172.18.98.241 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ebd8cc86b89a27dbbca7a4625aef0dce5be6ecc718cf1aa9cd1cc3ebddee916e --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=14714 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QDb0V40g0iWcAuz0_mVu5tAtDvdVdxOhEEnz8-uaaZ1Jfzaym7JoWgH99yv3XRxwg3s0QhVLVsSRhp9UxGvpfm0CgmlkgnY0gmlwhKwSa9WKbXVsdGlhZGRyc5YACASsEmvVBi58AAoErBJr1QYufd0DgnJzhQADAQAAiXNlY3AyNTZrMaEC1C8MnEW4emTPC3u4wNupkyJUDuizkIn3RbkLHncrmAODdGNwgi58g3VkcIIufoV3YWt1MgU --filternode=/ip4/172.18.107.213/tcp/11900/p2p/16Uiu2HAm9hx2G3Zu2x7TPjwWWQZsdLAt3USPFLTFvGX2Kvd8Fgmp
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.98.241 waku 7b663d6c630b7fde812579608f97d7a8a3741514628c1dfe7d2ac41aae6b8883
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 7b663d6c630b. Setting up logs at ./log/docker/node2_2024-11-22_04-13-21__c450c0fc-88c2-457b-b6c9-52a52d0e9d8e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 14710
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:14710/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:14710/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.98.241/tcp/14711/p2p/16Uiu2HAkw4ifisFTyo1gHG7HorKuK6SZaSVsSBh8MTRh3xopuqg7","/ip4/172.18.98.241/tcp/14712/ws/p2p/16Uiu2HAkw4ifisFTyo1gHG7HorKuK6SZaSVsSBh8MTRh3xopuqg7"],"enrUri":"enr:-L24QO4GvSEX68krsRvnC3dHMRh9PfTcHxSLSZhMeUHB85RzEZysmToBYIyIH9nZRIT1GEtjtdkGUz12bdmxt5FEHgYCgmlkgnY0gmlwhKwSYvGKbXVsdGlhZGRyc5YACASsEmLxBjl3AAoErBJi8QY5eN0DgnJzhQADAQAAiXNlY3AyNTZrMaECGFk3eJAIgQs3Q9SExEPf6N_eQLNP9uz-Tn42oJ0MFSyDdGNwgjl3g3VkcII5eYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:14710/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.107.213/tcp/11900/p2p/16Uiu2HAm9hx2G3Zu2x7TPjwWWQZsdLAt3USPFLTFvGX2Kvd8Fgmp"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:11899/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:14710/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "2a97f865-9055-4bad-8f4c-474d3cb7c46e", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"2a97f865-9055-4bad-8f4c-474d3cb7c46e","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:14710/filter/v2/subscriptions/all" -H "Content-Type: application/json" -d '{"requestId": 1}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:14710/filter/v2/subscriptions/all. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id da3c76f7a6c5
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 7b663d6c630b
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container da3c76f7a6c5. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.