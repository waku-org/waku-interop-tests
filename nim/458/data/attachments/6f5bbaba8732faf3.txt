[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2024-11-22_04-12-24__7b48061c-97dc-4e95-9381-811b918fe12c
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-22_04-12-24__7b48061c-97dc-4e95-9381-811b918fe12c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.102.84
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['38012', '38013', '38014', '38015', '38016']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 38012:38012 -p 38013:38013 -p 38014:38014 -p 38015:38015 -p 38016:38016 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=38014 --rest-port=38012 --tcp-port=38013 --discv5-udp-port=38015 --rest-address=0.0.0.0 --nat=extip:172.18.102.84 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e48ce53a88447cb8c1eafab6c3a46cdca253c9e665edbc6b0ae41aa3fbfdd7ae --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=38016 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.102.84 waku 451d3b34f05011f458fa2b11ee8bb3520f8cff9a9f267499ab0802cf88835d99
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 451d3b34f050. Setting up logs at ./log/docker/node1_2024-11-22_04-12-24__7b48061c-97dc-4e95-9381-811b918fe12c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 38012
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container ed655a06546d. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38012/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38012/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.102.84/tcp/38013/p2p/16Uiu2HAmKtQqX2ryzn2jJw1F3S8sFsMP3MbuvgyFukZY2g3EwJTA","/ip4/172.18.102.84/tcp/38014/ws/p2p/16Uiu2HAmKtQqX2ryzn2jJw1F3S8sFsMP3MbuvgyFukZY2g3EwJTA"],"enrUri":"enr:-L24QOQIjYWbJlVFu5b9J6PlKU_UjUHo15upI2n-VhYyRQwHLZZeN570tBd1v5GwLZLBuZAy01mmaBcAuv-IaBIviW4CgmlkgnY0gmlwhKwSZlSKbXVsdGlhZGRyc5YACASsEmZUBpR9AAoErBJmVAaUft0DgnJzhQADAQAAiXNlY3AyNTZrMaEDa3IL1BfdHUD28R3RUuKsPzmId1NUslCckyw_Ptag6BGDdGNwgpR9g3VkcIKUf4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-22_04-12-24__7b48061c-97dc-4e95-9381-811b918fe12c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.91.234
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['38613', '38614', '38615', '38616', '38617']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 38613:38613 -p 38614:38614 -p 38615:38615 -p 38616:38616 -p 38617:38617 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=38615 --rest-port=38613 --tcp-port=38614 --discv5-udp-port=38616 --rest-address=0.0.0.0 --nat=extip:172.18.91.234 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=c4631c333b8b8ad80aec0d7b6c3509c10fd0dea8dc4f7f78b0548a6cd2e60885 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=38617 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QOQIjYWbJlVFu5b9J6PlKU_UjUHo15upI2n-VhYyRQwHLZZeN570tBd1v5GwLZLBuZAy01mmaBcAuv-IaBIviW4CgmlkgnY0gmlwhKwSZlSKbXVsdGlhZGRyc5YACASsEmZUBpR9AAoErBJmVAaUft0DgnJzhQADAQAAiXNlY3AyNTZrMaEDa3IL1BfdHUD28R3RUuKsPzmId1NUslCckyw_Ptag6BGDdGNwgpR9g3VkcIKUf4V3YWt1MgU --filternode=/ip4/172.18.102.84/tcp/38013/p2p/16Uiu2HAmKtQqX2ryzn2jJw1F3S8sFsMP3MbuvgyFukZY2g3EwJTA
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.91.234 waku 66711815acf8cf1002c69b4d456a58cfb81e382bd1ed707659bfbcc9182c11d6
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 66711815acf8. Setting up logs at ./log/docker/node2_2024-11-22_04-12-24__7b48061c-97dc-4e95-9381-811b918fe12c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 38613
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38613/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38613/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.91.234/tcp/38614/p2p/16Uiu2HAmSZGB3D9PfSZHEnwyiRfzYEapNMi7Ues7DGiAafue9zWa","/ip4/172.18.91.234/tcp/38615/ws/p2p/16Uiu2HAmSZGB3D9PfSZHEnwyiRfzYEapNMi7Ues7DGiAafue9zWa"],"enrUri":"enr:-L24QOC0VtuLYdai2zIxgd2d4e9kc_ukBmU2hWNis_KVpsqyZqTJcirKsALwnTSb3_hToYUj-cUs27LZi4L0TrMYEZECgmlkgnY0gmlwhKwSW-qKbXVsdGlhZGRyc5YACASsElvqBpbWAAoErBJb6gaW190DgnJzhQADAQAAiXNlY3AyNTZrMaEDzowGBhuG07erQEvVD7CqvKXSTX1SLXMg2ehoh87kY8eDdGNwgpbWg3VkcIKW2IV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38613/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.102.84/tcp/38013/p2p/16Uiu2HAmKtQqX2ryzn2jJw1F3S8sFsMP3MbuvgyFukZY2g3EwJTA"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38012/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38613/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "920c3113-2537-4c72-b64b-0c9b27d604e5", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"920c3113-2537-4c72-b64b-0c9b27d604e5","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:38613/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:38613/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 451d3b34f050
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 66711815acf8
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 451d3b34f050. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.