[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_all_with_extra_field with id: 2024-11-22_04-13-23__7c31ae7f-ad8c-4b26-b827-333156cdac50
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-22_04-13-23__7c31ae7f-ad8c-4b26-b827-333156cdac50__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.243.188
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['33675', '33676', '33677', '33678', '33679']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 33675:33675 -p 33676:33676 -p 33677:33677 -p 33678:33678 -p 33679:33679 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=33677 --rest-port=33675 --tcp-port=33676 --discv5-udp-port=33678 --rest-address=0.0.0.0 --nat=extip:172.18.243.188 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=663c56f478fe95ab0f6038bdaa5fbab3019fd49c70c5d47bbef13d6e48ad54e3 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=33679 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.243.188 waku f0f01eda9af21ebcc5a109c5f9241a527183e85c72fa7aa07460f1bc42824472
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID f0f01eda9af2. Setting up logs at ./log/docker/node1_2024-11-22_04-13-23__7c31ae7f-ad8c-4b26-b827-333156cdac50__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 33675
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container e5fee6da2e88. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33675/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33675/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.243.188/tcp/33676/p2p/16Uiu2HAmVbTyp5G8AcSGy4sTrgLaZ9voTbQuUze2XKLTUdyVZUpx","/ip4/172.18.243.188/tcp/33677/ws/p2p/16Uiu2HAmVbTyp5G8AcSGy4sTrgLaZ9voTbQuUze2XKLTUdyVZUpx"],"enrUri":"enr:-L24QKKLVMhLNuxlRfkBf4T2qWXDartUG3WYsbuaN4-0FLvFMjjPMlQ69JwgO34ha5nPQkxvFUfj-_Nk3JK31pPt8dACgmlkgnY0gmlwhKwS87yKbXVsdGlhZGRyc5YACASsEvO8BoOMAAoErBLzvAaDjd0DgnJzhQADAQAAiXNlY3AyNTZrMaED-6-Yc3vD2wHVy8SgiaPRrKnioMZGyXqPEZHcWhaVR-mDdGNwgoOMg3VkcIKDjoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-22_04-13-23__7c31ae7f-ad8c-4b26-b827-333156cdac50__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.178.67
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['41541', '41542', '41543', '41544', '41545']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 41541:41541 -p 41542:41542 -p 41543:41543 -p 41544:41544 -p 41545:41545 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=41543 --rest-port=41541 --tcp-port=41542 --discv5-udp-port=41544 --rest-address=0.0.0.0 --nat=extip:172.18.178.67 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=f52f9fe902ac81793b27a40be8d7a2f924c162339dc5ac96d5b8baa07ffacfde --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=41545 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QKKLVMhLNuxlRfkBf4T2qWXDartUG3WYsbuaN4-0FLvFMjjPMlQ69JwgO34ha5nPQkxvFUfj-_Nk3JK31pPt8dACgmlkgnY0gmlwhKwS87yKbXVsdGlhZGRyc5YACASsEvO8BoOMAAoErBLzvAaDjd0DgnJzhQADAQAAiXNlY3AyNTZrMaED-6-Yc3vD2wHVy8SgiaPRrKnioMZGyXqPEZHcWhaVR-mDdGNwgoOMg3VkcIKDjoV3YWt1MgU --filternode=/ip4/172.18.243.188/tcp/33676/p2p/16Uiu2HAmVbTyp5G8AcSGy4sTrgLaZ9voTbQuUze2XKLTUdyVZUpx
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.178.67 waku 1fd200c8f85bb9d407203613b3fed070b6008a89de11764a6d89ddac396eee8a
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 1fd200c8f85b. Setting up logs at ./log/docker/node2_2024-11-22_04-13-23__7c31ae7f-ad8c-4b26-b827-333156cdac50__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 41541
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41541/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41541/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.178.67/tcp/41542/p2p/16Uiu2HAmM4mXfSBsFZVUjaNGrGMtErUm7Putnxo8twciogxf3ijL","/ip4/172.18.178.67/tcp/41543/ws/p2p/16Uiu2HAmM4mXfSBsFZVUjaNGrGMtErUm7Putnxo8twciogxf3ijL"],"enrUri":"enr:-L24QEhzIsmJuyfU4gG0fUnbXhOVSUfvVdDroQXstREmPZsPGNDpP61x8hFKiWVrUY6SA8gOcBiSxwDN3OmBTmwihK0CgmlkgnY0gmlwhKwSskOKbXVsdGlhZGRyc5YACASsErJDBqJGAAoErBKyQwaiR90DgnJzhQADAQAAiXNlY3AyNTZrMaEDfPTwGyDmq5z5C8C4H15P0cb4R9tz6R69MxRdoJI-PCuDdGNwgqJGg3VkcIKiSIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:41541/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.243.188/tcp/33676/p2p/16Uiu2HAmVbTyp5G8AcSGy4sTrgLaZ9voTbQuUze2XKLTUdyVZUpx"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:33675/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:41541/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "16846664-5b35-4b14-a38e-45612687d368", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"16846664-5b35-4b14-a38e-45612687d368","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:41541/filter/v2/subscriptions/all" -H "Content-Type: application/json" -d '{"requestId": 1, "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:41541/filter/v2/subscriptions/all. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id f0f01eda9af2
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 1fd200c8f85b
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container f0f01eda9af2. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.