[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_no_request_id with id: 2024-11-22_04-11-42__1632d4cb-8e58-4601-b4a9-7b378d25f151
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-22_04-11-42__1632d4cb-8e58-4601-b4a9-7b378d25f151__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.23.239
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['37300', '37301', '37302', '37303', '37304']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 37300:37300 -p 37301:37301 -p 37302:37302 -p 37303:37303 -p 37304:37304 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=37302 --rest-port=37300 --tcp-port=37301 --discv5-udp-port=37303 --rest-address=0.0.0.0 --nat=extip:172.18.23.239 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=dda7899c12efd2f2ea8a63be4df3bf8c3a4ee32ee8e5e1ed7cbd7c8be0a8b2a4 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=37304 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.23.239 waku 072884fc3866b21fb73bdce4ddb82484e37e0e252bab93c047bb832b368aad8b
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 072884fc3866. Setting up logs at ./log/docker/node1_2024-11-22_04-11-42__1632d4cb-8e58-4601-b4a9-7b378d25f151__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 37300
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container c91dd9ad6e7b. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:37300/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:37300/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.23.239/tcp/37301/p2p/16Uiu2HAkwz2f9xCTARWcGvT68aCUBVvLexCMihiBAbBdvTK2h7aR","/ip4/172.18.23.239/tcp/37302/ws/p2p/16Uiu2HAkwz2f9xCTARWcGvT68aCUBVvLexCMihiBAbBdvTK2h7aR"],"enrUri":"enr:-L24QGHZUoYjIupL9n2qj5UhF_mqX8rj5ybJ-lm4cIICi4EALjcL5A8F61-FloDnHHdlTlFPSoH6W4x4IcwtdwYU4G8CgmlkgnY0gmlwhKwSF--KbXVsdGlhZGRyc5YACASsEhfvBpG1AAoErBIX7waRtt0DgnJzhQADAQAAiXNlY3AyNTZrMaECJgFXVqfJ5o8fGeSqwTKVJPBhCT7hKGq6ySJ3Ifl4ZfqDdGNwgpG1g3VkcIKRt4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-22_04-11-42__1632d4cb-8e58-4601-b4a9-7b378d25f151__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.109.250
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['62067', '62068', '62069', '62070', '62071']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 62067:62067 -p 62068:62068 -p 62069:62069 -p 62070:62070 -p 62071:62071 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=62069 --rest-port=62067 --tcp-port=62068 --discv5-udp-port=62070 --rest-address=0.0.0.0 --nat=extip:172.18.109.250 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=5500c81642af28eb69db96cef19c433f8eaabca6a5abfaccc8456c0c35ff27fa --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=62071 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QGHZUoYjIupL9n2qj5UhF_mqX8rj5ybJ-lm4cIICi4EALjcL5A8F61-FloDnHHdlTlFPSoH6W4x4IcwtdwYU4G8CgmlkgnY0gmlwhKwSF--KbXVsdGlhZGRyc5YACASsEhfvBpG1AAoErBIX7waRtt0DgnJzhQADAQAAiXNlY3AyNTZrMaECJgFXVqfJ5o8fGeSqwTKVJPBhCT7hKGq6ySJ3Ifl4ZfqDdGNwgpG1g3VkcIKRt4V3YWt1MgU --filternode=/ip4/172.18.23.239/tcp/37301/p2p/16Uiu2HAkwz2f9xCTARWcGvT68aCUBVvLexCMihiBAbBdvTK2h7aR
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.109.250 waku 349b19abfa15ee2bffedccd465b633d05f99ba73bec54e41d450478d1e182e03
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 349b19abfa15. Setting up logs at ./log/docker/node2_2024-11-22_04-11-42__1632d4cb-8e58-4601-b4a9-7b378d25f151__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 62067
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:62067/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:62067/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.109.250/tcp/62068/p2p/16Uiu2HAm5Rcb72tgUG6h8AUr78QjCHXkMnMvjyVsfJHWcbttU5e4","/ip4/172.18.109.250/tcp/62069/ws/p2p/16Uiu2HAm5Rcb72tgUG6h8AUr78QjCHXkMnMvjyVsfJHWcbttU5e4"],"enrUri":"enr:-L24QCjXJrJu9dfAjunbjHiYaDOdIB9L2EvuHv9UyVXqMz_iFuEwLWhBrlcW9b2a2KMPS5SVwXNwENB8PTuDrNZBwOsCgmlkgnY0gmlwhKwSbfqKbXVsdGlhZGRyc5YACASsEm36BvJ0AAoErBJt-gbydd0DgnJzhQADAQAAiXNlY3AyNTZrMaEClJEI6zi1vQK3Bfv3fipePZgaGWEhdSiGTuwj7zn3fT2DdGNwgvJ0g3VkcILydoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:62067/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.23.239/tcp/37301/p2p/16Uiu2HAkwz2f9xCTARWcGvT68aCUBVvLexCMihiBAbBdvTK2h7aR"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:37300/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:62067/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "b4cebd55-bbf2-4c58-adde-87e2e156f8dc", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"b4cebd55-bbf2-4c58-adde-87e2e156f8dc","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:62067/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:62067/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 072884fc3866
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 349b19abfa15
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 072884fc3866. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.