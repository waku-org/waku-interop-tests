[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_extra_field with id: 2024-11-22_04-11-48__84e22a44-2f55-412b-b358-75e1d33f7953
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-22_04-11-48__84e22a44-2f55-412b-b358-75e1d33f7953__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.72.209
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['1812', '1813', '1814', '1815', '1816']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 1812:1812 -p 1813:1813 -p 1814:1814 -p 1815:1815 -p 1816:1816 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=1814 --rest-port=1812 --tcp-port=1813 --discv5-udp-port=1815 --rest-address=0.0.0.0 --nat=extip:172.18.72.209 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=9bbc8e3ffc03296c38c6fb9eed9fc9d11cdc981bf7a927f8378b8552e58ebaaa --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=1816 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.72.209 waku d654b30d05e34e33f1556b0c3d89ae35473fc0edbee667fe65705a19200f893b
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container af4a3457fbe6. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID d654b30d05e3. Setting up logs at ./log/docker/node1_2024-11-22_04-11-48__84e22a44-2f55-412b-b358-75e1d33f7953__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 1812
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:1812/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:1812/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.72.209/tcp/1813/p2p/16Uiu2HAmNECxDd61pGsjNjKTy8qmHLFXpuZTfSEjEvozn7VqRnfV","/ip4/172.18.72.209/tcp/1814/ws/p2p/16Uiu2HAmNECxDd61pGsjNjKTy8qmHLFXpuZTfSEjEvozn7VqRnfV"],"enrUri":"enr:-L24QI7d34_CFpDEdPTcSHBn382dTsItOJqBYaHZCiZd_yOpay7BbXvc222TQHDEWfIHqfIAGzzu6Ju3gTqq41thn74CgmlkgnY0gmlwhKwSSNGKbXVsdGlhZGRyc5YACASsEkjRBgcVAAoErBJI0QYHFt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDjjuZMUstCnzN1AWlCO2MNQduPOud3jTHvxJ7PMJfu0yDdGNwggcVg3VkcIIHF4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-22_04-11-48__84e22a44-2f55-412b-b358-75e1d33f7953__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.26.215
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['41081', '41082', '41083', '41084', '41085']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 41081:41081 -p 41082:41082 -p 41083:41083 -p 41084:41084 -p 41085:41085 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=41083 --rest-port=41081 --tcp-port=41082 --discv5-udp-port=41084 --rest-address=0.0.0.0 --nat=extip:172.18.26.215 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ca6cdad76cdac3fac18d40cddabd573b30b2abbaf3377cbfe814dad858ff2f27 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=41085 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QI7d34_CFpDEdPTcSHBn382dTsItOJqBYaHZCiZd_yOpay7BbXvc222TQHDEWfIHqfIAGzzu6Ju3gTqq41thn74CgmlkgnY0gmlwhKwSSNGKbXVsdGlhZGRyc5YACASsEkjRBgcVAAoErBJI0QYHFt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDjjuZMUstCnzN1AWlCO2MNQduPOud3jTHvxJ7PMJfu0yDdGNwggcVg3VkcIIHF4V3YWt1MgU --filternode=/ip4/172.18.72.209/tcp/1813/p2p/16Uiu2HAmNECxDd61pGsjNjKTy8qmHLFXpuZTfSEjEvozn7VqRnfV
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.26.215 waku ea80dbaae814c6dad20a1048f9371cde1441b15f0289e556000c15e280b442e0
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID ea80dbaae814. Setting up logs at ./log/docker/node2_2024-11-22_04-11-48__84e22a44-2f55-412b-b358-75e1d33f7953__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 41081
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41081/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41081/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.26.215/tcp/41082/p2p/16Uiu2HAm9yM26xxPJAHnjuV8aqtdKQ9daGGiQrPNmSDg44CpAjiL","/ip4/172.18.26.215/tcp/41083/ws/p2p/16Uiu2HAm9yM26xxPJAHnjuV8aqtdKQ9daGGiQrPNmSDg44CpAjiL"],"enrUri":"enr:-L24QC1B26GjyaGCJKS_1np8kGDfchUOl6w4ut1G-1V7LgeNdK_f0wLu_1TX7jYTUg1tQ9cNxtrGg6kCbOt6eJcl7kwCgmlkgnY0gmlwhKwSGteKbXVsdGlhZGRyc5YACASsEhrXBqB6AAoErBIa1wage90DgnJzhQADAQAAiXNlY3AyNTZrMaEC2CDDuAal5ru9KkrHeuhMLskpbj9F4tzifekD9gfpdb2DdGNwgqB6g3VkcIKgfIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:41081/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.72.209/tcp/1813/p2p/16Uiu2HAmNECxDd61pGsjNjKTy8qmHLFXpuZTfSEjEvozn7VqRnfV"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:1812/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:41081/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "9a232120-13b5-4ee0-95b5-98cf90f6e8c8", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"9a232120-13b5-4ee0-95b5-98cf90f6e8c8","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:41081/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:41081/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id d654b30d05e3
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id ea80dbaae814
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container d654b30d05e3. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.