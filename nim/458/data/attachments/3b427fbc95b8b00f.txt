[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_extra_field with id: 2024-11-22_04-13-04__2cf021fe-1ac4-43bc-a941-0d1b1ea03f04
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-22_04-13-04__2cf021fe-1ac4-43bc-a941-0d1b1ea03f04__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.185.123
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['32162', '32163', '32164', '32165', '32166']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 32162:32162 -p 32163:32163 -p 32164:32164 -p 32165:32165 -p 32166:32166 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=32164 --rest-port=32162 --tcp-port=32163 --discv5-udp-port=32165 --rest-address=0.0.0.0 --nat=extip:172.18.185.123 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e29fea0fb45c0248eeb15cc9e5884b12bf5f3e4d3954d0c0e80e79fc4a1eaa93 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=32166 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.185.123 waku 67d367c9ff3b4fa719cc9f25d99557e138b36822d0158d91fb1bfa3644b2dc26
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 67d367c9ff3b. Setting up logs at ./log/docker/node1_2024-11-22_04-13-04__2cf021fe-1ac4-43bc-a941-0d1b1ea03f04__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 32162
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 317272066fa5. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:32162/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:32162/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.185.123/tcp/32163/p2p/16Uiu2HAmQzjsfyLDSKJeuF8XbAZKUqzg5bTL981MtpzVgL1vradi","/ip4/172.18.185.123/tcp/32164/ws/p2p/16Uiu2HAmQzjsfyLDSKJeuF8XbAZKUqzg5bTL981MtpzVgL1vradi"],"enrUri":"enr:-L24QF2Pd0IDRQQms6gJp2Kp92q4gmqAHpfu8MbM_PLh3oB4A0dqy3JYYKGpCs8SSV_W73z1j_rkt2wiaWIzrjl4hw0CgmlkgnY0gmlwhKwSuXuKbXVsdGlhZGRyc5YACASsErl7Bn2jAAoErBK5ewZ9pN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDt1t9tbkm_HnDINZSdGubDlFRgdaXlH5u_pmXTHe3Gi2DdGNwgn2jg3VkcIJ9pYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-22_04-13-04__2cf021fe-1ac4-43bc-a941-0d1b1ea03f04__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.108.255
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['62039', '62040', '62041', '62042', '62043']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 62039:62039 -p 62040:62040 -p 62041:62041 -p 62042:62042 -p 62043:62043 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=62041 --rest-port=62039 --tcp-port=62040 --discv5-udp-port=62042 --rest-address=0.0.0.0 --nat=extip:172.18.108.255 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b39f48dbd2ffd9e7dd7442fdcf2f74b8f4dc0fa530b684f69ecdbcdd1da652a9 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=62043 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QF2Pd0IDRQQms6gJp2Kp92q4gmqAHpfu8MbM_PLh3oB4A0dqy3JYYKGpCs8SSV_W73z1j_rkt2wiaWIzrjl4hw0CgmlkgnY0gmlwhKwSuXuKbXVsdGlhZGRyc5YACASsErl7Bn2jAAoErBK5ewZ9pN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDt1t9tbkm_HnDINZSdGubDlFRgdaXlH5u_pmXTHe3Gi2DdGNwgn2jg3VkcIJ9pYV3YWt1MgU --filternode=/ip4/172.18.185.123/tcp/32163/p2p/16Uiu2HAmQzjsfyLDSKJeuF8XbAZKUqzg5bTL981MtpzVgL1vradi
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.108.255 waku 8a30b3373c79019fc07cc72f061b5fe530ae76541b420ea8ca51f33d251bd942
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 8a30b3373c79. Setting up logs at ./log/docker/node2_2024-11-22_04-13-04__2cf021fe-1ac4-43bc-a941-0d1b1ea03f04__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 62039
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:62039/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:62039/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.108.255/tcp/62040/p2p/16Uiu2HAkwcJ6bWhGAL8585UBKzcxUhvRREUfjidbRGjjjzM3rbLi","/ip4/172.18.108.255/tcp/62041/ws/p2p/16Uiu2HAkwcJ6bWhGAL8585UBKzcxUhvRREUfjidbRGjjjzM3rbLi"],"enrUri":"enr:-L24QLCY4JOF5yE3j2hR_xbV5BlAXH9B5vdpA5Bel0PuLdEGE9e_waGRD7OS8aDyNZ8K_fpiKY8JZjxVCXAzB9FDGiUCgmlkgnY0gmlwhKwSbP-KbXVsdGlhZGRyc5YACASsEmz_BvJYAAoErBJs_wbyWd0DgnJzhQADAQAAiXNlY3AyNTZrMaECIHAFFx2NvERT8jgrnlKfcH7JrdkE8_sFN7mANW-kVseDdGNwgvJYg3VkcILyWoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:62039/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.185.123/tcp/32163/p2p/16Uiu2HAmQzjsfyLDSKJeuF8XbAZKUqzg5bTL981MtpzVgL1vradi"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:32162/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:62039/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "94f1cefc-2e6a-413f-827c-5515d665a1f3", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"94f1cefc-2e6a-413f-827c-5515d665a1f3","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:62039/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:62039/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 67d367c9ff3b
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 8a30b3373c79
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 67d367c9ff3b. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.