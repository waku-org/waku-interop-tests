[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_payload_equal_or_more_150_kb with id: 2024-12-25_20-01-23__6e50c384-1cd3-4e77-b2c8-9f8f41dd021d
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-25_20-01-23__6e50c384-1cd3-4e77-b2c8-9f8f41dd021d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.206.5
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['8698', '8699', '8700', '8701', '8702']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 8698:8698 -p 8699:8699 -p 8700:8700 -p 8701:8701 -p 8702:8702 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=8700 --rest-port=8698 --tcp-port=8699 --discv5-udp-port=8701 --rest-address=0.0.0.0 --nat=extip:172.18.206.5 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=7f27d9f507c14aac870e7782ab8ac3155acc8aa8aacba3cb553549bfbbcc0a5f --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=8702 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.206.5 waku 48dbbd842cf4079a4a464244b3e7b6db6e477270563bc97384ef6467c4adebd6
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 48dbbd842cf4. Setting up logs at ./log/docker/node1_2024-12-25_20-01-23__6e50c384-1cd3-4e77-b2c8-9f8f41dd021d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 8698
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8698/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8698/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.206.5/tcp/8699/p2p/16Uiu2HAkxnmUbunHjj7TEJ92Y14JQn2vUhdp47PFVxMqvifzG8kb","/ip4/172.18.206.5/tcp/8700/ws/p2p/16Uiu2HAkxnmUbunHjj7TEJ92Y14JQn2vUhdp47PFVxMqvifzG8kb"],"enrUri":"enr:-L24QKJYvFXvMu2iMNJmZy7wJNursf6vtI70l7vJzveQvAdSccCil8VRIacTYjwlWX6zkFZE_d5iiCCYTIjmy12nRhsCgmlkgnY0gmlwhKwSzgWKbXVsdGlhZGRyc5YACASsEs4FBiH7AAoErBLOBQYh_N0DgnJzhQADAQAAiXNlY3AyNTZrMaECMfp5EUT0rulnoF2-lBWq-0Nf8RCbZgKL9gijPXsj7USDdGNwgiH7g3VkcIIh_YV3YWt1MgE"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-25_20-01-23__6e50c384-1cd3-4e77-b2c8-9f8f41dd021d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.234.11
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['45452', '45453', '45454', '45455', '45456']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 45452:45452 -p 45453:45453 -p 45454:45454 -p 45455:45455 -p 45456:45456 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=45454 --rest-port=45452 --tcp-port=45453 --discv5-udp-port=45455 --rest-address=0.0.0.0 --nat=extip:172.18.234.11 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=7b466ce7b29bcb2a291964b1af798e1f90920d88872281d0eecd56ce07cbf9dd --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=45456 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-L24QKJYvFXvMu2iMNJmZy7wJNursf6vtI70l7vJzveQvAdSccCil8VRIacTYjwlWX6zkFZE_d5iiCCYTIjmy12nRhsCgmlkgnY0gmlwhKwSzgWKbXVsdGlhZGRyc5YACASsEs4FBiH7AAoErBLOBQYh_N0DgnJzhQADAQAAiXNlY3AyNTZrMaECMfp5EUT0rulnoF2-lBWq-0Nf8RCbZgKL9gijPXsj7USDdGNwgiH7g3VkcIIh_YV3YWt1MgE
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.234.11 waku d1f6431061052229962b2667389769a9610de4a96347e4c8a741a1fe842d0926
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID d1f643106105. Setting up logs at ./log/docker/node2_2024-12-25_20-01-23__6e50c384-1cd3-4e77-b2c8-9f8f41dd021d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 45452
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:45452/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:45452/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.234.11/tcp/45453/p2p/16Uiu2HAmMMpncECfFn3mm4jB7c24eX6ML4CvGuNDH2bfmzuCyUxe","/ip4/172.18.234.11/tcp/45454/ws/p2p/16Uiu2HAmMMpncECfFn3mm4jB7c24eX6ML4CvGuNDH2bfmzuCyUxe"],"enrUri":"enr:-L24QG-OUSDJt77N2e2g2tuSQ_icQ9QGVQOh-vwhZQoaqsylEa4XFKcqFhfy9nUYK2MEZjHqFZzlfugg7E6k857l94wCgmlkgnY0gmlwhKwS6guKbXVsdGlhZGRyc5YACASsEuoLBrGNAAoErBLqCwaxjt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDgVN-wHvH2rpofNYQOVUCTm2fCaVuE_dsYEVyaj7k7JeDdGNwgrGNg3VkcIKxj4V3YWt1MgE"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:45452/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.206.5/tcp/8699/p2p/16Uiu2HAkxnmUbunHjj7TEJ92Y14JQn2vUhdp47PFVxMqvifzG8kb"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8698/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:45452/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8698/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8698/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1735156889934453248,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:45452/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1735156889934453248,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[35mDEBUG   [0m tests.relay.test_publish:test_publish.py:55 Running test with payload length of 204800 bytes
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:8698/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Failed to publish: Message size exceeded maximum of 153600 bytes'
[35mDEBUG   [0m tests.relay.test_publish:test_publish.py:55 Running test with payload length of 1048576 bytes
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:8698/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Failed to publish: Message size exceeded maximum of 153600 bytes'
[35mDEBUG   [0m tests.relay.test_publish:test_publish.py:55 Running test with payload length of 10485760 bytes
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:8698/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Failed to publish: Message size exceeded maximum of 153600 bytes'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 48dbbd842cf4
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id d1f643106105
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 48dbbd842cf4. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.