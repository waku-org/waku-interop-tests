[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_no_content_topic with id: 2024-12-25_15-41-12__b6df3ec0-b1bd-4ddf-b61e-44854ba2643d
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-25_15-41-12__b6df3ec0-b1bd-4ddf-b61e-44854ba2643d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.208.15
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['27715', '27716', '27717', '27718', '27719']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 27715:27715 -p 27716:27716 -p 27717:27717 -p 27718:27718 -p 27719:27719 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=27717 --rest-port=27715 --tcp-port=27716 --discv5-udp-port=27718 --rest-address=0.0.0.0 --nat=extip:172.18.208.15 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=71ce0bb3f2129c26e9b4fc3acadcdacd21aeb7f4befaafbdffa5ba81dbcb3875 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=27719 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.208.15 waku 72be305bb6da0efd22e1ca953cc9298c95a2f0acb23e90107b9754cc626b0ef7
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 72be305bb6da. Setting up logs at ./log/docker/node1_2024-12-25_15-41-12__b6df3ec0-b1bd-4ddf-b61e-44854ba2643d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 27715
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 1f0ca56d77f1. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:27715/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:27715/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.208.15/tcp/27716/p2p/16Uiu2HAm4nP2VZv1LHLzpBBcdbMCkjs2fNcu9KAuH6e2UgxqWnQe","/ip4/172.18.208.15/tcp/27717/ws/p2p/16Uiu2HAm4nP2VZv1LHLzpBBcdbMCkjs2fNcu9KAuH6e2UgxqWnQe"],"enrUri":"enr:-L24QKoHES2F7Db8DAnpssYM8t25GaCvLPt1kuvw2POKYMwffiAZwJE64qUAhjlFPPItyGEzhREa0VFqAKPgm8-qXw8CgmlkgnY0gmlwhKwS0A-KbXVsdGlhZGRyc5YACASsEtAPBmxEAAoErBLQDwZsRd0DgnJzhQADAQAAiXNlY3AyNTZrMaECiwc1woiCAUq9E3foOVIyfQFIgc4blXVmkSWjLQh0ydeDdGNwgmxEg3VkcIJsRoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-25_15-41-12__b6df3ec0-b1bd-4ddf-b61e-44854ba2643d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.51.43
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['35813', '35814', '35815', '35816', '35817']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 35813:35813 -p 35814:35814 -p 35815:35815 -p 35816:35816 -p 35817:35817 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=35815 --rest-port=35813 --tcp-port=35814 --discv5-udp-port=35816 --rest-address=0.0.0.0 --nat=extip:172.18.51.43 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e9644939098f7dacdedebdc50fb0232bc0c5957aaffd3af9a19171dfbdd33cdd --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=35817 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QKoHES2F7Db8DAnpssYM8t25GaCvLPt1kuvw2POKYMwffiAZwJE64qUAhjlFPPItyGEzhREa0VFqAKPgm8-qXw8CgmlkgnY0gmlwhKwS0A-KbXVsdGlhZGRyc5YACASsEtAPBmxEAAoErBLQDwZsRd0DgnJzhQADAQAAiXNlY3AyNTZrMaECiwc1woiCAUq9E3foOVIyfQFIgc4blXVmkSWjLQh0ydeDdGNwgmxEg3VkcIJsRoV3YWt1MgU --filternode=/ip4/172.18.208.15/tcp/27716/p2p/16Uiu2HAm4nP2VZv1LHLzpBBcdbMCkjs2fNcu9KAuH6e2UgxqWnQe
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.51.43 waku 3eede4969668a8696e7c2af8232cbc840c7332c8717cda76780847d7238e0e9b
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 3eede4969668. Setting up logs at ./log/docker/node2_2024-12-25_15-41-12__b6df3ec0-b1bd-4ddf-b61e-44854ba2643d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 35813
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:35813/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:35813/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.51.43/tcp/35814/p2p/16Uiu2HAmJfpcbBH8A3YcacGRrppRUNa4ks2vNnMNR7NumWPVYg2f","/ip4/172.18.51.43/tcp/35815/ws/p2p/16Uiu2HAmJfpcbBH8A3YcacGRrppRUNa4ks2vNnMNR7NumWPVYg2f"],"enrUri":"enr:-L24QFEjO-espD93IRblWa8-8DgkkXUGVWCxYyKGGCF6RfCVZMBTBGcV8pI_VNf2G4KF6nT51_tmxIrfuQbVj4YOY98CgmlkgnY0gmlwhKwSMyuKbXVsdGlhZGRyc5YACASsEjMrBovmAAoErBIzKwaL590DgnJzhQADAQAAiXNlY3AyNTZrMaEDWVyxkDjWa6ZtLsULTU4K3s6bT2STkz2JFL02ciIhVnSDdGNwgovmg3VkcIKL6IV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:35813/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.208.15/tcp/27716/p2p/16Uiu2HAm4nP2VZv1LHLzpBBcdbMCkjs2fNcu9KAuH6e2UgxqWnQe"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:27715/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:35813/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "023fbc6f-6a5e-4a91-925c-4762b5dc8fc3", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"023fbc6f-6a5e-4a91-925c-4762b5dc8fc3","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:35813/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:35813/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 72be305bb6da
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 3eede4969668
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 72be305bb6da. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.