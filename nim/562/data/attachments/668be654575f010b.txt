[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_extra_field with id: 2024-12-25_15-40-36__6e6b09c1-2bf8-4645-b106-131222f6e7de
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-25_15-40-36__6e6b09c1-2bf8-4645-b106-131222f6e7de__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.83.176
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['52580', '52581', '52582', '52583', '52584']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 52580:52580 -p 52581:52581 -p 52582:52582 -p 52583:52583 -p 52584:52584 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=52582 --rest-port=52580 --tcp-port=52581 --discv5-udp-port=52583 --rest-address=0.0.0.0 --nat=extip:172.18.83.176 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=75ba6ca90a433dfceda6242ccc9d6cb8a4a0c50ac4b9582afcf88d7ddba4cd60 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=52584 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.83.176 waku f4004a05cb5f79f6869542b22488314c7207a71fee34cc4fbc4f54afe8c204d9
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID f4004a05cb5f. Setting up logs at ./log/docker/node1_2024-12-25_15-40-36__6e6b09c1-2bf8-4645-b106-131222f6e7de__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 52580
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 7af9c03a9b1c. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:52580/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:52580/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.83.176/tcp/52581/p2p/16Uiu2HAkwzodLR4xG9Ehf9Qh6xCC8WpDrD2DrJy8H3MwB89WwKY3","/ip4/172.18.83.176/tcp/52582/ws/p2p/16Uiu2HAkwzodLR4xG9Ehf9Qh6xCC8WpDrD2DrJy8H3MwB89WwKY3"],"enrUri":"enr:-L24QGMnF3kkkBlQiIB2S6i9q4iVD4X3Qsa9ytlWSqdwlqR6OViO-RudW9x7KgklmFwZBGLgHvJWZ1fVXEvaw3S9z-8CgmlkgnY0gmlwhKwSU7CKbXVsdGlhZGRyc5YACASsElOwBs1lAAoErBJTsAbNZt0DgnJzhQADAQAAiXNlY3AyNTZrMaECJjQv9oUmsu6cIW1MPPtOrb9egTIsN8RMAXr0zV2xKpCDdGNwgs1lg3VkcILNZ4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-25_15-40-36__6e6b09c1-2bf8-4645-b106-131222f6e7de__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.225.227
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['44334', '44335', '44336', '44337', '44338']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 44334:44334 -p 44335:44335 -p 44336:44336 -p 44337:44337 -p 44338:44338 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=44336 --rest-port=44334 --tcp-port=44335 --discv5-udp-port=44337 --rest-address=0.0.0.0 --nat=extip:172.18.225.227 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e54b3aa21ed7d4ca43d6349dbffe2a210fd9c5999dca7eacbf9b03ba50ada8fb --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=44338 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QGMnF3kkkBlQiIB2S6i9q4iVD4X3Qsa9ytlWSqdwlqR6OViO-RudW9x7KgklmFwZBGLgHvJWZ1fVXEvaw3S9z-8CgmlkgnY0gmlwhKwSU7CKbXVsdGlhZGRyc5YACASsElOwBs1lAAoErBJTsAbNZt0DgnJzhQADAQAAiXNlY3AyNTZrMaECJjQv9oUmsu6cIW1MPPtOrb9egTIsN8RMAXr0zV2xKpCDdGNwgs1lg3VkcILNZ4V3YWt1MgU --filternode=/ip4/172.18.83.176/tcp/52581/p2p/16Uiu2HAkwzodLR4xG9Ehf9Qh6xCC8WpDrD2DrJy8H3MwB89WwKY3
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.225.227 waku 2a6f7dc8ef218edf880f20d8f33734c6e07214633d3878e4f5b4c95f64f3ea96
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 2a6f7dc8ef21. Setting up logs at ./log/docker/node2_2024-12-25_15-40-36__6e6b09c1-2bf8-4645-b106-131222f6e7de__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 44334
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:44334/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:44334/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.225.227/tcp/44335/p2p/16Uiu2HAmJfEnKt6UMv13DjiTEKWSYHMzrnLMwacF4YuroPLPzmgZ","/ip4/172.18.225.227/tcp/44336/ws/p2p/16Uiu2HAmJfEnKt6UMv13DjiTEKWSYHMzrnLMwacF4YuroPLPzmgZ"],"enrUri":"enr:-L24QJsfSyNgfRq_7ygiRTDhpkJm_SEQwiv6UIcW-Q-4lr9uQnyJYVDj0x01OQPAMC9Mw3BHH03F82sDn7_UuQbvRLICgmlkgnY0gmlwhKwS4eOKbXVsdGlhZGRyc5YACASsEuHjBq0vAAoErBLh4watMN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDWTZwgoohtsObP1a9K0mFMx8Px0dOimbrfk5JDlPgsc6DdGNwgq0vg3VkcIKtMYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:44334/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.83.176/tcp/52581/p2p/16Uiu2HAkwzodLR4xG9Ehf9Qh6xCC8WpDrD2DrJy8H3MwB89WwKY3"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:52580/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:44334/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "20079f36-7bd5-47c2-8518-e74e1d74e292", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"20079f36-7bd5-47c2-8518-e74e1d74e292","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:44334/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:44334/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id f4004a05cb5f
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 2a6f7dc8ef21
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container f4004a05cb5f. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.