[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_no_content_topic with id: 2024-12-25_15-40-25__423f61a6-0602-43e7-8724-2771c9dd2363
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-25_15-40-25__423f61a6-0602-43e7-8724-2771c9dd2363__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.55.38
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['54178', '54179', '54180', '54181', '54182']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 54178:54178 -p 54179:54179 -p 54180:54180 -p 54181:54181 -p 54182:54182 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=54180 --rest-port=54178 --tcp-port=54179 --discv5-udp-port=54181 --rest-address=0.0.0.0 --nat=extip:172.18.55.38 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=2aaf96d92b29c5beffcdbdd2dbffd01e246f84ecef8aff8e346322f1ab835ed4 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=54182 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.55.38 waku 756c0d2965825252407c54c31b4d6daf8bbd522f979d9a06581eb23ec4c8bba3
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 756c0d296582. Setting up logs at ./log/docker/node1_2024-12-25_15-40-25__423f61a6-0602-43e7-8724-2771c9dd2363__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 54178
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:54178/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:54178/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.55.38/tcp/54179/p2p/16Uiu2HAm8KupvdPaRkYyQQ6SXxPmD4HYSVY8VtqUwvdYpAJQUU3N","/ip4/172.18.55.38/tcp/54180/ws/p2p/16Uiu2HAm8KupvdPaRkYyQQ6SXxPmD4HYSVY8VtqUwvdYpAJQUU3N"],"enrUri":"enr:-L24QItDiGsxeM66v0wCzZga2SuXE5bvH05NNvVofwDVSwBcWN-BiknZk2odhxLm5FEVNZP-eelPnykefxBg_Ig4R28CgmlkgnY0gmlwhKwSNyaKbXVsdGlhZGRyc5YACASsEjcmBtOjAAoErBI3JgbTpN0DgnJzhQADAQAAiXNlY3AyNTZrMaECv64aJufhEsnSTRuoDAQpyxgKEpHywxXiduyUnpZnAl2DdGNwgtOjg3VkcILTpYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-25_15-40-25__423f61a6-0602-43e7-8724-2771c9dd2363__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.139.19
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['48425', '48426', '48427', '48428', '48429']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 48425:48425 -p 48426:48426 -p 48427:48427 -p 48428:48428 -p 48429:48429 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=48427 --rest-port=48425 --tcp-port=48426 --discv5-udp-port=48428 --rest-address=0.0.0.0 --nat=extip:172.18.139.19 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=faeaafce2dd75157feaacd0599e1aacf9ce3a91e91ea56b3f2dccf6ee4eed6fe --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=48429 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QItDiGsxeM66v0wCzZga2SuXE5bvH05NNvVofwDVSwBcWN-BiknZk2odhxLm5FEVNZP-eelPnykefxBg_Ig4R28CgmlkgnY0gmlwhKwSNyaKbXVsdGlhZGRyc5YACASsEjcmBtOjAAoErBI3JgbTpN0DgnJzhQADAQAAiXNlY3AyNTZrMaECv64aJufhEsnSTRuoDAQpyxgKEpHywxXiduyUnpZnAl2DdGNwgtOjg3VkcILTpYV3YWt1MgU --filternode=/ip4/172.18.55.38/tcp/54179/p2p/16Uiu2HAm8KupvdPaRkYyQQ6SXxPmD4HYSVY8VtqUwvdYpAJQUU3N
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.139.19 waku 342ddf83ad9bea8813113240eed810e7275cb8666427d5685e4034383070d76a
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 342ddf83ad9b. Setting up logs at ./log/docker/node2_2024-12-25_15-40-25__423f61a6-0602-43e7-8724-2771c9dd2363__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 48425
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:48425/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:48425/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.139.19/tcp/48426/p2p/16Uiu2HAmS166Sb4JV7a54qESRzcCUn9ji1HndyqacpcFcVoAE6rB","/ip4/172.18.139.19/tcp/48427/ws/p2p/16Uiu2HAmS166Sb4JV7a54qESRzcCUn9ji1HndyqacpcFcVoAE6rB"],"enrUri":"enr:-L24QJIlUl1nDeMdz_DAM3qU7Hz6sq1eN-6Hgn-NiYLGzAxEPZI5kPSUo0QzsFtVA6vm9sjWpmGgUm2QvznHqf_rGMUCgmlkgnY0gmlwhKwSixOKbXVsdGlhZGRyc5YACASsEosTBr0qAAoErBKLEwa9K90DgnJzhQADAQAAiXNlY3AyNTZrMaEDxk4Kfihb5SeJZ2mdHm5ZTwRtHwV003m6Na5ySL7_V7CDdGNwgr0qg3VkcIK9LIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:48425/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.55.38/tcp/54179/p2p/16Uiu2HAm8KupvdPaRkYyQQ6SXxPmD4HYSVY8VtqUwvdYpAJQUU3N"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:54178/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:48425/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "53e19e9a-63ad-465d-9649-372144b17576", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"53e19e9a-63ad-465d-9649-372144b17576","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:48425/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:48425/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 756c0d296582
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 342ddf83ad9b
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 756c0d296582. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.