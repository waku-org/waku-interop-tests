[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_no_request_id with id: 2025-01-27_04-04-28__ccbafc62-7b29-4be9-ba7d-a3868c67b284
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-27_04-04-28__ccbafc62-7b29-4be9-ba7d-a3868c67b284__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.59.150
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['57031', '57032', '57033', '57034', '57035']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 57031:57031 -p 57032:57032 -p 57033:57033 -p 57034:57034 -p 57035:57035 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=57033 --rest-port=57031 --tcp-port=57032 --discv5-udp-port=57034 --rest-address=0.0.0.0 --nat=extip:172.18.59.150 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=dcb9ce00c0f2b1e7b364a9d0bdbdeffd28b02f38921a52c0ca0a16fc750d184b --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=57035 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.59.150 waku 689fda8cff70403365cac49c94181b421a93004fbf4ee4183ebca8db06f8270e
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 689fda8cff70. Setting up logs at ./log/docker/node1_2025-01-27_04-04-28__ccbafc62-7b29-4be9-ba7d-a3868c67b284__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 57031
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 961f89a3c2c1. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:57031/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:57031/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.59.150/tcp/57032/p2p/16Uiu2HAmLj5EskaR5csSMZ2bL3xRvkdkEvwyqhbdW5CvS7MnW4X2","/ip4/172.18.59.150/tcp/57033/ws/p2p/16Uiu2HAmLj5EskaR5csSMZ2bL3xRvkdkEvwyqhbdW5CvS7MnW4X2"],"enrUri":"enr:-L24QMcQieh3Oh4HSylwUMRvA7CSzXvr2cKlOiiPQ9t4bheoVOXSAHjMeSX9qTIXbvam_lq1tiubz-eZ39nXmX0BESsCgmlkgnY0gmlwhKwSO5aKbXVsdGlhZGRyc5YACASsEjuWBt7IAAoErBI7lgbeyd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDd-lY3SGob4lA5OdUIZab46C3tYkzRDnI3lzhYpzo2BGDdGNwgt7Ig3VkcILeyoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-27_04-04-28__ccbafc62-7b29-4be9-ba7d-a3868c67b284__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.17.140
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['17903', '17904', '17905', '17906', '17907']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 17903:17903 -p 17904:17904 -p 17905:17905 -p 17906:17906 -p 17907:17907 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=17905 --rest-port=17903 --tcp-port=17904 --discv5-udp-port=17906 --rest-address=0.0.0.0 --nat=extip:172.18.17.140 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=43b65e97e730f402db5cec3e1bae3b109dd3fafe9dae5ebbfbafa788affcc684 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=17907 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QMcQieh3Oh4HSylwUMRvA7CSzXvr2cKlOiiPQ9t4bheoVOXSAHjMeSX9qTIXbvam_lq1tiubz-eZ39nXmX0BESsCgmlkgnY0gmlwhKwSO5aKbXVsdGlhZGRyc5YACASsEjuWBt7IAAoErBI7lgbeyd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDd-lY3SGob4lA5OdUIZab46C3tYkzRDnI3lzhYpzo2BGDdGNwgt7Ig3VkcILeyoV3YWt1MgU --filternode=/ip4/172.18.59.150/tcp/57032/p2p/16Uiu2HAmLj5EskaR5csSMZ2bL3xRvkdkEvwyqhbdW5CvS7MnW4X2
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.17.140 waku 680e9df38571b1537eadadeedb62e0442c29e76a5eb82c3b760eb0de61221c41
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 680e9df38571. Setting up logs at ./log/docker/node2_2025-01-27_04-04-28__ccbafc62-7b29-4be9-ba7d-a3868c67b284__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 17903
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17903/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17903/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.17.140/tcp/17904/p2p/16Uiu2HAm499xCeyhJVfZG2SV5UNVYnwibkHkhM6fVJxzHPiqwWLX","/ip4/172.18.17.140/tcp/17905/ws/p2p/16Uiu2HAm499xCeyhJVfZG2SV5UNVYnwibkHkhM6fVJxzHPiqwWLX"],"enrUri":"enr:-L24QB0H_7AhQ8ANU99p1Qvd7QmpECwDukrk2gdVudMwTmFnVV91OuJM4bWh8CA7xs9BlsLGjU9Y9YgGMDwzOcIJyFECgmlkgnY0gmlwhKwSEYyKbXVsdGlhZGRyc5YACASsEhGMBkXwAAoErBIRjAZF8d0DgnJzhQADAQAAiXNlY3AyNTZrMaECgX3v78tSA9MN6Gd_T-gmUpvKkR2_qsXShuxqIwBLFBCDdGNwgkXwg3VkcIJF8oV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17903/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.59.150/tcp/57032/p2p/16Uiu2HAmLj5EskaR5csSMZ2bL3xRvkdkEvwyqhbdW5CvS7MnW4X2"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:57031/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17903/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "829bb67f-1fd1-4554-a142-34e8f76a558b", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"829bb67f-1fd1-4554-a142-34e8f76a558b","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17903/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:17903/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 689fda8cff70
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 680e9df38571
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 689fda8cff70. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.