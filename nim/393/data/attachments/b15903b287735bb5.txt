[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_no_pubsub_topic with id: 2024-10-16_04-07-02__44f51e3d-947c-4b5e-abb0-2bc2a89f5de1
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-10-16_04-07-02__44f51e3d-947c-4b5e-abb0-2bc2a89f5de1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.223.49
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['17497', '17498', '17499', '17500', '17501']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 17497:17497 -p 17498:17498 -p 17499:17499 -p 17500:17500 -p 17501:17501 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=17499 --rest-port=17497 --tcp-port=17498 --discv5-udp-port=17500 --rest-address=0.0.0.0 --nat=extip:172.18.223.49 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=2b5f46ac40cbddc5edacadc25503cd710229a19710a265dab5763d416a2c2c35 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=17501 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.223.49 waku cb8218ce304789661c435bccb07eee1bc85d688ec574c15a01745fecd52517bf
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID cb8218ce3047. Setting up logs at ./log/docker/node1_2024-10-16_04-07-02__44f51e3d-947c-4b5e-abb0-2bc2a89f5de1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 17497
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17497/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17497/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.223.49/tcp/17498/p2p/16Uiu2HAkwMmYJgn52Jz1cBbdCxHKuGHo3HH4KrCak4L3ppCpH5D4","/ip4/172.18.223.49/tcp/17499/ws/p2p/16Uiu2HAkwMmYJgn52Jz1cBbdCxHKuGHo3HH4KrCak4L3ppCpH5D4"],"enrUri":"enr:-LO4QB8lIjqpWkP_RxrKS1HXfLN7aPQPxUlu3XIOgshGbeT1YPTPXLVJzhaRBxonIWGE2HG50VpwKI3NrLOxuvBrRWIBgmlkgnY0gmlwhKwS3zGKbXVsdGlhZGRyc4wACgSsEt8xBkRb3QOCcnOFAAMBAACJc2VjcDI1NmsxoQIct1aEVMCDWqp5ecnuAXsOJwk_JfW2jApIrmdBiCFk24N0Y3CCRFqDdWRwgkRchXdha3UyBQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-10-16_04-07-02__44f51e3d-947c-4b5e-abb0-2bc2a89f5de1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.25.136
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['60251', '60252', '60253', '60254', '60255']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 60251:60251 -p 60252:60252 -p 60253:60253 -p 60254:60254 -p 60255:60255 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=60253 --rest-port=60251 --tcp-port=60252 --discv5-udp-port=60254 --rest-address=0.0.0.0 --nat=extip:172.18.25.136 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=22c606cf79bfe0bbafa54c9ec3fe7dcfd12f5e3ff5bdca3f1e4bd0edfb86fd58 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=60255 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-LO4QB8lIjqpWkP_RxrKS1HXfLN7aPQPxUlu3XIOgshGbeT1YPTPXLVJzhaRBxonIWGE2HG50VpwKI3NrLOxuvBrRWIBgmlkgnY0gmlwhKwS3zGKbXVsdGlhZGRyc4wACgSsEt8xBkRb3QOCcnOFAAMBAACJc2VjcDI1NmsxoQIct1aEVMCDWqp5ecnuAXsOJwk_JfW2jApIrmdBiCFk24N0Y3CCRFqDdWRwgkRchXdha3UyBQ --filternode=/ip4/172.18.223.49/tcp/17498/p2p/16Uiu2HAkwMmYJgn52Jz1cBbdCxHKuGHo3HH4KrCak4L3ppCpH5D4
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.25.136 waku 7e8732d1f0ee90a4f6cdf16c6453414c80e0933ab012aeabd9fe99e45f8c82ba
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 7e8732d1f0ee. Setting up logs at ./log/docker/node2_2024-10-16_04-07-02__44f51e3d-947c-4b5e-abb0-2bc2a89f5de1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 60251
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:60251/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:60251/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.25.136/tcp/60252/p2p/16Uiu2HAmLsRmqc8VLcE9g1KG5FCrxrWbKfyoUYSLwwBhCTLbwTtB","/ip4/172.18.25.136/tcp/60253/ws/p2p/16Uiu2HAmLsRmqc8VLcE9g1KG5FCrxrWbKfyoUYSLwwBhCTLbwTtB"],"enrUri":"enr:-LO4QNtg5694u3Y6_28gsyH1_SRJRkE7PKPdj0IRhZwU9oeaIiRyZG62SFZPIf4VK4wSPfgwq6YpsYjVDSabx3l6r1sBgmlkgnY0gmlwhKwSGYiKbXVsdGlhZGRyc4wACgSsEhmIButd3QOCcnOFAAMBAACJc2VjcDI1NmsxoQN6DTYXDf6ZmNP3KNmiwH7WlVIDqlSGazFBj1O0K8RWsIN0Y3CC61yDdWRwgutehXdha3UyAA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:60251/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.223.49/tcp/17498/p2p/16Uiu2HAkwMmYJgn52Jz1cBbdCxHKuGHo3HH4KrCak4L3ppCpH5D4"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17497/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:60251/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "a05a82fb-f68b-4155-9841-7c1b0c1e0bae", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"a05a82fb-f68b-4155-9841-7c1b0c1e0bae","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:60251/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": "/test/1/waku-filter/proto"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:60251/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id cb8218ce3047
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 7e8732d1f0ee
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.