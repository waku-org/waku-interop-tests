[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_no_request_id with id: 2025-01-12_04-04-31__07803d6b-ed26-495d-aed0-4f0d525317eb
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-12_04-04-31__07803d6b-ed26-495d-aed0-4f0d525317eb__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.195.132
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['47119', '47120', '47121', '47122', '47123']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 47119:47119 -p 47120:47120 -p 47121:47121 -p 47122:47122 -p 47123:47123 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=47121 --rest-port=47119 --tcp-port=47120 --discv5-udp-port=47122 --rest-address=0.0.0.0 --nat=extip:172.18.195.132 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=abe185f57cccf41ebee8fb017ec9f6b3cdccae2ba17cb660674849900c5ef1ef --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=47123 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.195.132 waku be84117ccbcf299a296051ec7e06f308575be03430ebe35e7a7738322d21f5c5
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID be84117ccbcf. Setting up logs at ./log/docker/node1_2025-01-12_04-04-31__07803d6b-ed26-495d-aed0-4f0d525317eb__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 47119
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container fc99c93c27c9. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:47119/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:47119/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.195.132/tcp/47120/p2p/16Uiu2HAkzvJ1znPABkng3U433PFDZ4zVEUNrPqYQneL1AzF3SWrw","/ip4/172.18.195.132/tcp/47121/ws/p2p/16Uiu2HAkzvJ1znPABkng3U433PFDZ4zVEUNrPqYQneL1AzF3SWrw"],"enrUri":"enr:-L24QOxmz7zXurGOgTJ_ZG-dERDs6Dygw2q_wJXFDfemEZkQeu43lEZ2nITfM-WzbfppEMBHZ2bq3gVs5l2MWGuUrQACgmlkgnY0gmlwhKwSw4SKbXVsdGlhZGRyc5YACASsEsOEBrgQAAoErBLDhAa4Ed0DgnJzhQADAQAAiXNlY3AyNTZrMaECUZ9yERwBQUvyBkME0sKhkkCuUTbKvUqsXDYfw4rzW-yDdGNwgrgQg3VkcIK4EoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-12_04-04-31__07803d6b-ed26-495d-aed0-4f0d525317eb__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.105.172
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['28055', '28056', '28057', '28058', '28059']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 28055:28055 -p 28056:28056 -p 28057:28057 -p 28058:28058 -p 28059:28059 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=28057 --rest-port=28055 --tcp-port=28056 --discv5-udp-port=28058 --rest-address=0.0.0.0 --nat=extip:172.18.105.172 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=1744d4ae20705acfe98a4b622fda28ecbdaed4ec61bb59eaddbe7a0a4d7bddbe --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=28059 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QOxmz7zXurGOgTJ_ZG-dERDs6Dygw2q_wJXFDfemEZkQeu43lEZ2nITfM-WzbfppEMBHZ2bq3gVs5l2MWGuUrQACgmlkgnY0gmlwhKwSw4SKbXVsdGlhZGRyc5YACASsEsOEBrgQAAoErBLDhAa4Ed0DgnJzhQADAQAAiXNlY3AyNTZrMaECUZ9yERwBQUvyBkME0sKhkkCuUTbKvUqsXDYfw4rzW-yDdGNwgrgQg3VkcIK4EoV3YWt1MgU --filternode=/ip4/172.18.195.132/tcp/47120/p2p/16Uiu2HAkzvJ1znPABkng3U433PFDZ4zVEUNrPqYQneL1AzF3SWrw
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.105.172 waku 5f866fe84ea1bf865e8f4bffd47fa919712ac0fe02971a29a7f47658655fd992
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 5f866fe84ea1. Setting up logs at ./log/docker/node2_2025-01-12_04-04-31__07803d6b-ed26-495d-aed0-4f0d525317eb__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 28055
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:28055/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:28055/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.105.172/tcp/28056/p2p/16Uiu2HAmLKEXuFLy4eGt3iRYQk5w2q73oZrsoEcY3yuQ9G9A96SP","/ip4/172.18.105.172/tcp/28057/ws/p2p/16Uiu2HAmLKEXuFLy4eGt3iRYQk5w2q73oZrsoEcY3yuQ9G9A96SP"],"enrUri":"enr:-L24QCSPjoVqBykcT3elKijVe-xXy777EnqrPhGIY1_AenNyde3wGoMTuO8J_lkvgpehg6UQxlxsCbuC2NBZL2asG0MCgmlkgnY0gmlwhKwSaayKbXVsdGlhZGRyc5YACASsEmmsBm2YAAoErBJprAZtmd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDcc3qfAOHlt-Oazg370vkjEDsTxLs0HpkuZDxxG9I7ASDdGNwgm2Yg3VkcIJtmoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:28055/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.195.132/tcp/47120/p2p/16Uiu2HAkzvJ1znPABkng3U433PFDZ4zVEUNrPqYQneL1AzF3SWrw"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:47119/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:28055/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "27bcf622-c3c1-4784-b5d7-2b05ce998b30", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"27bcf622-c3c1-4784-b5d7-2b05ce998b30","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:28055/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:28055/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id be84117ccbcf
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 5f866fe84ea1
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container be84117ccbcf. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.