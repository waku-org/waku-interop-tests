[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_content_topic_string_instead_of_list with id: 2025-01-12_04-04-36__ffb3ea02-4a2d-4758-81ca-e023e3257564
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-12_04-04-36__ffb3ea02-4a2d-4758-81ca-e023e3257564__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.14.48
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['38756', '38757', '38758', '38759', '38760']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 38756:38756 -p 38757:38757 -p 38758:38758 -p 38759:38759 -p 38760:38760 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=38758 --rest-port=38756 --tcp-port=38757 --discv5-udp-port=38759 --rest-address=0.0.0.0 --nat=extip:172.18.14.48 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=2ccf9372cdfb5ed6f23db60bebcf51fcb11ed05e8bc3390abbf264575a7efdad --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=38760 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.14.48 waku 858efe732565e795c548a596372e42e0bfa66f2395d3ce1629c92bee89c9a64a
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 858efe732565. Setting up logs at ./log/docker/node1_2025-01-12_04-04-36__ffb3ea02-4a2d-4758-81ca-e023e3257564__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 38756
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 5f866fe84ea1. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38756/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38756/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.14.48/tcp/38757/p2p/16Uiu2HAm3fUReyfkFXEAf3Yo56CarjFduynaaKkMG5ia74yygt1X","/ip4/172.18.14.48/tcp/38758/ws/p2p/16Uiu2HAm3fUReyfkFXEAf3Yo56CarjFduynaaKkMG5ia74yygt1X"],"enrUri":"enr:-L24QAss-39ilA9weZTmqGmQ3mquPw4J_2tbulhFGGwcRYzPQBm-VoKaNEwr-CrFotR2F9UN5wSAi4nKxZTVsbNpEXYCgmlkgnY0gmlwhKwSDjCKbXVsdGlhZGRyc5YACASsEg4wBpdlAAoErBIOMAaXZt0DgnJzhQADAQAAiXNlY3AyNTZrMaECemaP_jnVFLaEfay1FpxxNo759pj7IfbfQ4QnWpMAFaKDdGNwgpdlg3VkcIKXZ4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-12_04-04-36__ffb3ea02-4a2d-4758-81ca-e023e3257564__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.185.154
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['16045', '16046', '16047', '16048', '16049']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 16045:16045 -p 16046:16046 -p 16047:16047 -p 16048:16048 -p 16049:16049 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=16047 --rest-port=16045 --tcp-port=16046 --discv5-udp-port=16048 --rest-address=0.0.0.0 --nat=extip:172.18.185.154 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=c5bb2dcc749d6f2ccacccaec1f0ecebc9e46eb432033cac5ebebc0c9ddbddda9 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=16049 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QAss-39ilA9weZTmqGmQ3mquPw4J_2tbulhFGGwcRYzPQBm-VoKaNEwr-CrFotR2F9UN5wSAi4nKxZTVsbNpEXYCgmlkgnY0gmlwhKwSDjCKbXVsdGlhZGRyc5YACASsEg4wBpdlAAoErBIOMAaXZt0DgnJzhQADAQAAiXNlY3AyNTZrMaECemaP_jnVFLaEfay1FpxxNo759pj7IfbfQ4QnWpMAFaKDdGNwgpdlg3VkcIKXZ4V3YWt1MgU --filternode=/ip4/172.18.14.48/tcp/38757/p2p/16Uiu2HAm3fUReyfkFXEAf3Yo56CarjFduynaaKkMG5ia74yygt1X
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.185.154 waku 85485913377b277ca91a9e2f1856e8ca3d899f310223d7c34bd8d30a04f39497
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 85485913377b. Setting up logs at ./log/docker/node2_2025-01-12_04-04-36__ffb3ea02-4a2d-4758-81ca-e023e3257564__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 16045
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:16045/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:16045/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.185.154/tcp/16046/p2p/16Uiu2HAmN28HNjGnteUD8E4q6FRenBBxkzxFFPi3dMGh5R11Yzsx","/ip4/172.18.185.154/tcp/16047/ws/p2p/16Uiu2HAmN28HNjGnteUD8E4q6FRenBBxkzxFFPi3dMGh5R11Yzsx"],"enrUri":"enr:-L24QOeoWGRHAp4RHsuNqM9VjJ_g3gfemMPuMStkwqCdgxQaU96zcIU_ndXJ91cAi6_fV9OmsiDLmyq493Nn4ySx2qkCgmlkgnY0gmlwhKwSuZqKbXVsdGlhZGRyc5YACASsErmaBj6uAAoErBK5mgY-r90DgnJzhQADAQAAiXNlY3AyNTZrMaEDiyNZQNGok6e5B60Js9wN5hq8SwQ-TOeoWJTrJiEFgWeDdGNwgj6ug3VkcII-sIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:16045/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.14.48/tcp/38757/p2p/16Uiu2HAm3fUReyfkFXEAf3Yo56CarjFduynaaKkMG5ia74yygt1X"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38756/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:16045/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "c80598cc-3c80-4b46-9d55-2f14e3e38b83", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"c80598cc-3c80-4b46-9d55-2f14e3e38b83","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:16045/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": "/test/1/waku-filter/proto", "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:16045/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 858efe732565
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 85485913377b
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 858efe732565. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.