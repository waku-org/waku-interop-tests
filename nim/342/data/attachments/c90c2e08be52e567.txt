[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_invalid_meta with id: 2024-09-02_04-25-01__f566b2e5-894c-462f-a7d6-6d3fd4d63e9d
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-09-02_04-25-01__f566b2e5-894c-462f-a7d6-6d3fd4d63e9d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.35.231
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['9105', '9106', '9107', '9108', '9109']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 9105:9105 -p 9106:9106 -p 9107:9107 -p 9108:9108 -p 9109:9109 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=9107 --rest-port=9105 --tcp-port=9106 --discv5-udp-port=9108 --rest-address=0.0.0.0 --nat=extip:172.18.35.231 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=3dc1df3fa74be7efc25ac0e9cdb8e54d3712fb20d500f8e8d9376e210eabab1e --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=9109 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.35.231 waku ab894eda2e9c3a0644494b942405af43ced8e8ae56378b9eea243c084c16a72c
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID ab894eda2e9c. Setting up logs at ./log/docker/node1_2024-09-02_04-25-01__f566b2e5-894c-462f-a7d6-6d3fd4d63e9d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 9105
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:9105/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:9105/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.35.231/tcp/9106/p2p/16Uiu2HAm8PfPuGTEjrPc6oX4F6g9pp1RU8hd13mQwoa2b9mR3YU9","/ip4/172.18.35.231/tcp/9107/ws/p2p/16Uiu2HAm8PfPuGTEjrPc6oX4F6g9pp1RU8hd13mQwoa2b9mR3YU9"],"enrUri":"enr:-LO4QNHrQU3BZ6e7VVBJCFZ5_z0uNGeP9pWKmoA5JzhlRikDSVbO4QuO1qS_szFrwhRdaSGPiDPkMKgxCLtlFXTYeUgBgmlkgnY0gmlwhKwSI-eKbXVsdGlhZGRyc4wACgSsEiPnBiOT3QOCcnOFAAMBAACJc2VjcDI1NmsxoQLApBuTCGztyYleBvau2vgiAboipfJuC112XPhJA7OM0oN0Y3CCI5KDdWRwgiOUhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-09-02_04-25-01__f566b2e5-894c-462f-a7d6-6d3fd4d63e9d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.233.65
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['57097', '57098', '57099', '57100', '57101']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 57097:57097 -p 57098:57098 -p 57099:57099 -p 57100:57100 -p 57101:57101 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=57099 --rest-port=57097 --tcp-port=57098 --discv5-udp-port=57100 --rest-address=0.0.0.0 --nat=extip:172.18.233.65 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=efaba6da05c9e09028220deef4fe4adc5d73108e7b9fdbeadf46bb9c2afd3834 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=57101 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QNHrQU3BZ6e7VVBJCFZ5_z0uNGeP9pWKmoA5JzhlRikDSVbO4QuO1qS_szFrwhRdaSGPiDPkMKgxCLtlFXTYeUgBgmlkgnY0gmlwhKwSI-eKbXVsdGlhZGRyc4wACgSsEiPnBiOT3QOCcnOFAAMBAACJc2VjcDI1NmsxoQLApBuTCGztyYleBvau2vgiAboipfJuC112XPhJA7OM0oN0Y3CCI5KDdWRwgiOUhXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.233.65 waku fece126ba8a6270f78575f82f721b8f8a9f43198dfb732164201d9148a0fec9c
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID fece126ba8a6. Setting up logs at ./log/docker/node2_2024-09-02_04-25-01__f566b2e5-894c-462f-a7d6-6d3fd4d63e9d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 57097
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:57097/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:57097/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.233.65/tcp/57098/p2p/16Uiu2HAmBVsFH1oSmPZj6CYz5pzH2WFoWr8nfDNCjsfEU6VLwxmx","/ip4/172.18.233.65/tcp/57099/ws/p2p/16Uiu2HAmBVsFH1oSmPZj6CYz5pzH2WFoWr8nfDNCjsfEU6VLwxmx"],"enrUri":"enr:-LO4QAzma9ewVlgblbGUSAexarJZY0k99oqgdQ5kZlegNyWACTC7QCaYx0SckOEA0l4XSBYG3iDuoAB0cHG8zFfNf_0BgmlkgnY0gmlwhKwS6UGKbXVsdGlhZGRyc4wACgSsEulBBt8L3QOCcnOFAAMBAACJc2VjcDI1NmsxoQLuzg27qahybhoW-QTuFKF-mn-McC4WhDBx3qFBLArCy4N0Y3CC3wqDdWRwgt8MhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:57097/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.35.231/tcp/9106/p2p/16Uiu2HAm8PfPuGTEjrPc6oX4F6g9pp1RU8hd13mQwoa2b9mR3YU9"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:9105/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:57097/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:9105/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:9105/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1725251104438503424,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:57097/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1725251104438503424,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:9105/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)', "meta": "Relay works!!"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:9105/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Incorrect base64 string'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id ab894eda2e9c
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id fece126ba8a6
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.