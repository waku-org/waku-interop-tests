[35mDEBUG   [0m src.postgres_setup:postgres_setup.py:36 Postgres container started
[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_on_empty_postgress_db with id: 2024-09-02_04-32-16__4811143d-3cda-4740-8503-4497fe00e03c
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.store:store.py:28 Running fixture setup: store_setup
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/publishing_node1_2024-09-02_04-32-16__4811143d-3cda-4740-8503-4497fe00e03c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.125.166
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['28043', '28044', '28045', '28046', '28047']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 28043:28043 -p 28044:28044 -p 28045:28045 -p 28046:28046 -p 28047:28047 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=28045 --rest-port=28043 --tcp-port=28044 --discv5-udp-port=28046 --rest-address=0.0.0.0 --nat=extip:172.18.125.166 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=6b65ae94b69a3e97ea039d4ee2afca7e4ef44f1f8bac32c3ddc0e3ddf97a83b0 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=28047 --metrics-logging=true --store=true --relay=true --store-message-db-url=postgres://postgres:test123@postgres:5432/postgres
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.125.166 waku 3db6a15b1da7b34eb53419546c4bdfd31347159db168e119c75a4a52a5353348
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 3db6a15b1da7. Setting up logs at ./log/docker/publishing_node1_2024-09-02_04-32-16__4811143d-3cda-4740-8503-4497fe00e03c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 28043
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:28043/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Initializing","protocolsHealth":[]}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:28043/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Initializing","protocolsHealth":[]}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:28043/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:28043/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.125.166/tcp/28044/p2p/16Uiu2HAmMTYCpRzjHGVYwKY5s3bfrUAzGRSwofzK7YK1jsCgL1XW","/ip4/172.18.125.166/tcp/28045/ws/p2p/16Uiu2HAmMTYCpRzjHGVYwKY5s3bfrUAzGRSwofzK7YK1jsCgL1XW"],"enrUri":"enr:-LO4QKf6N1Bza2K5L-Q3U2fn7W4fc72xl1pUPKD6CnXO8d-EGriG1P0cer6aPaNfxlsvrSNJ34f-OtKsrFpzhbkoXq4BgmlkgnY0gmlwhKwSfaaKbXVsdGlhZGRyc4wACgSsEn2mBm2N3QOCcnOFAAMBAACJc2VjcDI1NmsxoQOCyjrhExDNk46eBHuBq7ZIn-uUbTosAmdB0iJIC65UsYN0Y3CCbYyDdWRwgm2OhXdha3UyAw"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/store_node1_2024-09-02_04-32-16__4811143d-3cda-4740-8503-4497fe00e03c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.197.248
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['50151', '50152', '50153', '50154', '50155']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 50151:50151 -p 50152:50152 -p 50153:50153 -p 50154:50154 -p 50155:50155 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=50153 --rest-port=50151 --tcp-port=50152 --discv5-udp-port=50154 --rest-address=0.0.0.0 --nat=extip:172.18.197.248 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=3c7f59beaa66fd2ba3bbd2a97f06bdced2ba83ffeec53c76eeb0ff60a7f9ce8f --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=50155 --metrics-logging=true --discv5-bootstrap-node=enr:-LO4QKf6N1Bza2K5L-Q3U2fn7W4fc72xl1pUPKD6CnXO8d-EGriG1P0cer6aPaNfxlsvrSNJ34f-OtKsrFpzhbkoXq4BgmlkgnY0gmlwhKwSfaaKbXVsdGlhZGRyc4wACgSsEn2mBm2N3QOCcnOFAAMBAACJc2VjcDI1NmsxoQOCyjrhExDNk46eBHuBq7ZIn-uUbTosAmdB0iJIC65UsYN0Y3CCbYyDdWRwgm2OhXdha3UyAw --storenode=/ip4/172.18.125.166/tcp/28044/p2p/16Uiu2HAmMTYCpRzjHGVYwKY5s3bfrUAzGRSwofzK7YK1jsCgL1XW --store=false --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.197.248 waku a4ca9d414c4c98d101a0be276c26dbf425ec2517b01eeac3479e7980f3e6bacc
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID a4ca9d414c4c. Setting up logs at ./log/docker/store_node1_2024-09-02_04-32-16__4811143d-3cda-4740-8503-4497fe00e03c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 50151
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:50151/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:50151/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.197.248/tcp/50152/p2p/16Uiu2HAmCF6sBAGzjTe6iFEfAhNk1ipegibtD4w9e8SsJHNFYp74","/ip4/172.18.197.248/tcp/50153/ws/p2p/16Uiu2HAmCF6sBAGzjTe6iFEfAhNk1ipegibtD4w9e8SsJHNFYp74"],"enrUri":"enr:-LO4QCs1vua6-_W7ha29q36ITEsoAXlkFZxsfRwLgLPKtr7gKuCxuVLZZrilTVAYCRMewd084YiVFQkaqdcl2vhH4gABgmlkgnY0gmlwhKwSxfiKbXVsdGlhZGRyc4wACgSsEsX4BsPp3QOCcnOFAAMBAACJc2VjcDI1NmsxoQL54W1sEhGOmKTrH_mojBWPfpBo1jgZs25KID7BifLpU4N0Y3CCw-iDdWRwgsPqhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:50151/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.125.166/tcp/28044/p2p/16Uiu2HAmMTYCpRzjHGVYwKY5s3bfrUAzGRSwofzK7YK1jsCgL1XW"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:28043/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/0"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:50151/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/0"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.store:store.py:129 Relaying message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:28043/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F0" -H "Content-Type: application/json" -d '{"payload": "U3RvcmUgd29ya3MhIQ==", "contentTopic": "/myapp/1/latest/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.2 seconds
[35mDEBUG   [0m src.steps.store:store.py:217 Checking that peer wakuorg/nwaku:latest can find the stored message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:28043/store/v3/messages?pubsubTopic=%2Fwaku%2F2%2Frs%2F3%2F0&pageSize=5&ascending=true" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"","statusCode":200,"statusDesc":"OK","messages":[{"messageHash":"EPGZGl+mUHKgTGJY4SJ8UKVS4nGuh0nfodin2FdD+Zk="}]}'
[35mDEBUG   [0m src.steps.store:store.py:217 Checking that peer wakuorg/nwaku:latest can find the stored message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:50151/store/v3/messages?pubsubTopic=%2Fwaku%2F2%2Frs%2F3%2F0&pageSize=5&ascending=true" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"19274c99e33733df17d5","statusCode":200,"statusDesc":"OK","messages":[{"messageHash":"EPGZGl+mUHKgTGJY4SJ8UKVS4nGuh0nfodin2FdD+Zk="}]}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 3db6a15b1da7
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id a4ca9d414c4c
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.postgres_setup:postgres_setup.py:44 Postgres container stopped and removed.