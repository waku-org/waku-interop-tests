[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_invalid_version with id: 2024-09-11_09-37-15__62c25349-bfc0-4355-a684-410cdf5b631d
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-09-11_09-37-15__62c25349-bfc0-4355-a684-410cdf5b631d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.144.77
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['22001', '22002', '22003', '22004', '22005']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 22001:22001 -p 22002:22002 -p 22003:22003 -p 22004:22004 -p 22005:22005 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=22003 --rest-port=22001 --tcp-port=22002 --discv5-udp-port=22004 --rest-address=0.0.0.0 --nat=extip:172.18.144.77 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=06ce7d6bedb925ed20bccc1e5c81daabfcaaa89e992fb4bbfddc60dad9fa1b5b --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=22005 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.144.77 waku e413d6da39324e63a9345578f26cde84d530076faa3b9fb7ba25f10656273f8d
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID e413d6da3932. Setting up logs at ./log/docker/node1_2024-09-11_09-37-15__62c25349-bfc0-4355-a684-410cdf5b631d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 22001
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:22001/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:22001/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.144.77/tcp/22002/p2p/16Uiu2HAmASZxRwPzKhZgnW14K3HWutnSxMszBZh1NRVofuVUeGU1","/ip4/172.18.144.77/tcp/22003/ws/p2p/16Uiu2HAmASZxRwPzKhZgnW14K3HWutnSxMszBZh1NRVofuVUeGU1"],"enrUri":"enr:-LO4QDNaJLD0-ab1Sh5nJhWlE4404V2idzgv7SiYplVori1rBwYEKmydzB3ky5fdWcxLjFRmR-kljDvW2UEHNurV9oIBgmlkgnY0gmlwhKwSkE2KbXVsdGlhZGRyc4wACgSsEpBNBlXz3QOCcnOFAAMBAACJc2VjcDI1NmsxoQLfGhLsLgTrOtVlzRpVxoqPzb0QIj9TJbq5mMOotp8TMoN0Y3CCVfKDdWRwglX0hXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-09-11_09-37-15__62c25349-bfc0-4355-a684-410cdf5b631d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.139.104
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['38528', '38529', '38530', '38531', '38532']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 38528:38528 -p 38529:38529 -p 38530:38530 -p 38531:38531 -p 38532:38532 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=38530 --rest-port=38528 --tcp-port=38529 --discv5-udp-port=38531 --rest-address=0.0.0.0 --nat=extip:172.18.139.104 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=0f55edd908bdbee01ff02db2bcff1dcacbb9bdc3e3c4ffb32bd3f5557a5e54b0 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=38532 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QDNaJLD0-ab1Sh5nJhWlE4404V2idzgv7SiYplVori1rBwYEKmydzB3ky5fdWcxLjFRmR-kljDvW2UEHNurV9oIBgmlkgnY0gmlwhKwSkE2KbXVsdGlhZGRyc4wACgSsEpBNBlXz3QOCcnOFAAMBAACJc2VjcDI1NmsxoQLfGhLsLgTrOtVlzRpVxoqPzb0QIj9TJbq5mMOotp8TMoN0Y3CCVfKDdWRwglX0hXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.139.104 waku a799f2453bd4ad8f2649375090315c1274f8c8a2f0fa9ca80402a728fe952f3d
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID a799f2453bd4. Setting up logs at ./log/docker/node2_2024-09-11_09-37-15__62c25349-bfc0-4355-a684-410cdf5b631d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 38528
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38528/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38528/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.139.104/tcp/38529/p2p/16Uiu2HAmJdeC2jhsrzgQBmccDGLA8SubemVnRLs8jsjwxowDzDFR","/ip4/172.18.139.104/tcp/38530/ws/p2p/16Uiu2HAmJdeC2jhsrzgQBmccDGLA8SubemVnRLs8jsjwxowDzDFR"],"enrUri":"enr:-LO4QLORUiMZ6ap5nmroWhKACQy8XHB7LiYKCEFt8-UugokXc2dPHA4TmA13azukrcoVMWfMJJLOvLExCxSUY-GdPjMBgmlkgnY0gmlwhKwSi2iKbXVsdGlhZGRyc4wACgSsEotoBpaC3QOCcnOFAAMBAACJc2VjcDI1NmsxoQNYzb8FFerjDY_zOoe2Jf1uIfrExs-RXeZIT-tYYgJDXIN0Y3CCloGDdWRwgpaDhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38528/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.144.77/tcp/22002/p2p/16Uiu2HAmASZxRwPzKhZgnW14K3HWutnSxMszBZh1NRVofuVUeGU1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:22001/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38528/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:22001/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:22001/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1726047438604260864,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38528/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1726047438604260864,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:22001/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)', "version": 2.1}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:22001/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id e413d6da3932
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id a799f2453bd4
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.