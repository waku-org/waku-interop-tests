[35mDEBUG   [0m src.postgres_setup:postgres_setup.py:36 Postgres container started
[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_on_empty_postgress_db with id: 2024-09-11_09-45-27__bf89df84-9015-4b1e-9ccb-f360e58e8f2c
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.store:store.py:28 Running fixture setup: store_setup
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/publishing_node1_2024-09-11_09-45-27__bf89df84-9015-4b1e-9ccb-f360e58e8f2c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.16.144
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['17951', '17952', '17953', '17954', '17955']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 17951:17951 -p 17952:17952 -p 17953:17953 -p 17954:17954 -p 17955:17955 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=17953 --rest-port=17951 --tcp-port=17952 --discv5-udp-port=17954 --rest-address=0.0.0.0 --nat=extip:172.18.16.144 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=dde6cbb083a0faa5efd6dd0f12cbe4df2b81c44aded8e5a70ac8bbdfb6ba1f7d --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=17955 --metrics-logging=true --store=true --relay=true --store-message-db-url=postgres://postgres:test123@postgres:5432/postgres
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.16.144 waku feeb7af7c187d768038e7d6dc7c1326d9155257641dc5a25c7698954a68ff8da
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID feeb7af7c187. Setting up logs at ./log/docker/publishing_node1_2024-09-11_09-45-27__bf89df84-9015-4b1e-9ccb-f360e58e8f2c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 17951
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17951/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Initializing","protocolsHealth":[]}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17951/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Initializing","protocolsHealth":[]}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17951/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17951/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.16.144/tcp/17952/p2p/16Uiu2HAmJLPTCQJvsHQZSt1pdGrqXxJpLgN9gHSBZ2Yq3rqkQdEs","/ip4/172.18.16.144/tcp/17953/ws/p2p/16Uiu2HAmJLPTCQJvsHQZSt1pdGrqXxJpLgN9gHSBZ2Yq3rqkQdEs"],"enrUri":"enr:-LO4QCnyWlXKdgnp6MWCG-WmESrDcJsmsuV57oUBQXL5QavAAXAkGaaOWDRA7L0sLO550DcFlQOdQ81O6MMockAN64YBgmlkgnY0gmlwhKwSEJCKbXVsdGlhZGRyc4wACgSsEhCQBkYh3QOCcnOFAAMBAACJc2VjcDI1NmsxoQNUYjUhBdC-LYcYgO1SV7GBP17lQf99p9uWdVTPJzR2vIN0Y3CCRiCDdWRwgkYihXdha3UyAw"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/store_node1_2024-09-11_09-45-27__bf89df84-9015-4b1e-9ccb-f360e58e8f2c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.120.91
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['45686', '45687', '45688', '45689', '45690']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 45686:45686 -p 45687:45687 -p 45688:45688 -p 45689:45689 -p 45690:45690 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=45688 --rest-port=45686 --tcp-port=45687 --discv5-udp-port=45689 --rest-address=0.0.0.0 --nat=extip:172.18.120.91 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=adbabf1948c5f80b7d02f251bcb190bea4ae56b854a8bdfd915a3edecdbfa71b --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=45690 --metrics-logging=true --discv5-bootstrap-node=enr:-LO4QCnyWlXKdgnp6MWCG-WmESrDcJsmsuV57oUBQXL5QavAAXAkGaaOWDRA7L0sLO550DcFlQOdQ81O6MMockAN64YBgmlkgnY0gmlwhKwSEJCKbXVsdGlhZGRyc4wACgSsEhCQBkYh3QOCcnOFAAMBAACJc2VjcDI1NmsxoQNUYjUhBdC-LYcYgO1SV7GBP17lQf99p9uWdVTPJzR2vIN0Y3CCRiCDdWRwgkYihXdha3UyAw --storenode=/ip4/172.18.16.144/tcp/17952/p2p/16Uiu2HAmJLPTCQJvsHQZSt1pdGrqXxJpLgN9gHSBZ2Yq3rqkQdEs --store=false --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.120.91 waku d9abb7b8894bb6fa4b6ed15cb4245b4912bf7282d92a728b588478a1b5986809
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID d9abb7b8894b. Setting up logs at ./log/docker/store_node1_2024-09-11_09-45-27__bf89df84-9015-4b1e-9ccb-f360e58e8f2c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 45686
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:45686/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:45686/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.120.91/tcp/45687/p2p/16Uiu2HAmV1D6weVr6jHmxPjeTywK7RJ1Y51NmFmVQiNhwwNUsbsn","/ip4/172.18.120.91/tcp/45688/ws/p2p/16Uiu2HAmV1D6weVr6jHmxPjeTywK7RJ1Y51NmFmVQiNhwwNUsbsn"],"enrUri":"enr:-LO4QN3WQA9aQI9tspfxrgMTnNIN929ezqN8Gpm6j5BsGdo7O4Rj5bTQsIUoZQlJndFkGvFyiPKgZZTghtoWIPXbIVIBgmlkgnY0gmlwhKwSeFuKbXVsdGlhZGRyc4wACgSsEnhbBrJ43QOCcnOFAAMBAACJc2VjcDI1NmsxoQPy6QbGB3qjQsaNcOgceGoN3qTylcoEl1pMzZxKWjUbaYN0Y3CCsneDdWRwgrJ5hXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:45686/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.16.144/tcp/17952/p2p/16Uiu2HAmJLPTCQJvsHQZSt1pdGrqXxJpLgN9gHSBZ2Yq3rqkQdEs"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17951/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/0"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:45686/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/0"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.store:store.py:129 Relaying message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17951/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F0" -H "Content-Type: application/json" -d '{"payload": "U3RvcmUgd29ya3MhIQ==", "contentTopic": "/myapp/1/latest/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.2 seconds
[35mDEBUG   [0m src.steps.store:store.py:217 Checking that peer wakuorg/nwaku:latest can find the stored message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17951/store/v3/messages?pubsubTopic=%2Fwaku%2F2%2Frs%2F3%2F0&pageSize=5&ascending=true" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"","statusCode":200,"statusDesc":"OK","messages":[{"messageHash":"EHMkmRRbA7zN6frYA3WOR3+uv8F4yCH48QhK1/y5sUw="}]}'
[35mDEBUG   [0m src.steps.store:store.py:217 Checking that peer wakuorg/nwaku:latest can find the stored message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:45686/store/v3/messages?pubsubTopic=%2Fwaku%2F2%2Frs%2F3%2F0&pageSize=5&ascending=true" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"54bb9e7b87836fdf0e92","statusCode":200,"statusDesc":"OK","messages":[{"messageHash":"EHMkmRRbA7zN6frYA3WOR3+uv8F4yCH48QhK1/y5sUw="}]}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id feeb7af7c187
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id d9abb7b8894b
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.postgres_setup:postgres_setup.py:44 Postgres container stopped and removed.