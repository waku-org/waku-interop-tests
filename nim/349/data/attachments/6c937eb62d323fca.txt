[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_missing_payload with id: 2024-09-07_04-24-42__1e21f5aa-39a5-4950-9e2b-1516c080f336
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-09-07_04-24-42__1e21f5aa-39a5-4950-9e2b-1516c080f336__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.210.132
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['2709', '2710', '2711', '2712', '2713']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 2709:2709 -p 2710:2710 -p 2711:2711 -p 2712:2712 -p 2713:2713 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=2711 --rest-port=2709 --tcp-port=2710 --discv5-udp-port=2712 --rest-address=0.0.0.0 --nat=extip:172.18.210.132 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=65f832bdbde654a3453db6c7ef0b0ea361b685cbb98fbe6da42b74cdd9c0dfaf --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=2713 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.210.132 waku 6b76e100ef3261078e82e1c8c7048cc626379471cb97f5f04fff246b49e2016c
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 6b76e100ef32. Setting up logs at ./log/docker/node1_2024-09-07_04-24-42__1e21f5aa-39a5-4950-9e2b-1516c080f336__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 2709
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:2709/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:2709/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.210.132/tcp/2710/p2p/16Uiu2HAmD2WHnjL3xyGTBi2fJhkZheLihbmrcR3eyHihEWJsSVgH","/ip4/172.18.210.132/tcp/2711/ws/p2p/16Uiu2HAmD2WHnjL3xyGTBi2fJhkZheLihbmrcR3eyHihEWJsSVgH"],"enrUri":"enr:-LO4QNvKPtQE953eZjzmMctoPGO_fWvGfSmJ1XgN6vkRj9d8MxaRNN7tYud2gwWyRprWZmaJ328iYgvFFhr4qpiarlMBgmlkgnY0gmlwhKwS0oSKbXVsdGlhZGRyc4wACgSsEtKEBgqX3QOCcnOFAAMBAACJc2VjcDI1NmsxoQMFgwzDRbTmcbY1UE8jB8bfhKmyqUlzTLMHLhn3YPIDPoN0Y3CCCpaDdWRwggqYhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-09-07_04-24-42__1e21f5aa-39a5-4950-9e2b-1516c080f336__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.37.186
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['10063', '10064', '10065', '10066', '10067']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 10063:10063 -p 10064:10064 -p 10065:10065 -p 10066:10066 -p 10067:10067 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=10065 --rest-port=10063 --tcp-port=10064 --discv5-udp-port=10066 --rest-address=0.0.0.0 --nat=extip:172.18.37.186 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=0e5b7b1cd131cc80bb7bfaced06e5ccd73d8f5fbeaaafcbdde68c4b71dcca21f --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=10067 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QNvKPtQE953eZjzmMctoPGO_fWvGfSmJ1XgN6vkRj9d8MxaRNN7tYud2gwWyRprWZmaJ328iYgvFFhr4qpiarlMBgmlkgnY0gmlwhKwS0oSKbXVsdGlhZGRyc4wACgSsEtKEBgqX3QOCcnOFAAMBAACJc2VjcDI1NmsxoQMFgwzDRbTmcbY1UE8jB8bfhKmyqUlzTLMHLhn3YPIDPoN0Y3CCCpaDdWRwggqYhXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.37.186 waku afb52219c67d7f8f340e6e9907ce6424364353894e1cadb413c08f02b9160267
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID afb52219c67d. Setting up logs at ./log/docker/node2_2024-09-07_04-24-42__1e21f5aa-39a5-4950-9e2b-1516c080f336__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 10063
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10063/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10063/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.37.186/tcp/10064/p2p/16Uiu2HAmGERiACMLdTbvB1dmLekAGPR1ySbqZk68eBeWWFdQqj3U","/ip4/172.18.37.186/tcp/10065/ws/p2p/16Uiu2HAmGERiACMLdTbvB1dmLekAGPR1ySbqZk68eBeWWFdQqj3U"],"enrUri":"enr:-LO4QFTI6zGp4XbcijuDv46E1upLgw3_Mar9vfR_Nrnyq7AGFWSuyUGNwMC4Fr6Y7iZGiGC-6QiXE6w_nDNGpHbMfMUBgmlkgnY0gmlwhKwSJbqKbXVsdGlhZGRyc4wACgSsEiW6BidR3QOCcnOFAAMBAACJc2VjcDI1NmsxoQM1I-bkCEyXIs_AU3rK_zUynlqEqRcrO4xSa5tMepbt54N0Y3CCJ1CDdWRwgidShXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:10063/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.210.132/tcp/2710/p2p/16Uiu2HAmD2WHnjL3xyGTBi2fJhkZheLihbmrcR3eyHihEWJsSVgH"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:2709/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:10063/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:2709/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:2709/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1725683085525866240,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10063/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1725683085525866240,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:2709/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:2709/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 6b76e100ef32
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id afb52219c67d
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.