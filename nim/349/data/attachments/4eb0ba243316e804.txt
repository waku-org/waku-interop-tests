[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_invalid_version with id: 2024-09-07_04-25-17__f31cdddd-91f9-4f08-a4a8-d569c9354b4f
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-09-07_04-25-17__f31cdddd-91f9-4f08-a4a8-d569c9354b4f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.89.208
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['26929', '26930', '26931', '26932', '26933']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 26929:26929 -p 26930:26930 -p 26931:26931 -p 26932:26932 -p 26933:26933 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=26931 --rest-port=26929 --tcp-port=26930 --discv5-udp-port=26932 --rest-address=0.0.0.0 --nat=extip:172.18.89.208 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=75efc2dffff1111bb4a039fc0e0f688d94caca191ceff2d8c6dabc3ef55be3eb --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=26933 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.89.208 waku de8c749c32a565a7bb167efc6393f7cf965c897e5409d1519006b512817bb571
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID de8c749c32a5. Setting up logs at ./log/docker/node1_2024-09-07_04-25-17__f31cdddd-91f9-4f08-a4a8-d569c9354b4f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 26929
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:26929/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:26929/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.89.208/tcp/26930/p2p/16Uiu2HAmRgtoAME1Vb1d1v18FweM1t5h9cc1ypmxdqEud5MUGpQT","/ip4/172.18.89.208/tcp/26931/ws/p2p/16Uiu2HAmRgtoAME1Vb1d1v18FweM1t5h9cc1ypmxdqEud5MUGpQT"],"enrUri":"enr:-LO4QL8M1j5fWv16LZ03dfjVkLEHdkN2Av6WPYO7q9QtbbeGBROKfGS6n4pq1cdE0Nqov5atlYsFru0KZMHuhNS4Lw4BgmlkgnY0gmlwhKwSWdCKbXVsdGlhZGRyc4wACgSsElnQBmkz3QOCcnOFAAMBAACJc2VjcDI1NmsxoQPBpM_S_3NI2AuiZwlOhpipCf4g7rvfdQSQoRP8lvURdIN0Y3CCaTKDdWRwgmk0hXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-09-07_04-25-17__f31cdddd-91f9-4f08-a4a8-d569c9354b4f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.10.234
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['55413', '55414', '55415', '55416', '55417']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 55413:55413 -p 55414:55414 -p 55415:55415 -p 55416:55416 -p 55417:55417 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=55415 --rest-port=55413 --tcp-port=55414 --discv5-udp-port=55416 --rest-address=0.0.0.0 --nat=extip:172.18.10.234 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b3f0b55c114b75501d76cc6b3fea4820845228f5fcfcf1c96edb45430c8a763c --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=55417 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QL8M1j5fWv16LZ03dfjVkLEHdkN2Av6WPYO7q9QtbbeGBROKfGS6n4pq1cdE0Nqov5atlYsFru0KZMHuhNS4Lw4BgmlkgnY0gmlwhKwSWdCKbXVsdGlhZGRyc4wACgSsElnQBmkz3QOCcnOFAAMBAACJc2VjcDI1NmsxoQPBpM_S_3NI2AuiZwlOhpipCf4g7rvfdQSQoRP8lvURdIN0Y3CCaTKDdWRwgmk0hXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.10.234 waku 82927aaad39a2c7915ffcadf2c47b2410cd641c7366c27921ab5d59acd06ba3e
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 82927aaad39a. Setting up logs at ./log/docker/node2_2024-09-07_04-25-17__f31cdddd-91f9-4f08-a4a8-d569c9354b4f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 55413
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:55413/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:55413/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.10.234/tcp/55414/p2p/16Uiu2HAmPz43tneWrcAeeyrBEZfV845rvLc96nxSQt8h4hBYV3XN","/ip4/172.18.10.234/tcp/55415/ws/p2p/16Uiu2HAmPz43tneWrcAeeyrBEZfV845rvLc96nxSQt8h4hBYV3XN"],"enrUri":"enr:-LO4QIKQTiwGbs39DsuhA1pRyRiGQjPr9uky3mGYZ2Bwofo1V04KEAdHK9GKt69oeepRZ53fyggoG98n1QWxhiQ58QsBgmlkgnY0gmlwhKwSCuqKbXVsdGlhZGRyc4wACgSsEgrqBth33QOCcnOFAAMBAACJc2VjcDI1NmsxoQOoUsZ2Ir8RmLmILkQmuN89zV6TrOqx6ft0CfXoPAj2OYN0Y3CC2HaDdWRwgth4hXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:55413/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.89.208/tcp/26930/p2p/16Uiu2HAmRgtoAME1Vb1d1v18FweM1t5h9cc1ypmxdqEud5MUGpQT"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:26929/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:55413/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:26929/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:26929/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1725683120974637568,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:55413/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1725683120974637568,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:26929/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)', "version": 2.1}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:26929/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id de8c749c32a5
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 82927aaad39a
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.