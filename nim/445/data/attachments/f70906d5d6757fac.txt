[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2024-11-10_06-11-30__d9e40a8b-06c0-492e-a0d2-e4ab1f304642
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-10_06-11-30__d9e40a8b-06c0-492e-a0d2-e4ab1f304642__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.78.197
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['3889', '3890', '3891', '3892', '3893']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 3889:3889 -p 3890:3890 -p 3891:3891 -p 3892:3892 -p 3893:3893 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=3891 --rest-port=3889 --tcp-port=3890 --discv5-udp-port=3892 --rest-address=0.0.0.0 --nat=extip:172.18.78.197 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=5ba60fac9d8d366bb2dfd2c4a7edba952ff0eb5c965effd4abf72dff1bd662d8 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=3893 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.78.197 waku 74765c72c884c82cf85d3a1ee3805b0eb6ba24f861f023a2c4b7ec8a1583d88d
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 74765c72c884. Setting up logs at ./log/docker/node1_2024-11-10_06-11-30__d9e40a8b-06c0-492e-a0d2-e4ab1f304642__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 3889
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container ecd756359c17. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:3889/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:3889/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.78.197/tcp/3890/p2p/16Uiu2HAkyyQcv14dTv2du8wFhu1CSDxSRpChVs61MDyNS2pae4U7","/ip4/172.18.78.197/tcp/3891/ws/p2p/16Uiu2HAkyyQcv14dTv2du8wFhu1CSDxSRpChVs61MDyNS2pae4U7"],"enrUri":"enr:-L24QH_dHRj6m1I3WRfSWX2OvsGSfdVJJNpBMcHzzvDM2f_IB62-w0FLivufpbMBQmslvWJkiQXPFXRLegw7QkhUjV8CgmlkgnY0gmlwhKwSTsWKbXVsdGlhZGRyc5YACASsEk7FBg8yAAoErBJOxQYPM90DgnJzhQADAQAAiXNlY3AyNTZrMaECQ4_3THAktiG0eAcgotXRQ_f_x2m7gNOrtLetdHjTnoiDdGNwgg8yg3VkcIIPNIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-10_06-11-30__d9e40a8b-06c0-492e-a0d2-e4ab1f304642__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.72.26
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['52358', '52359', '52360', '52361', '52362']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 52358:52358 -p 52359:52359 -p 52360:52360 -p 52361:52361 -p 52362:52362 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=52360 --rest-port=52358 --tcp-port=52359 --discv5-udp-port=52361 --rest-address=0.0.0.0 --nat=extip:172.18.72.26 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ecfbce7badebccbce9bb66ec7c4b23fd3f6420bbfdbbde92e043abc46b58c48a --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=52362 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QH_dHRj6m1I3WRfSWX2OvsGSfdVJJNpBMcHzzvDM2f_IB62-w0FLivufpbMBQmslvWJkiQXPFXRLegw7QkhUjV8CgmlkgnY0gmlwhKwSTsWKbXVsdGlhZGRyc5YACASsEk7FBg8yAAoErBJOxQYPM90DgnJzhQADAQAAiXNlY3AyNTZrMaECQ4_3THAktiG0eAcgotXRQ_f_x2m7gNOrtLetdHjTnoiDdGNwgg8yg3VkcIIPNIV3YWt1MgU --filternode=/ip4/172.18.78.197/tcp/3890/p2p/16Uiu2HAkyyQcv14dTv2du8wFhu1CSDxSRpChVs61MDyNS2pae4U7
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.72.26 waku cb6a089d3abef890955b13d7ee3445c9e930313dcb529f91e6337d4f73486098
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID cb6a089d3abe. Setting up logs at ./log/docker/node2_2024-11-10_06-11-30__d9e40a8b-06c0-492e-a0d2-e4ab1f304642__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 52358
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:52358/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:52358/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.72.26/tcp/52359/p2p/16Uiu2HAmNodzLQPBHQeuiDhyRdkBkgSwY8uPrdJb1JjwKH3sPPpc","/ip4/172.18.72.26/tcp/52360/ws/p2p/16Uiu2HAmNodzLQPBHQeuiDhyRdkBkgSwY8uPrdJb1JjwKH3sPPpc"],"enrUri":"enr:-L24QEJQAsP7boK3rGy6cwJKgfjd6Sb99SDItRy0Y1jk8gaGCLf1EGmTfA31mswbbmawPupUVFcut95JGrtknems3GoCgmlkgnY0gmlwhKwSSBqKbXVsdGlhZGRyc5YACASsEkgaBsyHAAoErBJIGgbMiN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDlswS74BB3gT77YukDa0a2pgAcie5d82tbVuH9s_KYrGDdGNwgsyHg3VkcILMiYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:52358/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.78.197/tcp/3890/p2p/16Uiu2HAkyyQcv14dTv2du8wFhu1CSDxSRpChVs61MDyNS2pae4U7"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:3889/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:52358/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "8f4e3e0f-5707-4642-8cd3-38cbb63fe6d5", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"8f4e3e0f-5707-4642-8cd3-38cbb63fe6d5","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:52358/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:52358/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 74765c72c884
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id cb6a089d3abe
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 74765c72c884. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.