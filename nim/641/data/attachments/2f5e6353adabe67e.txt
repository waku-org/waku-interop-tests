[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2025-02-05_04-02-46__7ca59156-d0f2-41ae-9eaf-0dcf1b1c864a
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-02-05_04-02-46__7ca59156-d0f2-41ae-9eaf-0dcf1b1c864a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.65.101
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['44831', '44832', '44833', '44834', '44835']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 44831:44831 -p 44832:44832 -p 44833:44833 -p 44834:44834 -p 44835:44835 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=44833 --rest-port=44831 --tcp-port=44832 --discv5-udp-port=44834 --rest-address=0.0.0.0 --nat=extip:172.18.65.101 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=cabf9f42a88bbdda5f8ea97435b699c00bc1dd0481772ca75f936e9eea9dab4c --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=44835 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.65.101 waku 3f813af62b8e794fc47d393d30cdbf45aaf8bb9456f0ecf3a2868a256ee39163
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 3f813af62b8e. Setting up logs at ./log/docker/node1_2025-02-05_04-02-46__7ca59156-d0f2-41ae-9eaf-0dcf1b1c864a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 44831
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 8ee8a3d6cfb3. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:44831/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:44831/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.65.101/tcp/44832/p2p/16Uiu2HAmDVLFPCArhMLi7qkmGoPk6nHXkFEqFjSuE3bBY9NJmmNj","/ip4/172.18.65.101/tcp/44833/ws/p2p/16Uiu2HAmDVLFPCArhMLi7qkmGoPk6nHXkFEqFjSuE3bBY9NJmmNj"],"enrUri":"enr:-L24QCPJ4LamW30SLKXXUIK5qCW0UUPSCm8CNwEikqiTB4BCQT-FCFeOer-xnlyt1s4UL7N1y9nUDTg1edTnq_3U1H8CgmlkgnY0gmlwhKwSQWWKbXVsdGlhZGRyc5YACASsEkFlBq8gAAoErBJBZQavId0DgnJzhQADAQAAiXNlY3AyNTZrMaEDDGJgtQtZ--8N6XZfJoWb1xWtdj6kxVemjRYDBe6kL6yDdGNwgq8gg3VkcIKvIoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-02-05_04-02-46__7ca59156-d0f2-41ae-9eaf-0dcf1b1c864a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.236.164
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['30487', '30488', '30489', '30490', '30491']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 30487:30487 -p 30488:30488 -p 30489:30489 -p 30490:30490 -p 30491:30491 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=30489 --rest-port=30487 --tcp-port=30488 --discv5-udp-port=30490 --rest-address=0.0.0.0 --nat=extip:172.18.236.164 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e3deb53f777418b5ee48d5ffc6116c79eea715d42cfccbcfdebcc0b69ff2def4 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=30491 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QCPJ4LamW30SLKXXUIK5qCW0UUPSCm8CNwEikqiTB4BCQT-FCFeOer-xnlyt1s4UL7N1y9nUDTg1edTnq_3U1H8CgmlkgnY0gmlwhKwSQWWKbXVsdGlhZGRyc5YACASsEkFlBq8gAAoErBJBZQavId0DgnJzhQADAQAAiXNlY3AyNTZrMaEDDGJgtQtZ--8N6XZfJoWb1xWtdj6kxVemjRYDBe6kL6yDdGNwgq8gg3VkcIKvIoV3YWt1MgU --filternode=/ip4/172.18.65.101/tcp/44832/p2p/16Uiu2HAmDVLFPCArhMLi7qkmGoPk6nHXkFEqFjSuE3bBY9NJmmNj
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.236.164 waku bf430c2f3f2b7167a304e3257da4ba10cfbec65d58521000f7045311f2bf6067
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID bf430c2f3f2b. Setting up logs at ./log/docker/node2_2025-02-05_04-02-46__7ca59156-d0f2-41ae-9eaf-0dcf1b1c864a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 30487
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30487/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30487/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.236.164/tcp/30488/p2p/16Uiu2HAmUBM7gK1XvLRokReTAshV8XNFXWr8Qathn9dQbPaecAih","/ip4/172.18.236.164/tcp/30489/ws/p2p/16Uiu2HAmUBM7gK1XvLRokReTAshV8XNFXWr8Qathn9dQbPaecAih"],"enrUri":"enr:-L24QHciS3r5hQB4IvZh4Nqlxe04x-aIZ76sRakGYEUQACDYeh8PPaIa6JcRPKyQyB-ysXxn9ncWhmuthufXCrHZ4RcCgmlkgnY0gmlwhKwS7KSKbXVsdGlhZGRyc5YACASsEuykBncYAAoErBLspAZ3Gd0DgnJzhQADAQAAiXNlY3AyNTZrMaED5qY1JMnGA-woTdnvwZtffh4NSXXLev2XEJngXxTwdZ6DdGNwgncYg3VkcIJ3GoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:30487/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.65.101/tcp/44832/p2p/16Uiu2HAmDVLFPCArhMLi7qkmGoPk6nHXkFEqFjSuE3bBY9NJmmNj"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:44831/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:30487/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1b6b517c-f8dd-4a01-a6e5-ff8857472b8d", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"1b6b517c-f8dd-4a01-a6e5-ff8857472b8d","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:30487/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:30487/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 3f813af62b8e
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id bf430c2f3f2b
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 3f813af62b8e. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.