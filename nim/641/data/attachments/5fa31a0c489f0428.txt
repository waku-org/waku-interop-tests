[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_no_content_topic with id: 2025-02-05_04-07-46__460920f3-6d14-4a38-a8aa-2671328824a4
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-02-05_04-07-46__460920f3-6d14-4a38-a8aa-2671328824a4__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.201.61
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['14623', '14624', '14625', '14626', '14627']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 14623:14623 -p 14624:14624 -p 14625:14625 -p 14626:14626 -p 14627:14627 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=14625 --rest-port=14623 --tcp-port=14624 --discv5-udp-port=14626 --rest-address=0.0.0.0 --nat=extip:172.18.201.61 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=a0f67dadaf3affbab63c82e7eccc9290eea2efda64a6c803cfffcb8c9f235a98 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=14627 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.201.61 waku 607666e07e34ab475bfec224a952830ffa7d1dde7b1cb2a68219299b202d3c79
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 607666e07e34. Setting up logs at ./log/docker/node1_2025-02-05_04-07-46__460920f3-6d14-4a38-a8aa-2671328824a4__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 14623
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 9004767d1b73. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:14623/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:14623/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.201.61/tcp/14624/p2p/16Uiu2HAm2Wk8GyEjKWQoeuxjfKa4KfGQvDZGc8zqKedaM7irWGjp","/ip4/172.18.201.61/tcp/14625/ws/p2p/16Uiu2HAm2Wk8GyEjKWQoeuxjfKa4KfGQvDZGc8zqKedaM7irWGjp"],"enrUri":"enr:-L24QEMzwSsd-qEO-znbllJFwTN1T9N74pXkhJOABHXg_5imO1GO8UFsxhXpt2kOCD3aEerxXFjDuWYzMK8ZwgGcPG0CgmlkgnY0gmlwhKwSyT2KbXVsdGlhZGRyc5YACASsEsk9BjkgAAoErBLJPQY5Id0DgnJzhQADAQAAiXNlY3AyNTZrMaECaU5mlRV4H7DVeERCO4WMXv1qUWemh8jRhtMabXJrYIeDdGNwgjkgg3VkcII5IoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-02-05_04-07-46__460920f3-6d14-4a38-a8aa-2671328824a4__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.223.42
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['44629', '44630', '44631', '44632', '44633']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 44629:44629 -p 44630:44630 -p 44631:44631 -p 44632:44632 -p 44633:44633 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=44631 --rest-port=44629 --tcp-port=44630 --discv5-udp-port=44632 --rest-address=0.0.0.0 --nat=extip:172.18.223.42 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b5262a28d0fed3ff3782e8cccf0408d4bc083d8d01d4fba3f2b23b39b27dbdc6 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=44633 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QEMzwSsd-qEO-znbllJFwTN1T9N74pXkhJOABHXg_5imO1GO8UFsxhXpt2kOCD3aEerxXFjDuWYzMK8ZwgGcPG0CgmlkgnY0gmlwhKwSyT2KbXVsdGlhZGRyc5YACASsEsk9BjkgAAoErBLJPQY5Id0DgnJzhQADAQAAiXNlY3AyNTZrMaECaU5mlRV4H7DVeERCO4WMXv1qUWemh8jRhtMabXJrYIeDdGNwgjkgg3VkcII5IoV3YWt1MgU --filternode=/ip4/172.18.201.61/tcp/14624/p2p/16Uiu2HAm2Wk8GyEjKWQoeuxjfKa4KfGQvDZGc8zqKedaM7irWGjp
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.223.42 waku 85484f898fce4af0f8d778b09d951ec5ab0e4836a772304b8125a3ac38c30d65
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 85484f898fce. Setting up logs at ./log/docker/node2_2025-02-05_04-07-46__460920f3-6d14-4a38-a8aa-2671328824a4__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 44629
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:44629/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:44629/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.223.42/tcp/44630/p2p/16Uiu2HAm7td1h3xZeqRvD5rVhz2SPX2FzGjmH88oxD84nuT6FRuV","/ip4/172.18.223.42/tcp/44631/ws/p2p/16Uiu2HAm7td1h3xZeqRvD5rVhz2SPX2FzGjmH88oxD84nuT6FRuV"],"enrUri":"enr:-L24QH-NokzehZL6O4puTF7AE6k1dncN9qywUYI6LIUCltriAV-gENgd2gLqzb_LQZHe5X5EhJIMZKZVCLD_Y8Q79HECgmlkgnY0gmlwhKwS3yqKbXVsdGlhZGRyc5YACASsEt8qBq5WAAoErBLfKgauV90DgnJzhQADAQAAiXNlY3AyNTZrMaECuTOR4Zdn5uvi_9V2iqQt5Q3jhGURBkVcr56B3JOwB4SDdGNwgq5Wg3VkcIKuWIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:44629/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.201.61/tcp/14624/p2p/16Uiu2HAm2Wk8GyEjKWQoeuxjfKa4KfGQvDZGc8zqKedaM7irWGjp"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:14623/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:44629/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "45d52a3b-49b6-4abf-83b4-ed2836ece910", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"45d52a3b-49b6-4abf-83b4-ed2836ece910","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:44629/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:44629/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 607666e07e34
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 85484f898fce
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 607666e07e34. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.