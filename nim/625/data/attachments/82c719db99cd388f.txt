[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_invalid_request_id with id: 2025-01-23_04-07-06__a2daf1a2-2b4d-4a69-b983-db6d7b7f7e4a
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-23_04-07-06__a2daf1a2-2b4d-4a69-b983-db6d7b7f7e4a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.201.159
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['12266', '12267', '12268', '12269', '12270']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 12266:12266 -p 12267:12267 -p 12268:12268 -p 12269:12269 -p 12270:12270 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=12268 --rest-port=12266 --tcp-port=12267 --discv5-udp-port=12269 --rest-address=0.0.0.0 --nat=extip:172.18.201.159 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=db04d7d6c892dddcdc4af45a4cb0fdcce1ec516289c8de296a61e2b93c782cd4 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=12270 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.201.159 waku ee3361864a4b38491cd83608e1b3efecb9261deff2118d396e6016334d832b75
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID ee3361864a4b. Setting up logs at ./log/docker/node1_2025-01-23_04-07-06__a2daf1a2-2b4d-4a69-b983-db6d7b7f7e4a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 12266
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 3c982cfa3bce. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:12266/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:12266/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.201.159/tcp/12267/p2p/16Uiu2HAmSo92af4rbKqMsnbS7MSLW7dVsqUio9BJmg5Gnytkzrzt","/ip4/172.18.201.159/tcp/12268/ws/p2p/16Uiu2HAmSo92af4rbKqMsnbS7MSLW7dVsqUio9BJmg5Gnytkzrzt"],"enrUri":"enr:-L24QKCbGeOsI5rXeDG5vpL500FkG4McxmoGtyBE7Ebdpzw6VlbYLgM5Dv0-g5NIDToHTLXK5SsupHNnv6Ja1Z8Xim8CgmlkgnY0gmlwhKwSyZ-KbXVsdGlhZGRyc5YACASsEsmfBi_rAAoErBLJnwYv7N0DgnJzhQADAQAAiXNlY3AyNTZrMaED0hoTNl9TEg4HnZgopQyD4hczPNcYzN2pvt_MVwip3fmDdGNwgi_rg3VkcIIv7YV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-23_04-07-06__a2daf1a2-2b4d-4a69-b983-db6d7b7f7e4a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.8.211
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['33615', '33616', '33617', '33618', '33619']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 33615:33615 -p 33616:33616 -p 33617:33617 -p 33618:33618 -p 33619:33619 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=33617 --rest-port=33615 --tcp-port=33616 --discv5-udp-port=33618 --rest-address=0.0.0.0 --nat=extip:172.18.8.211 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=add8b8a69e7fe5ed3155df5defc0d8cca6fceceaba0fc78c4c0d00aad444fbc3 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=33619 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QKCbGeOsI5rXeDG5vpL500FkG4McxmoGtyBE7Ebdpzw6VlbYLgM5Dv0-g5NIDToHTLXK5SsupHNnv6Ja1Z8Xim8CgmlkgnY0gmlwhKwSyZ-KbXVsdGlhZGRyc5YACASsEsmfBi_rAAoErBLJnwYv7N0DgnJzhQADAQAAiXNlY3AyNTZrMaED0hoTNl9TEg4HnZgopQyD4hczPNcYzN2pvt_MVwip3fmDdGNwgi_rg3VkcIIv7YV3YWt1MgU --filternode=/ip4/172.18.201.159/tcp/12267/p2p/16Uiu2HAmSo92af4rbKqMsnbS7MSLW7dVsqUio9BJmg5Gnytkzrzt
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.8.211 waku 52d74a58cbde7b21a904d1d6c1c3078f76d4d5cb2e6c3cdee5dc980778e1160a
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 52d74a58cbde. Setting up logs at ./log/docker/node2_2025-01-23_04-07-06__a2daf1a2-2b4d-4a69-b983-db6d7b7f7e4a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 33615
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33615/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33615/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.8.211/tcp/33616/p2p/16Uiu2HAmPxrnpSM5MchGhdFYis56Mz7y1fBaBh8Eaqe3DtpThCNt","/ip4/172.18.8.211/tcp/33617/ws/p2p/16Uiu2HAmPxrnpSM5MchGhdFYis56Mz7y1fBaBh8Eaqe3DtpThCNt"],"enrUri":"enr:-L24QIs7dwCvOyjhsAljXrrVoAmwTBApHA8OUvWKAB3bZ6QICycXEt7iGWmkiUax5m15wwCJYs5w7wEU455ghV2Ls5cCgmlkgnY0gmlwhKwSCNOKbXVsdGlhZGRyc5YACASsEgjTBoNQAAoErBII0waDUd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDqAR2enLJ5qUGEj_WYr_cO_sHRxW0AvvncRSZ8eZmsIGDdGNwgoNQg3VkcIKDUoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:33615/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.201.159/tcp/12267/p2p/16Uiu2HAmSo92af4rbKqMsnbS7MSLW7dVsqUio9BJmg5Gnytkzrzt"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:12266/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:33615/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "c4815c35-53bd-411b-b7e7-d13a4cdbce7e", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"c4815c35-53bd-411b-b7e7-d13a4cdbce7e","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:33615/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:33615/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id ee3361864a4b
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 52d74a58cbde
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container ee3361864a4b. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.