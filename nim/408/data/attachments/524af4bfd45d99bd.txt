[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_no_request_id with id: 2024-10-27_04-06-39__14392ca6-ad00-497d-b422-215085faed5e
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-10-27_04-06-39__14392ca6-ad00-497d-b422-215085faed5e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.229.3
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['8017', '8018', '8019', '8020', '8021']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 8017:8017 -p 8018:8018 -p 8019:8019 -p 8020:8020 -p 8021:8021 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=8019 --rest-port=8017 --tcp-port=8018 --discv5-udp-port=8020 --rest-address=0.0.0.0 --nat=extip:172.18.229.3 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=5fc46bca9ccd4fe07eefb2332669bb63efe070edcbb1c7116040d6fd903eedf3 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=8021 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.229.3 waku 747cdb7bf572e76556f6fb9fe37bdd4e2c8d25253929573f10e535797fe06e48
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 17089b927392. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 747cdb7bf572. Setting up logs at ./log/docker/node1_2024-10-27_04-06-39__14392ca6-ad00-497d-b422-215085faed5e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 8017
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8017/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8017/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.229.3/tcp/8018/p2p/16Uiu2HAm6c4YhjCGmr1PjRVUZN3mehetufe4jUe3BLLdmu5HPdoG","/ip4/172.18.229.3/tcp/8019/ws/p2p/16Uiu2HAm6c4YhjCGmr1PjRVUZN3mehetufe4jUe3BLLdmu5HPdoG"],"enrUri":"enr:-LO4QAd43zNZKuZRCLQm5ZQ1O7az_IEK0mI_eetmNEQHxF2sIXlssJuDz-4lwLK1J4F_8hoSzC1vpI8R28fQY0ubaxkBgmlkgnY0gmlwhKwS5QOKbXVsdGlhZGRyc4wACgSsEuUDBh9T3QOCcnOFAAMBAACJc2VjcDI1NmsxoQKmGeGepLDjDadUEVn54BH15oQxaQTjumLW1GerFWWLe4N0Y3CCH1KDdWRwgh9UhXdha3UyBQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-10-27_04-06-39__14392ca6-ad00-497d-b422-215085faed5e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.196.176
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['43374', '43375', '43376', '43377', '43378']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 43374:43374 -p 43375:43375 -p 43376:43376 -p 43377:43377 -p 43378:43378 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=43376 --rest-port=43374 --tcp-port=43375 --discv5-udp-port=43377 --rest-address=0.0.0.0 --nat=extip:172.18.196.176 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=a23d2deab6285cc6fc97db6acddd1a467ebaeb4135edbf0bbd5ab38e74a69fd2 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=43378 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-LO4QAd43zNZKuZRCLQm5ZQ1O7az_IEK0mI_eetmNEQHxF2sIXlssJuDz-4lwLK1J4F_8hoSzC1vpI8R28fQY0ubaxkBgmlkgnY0gmlwhKwS5QOKbXVsdGlhZGRyc4wACgSsEuUDBh9T3QOCcnOFAAMBAACJc2VjcDI1NmsxoQKmGeGepLDjDadUEVn54BH15oQxaQTjumLW1GerFWWLe4N0Y3CCH1KDdWRwgh9UhXdha3UyBQ --filternode=/ip4/172.18.229.3/tcp/8018/p2p/16Uiu2HAm6c4YhjCGmr1PjRVUZN3mehetufe4jUe3BLLdmu5HPdoG
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.196.176 waku f2d28b2971c0c8fd5d92dea16f9d9be0252a09b9ca933aae3a73c4dee11552a5
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID f2d28b2971c0. Setting up logs at ./log/docker/node2_2024-10-27_04-06-39__14392ca6-ad00-497d-b422-215085faed5e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 43374
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:43374/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:43374/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.196.176/tcp/43375/p2p/16Uiu2HAmAk5TUd6GeDr4iygAgueX4h1xtzNr7kUZUs44rP6nxhMg","/ip4/172.18.196.176/tcp/43376/ws/p2p/16Uiu2HAmAk5TUd6GeDr4iygAgueX4h1xtzNr7kUZUs44rP6nxhMg"],"enrUri":"enr:-LO4QBOBVJSlnavUObgCu5LXohJOCqg-ILbau0LsWUeiuw2UAJdtjZ2lZxdL-P2hoY9mokoNkB59xrwgm-0UbHVBmBMBgmlkgnY0gmlwhKwSxLCKbXVsdGlhZGRyc4wACgSsEsSwBqlw3QOCcnOFAAMBAACJc2VjcDI1NmsxoQLjlk3ohNMUzE_wuXSgku8XZw59_jsITtOB-aA0KUll14N0Y3CCqW-DdWRwgqlxhXdha3UyAA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:43374/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.229.3/tcp/8018/p2p/16Uiu2HAm6c4YhjCGmr1PjRVUZN3mehetufe4jUe3BLLdmu5HPdoG"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8017/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:43374/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "c8b8cea7-a364-413a-84cc-6dbcee7638f8", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"c8b8cea7-a364-413a-84cc-6dbcee7638f8","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:43374/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:43374/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 747cdb7bf572
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id f2d28b2971c0
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 747cdb7bf572. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.