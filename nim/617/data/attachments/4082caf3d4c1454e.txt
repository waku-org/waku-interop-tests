[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_invalid_request_id with id: 2025-01-15_04-04-07__973aab36-8f02-4d03-8991-c99e5e68ee0b
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-15_04-04-07__973aab36-8f02-4d03-8991-c99e5e68ee0b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.132.185
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['10856', '10857', '10858', '10859', '10860']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 10856:10856 -p 10857:10857 -p 10858:10858 -p 10859:10859 -p 10860:10860 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=10858 --rest-port=10856 --tcp-port=10857 --discv5-udp-port=10859 --rest-address=0.0.0.0 --nat=extip:172.18.132.185 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=56eec7a5e2d5cab9a6de917edaa27fb36f3fd0eb89fcf5abe910d5b9af724e24 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=10860 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.132.185 waku ef7deac88b12ba02bb1cdf2a47c31294e679ed63b1c8ce1929a6e2544308d04b
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID ef7deac88b12. Setting up logs at ./log/docker/node1_2025-01-15_04-04-07__973aab36-8f02-4d03-8991-c99e5e68ee0b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 10856
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container efe00610fe85. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10856/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10856/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.132.185/tcp/10857/p2p/16Uiu2HAm1hK2rH3ya4dzwWMpLggxv9duYnzhMcVCpqZp83FsjNur","/ip4/172.18.132.185/tcp/10858/ws/p2p/16Uiu2HAm1hK2rH3ya4dzwWMpLggxv9duYnzhMcVCpqZp83FsjNur"],"enrUri":"enr:-L24QL4mITTAvnUOWXucVLB0YYzIrW2UA7i4-VSI9tEv-R59Agog5OVjgFEn3H-IOEp05n_-p5zUoxTvJGdFEdqZqLICgmlkgnY0gmlwhKwShLmKbXVsdGlhZGRyc5YACASsEoS5BippAAoErBKEuQYqat0DgnJzhQADAQAAiXNlY3AyNTZrMaECXSe6tNCQ_0IfwSFqzU0pcRjh-KBxOdkvDvFbBQcZs12DdGNwgippg3VkcIIqa4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-15_04-04-07__973aab36-8f02-4d03-8991-c99e5e68ee0b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.127.219
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['17767', '17768', '17769', '17770', '17771']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 17767:17767 -p 17768:17768 -p 17769:17769 -p 17770:17770 -p 17771:17771 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=17769 --rest-port=17767 --tcp-port=17768 --discv5-udp-port=17770 --rest-address=0.0.0.0 --nat=extip:172.18.127.219 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e225db5315cb644edb8228fc60ae2ddcdea094fcf7c55cb34d7fff7f11deaadc --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=17771 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QL4mITTAvnUOWXucVLB0YYzIrW2UA7i4-VSI9tEv-R59Agog5OVjgFEn3H-IOEp05n_-p5zUoxTvJGdFEdqZqLICgmlkgnY0gmlwhKwShLmKbXVsdGlhZGRyc5YACASsEoS5BippAAoErBKEuQYqat0DgnJzhQADAQAAiXNlY3AyNTZrMaECXSe6tNCQ_0IfwSFqzU0pcRjh-KBxOdkvDvFbBQcZs12DdGNwgippg3VkcIIqa4V3YWt1MgU --filternode=/ip4/172.18.132.185/tcp/10857/p2p/16Uiu2HAm1hK2rH3ya4dzwWMpLggxv9duYnzhMcVCpqZp83FsjNur
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.127.219 waku 02ee4f2eaf3030549fa6748c593a789fa36694c04403d50c10d9b5497e81190b
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 02ee4f2eaf30. Setting up logs at ./log/docker/node2_2025-01-15_04-04-07__973aab36-8f02-4d03-8991-c99e5e68ee0b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 17767
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17767/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17767/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.127.219/tcp/17768/p2p/16Uiu2HAm2gPpNx6gVjvornEaHkfkLAK2xawQMKsU1qEgKsNMBb3x","/ip4/172.18.127.219/tcp/17769/ws/p2p/16Uiu2HAm2gPpNx6gVjvornEaHkfkLAK2xawQMKsU1qEgKsNMBb3x"],"enrUri":"enr:-L24QMth5yN5vA_0m0EUFA1HloPhCP4NQw6NViKmpC7VmfjVRJFk0isqPHUrqgG5YOTeiHGL_zVR4UrmCJJGGewaGIICgmlkgnY0gmlwhKwSf9uKbXVsdGlhZGRyc5YACASsEn_bBkVoAAoErBJ_2wZFad0DgnJzhQADAQAAiXNlY3AyNTZrMaECa8c-7urmYg67sI9EFmv9XQcheMRjWeCkGz3JtpgszuODdGNwgkVog3VkcIJFaoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17767/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.132.185/tcp/10857/p2p/16Uiu2HAm1hK2rH3ya4dzwWMpLggxv9duYnzhMcVCpqZp83FsjNur"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:10856/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17767/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1a3db3f9-3de5-4b39-bda1-8162d1604e1c", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"1a3db3f9-3de5-4b39-bda1-8162d1604e1c","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:17767/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:17767/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id ef7deac88b12
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 02ee4f2eaf30
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container ef7deac88b12. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.