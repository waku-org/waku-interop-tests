[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2025-01-15_04-03-29__0af096c2-9b15-4d49-8c32-47ec9ba61961
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-15_04-03-29__0af096c2-9b15-4d49-8c32-47ec9ba61961__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.136.220
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['44572', '44573', '44574', '44575', '44576']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 44572:44572 -p 44573:44573 -p 44574:44574 -p 44575:44575 -p 44576:44576 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=44574 --rest-port=44572 --tcp-port=44573 --discv5-udp-port=44575 --rest-address=0.0.0.0 --nat=extip:172.18.136.220 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=54afb70dfb2bb7eafa9e6ac2cea317fcde9b33b495bcd6a81ee25371fb4babb4 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=44576 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.136.220 waku 06efe0e76f32846ccfdc7a12693f708902a92f8443e7b57a9d2ea8d00800cd33
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 06efe0e76f32. Setting up logs at ./log/docker/node1_2025-01-15_04-03-29__0af096c2-9b15-4d49-8c32-47ec9ba61961__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 44572
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container b3660160985c. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:44572/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:44572/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.136.220/tcp/44573/p2p/16Uiu2HAmS9HbYHC9gkUbhf4Q4PVBJyWrWpXgXnfobgwYrHhXh6jc","/ip4/172.18.136.220/tcp/44574/ws/p2p/16Uiu2HAmS9HbYHC9gkUbhf4Q4PVBJyWrWpXgXnfobgwYrHhXh6jc"],"enrUri":"enr:-L24QLMpvgFPw0A6-aGnNbKN7EN-JJEvqzmpIM-Ix_TiihcnHEHPmqr-IIvS6j_hX-Z5tWtaIfrQ-zLX5BkTeAHfi4gCgmlkgnY0gmlwhKwSiNyKbXVsdGlhZGRyc5YACASsEojcBq4dAAoErBKI3AauHt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDyGexRV63pxL3B3Vum1fZONUik05d5KRx6iqgtkXZd_uDdGNwgq4dg3VkcIKuH4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-15_04-03-29__0af096c2-9b15-4d49-8c32-47ec9ba61961__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.49.198
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['40676', '40677', '40678', '40679', '40680']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 40676:40676 -p 40677:40677 -p 40678:40678 -p 40679:40679 -p 40680:40680 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=40678 --rest-port=40676 --tcp-port=40677 --discv5-udp-port=40679 --rest-address=0.0.0.0 --nat=extip:172.18.49.198 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=c08c3ebe47b1eba25c32ee7fc2bce3da7c8e7caa15bc5d4ad9afb8e27ab4fc68 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=40680 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QLMpvgFPw0A6-aGnNbKN7EN-JJEvqzmpIM-Ix_TiihcnHEHPmqr-IIvS6j_hX-Z5tWtaIfrQ-zLX5BkTeAHfi4gCgmlkgnY0gmlwhKwSiNyKbXVsdGlhZGRyc5YACASsEojcBq4dAAoErBKI3AauHt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDyGexRV63pxL3B3Vum1fZONUik05d5KRx6iqgtkXZd_uDdGNwgq4dg3VkcIKuH4V3YWt1MgU --filternode=/ip4/172.18.136.220/tcp/44573/p2p/16Uiu2HAmS9HbYHC9gkUbhf4Q4PVBJyWrWpXgXnfobgwYrHhXh6jc
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.49.198 waku fcdb3c51017efad6fc11868569d849e53b606e34a5630fda22c06cb1600338c9
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID fcdb3c51017e. Setting up logs at ./log/docker/node2_2025-01-15_04-03-29__0af096c2-9b15-4d49-8c32-47ec9ba61961__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 40676
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:40676/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:40676/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.49.198/tcp/40677/p2p/16Uiu2HAmLy9px7rG9wMMjRioBXebmnnWutnqAqSwwrQtRN3NuG6h","/ip4/172.18.49.198/tcp/40678/ws/p2p/16Uiu2HAmLy9px7rG9wMMjRioBXebmnnWutnqAqSwwrQtRN3NuG6h"],"enrUri":"enr:-L24QKUOl63sgB7Lwym9fYEQQCNJHWvu7RRvmV8u2L_nRH_4CSpdKay9eHSXQGjP72cxrXKpZ7yKFPHa-_AB2jEDgkoCgmlkgnY0gmlwhKwSMcaKbXVsdGlhZGRyc5YACASsEjHGBp7lAAoErBIxxgae5t0DgnJzhQADAQAAiXNlY3AyNTZrMaEDe4SqYh5w-75G75fYYsYJ5Txd_gc7nP3SfwiDjG6xsFaDdGNwgp7lg3VkcIKe54V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:40676/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.136.220/tcp/44573/p2p/16Uiu2HAmS9HbYHC9gkUbhf4Q4PVBJyWrWpXgXnfobgwYrHhXh6jc"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:44572/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:40676/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "fa42d41b-aeb2-4f8a-892f-8c04c6bcfa3d", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"fa42d41b-aeb2-4f8a-892f-8c04c6bcfa3d","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:40676/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:40676/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 06efe0e76f32
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id fcdb3c51017e
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 06efe0e76f32. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.