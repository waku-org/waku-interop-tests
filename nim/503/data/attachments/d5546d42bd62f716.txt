[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2024-12-05_08-07-00__9e7be5b1-92e4-4e74-a6ac-ed4a2c8a0c85
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-05_08-07-00__9e7be5b1-92e4-4e74-a6ac-ed4a2c8a0c85__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.190.130
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['43480', '43481', '43482', '43483', '43484']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 43480:43480 -p 43481:43481 -p 43482:43482 -p 43483:43483 -p 43484:43484 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=43482 --rest-port=43480 --tcp-port=43481 --discv5-udp-port=43483 --rest-address=0.0.0.0 --nat=extip:172.18.190.130 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b7a54dc259e749fed62c538adf15863824ee9caf09cd7de93bd4bbba2d6bb6e6 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=43484 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.190.130 waku d972be5ea31ec87e4c637bcb3165b6149625f2b1e39e5eb972cec8242a15e65d
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID d972be5ea31e. Setting up logs at ./log/docker/node1_2024-12-05_08-07-00__9e7be5b1-92e4-4e74-a6ac-ed4a2c8a0c85__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 43480
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container ad920d0e563d. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:43480/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:43480/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.190.130/tcp/43481/p2p/16Uiu2HAm4E1efxiEW47VFzm4oe7tnDurRPtUmNnHdnmCZzopjwGx","/ip4/172.18.190.130/tcp/43482/ws/p2p/16Uiu2HAm4E1efxiEW47VFzm4oe7tnDurRPtUmNnHdnmCZzopjwGx"],"enrUri":"enr:-L24QOPPzZJL7hvKSx-VFrptRypA9WSsfKEMjWy374VdPEKjD0-4XQMwS_BD7zGTJaV4vt3cY3DnIwFwg2T4g1j3jrACgmlkgnY0gmlwhKwSvoKKbXVsdGlhZGRyc5YACASsEr6CBqnZAAoErBK-ggap2t0DgnJzhQADAQAAiXNlY3AyNTZrMaECgrx0NVxJX2RxrvW_qpwWwsqNepU-3L7Mmc52erM-x7WDdGNwgqnZg3VkcIKp24V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-05_08-07-00__9e7be5b1-92e4-4e74-a6ac-ed4a2c8a0c85__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.19.189
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['30108', '30109', '30110', '30111', '30112']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 30108:30108 -p 30109:30109 -p 30110:30110 -p 30111:30111 -p 30112:30112 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=30110 --rest-port=30108 --tcp-port=30109 --discv5-udp-port=30111 --rest-address=0.0.0.0 --nat=extip:172.18.19.189 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=aaf4daff32a97be4b5bf00ba2dfafe022e10d9f71c20bb9b4b49b191c8ce1f73 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=30112 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QOPPzZJL7hvKSx-VFrptRypA9WSsfKEMjWy374VdPEKjD0-4XQMwS_BD7zGTJaV4vt3cY3DnIwFwg2T4g1j3jrACgmlkgnY0gmlwhKwSvoKKbXVsdGlhZGRyc5YACASsEr6CBqnZAAoErBK-ggap2t0DgnJzhQADAQAAiXNlY3AyNTZrMaECgrx0NVxJX2RxrvW_qpwWwsqNepU-3L7Mmc52erM-x7WDdGNwgqnZg3VkcIKp24V3YWt1MgU --filternode=/ip4/172.18.190.130/tcp/43481/p2p/16Uiu2HAm4E1efxiEW47VFzm4oe7tnDurRPtUmNnHdnmCZzopjwGx
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.19.189 waku 42376d242eeafb3e64331ad150b43bdf9e21dd44bf2f5ab350418bae2824c33c
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 42376d242eea. Setting up logs at ./log/docker/node2_2024-12-05_08-07-00__9e7be5b1-92e4-4e74-a6ac-ed4a2c8a0c85__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 30108
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30108/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30108/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.19.189/tcp/30109/p2p/16Uiu2HAmJ39xhrA1Dczcow6npoq6m1kSWe8UfBWPFQHKQob7ytX2","/ip4/172.18.19.189/tcp/30110/ws/p2p/16Uiu2HAmJ39xhrA1Dczcow6npoq6m1kSWe8UfBWPFQHKQob7ytX2"],"enrUri":"enr:-L24QOfcULeAxob-VsMJsbq_z15LcD8xvxPTWI8fBiWs3QAkLJyDY_xMAfRsl2w6ap40EvXvIothtMDMkO4839KagRQCgmlkgnY0gmlwhKwSE72KbXVsdGlhZGRyc5YACASsEhO9BnWdAAoErBITvQZ1nt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDT_gURRpMne6q1KlJarDRWzf9Ws2B49sko8xtoOtEmlmDdGNwgnWdg3VkcIJ1n4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:30108/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.190.130/tcp/43481/p2p/16Uiu2HAm4E1efxiEW47VFzm4oe7tnDurRPtUmNnHdnmCZzopjwGx"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:43480/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:30108/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "54adf1d4-2136-4a05-929f-a4326d482bc2", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"54adf1d4-2136-4a05-929f-a4326d482bc2","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:30108/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:30108/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id d972be5ea31e
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 42376d242eea
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container d972be5ea31e. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.