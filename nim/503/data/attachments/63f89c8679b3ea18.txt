[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_extra_field with id: 2024-12-05_08-06-31__9928c10b-c7b9-420c-921c-49baf8b88883
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-05_08-06-31__9928c10b-c7b9-420c-921c-49baf8b88883__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.226.205
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['63651', '63652', '63653', '63654', '63655']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 63651:63651 -p 63652:63652 -p 63653:63653 -p 63654:63654 -p 63655:63655 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=63653 --rest-port=63651 --tcp-port=63652 --discv5-udp-port=63654 --rest-address=0.0.0.0 --nat=extip:172.18.226.205 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=c6ddd88babd3305e52ead1c4a8c80ee1560cdb3cffbd94a3d031835bdf3e4ac1 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=63655 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.226.205 waku 81d7082cf22757eb8d3f41d6f96178e44fa8699231687a3d8ccae0b74d990abc
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 81d7082cf227. Setting up logs at ./log/docker/node1_2024-12-05_08-06-31__9928c10b-c7b9-420c-921c-49baf8b88883__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 63651
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container fd00d5e209ed. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:63651/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:63651/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.226.205/tcp/63652/p2p/16Uiu2HAm1o3CAEtxk23mbGRp9mvNkZvTTaM9BonNqc1PYaif7Wjc","/ip4/172.18.226.205/tcp/63653/ws/p2p/16Uiu2HAm1o3CAEtxk23mbGRp9mvNkZvTTaM9BonNqc1PYaif7Wjc"],"enrUri":"enr:-L24QD51KgyKU4Bjat2MC8Ta7dE7H0zAxF4IXdtMYnyOYdsSNm9fDZJS_9YPRDZfewRjA2fsTu-y5-u2nBNJuvTJf48CgmlkgnY0gmlwhKwS4s2KbXVsdGlhZGRyc5YACASsEuLNBvikAAoErBLizQb4pd0DgnJzhQADAQAAiXNlY3AyNTZrMaECXp9N7c9cz4iVTIIrV79CfG_wjlNIFh-dBE57pwYm8GuDdGNwgvikg3VkcIL4poV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-05_08-06-31__9928c10b-c7b9-420c-921c-49baf8b88883__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.210.41
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['40196', '40197', '40198', '40199', '40200']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 40196:40196 -p 40197:40197 -p 40198:40198 -p 40199:40199 -p 40200:40200 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=40198 --rest-port=40196 --tcp-port=40197 --discv5-udp-port=40199 --rest-address=0.0.0.0 --nat=extip:172.18.210.41 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=30fccfceb91e39f8cccbbb904e6faa1c84eee5fc8ecaafe3aefae589dc2a30b5 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=40200 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QD51KgyKU4Bjat2MC8Ta7dE7H0zAxF4IXdtMYnyOYdsSNm9fDZJS_9YPRDZfewRjA2fsTu-y5-u2nBNJuvTJf48CgmlkgnY0gmlwhKwS4s2KbXVsdGlhZGRyc5YACASsEuLNBvikAAoErBLizQb4pd0DgnJzhQADAQAAiXNlY3AyNTZrMaECXp9N7c9cz4iVTIIrV79CfG_wjlNIFh-dBE57pwYm8GuDdGNwgvikg3VkcIL4poV3YWt1MgU --filternode=/ip4/172.18.226.205/tcp/63652/p2p/16Uiu2HAm1o3CAEtxk23mbGRp9mvNkZvTTaM9BonNqc1PYaif7Wjc
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.210.41 waku 0522e3cbb16f84476f0716005c16cdb6d9dff55d2873cc2e2f61787aa1b49a02
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 0522e3cbb16f. Setting up logs at ./log/docker/node2_2024-12-05_08-06-31__9928c10b-c7b9-420c-921c-49baf8b88883__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 40196
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:40196/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:40196/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.210.41/tcp/40197/p2p/16Uiu2HAkzXKgUGDQpMLnCuDWzyxvHNoTsusKfxBNnTja7N2c4YwE","/ip4/172.18.210.41/tcp/40198/ws/p2p/16Uiu2HAkzXKgUGDQpMLnCuDWzyxvHNoTsusKfxBNnTja7N2c4YwE"],"enrUri":"enr:-L24QODLmqRisVSxbjWhR8a4jhZ3tnwf8RGwvu0PoKztCiSJMRiskbq6ChRDa4FSnfusEwTsAfxr4BYKfpksq852ZNgCgmlkgnY0gmlwhKwS0imKbXVsdGlhZGRyc5YACASsEtIpBp0FAAoErBLSKQadBt0DgnJzhQADAQAAiXNlY3AyNTZrMaECS7z3u-Rcxjz_6S_Ea-SHhZukfCnTS0ppF__sbWD7WC2DdGNwgp0Fg3VkcIKdB4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:40196/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.226.205/tcp/63652/p2p/16Uiu2HAm1o3CAEtxk23mbGRp9mvNkZvTTaM9BonNqc1PYaif7Wjc"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:63651/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:40196/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "3737b4bd-9e70-4a09-8ee6-816143355c31", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"3737b4bd-9e70-4a09-8ee6-816143355c31","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:40196/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:40196/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 81d7082cf227
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 0522e3cbb16f
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 81d7082cf227. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.