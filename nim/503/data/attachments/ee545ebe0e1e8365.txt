[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_no_request_id with id: 2024-12-05_08-06-55__e71e7860-1735-49eb-a0ed-33d25430d6e1
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-05_08-06-55__e71e7860-1735-49eb-a0ed-33d25430d6e1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.112.208
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['18184', '18185', '18186', '18187', '18188']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 18184:18184 -p 18185:18185 -p 18186:18186 -p 18187:18187 -p 18188:18188 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=18186 --rest-port=18184 --tcp-port=18185 --discv5-udp-port=18187 --rest-address=0.0.0.0 --nat=extip:172.18.112.208 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=228156c8fbcb35cedecf40d35e9dfd2eabe1b827c7e00affd9ee9c96fa4a1c7c --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=18188 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.112.208 waku ddcc866f69269a8ebb1c17cf134f8d9918a5353ce31aeabba3f2291f5b6675eb
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID ddcc866f6926. Setting up logs at ./log/docker/node1_2024-12-05_08-06-55__e71e7860-1735-49eb-a0ed-33d25430d6e1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 18184
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container ac0c43f66092. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:18184/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:18184/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.112.208/tcp/18185/p2p/16Uiu2HAm9NdLxKww5xEiEsXrBjPhujBZnCeL5XQ1jTEWgUvr6uiY","/ip4/172.18.112.208/tcp/18186/ws/p2p/16Uiu2HAm9NdLxKww5xEiEsXrBjPhujBZnCeL5XQ1jTEWgUvr6uiY"],"enrUri":"enr:-L24QPk0VIsNHSZplriDpTVyGA58aa97ZPUTn50lZayW9wd-XKHzizZHI7UicgxlB-QUk_AOCcyyd3KzTcXxcUjcIEUCgmlkgnY0gmlwhKwScNCKbXVsdGlhZGRyc5YACASsEnDQBkcJAAoErBJw0AZHCt0DgnJzhQADAQAAiXNlY3AyNTZrMaECzzvlHIL1Ujk5EmctNI3VPosb5R2nDgi9hYpougrKWvGDdGNwgkcJg3VkcIJHC4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-05_08-06-55__e71e7860-1735-49eb-a0ed-33d25430d6e1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.90.43
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['41882', '41883', '41884', '41885', '41886']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 41882:41882 -p 41883:41883 -p 41884:41884 -p 41885:41885 -p 41886:41886 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=41884 --rest-port=41882 --tcp-port=41883 --discv5-udp-port=41885 --rest-address=0.0.0.0 --nat=extip:172.18.90.43 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b799307cedbbe0ffeb267afdb03395eeefae396323cf6ac7c4d30cdd2adeeaff --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=41886 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QPk0VIsNHSZplriDpTVyGA58aa97ZPUTn50lZayW9wd-XKHzizZHI7UicgxlB-QUk_AOCcyyd3KzTcXxcUjcIEUCgmlkgnY0gmlwhKwScNCKbXVsdGlhZGRyc5YACASsEnDQBkcJAAoErBJw0AZHCt0DgnJzhQADAQAAiXNlY3AyNTZrMaECzzvlHIL1Ujk5EmctNI3VPosb5R2nDgi9hYpougrKWvGDdGNwgkcJg3VkcIJHC4V3YWt1MgU --filternode=/ip4/172.18.112.208/tcp/18185/p2p/16Uiu2HAm9NdLxKww5xEiEsXrBjPhujBZnCeL5XQ1jTEWgUvr6uiY
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.90.43 waku 7fa92062ef8b0ec1b67340c05deb1d5b257053dc08869ff455e0c87aef021142
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 7fa92062ef8b. Setting up logs at ./log/docker/node2_2024-12-05_08-06-55__e71e7860-1735-49eb-a0ed-33d25430d6e1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 41882
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41882/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41882/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.90.43/tcp/41883/p2p/16Uiu2HAkyLRkcoKZRf41BvBdtRgwsg9LDTPNZU4bdu2J8PHCC2yx","/ip4/172.18.90.43/tcp/41884/ws/p2p/16Uiu2HAkyLRkcoKZRf41BvBdtRgwsg9LDTPNZU4bdu2J8PHCC2yx"],"enrUri":"enr:-L24QMxHu0n1UFZKCLSsHqTWBOuroSnnX7eeikVDruik74PuaDykQCienGsTpqQQNl6fFGdch8NmBTFf4a32uEX0oxoCgmlkgnY0gmlwhKwSWiuKbXVsdGlhZGRyc5YACASsElorBqObAAoErBJaKwajnN0DgnJzhQADAQAAiXNlY3AyNTZrMaECOhbBx80vBF1Qu37vZTk1dnzbpvjYOXV0v1hm0K5WcXODdGNwgqObg3VkcIKjnYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:41882/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.112.208/tcp/18185/p2p/16Uiu2HAm9NdLxKww5xEiEsXrBjPhujBZnCeL5XQ1jTEWgUvr6uiY"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:18184/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:41882/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "d2a9aabc-ce38-4598-be28-4de91fb245b9", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"d2a9aabc-ce38-4598-be28-4de91fb245b9","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:41882/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:41882/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id ddcc866f6926
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 7fa92062ef8b
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container ddcc866f6926. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.