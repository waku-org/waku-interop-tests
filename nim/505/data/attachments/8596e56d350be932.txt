[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_invalid_request_id with id: 2024-12-06_06-49-11__bc658f67-6058-468c-ba0c-2b364b71d73f
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-06_06-49-11__bc658f67-6058-468c-ba0c-2b364b71d73f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.160.200
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['36878', '36879', '36880', '36881', '36882']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 36878:36878 -p 36879:36879 -p 36880:36880 -p 36881:36881 -p 36882:36882 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=36880 --rest-port=36878 --tcp-port=36879 --discv5-udp-port=36881 --rest-address=0.0.0.0 --nat=extip:172.18.160.200 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=cb80b6c9bf0fcf0beaa6fd93a5feedd57bcd531a35180adee68e4adc32f0add6 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=36882 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.160.200 waku 24cfe9a06f93ddb67209863782c08762c224f9ef845282af1815c286fbf30e3f
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 24cfe9a06f93. Setting up logs at ./log/docker/node1_2024-12-06_06-49-11__bc658f67-6058-468c-ba0c-2b364b71d73f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 36878
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 14b64bf985b7. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:36878/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:36878/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.160.200/tcp/36879/p2p/16Uiu2HAmHAVdBmAKC5GPWsPFiKNitr2uUMwNp34EJwpE5hR7h2nU","/ip4/172.18.160.200/tcp/36880/ws/p2p/16Uiu2HAmHAVdBmAKC5GPWsPFiKNitr2uUMwNp34EJwpE5hR7h2nU"],"enrUri":"enr:-L24QHWrNLbqqaa_xwlPBUQGWmAXd1RT2heCBGHG65zejGJRSYoUOZaOojHjdoQx12VHJ5w7FBQZN7KhFjV9gV5UzagCgmlkgnY0gmlwhKwSoMiKbXVsdGlhZGRyc5YACASsEqDIBpAPAAoErBKgyAaQEN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDQv2xBGSMXytpiyFs4li5Zh6Q0jQVeeC_aiWwJjujahGDdGNwgpAPg3VkcIKQEYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-06_06-49-11__bc658f67-6058-468c-ba0c-2b364b71d73f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.249.82
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['64368', '64369', '64370', '64371', '64372']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 64368:64368 -p 64369:64369 -p 64370:64370 -p 64371:64371 -p 64372:64372 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=64370 --rest-port=64368 --tcp-port=64369 --discv5-udp-port=64371 --rest-address=0.0.0.0 --nat=extip:172.18.249.82 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=3eaace4c98cd64c1b05900dd1b9eaabe18fb577d1ea9b5a3b4accdcb86a1ebc7 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=64372 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QHWrNLbqqaa_xwlPBUQGWmAXd1RT2heCBGHG65zejGJRSYoUOZaOojHjdoQx12VHJ5w7FBQZN7KhFjV9gV5UzagCgmlkgnY0gmlwhKwSoMiKbXVsdGlhZGRyc5YACASsEqDIBpAPAAoErBKgyAaQEN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDQv2xBGSMXytpiyFs4li5Zh6Q0jQVeeC_aiWwJjujahGDdGNwgpAPg3VkcIKQEYV3YWt1MgU --filternode=/ip4/172.18.160.200/tcp/36879/p2p/16Uiu2HAmHAVdBmAKC5GPWsPFiKNitr2uUMwNp34EJwpE5hR7h2nU
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.249.82 waku 5aefb7d108e2d4819c03f3370e74da1d1bedc5d58145a63f57109dc5bf2eba66
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 5aefb7d108e2. Setting up logs at ./log/docker/node2_2024-12-06_06-49-11__bc658f67-6058-468c-ba0c-2b364b71d73f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 64368
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:64368/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:64368/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.249.82/tcp/64369/p2p/16Uiu2HAmEV2LBdQJPXunJt7Nx9hLLGq7yugAwmVufK1pRgeiEWM9","/ip4/172.18.249.82/tcp/64370/ws/p2p/16Uiu2HAmEV2LBdQJPXunJt7Nx9hLLGq7yugAwmVufK1pRgeiEWM9"],"enrUri":"enr:-L24QEqaAkWEXvTquUJ18YIFwtDWpHMM1n9blshtcYNSw2tLegJZx_9grtahifObnMx6i72JL8Ut4DVXgT5EwDHathoCgmlkgnY0gmlwhKwS-VKKbXVsdGlhZGRyc5YACASsEvlSBvtxAAoErBL5Ugb7ct0DgnJzhQADAQAAiXNlY3AyNTZrMaEDGynOPImch6sYEdx9VfKTif8K0QMHPfrbk4NSknLFRByDdGNwgvtxg3VkcIL7c4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:64368/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.160.200/tcp/36879/p2p/16Uiu2HAmHAVdBmAKC5GPWsPFiKNitr2uUMwNp34EJwpE5hR7h2nU"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:36878/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:64368/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "bc80f215-b41b-4279-8c1e-aef3dedc0aad", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"bc80f215-b41b-4279-8c1e-aef3dedc0aad","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:64368/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:64368/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 24cfe9a06f93
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 5aefb7d108e2
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 24cfe9a06f93. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.