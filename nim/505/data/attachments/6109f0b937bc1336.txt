[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2024-12-06_06-49-11__7ee64b8c-d46f-4603-bb17-0272577e57d5
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-06_06-49-11__7ee64b8c-d46f-4603-bb17-0272577e57d5__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.185.194
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['39093', '39094', '39095', '39096', '39097']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 39093:39093 -p 39094:39094 -p 39095:39095 -p 39096:39096 -p 39097:39097 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=39095 --rest-port=39093 --tcp-port=39094 --discv5-udp-port=39096 --rest-address=0.0.0.0 --nat=extip:172.18.185.194 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=c17f6dfa02e5deae59f33b67caa6b5c8fb19fa9af1c7868b51d4bd80797b7ba7 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=39097 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.185.194 waku 29af9ccda2ea1154949146bd8e1e8909d8de8bbcb4039836e2b273631255631c
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 29af9ccda2ea. Setting up logs at ./log/docker/node1_2024-12-06_06-49-11__7ee64b8c-d46f-4603-bb17-0272577e57d5__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 39093
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 3bc70842be6d. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:39093/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:39093/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.185.194/tcp/39094/p2p/16Uiu2HAmETUk2sgXQYBNQJ8Qkur12GAerh3bwfk3PsibEJrvtT5c","/ip4/172.18.185.194/tcp/39095/ws/p2p/16Uiu2HAmETUk2sgXQYBNQJ8Qkur12GAerh3bwfk3PsibEJrvtT5c"],"enrUri":"enr:-L24QGKYlphy5Z2bBABLUBZ5uDDMV741spWU9EumFUoHAp0MD8TaO45PbftVevUD0TNGU26idnz1hDFm0RzTjscU564CgmlkgnY0gmlwhKwSucKKbXVsdGlhZGRyc5YACASsErnCBpi2AAoErBK5wgaYt90DgnJzhQADAQAAiXNlY3AyNTZrMaEDGsSB2UphWI0jhmDBJwsdseyiFXYSA8XdFgi2eX9aW1uDdGNwgpi2g3VkcIKYuIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-06_06-49-11__7ee64b8c-d46f-4603-bb17-0272577e57d5__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.227.248
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['31876', '31877', '31878', '31879', '31880']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 31876:31876 -p 31877:31877 -p 31878:31878 -p 31879:31879 -p 31880:31880 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=31878 --rest-port=31876 --tcp-port=31877 --discv5-udp-port=31879 --rest-address=0.0.0.0 --nat=extip:172.18.227.248 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=3e7cbe1cddef09cb4cd330913def8b2da7b3ed2e36e282abd5fb3dcec04edd83 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=31880 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QGKYlphy5Z2bBABLUBZ5uDDMV741spWU9EumFUoHAp0MD8TaO45PbftVevUD0TNGU26idnz1hDFm0RzTjscU564CgmlkgnY0gmlwhKwSucKKbXVsdGlhZGRyc5YACASsErnCBpi2AAoErBK5wgaYt90DgnJzhQADAQAAiXNlY3AyNTZrMaEDGsSB2UphWI0jhmDBJwsdseyiFXYSA8XdFgi2eX9aW1uDdGNwgpi2g3VkcIKYuIV3YWt1MgU --filternode=/ip4/172.18.185.194/tcp/39094/p2p/16Uiu2HAmETUk2sgXQYBNQJ8Qkur12GAerh3bwfk3PsibEJrvtT5c
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.227.248 waku 9d4955eb264a2b42fe61f3cf221c9f2521075d2b94d1092a71d70c71b21e3865
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 9d4955eb264a. Setting up logs at ./log/docker/node2_2024-12-06_06-49-11__7ee64b8c-d46f-4603-bb17-0272577e57d5__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 31876
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:31876/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:31876/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.227.248/tcp/31877/p2p/16Uiu2HAm9vKtyhe1kspq5ET3oq7JJdiYanokGwi6XWQbZzt5oyqL","/ip4/172.18.227.248/tcp/31878/ws/p2p/16Uiu2HAm9vKtyhe1kspq5ET3oq7JJdiYanokGwi6XWQbZzt5oyqL"],"enrUri":"enr:-L24QGHxbAPw87lqUIm9vY6ony0yU2MGK_q-TgNerSSzr-sAOtS2I9kW1ug7vCtATii_otqDTsKqXHI1_ATsidgFV74CgmlkgnY0gmlwhKwS4_iKbXVsdGlhZGRyc5YACASsEuP4BnyFAAoErBLj-AZ8ht0DgnJzhQADAQAAiXNlY3AyNTZrMaEC11rAozEhajFrDmzHnhNiN89gWGGV3DDrhnYaJdoCoWODdGNwgnyFg3VkcIJ8h4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:31876/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.185.194/tcp/39094/p2p/16Uiu2HAmETUk2sgXQYBNQJ8Qkur12GAerh3bwfk3PsibEJrvtT5c"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:39093/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:31876/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "ef68bf64-8bee-417e-aa3b-b53655e57f3b", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"ef68bf64-8bee-417e-aa3b-b53655e57f3b","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:31876/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:31876/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 29af9ccda2ea
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 9d4955eb264a
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 29af9ccda2ea. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.