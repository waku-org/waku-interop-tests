[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_extra_field with id: 2024-12-06_06-48-39__f1ebc4de-bb8d-4d90-ab52-348998816d65
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-06_06-48-39__f1ebc4de-bb8d-4d90-ab52-348998816d65__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.107.153
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['11023', '11024', '11025', '11026', '11027']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 11023:11023 -p 11024:11024 -p 11025:11025 -p 11026:11026 -p 11027:11027 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=11025 --rest-port=11023 --tcp-port=11024 --discv5-udp-port=11026 --rest-address=0.0.0.0 --nat=extip:172.18.107.153 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=aba65fb3fbc802c950babeeb79772ce40526a77451d4f08ed54afc5eef7ebb2e --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=11027 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.107.153 waku 8e5aeffff14ac2ff19a3bc57ab693243c53b0b22b8cbd9fb291865cbb16b7aef
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 8e5aeffff14a. Setting up logs at ./log/docker/node1_2024-12-06_06-48-39__f1ebc4de-bb8d-4d90-ab52-348998816d65__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 11023
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 50008064afb3. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:11023/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:11023/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.107.153/tcp/11024/p2p/16Uiu2HAmESVCa2augTcLzz6GfYRUyG9jzVvaqdpGi5QtECRAbSar","/ip4/172.18.107.153/tcp/11025/ws/p2p/16Uiu2HAmESVCa2augTcLzz6GfYRUyG9jzVvaqdpGi5QtECRAbSar"],"enrUri":"enr:-L24QBKEFwhQtl6SC1LTazDMhWQYfXUvgnJii-BvIjJ4o_c4VPUMyhIYmKpDHGaUXkPlUPrvlw0mPAZvPBtLf1naEWECgmlkgnY0gmlwhKwSa5mKbXVsdGlhZGRyc5YACASsEmuZBisQAAoErBJrmQYrEd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDGoNxma1WXKFAzVzOVJSfyRy3VY-6FtNmtcw-ABNJRE-DdGNwgisQg3VkcIIrEoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-06_06-48-39__f1ebc4de-bb8d-4d90-ab52-348998816d65__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.114.234
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['33750', '33751', '33752', '33753', '33754']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 33750:33750 -p 33751:33751 -p 33752:33752 -p 33753:33753 -p 33754:33754 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=33752 --rest-port=33750 --tcp-port=33751 --discv5-udp-port=33753 --rest-address=0.0.0.0 --nat=extip:172.18.114.234 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=4e1c44a5c53ffca7f4d093b5bbc7f3ab72bfc10e6c3cb54246d39bc284e39be0 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=33754 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QBKEFwhQtl6SC1LTazDMhWQYfXUvgnJii-BvIjJ4o_c4VPUMyhIYmKpDHGaUXkPlUPrvlw0mPAZvPBtLf1naEWECgmlkgnY0gmlwhKwSa5mKbXVsdGlhZGRyc5YACASsEmuZBisQAAoErBJrmQYrEd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDGoNxma1WXKFAzVzOVJSfyRy3VY-6FtNmtcw-ABNJRE-DdGNwgisQg3VkcIIrEoV3YWt1MgU --filternode=/ip4/172.18.107.153/tcp/11024/p2p/16Uiu2HAmESVCa2augTcLzz6GfYRUyG9jzVvaqdpGi5QtECRAbSar
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.114.234 waku a7867ca87bb52222d8d5e6b441adcc474499a5cde3bec9dec491a3d7f70b2a5e
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID a7867ca87bb5. Setting up logs at ./log/docker/node2_2024-12-06_06-48-39__f1ebc4de-bb8d-4d90-ab52-348998816d65__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 33750
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33750/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33750/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.114.234/tcp/33751/p2p/16Uiu2HAm84JJJDw9aSLARwWVyn8N5Gqt526VwG787WStEkj8vrEN","/ip4/172.18.114.234/tcp/33752/ws/p2p/16Uiu2HAm84JJJDw9aSLARwWVyn8N5Gqt526VwG787WStEkj8vrEN"],"enrUri":"enr:-L24QIytGz4W3G9DQQCPxL8QJoLECxne5-Hse_zavW2izbaGLpICzO2TeLoi27xyWAQVQc9jHmXHYrccX4J0vGNVSTACgmlkgnY0gmlwhKwScuqKbXVsdGlhZGRyc5YACASsEnLqBoPXAAoErBJy6gaD2N0DgnJzhQADAQAAiXNlY3AyNTZrMaECu6434zo6tgkdSMgKVPB8VCRr8zL6NWsyYko34Av9XyODdGNwgoPXg3VkcIKD2YV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:33750/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.107.153/tcp/11024/p2p/16Uiu2HAmESVCa2augTcLzz6GfYRUyG9jzVvaqdpGi5QtECRAbSar"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:11023/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:33750/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "fb5eabfe-2457-4c61-8e8c-fd7528795725", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"fb5eabfe-2457-4c61-8e8c-fd7528795725","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:33750/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:33750/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 8e5aeffff14a
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id a7867ca87bb5
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 8e5aeffff14a. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.