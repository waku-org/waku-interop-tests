[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_content_topic_string_instead_of_list with id: 2024-12-06_04-13-07__45c7c987-1da7-48ab-87c9-3c077836766d
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-06_04-13-07__45c7c987-1da7-48ab-87c9-3c077836766d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.41.223
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['17911', '17912', '17913', '17914', '17915']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 17911:17911 -p 17912:17912 -p 17913:17913 -p 17914:17914 -p 17915:17915 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=17913 --rest-port=17911 --tcp-port=17912 --discv5-udp-port=17914 --rest-address=0.0.0.0 --nat=extip:172.18.41.223 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=bbc6f64eaf8c33e32e7fbd5c97ad8fd3dbc59f9bffeffcbbb1fcabcddb276f63 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=17915 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.41.223 waku 33fa9ac1875c455be02c9d02514cfcc1cdef7594c684a5a0e847591e783e5907
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 33fa9ac1875c. Setting up logs at ./log/docker/node1_2024-12-06_04-13-07__45c7c987-1da7-48ab-87c9-3c077836766d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 17911
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container e4215a027f57. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17911/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17911/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.41.223/tcp/17912/p2p/16Uiu2HAmJ6a7jHZmaepBDF3QRjbWZwyznvChTW1SDpoBhMDWx2gZ","/ip4/172.18.41.223/tcp/17913/ws/p2p/16Uiu2HAmJ6a7jHZmaepBDF3QRjbWZwyznvChTW1SDpoBhMDWx2gZ"],"enrUri":"enr:-L24QIcBLvDYkNAIxGHE-1Y3b3GfSCJD2eYnJ0pNV0ygTdHtDiCvKnCuN6NWs2nYC3HcW4R8t0KbGta_Z2JEw2HZEogCgmlkgnY0gmlwhKwSKd-KbXVsdGlhZGRyc5YACASsEinfBkX4AAoErBIp3wZF-d0DgnJzhQADAQAAiXNlY3AyNTZrMaEDUNgiagpAQT-arEfZWM8o7FPSFF3MjTH0tRV-POMxlgKDdGNwgkX4g3VkcIJF-oV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-06_04-13-07__45c7c987-1da7-48ab-87c9-3c077836766d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.241.142
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['8520', '8521', '8522', '8523', '8524']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 8520:8520 -p 8521:8521 -p 8522:8522 -p 8523:8523 -p 8524:8524 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=8522 --rest-port=8520 --tcp-port=8521 --discv5-udp-port=8523 --rest-address=0.0.0.0 --nat=extip:172.18.241.142 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e3f71411c0f19bcdafc0e6aa62a5e60f6572631a5805e4c4ceea7cd628e8f850 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=8524 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QIcBLvDYkNAIxGHE-1Y3b3GfSCJD2eYnJ0pNV0ygTdHtDiCvKnCuN6NWs2nYC3HcW4R8t0KbGta_Z2JEw2HZEogCgmlkgnY0gmlwhKwSKd-KbXVsdGlhZGRyc5YACASsEinfBkX4AAoErBIp3wZF-d0DgnJzhQADAQAAiXNlY3AyNTZrMaEDUNgiagpAQT-arEfZWM8o7FPSFF3MjTH0tRV-POMxlgKDdGNwgkX4g3VkcIJF-oV3YWt1MgU --filternode=/ip4/172.18.41.223/tcp/17912/p2p/16Uiu2HAmJ6a7jHZmaepBDF3QRjbWZwyznvChTW1SDpoBhMDWx2gZ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.241.142 waku c0bfefab303f2ec2620588614c71a267ef539a4c1591f020c129783aadc7d590
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID c0bfefab303f. Setting up logs at ./log/docker/node2_2024-12-06_04-13-07__45c7c987-1da7-48ab-87c9-3c077836766d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 8520
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8520/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8520/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.241.142/tcp/8521/p2p/16Uiu2HAmDYr9gTr36jovj9cgQURDdCNKaHPhrUxWfXWMb5yodgJu","/ip4/172.18.241.142/tcp/8522/ws/p2p/16Uiu2HAmDYr9gTr36jovj9cgQURDdCNKaHPhrUxWfXWMb5yodgJu"],"enrUri":"enr:-L24QDDqFRLk4d-hzKr6DT2DOvdYjXq4nhsopIPUdeA29EofIIIhwz49qch-9QnWG2gBokRR-5SrDEzWkf24N2ZWcO0CgmlkgnY0gmlwhKwS8Y6KbXVsdGlhZGRyc5YACASsEvGOBiFJAAoErBLxjgYhSt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDDUjuHTkXGgEJi5JSB_JlpgIT_lOl3DnURNgRh2LUQgqDdGNwgiFJg3VkcIIhS4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8520/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.41.223/tcp/17912/p2p/16Uiu2HAmJ6a7jHZmaepBDF3QRjbWZwyznvChTW1SDpoBhMDWx2gZ"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17911/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8520/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "87f4fa27-0496-41a9-9915-197eec617402", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"87f4fa27-0496-41a9-9915-197eec617402","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:8520/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": "/test/1/waku-filter/proto", "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:8520/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 33fa9ac1875c
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id c0bfefab303f
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 33fa9ac1875c. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.