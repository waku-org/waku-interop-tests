[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_no_request_id with id: 2024-12-06_04-12-09__5e50f9a5-78a5-4997-b237-ebaef0266395
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-06_04-12-09__5e50f9a5-78a5-4997-b237-ebaef0266395__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.185.68
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['40581', '40582', '40583', '40584', '40585']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 40581:40581 -p 40582:40582 -p 40583:40583 -p 40584:40584 -p 40585:40585 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=40583 --rest-port=40581 --tcp-port=40582 --discv5-udp-port=40584 --rest-address=0.0.0.0 --nat=extip:172.18.185.68 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=9ac7eaa8a6ffde8ac1eaeb6d7cebd5bd7fec85b874a5daaf1c44cedfbdadfdd3 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=40585 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.185.68 waku 2f6175c2c1dcd037477ac74f1d6847af1401c225ccd8617ba08ea5f5b1a6689c
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 17963c6f8390. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 2f6175c2c1dc. Setting up logs at ./log/docker/node1_2024-12-06_04-12-09__5e50f9a5-78a5-4997-b237-ebaef0266395__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 40581
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:40581/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:40581/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.185.68/tcp/40582/p2p/16Uiu2HAmTYc4zbpRRBUYgy2k76s5u1wkL1y8bRTKdnW4s9GmYk8h","/ip4/172.18.185.68/tcp/40583/ws/p2p/16Uiu2HAmTYc4zbpRRBUYgy2k76s5u1wkL1y8bRTKdnW4s9GmYk8h"],"enrUri":"enr:-L24QNszyP0k3S4jqVpiNowWz-ZPbiRsyUliT9vUxvI3u4XoPlZ4JZh5bEHku-JP1u5q56LgZ3ctEgEw8R-P0zRD-v8CgmlkgnY0gmlwhKwSuUSKbXVsdGlhZGRyc5YACASsErlEBp6GAAoErBK5RAaeh90DgnJzhQADAQAAiXNlY3AyNTZrMaED3TygOUNTh-KXxgL2UulMc4SyBMhnfU1GD-xWhP5lbMKDdGNwgp6Gg3VkcIKeiIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-06_04-12-09__5e50f9a5-78a5-4997-b237-ebaef0266395__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.167.82
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['53840', '53841', '53842', '53843', '53844']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 53840:53840 -p 53841:53841 -p 53842:53842 -p 53843:53843 -p 53844:53844 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=53842 --rest-port=53840 --tcp-port=53841 --discv5-udp-port=53843 --rest-address=0.0.0.0 --nat=extip:172.18.167.82 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=dae1bde29e087fa6cdad5b6ad3a91ec1a4936ead3e0f6361e1849d396e91acdd --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=53844 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QNszyP0k3S4jqVpiNowWz-ZPbiRsyUliT9vUxvI3u4XoPlZ4JZh5bEHku-JP1u5q56LgZ3ctEgEw8R-P0zRD-v8CgmlkgnY0gmlwhKwSuUSKbXVsdGlhZGRyc5YACASsErlEBp6GAAoErBK5RAaeh90DgnJzhQADAQAAiXNlY3AyNTZrMaED3TygOUNTh-KXxgL2UulMc4SyBMhnfU1GD-xWhP5lbMKDdGNwgp6Gg3VkcIKeiIV3YWt1MgU --filternode=/ip4/172.18.185.68/tcp/40582/p2p/16Uiu2HAmTYc4zbpRRBUYgy2k76s5u1wkL1y8bRTKdnW4s9GmYk8h
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.167.82 waku 9ea137d676ac55ed00a7f183e932191cb6957730f62766cf4b7e7e53c2234711
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 9ea137d676ac. Setting up logs at ./log/docker/node2_2024-12-06_04-12-09__5e50f9a5-78a5-4997-b237-ebaef0266395__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 53840
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:53840/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:53840/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.167.82/tcp/53841/p2p/16Uiu2HAkvePybs9rBP4auksQPAYYSfNCPXFu3tmQhXs2rGHwcZpH","/ip4/172.18.167.82/tcp/53842/ws/p2p/16Uiu2HAkvePybs9rBP4auksQPAYYSfNCPXFu3tmQhXs2rGHwcZpH"],"enrUri":"enr:-L24QGUkeq8gxopXQSbW26adarAJznvRpS7vUbo18f9wdYr_RlMUjLJxYye4KFHeMXyFNZMeldZYliuJ3U-5JxgXxMUCgmlkgnY0gmlwhKwSp1KKbXVsdGlhZGRyc5YACASsEqdSBtJRAAoErBKnUgbSUt0DgnJzhQADAQAAiXNlY3AyNTZrMaECEh4kd7dLkeudMsyemEM1KLygqIID_9QphjWkHhRGO06DdGNwgtJRg3VkcILSU4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:53840/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.185.68/tcp/40582/p2p/16Uiu2HAmTYc4zbpRRBUYgy2k76s5u1wkL1y8bRTKdnW4s9GmYk8h"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:40581/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:53840/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "7da73855-89b3-450c-af0f-03526a25af6d", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"7da73855-89b3-450c-af0f-03526a25af6d","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:53840/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:53840/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 2f6175c2c1dc
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 9ea137d676ac
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 2f6175c2c1dc. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.