[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_no_pubsub_topic with id: 2024-12-06_06-49-42__46cafa54-4f0d-459f-a35c-0d8e8a992726
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-06_06-49-42__46cafa54-4f0d-459f-a35c-0d8e8a992726__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.16.193
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['6424', '6425', '6426', '6427', '6428']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 6424:6424 -p 6425:6425 -p 6426:6426 -p 6427:6427 -p 6428:6428 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=6426 --rest-port=6424 --tcp-port=6425 --discv5-udp-port=6427 --rest-address=0.0.0.0 --nat=extip:172.18.16.193 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e4a2fcb2e3f8adc97abdca81ba7dbeba103aafc3062eecefc7adfeee084cbcfc --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=6428 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.16.193 waku 4be54fb2d73f00fd6165d3ea8cb352fe8a402b654b63a822eee222eb5b21a6c8
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container dd7283314f84. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 4be54fb2d73f. Setting up logs at ./log/docker/node1_2024-12-06_06-49-42__46cafa54-4f0d-459f-a35c-0d8e8a992726__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 6424
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:6424/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:6424/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.16.193/tcp/6425/p2p/16Uiu2HAmTk6gRonGJaJCA3V96SXZy1DCHRGAfNR1Can97AzZ8emk","/ip4/172.18.16.193/tcp/6426/ws/p2p/16Uiu2HAmTk6gRonGJaJCA3V96SXZy1DCHRGAfNR1Can97AzZ8emk"],"enrUri":"enr:-L24QNRRpH3YJReBg3C46h8zrlIjgnBCsoDjqBVoR5mHcKFpKBYakM_y3YzKq7w15K6sqsSNHH9hSZrtGlodBJflne0CgmlkgnY0gmlwhKwSEMGKbXVsdGlhZGRyc5YACASsEhDBBhkZAAoErBIQwQYZGt0DgnJzhQADAQAAiXNlY3AyNTZrMaED4C5dgjNx_2Rudi8WbqUfp3Aj1xBvFXC1lWOdsOF8R0-DdGNwghkZg3VkcIIZG4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-06_06-49-42__46cafa54-4f0d-459f-a35c-0d8e8a992726__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.3.33
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['38779', '38780', '38781', '38782', '38783']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 38779:38779 -p 38780:38780 -p 38781:38781 -p 38782:38782 -p 38783:38783 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=38781 --rest-port=38779 --tcp-port=38780 --discv5-udp-port=38782 --rest-address=0.0.0.0 --nat=extip:172.18.3.33 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=5afc9e3be60d50f9de5f67bdc75d1a9870c27faf58ac4e984242fd27a7dccc14 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=38783 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QNRRpH3YJReBg3C46h8zrlIjgnBCsoDjqBVoR5mHcKFpKBYakM_y3YzKq7w15K6sqsSNHH9hSZrtGlodBJflne0CgmlkgnY0gmlwhKwSEMGKbXVsdGlhZGRyc5YACASsEhDBBhkZAAoErBIQwQYZGt0DgnJzhQADAQAAiXNlY3AyNTZrMaED4C5dgjNx_2Rudi8WbqUfp3Aj1xBvFXC1lWOdsOF8R0-DdGNwghkZg3VkcIIZG4V3YWt1MgU --filternode=/ip4/172.18.16.193/tcp/6425/p2p/16Uiu2HAmTk6gRonGJaJCA3V96SXZy1DCHRGAfNR1Can97AzZ8emk
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.3.33 waku b1828d6a07633cb144550009b2ced2a2525905df979f7a5de1d76a3222b5df4e
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID b1828d6a0763. Setting up logs at ./log/docker/node2_2024-12-06_06-49-42__46cafa54-4f0d-459f-a35c-0d8e8a992726__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 38779
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38779/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38779/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.3.33/tcp/38780/p2p/16Uiu2HAm8X6L85oSHRHprYoniMKzu7Y32ndDzqCgW2GtvD7hp97u","/ip4/172.18.3.33/tcp/38781/ws/p2p/16Uiu2HAm8X6L85oSHRHprYoniMKzu7Y32ndDzqCgW2GtvD7hp97u"],"enrUri":"enr:-L24QO6eSVqEspLa_Al7AS0FXTONS51u6MZU4FVAYk6ABeldUsx4jY9TXByVt7rq6lXLllw-pcDe_qUZHr-4WpbabGICgmlkgnY0gmlwhKwSAyGKbXVsdGlhZGRyc5YACASsEgMhBpd8AAoErBIDIQaXfd0DgnJzhQADAQAAiXNlY3AyNTZrMaECwoteBv4LB96EThhEs5c6VDDNyFTXACjXWZwbbcpz8MiDdGNwgpd8g3VkcIKXfoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38779/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.16.193/tcp/6425/p2p/16Uiu2HAmTk6gRonGJaJCA3V96SXZy1DCHRGAfNR1Can97AzZ8emk"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:6424/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38779/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "ca7b6333-f78b-4c5e-9ea9-7d2cc29bc17f", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"ca7b6333-f78b-4c5e-9ea9-7d2cc29bc17f","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:38779/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": "/test/1/waku-filter/proto"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:38779/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 4be54fb2d73f
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id b1828d6a0763
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 4be54fb2d73f. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.