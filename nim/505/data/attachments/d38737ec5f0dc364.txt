[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_invalid_pubsub_topic_format with id: 2024-12-06_06-48-29__49fc1e7f-68b4-40e4-b48a-3c9f8e66add8
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-06_06-48-29__49fc1e7f-68b4-40e4-b48a-3c9f8e66add8__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.160.219
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['46806', '46807', '46808', '46809', '46810']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 46806:46806 -p 46807:46807 -p 46808:46808 -p 46809:46809 -p 46810:46810 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=46808 --rest-port=46806 --tcp-port=46807 --discv5-udp-port=46809 --rest-address=0.0.0.0 --nat=extip:172.18.160.219 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=d2bdc2177eae76e13acfa7af033d8df609aa19ddb5db46db72cddcce0845ca1d --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=46810 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.160.219 waku fa9dc5ac5a52498022de8ee54e4e3dd09a3446872e8f9fffb757cb3fda04f1fe
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 50d7f413f52e. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID fa9dc5ac5a52. Setting up logs at ./log/docker/node1_2024-12-06_06-48-29__49fc1e7f-68b4-40e4-b48a-3c9f8e66add8__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 46806
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:46806/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:46806/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.160.219/tcp/46807/p2p/16Uiu2HAmF6cvtqMMYChLo2EBLisewZDqTvu97yU9GW8wzrYHvj7u","/ip4/172.18.160.219/tcp/46808/ws/p2p/16Uiu2HAmF6cvtqMMYChLo2EBLisewZDqTvu97yU9GW8wzrYHvj7u"],"enrUri":"enr:-L24QGDTjXtxKq-lC5KCOd0JHiWKF_ADSC6gI9rng1_OwEJHIv1djjfS5snRBy2JaQjWUFJvFl9SoYdA-fDi5Ry778ACgmlkgnY0gmlwhKwSoNuKbXVsdGlhZGRyc5YACASsEqDbBrbXAAoErBKg2wa22N0DgnJzhQADAQAAiXNlY3AyNTZrMaEDJEhBKLulh4Mv3rREd4QlXFF0OK72R71Bs8XudLclI-CDdGNwgrbXg3VkcIK22YV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-06_06-48-29__49fc1e7f-68b4-40e4-b48a-3c9f8e66add8__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.92.139
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['48486', '48487', '48488', '48489', '48490']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 48486:48486 -p 48487:48487 -p 48488:48488 -p 48489:48489 -p 48490:48490 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=48488 --rest-port=48486 --tcp-port=48487 --discv5-udp-port=48489 --rest-address=0.0.0.0 --nat=extip:172.18.92.139 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=5fecfbac474d32f27e4a8ae5ca8dfacfbb5cb16814a7bfaedacc46a8bc36b7ae --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=48490 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QGDTjXtxKq-lC5KCOd0JHiWKF_ADSC6gI9rng1_OwEJHIv1djjfS5snRBy2JaQjWUFJvFl9SoYdA-fDi5Ry778ACgmlkgnY0gmlwhKwSoNuKbXVsdGlhZGRyc5YACASsEqDbBrbXAAoErBKg2wa22N0DgnJzhQADAQAAiXNlY3AyNTZrMaEDJEhBKLulh4Mv3rREd4QlXFF0OK72R71Bs8XudLclI-CDdGNwgrbXg3VkcIK22YV3YWt1MgU --filternode=/ip4/172.18.160.219/tcp/46807/p2p/16Uiu2HAmF6cvtqMMYChLo2EBLisewZDqTvu97yU9GW8wzrYHvj7u
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.92.139 waku d31e0acd76fe7795556237809547be924d07f98754ecfb235d916681dbbac59b
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID d31e0acd76fe. Setting up logs at ./log/docker/node2_2024-12-06_06-48-29__49fc1e7f-68b4-40e4-b48a-3c9f8e66add8__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 48486
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:48486/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:48486/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.92.139/tcp/48487/p2p/16Uiu2HAmCgFE5qegR6D4ZWfVio66aS3m9KUDoJE1E6YjUsfHKj8M","/ip4/172.18.92.139/tcp/48488/ws/p2p/16Uiu2HAmCgFE5qegR6D4ZWfVio66aS3m9KUDoJE1E6YjUsfHKj8M"],"enrUri":"enr:-L24QE4cScrO338jB-2-uqzFDbcZk93WGLnL7duSAgjs5xAFQMIv4tQkw6MhIfMUauXi7ecYK7xcTVTsoRaRHl6WxSoCgmlkgnY0gmlwhKwSXIuKbXVsdGlhZGRyc5YACASsElyLBr1nAAoErBJciwa9aN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDAFJmoLx2D6e7gIut1dnHec76RpOj4Nnv7LxuaAPCxyKDdGNwgr1ng3VkcIK9aYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:48486/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.160.219/tcp/46807/p2p/16Uiu2HAmF6cvtqMMYChLo2EBLisewZDqTvu97yU9GW8wzrYHvj7u"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:46806/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:48486/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "a29f77b9-5a10-400b-857f-0c908133dd8b", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"a29f77b9-5a10-400b-857f-0c908133dd8b","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:48486/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": ["/waku/2/rs/3/1"]}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:48486/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id fa9dc5ac5a52
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id d31e0acd76fe
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container fa9dc5ac5a52. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.