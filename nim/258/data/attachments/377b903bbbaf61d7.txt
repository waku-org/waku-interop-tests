[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_and_retrieve_duplicate_message with id: 2024-07-01_15-13-14__d1890493-00b0-40a3-8ef2-ba7a892a1264
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:29 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:35 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:17 Docker client initialized with image harbor.status.im/wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:80 WakuNode instance initialized with log path ./log/docker/node1_2024-07-01_15-13-14__d1890493-00b0-40a3-8ef2-ba7a892a1264__harbor.status.im_wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:84 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:20 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:23 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:80 Generated random external IP 172.18.250.154
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:73 Generated ports ['62648', '62649', '62650', '62651', '62652']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:426 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:155 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:157 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:47 docker run -i -t -p 62648:62648 -p 62649:62649 -p 62650:62650 -p 62651:62651 -p 62652:62652 harbor.status.im/wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=62650 --rest-port=62648 --tcp-port=62649 --discv5-udp-port=62651 --rest-address=0.0.0.0 --nat=extip:172.18.250.154 --peer-exchange=true --discv5-discovery=true --cluster-id=0 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=62652 --metrics-logging=true --relay=true --nodekey=30348dd51465150e04a5d9d932c72864c8967f806cce60b5d26afeca1e77eb68
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:53 docker network connect --ip 172.18.250.154 waku 3468c7f4e2618d61262c0f71729ff89f5a133a333d494dc43417bb108ea0744a
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:56 Container started with ID 3468c7f4e261. Setting up logs at ./log/docker/node1_2024-07-01_15-13-14__d1890493-00b0-40a3-8ef2-ba7a892a1264__harbor.status.im_wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:169 Started container from image harbor.status.im/wakuorg/nwaku:latest. REST: 62648
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:62648/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:272 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:62648/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.250.154/tcp/62649/p2p/16Uiu2HAmGNtM2rQ8abySFNhqPDFY4cmfAEpfo9Z9fD3NekoFR2ip","/ip4/172.18.250.154/tcp/62650/ws/p2p/16Uiu2HAmGNtM2rQ8abySFNhqPDFY4cmfAEpfo9Z9fD3NekoFR2ip"],"enrUri":"enr:-LO4QK_TXaqzQkphehNqVE2Tu-t1nCp3jX3QiDEbbcfZqHuWSWlfy2jahDGivekbNWaXIjxpJs_ZZIXDUFNCjxMKDrgBgmlkgnY0gmlwhKwS-pqKbXVsdGlhZGRyc4wACgSsEvqaBvS63QOCcnOFAAABAACJc2VjcDI1NmsxoQM3Tqpf5eFn4Jztm4gB0Y0JVSJyxyZsW8QR-QU5DZb-PYN0Y3CC9LmDdWRwgvS7hXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:17 Docker client initialized with image harbor.status.im/wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:80 WakuNode instance initialized with log path ./log/docker/node2_2024-07-01_15-13-14__d1890493-00b0-40a3-8ef2-ba7a892a1264__harbor.status.im_wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:84 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:20 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:23 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:80 Generated random external IP 172.18.135.57
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:73 Generated ports ['35652', '35653', '35654', '35655', '35656']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:426 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:155 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:157 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:47 docker run -i -t -p 35652:35652 -p 35653:35653 -p 35654:35654 -p 35655:35655 -p 35656:35656 harbor.status.im/wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=35654 --rest-port=35652 --tcp-port=35653 --discv5-udp-port=35655 --rest-address=0.0.0.0 --nat=extip:172.18.135.57 --peer-exchange=true --discv5-discovery=true --cluster-id=0 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=35656 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QK_TXaqzQkphehNqVE2Tu-t1nCp3jX3QiDEbbcfZqHuWSWlfy2jahDGivekbNWaXIjxpJs_ZZIXDUFNCjxMKDrgBgmlkgnY0gmlwhKwS-pqKbXVsdGlhZGRyc4wACgSsEvqaBvS63QOCcnOFAAABAACJc2VjcDI1NmsxoQM3Tqpf5eFn4Jztm4gB0Y0JVSJyxyZsW8QR-QU5DZb-PYN0Y3CC9LmDdWRwgvS7hXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:53 docker network connect --ip 172.18.135.57 waku eaa0d2483582a700ed812caa13b70e50cf33af41ec5c3b66a37015a7f070f4cc
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:56 Container started with ID eaa0d2483582. Setting up logs at ./log/docker/node2_2024-07-01_15-13-14__d1890493-00b0-40a3-8ef2-ba7a892a1264__harbor.status.im_wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:169 Started container from image harbor.status.im/wakuorg/nwaku:latest. REST: 35652
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:35652/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:272 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:35652/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.135.57/tcp/35653/p2p/16Uiu2HAmApRCQbb1aFJLB1QJpdbRfE7oxGRRJ18q8u7skfSNQ5et","/ip4/172.18.135.57/tcp/35654/ws/p2p/16Uiu2HAmApRCQbb1aFJLB1QJpdbRfE7oxGRRJ18q8u7skfSNQ5et"],"enrUri":"enr:-LO4QJ3N0pqTeUAQo4iiBRFgKZ96U3pnAx0OqWLY7fPxkImTCoOlf-XLwNfaQK7dThdbjcWdxCBXNpIr2WsiR5bHEh0BgmlkgnY0gmlwhKwShzmKbXVsdGlhZGRyc4wACgSsEoc5BotG3QOCcnOFAAABAACJc2VjcDI1NmsxoQLksvKnBcK4KTUKXLTfq0Gjdqg5GlcCCFN0NoWyOrQMrYN0Y3CCi0WDdWRwgotHhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:35652/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.250.154/tcp/62649/p2p/16Uiu2HAmGNtM2rQ8abySFNhqPDFY4cmfAEpfo9Z9fD3NekoFR2ip"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:60 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:62648/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/0/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:35652/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/0/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:62648/relay/v1/messages/%2Fwaku%2F2%2Frs%2F0%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:124 Checking that peer NODE_1:harbor.status.im/wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:62648/relay/v1/messages/%2Fwaku%2F2%2Frs%2F0%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1719846798180525312,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:124 Checking that peer NODE_2:harbor.status.im/wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:35652/relay/v1/messages/%2Fwaku%2F2%2Frs%2F0%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1719846798180525312,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:72 WARM UP successful!!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:62648/relay/v1/messages/%2Fwaku%2F2%2Frs%2F0%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:124 Checking that peer NODE_1:harbor.status.im/wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:62648/relay/v1/messages/%2Fwaku%2F2%2Frs%2F0%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1719846798293160448,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:124 Checking that peer NODE_2:harbor.status.im/wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:35652/relay/v1/messages/%2Fwaku%2F2%2Frs%2F0%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1719846798293160448,"ephemeral":false}]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:62648/relay/v1/messages/%2Fwaku%2F2%2Frs%2F0%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:124 Checking that peer NODE_1:harbor.status.im/wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:62648/relay/v1/messages/%2Fwaku%2F2%2Frs%2F0%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1719846798293160448,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:124 Checking that peer NODE_2:harbor.status.im/wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:35652/relay/v1/messages/%2Fwaku%2F2%2Frs%2F0%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[]'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:216 Stopping container with id 3468c7f4e261
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:216 Stopping container with id eaa0d2483582
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Container stopped.