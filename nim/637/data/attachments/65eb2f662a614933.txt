[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_content_topic_string_instead_of_list with id: 2025-02-02_04-03-57__22565518-7d6d-4a39-a4a2-3046d88d260b
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-02-02_04-03-57__22565518-7d6d-4a39-a4a2-3046d88d260b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.60.112
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['34107', '34108', '34109', '34110', '34111']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 34107:34107 -p 34108:34108 -p 34109:34109 -p 34110:34110 -p 34111:34111 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=34109 --rest-port=34107 --tcp-port=34108 --discv5-udp-port=34110 --rest-address=0.0.0.0 --nat=extip:172.18.60.112 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=cee85bdef1c9d65690cdc269349dc3cefcd52b884967cefc87e8d6ced23bca26 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=34111 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.60.112 waku 628ef8b4f5dfe1eb55b9af018195b4b56df6313528f8c1f52339b4ae8b1d9d10
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 628ef8b4f5df. Setting up logs at ./log/docker/node1_2025-02-02_04-03-57__22565518-7d6d-4a39-a4a2-3046d88d260b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 34107
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container d7dd4deae51e. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:34107/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:34107/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.60.112/tcp/34108/p2p/16Uiu2HAmUtoTRRyzkhkFDv92Nspxx2SrYHpVTEioghXPSQPMimM5","/ip4/172.18.60.112/tcp/34109/ws/p2p/16Uiu2HAmUtoTRRyzkhkFDv92Nspxx2SrYHpVTEioghXPSQPMimM5"],"enrUri":"enr:-L24QERub7IIOjYTjAiJ94KYXzdr2DdVIMmuz7qcc9KjF1XWCXQVa4cvRAyLN8l1GavdWhfyKwPx75Bvcfy-rUflrroCgmlkgnY0gmlwhKwSPHCKbXVsdGlhZGRyc5YACASsEjxwBoU8AAoErBI8cAaFPd0DgnJzhQADAQAAiXNlY3AyNTZrMaED8UTNz_ukafXlpEMjd603Gcm6Kl2Sn7P7M7MDbPnHKGSDdGNwgoU8g3VkcIKFPoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-02-02_04-03-57__22565518-7d6d-4a39-a4a2-3046d88d260b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.168.243
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['34450', '34451', '34452', '34453', '34454']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 34450:34450 -p 34451:34451 -p 34452:34452 -p 34453:34453 -p 34454:34454 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=34452 --rest-port=34450 --tcp-port=34451 --discv5-udp-port=34453 --rest-address=0.0.0.0 --nat=extip:172.18.168.243 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=da6aebed089fff829ddc900ab64667a5b6df8f04dbd84d4c15d2b49addf6e176 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=34454 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QERub7IIOjYTjAiJ94KYXzdr2DdVIMmuz7qcc9KjF1XWCXQVa4cvRAyLN8l1GavdWhfyKwPx75Bvcfy-rUflrroCgmlkgnY0gmlwhKwSPHCKbXVsdGlhZGRyc5YACASsEjxwBoU8AAoErBI8cAaFPd0DgnJzhQADAQAAiXNlY3AyNTZrMaED8UTNz_ukafXlpEMjd603Gcm6Kl2Sn7P7M7MDbPnHKGSDdGNwgoU8g3VkcIKFPoV3YWt1MgU --filternode=/ip4/172.18.60.112/tcp/34108/p2p/16Uiu2HAmUtoTRRyzkhkFDv92Nspxx2SrYHpVTEioghXPSQPMimM5
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.168.243 waku 1f65ca36b08eb0855f795a10864104c42bdd5a94b7529d7aab3105954e82e063
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 1f65ca36b08e. Setting up logs at ./log/docker/node2_2025-02-02_04-03-57__22565518-7d6d-4a39-a4a2-3046d88d260b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 34450
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:34450/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:34450/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.168.243/tcp/34451/p2p/16Uiu2HAmJsxcNrJokYN5Feke2YU69DaUEnnhEj5Lou3VrZguZsAY","/ip4/172.18.168.243/tcp/34452/ws/p2p/16Uiu2HAmJsxcNrJokYN5Feke2YU69DaUEnnhEj5Lou3VrZguZsAY"],"enrUri":"enr:-L24QE5_pqjPy3EPokQ9sS7w-3zhNmlGMuxe2HpyujFG78--D8EvdPRtitJax5MjQJoiyYkgnP35oCgCNnnBqFoo6xYCgmlkgnY0gmlwhKwSqPOKbXVsdGlhZGRyc5YACASsEqjzBoaTAAoErBKo8waGlN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDXHi0bdtBRJcD8VnuWJ2b7CEW6aEjfO0Fu8NUq2EyVVGDdGNwgoaTg3VkcIKGlYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:34450/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.60.112/tcp/34108/p2p/16Uiu2HAmUtoTRRyzkhkFDv92Nspxx2SrYHpVTEioghXPSQPMimM5"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:34107/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:34450/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "00d21d42-40ed-4a2f-8d3f-295659908882", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"00d21d42-40ed-4a2f-8d3f-295659908882","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:34450/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": "/test/1/waku-filter/proto", "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:34450/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 628ef8b4f5df
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 1f65ca36b08e
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 628ef8b4f5df. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.