[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_invalid_request_id with id: 2025-02-02_04-05-47__5853bd9b-87f2-48c4-824b-13a858cdd7aa
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-02-02_04-05-47__5853bd9b-87f2-48c4-824b-13a858cdd7aa__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.204.36
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['32828', '32829', '32830', '32831', '32832']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 32828:32828 -p 32829:32829 -p 32830:32830 -p 32831:32831 -p 32832:32832 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=32830 --rest-port=32828 --tcp-port=32829 --discv5-udp-port=32831 --rest-address=0.0.0.0 --nat=extip:172.18.204.36 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e3aac1cefc96e3e415393f1bfba0bd3f8ff27d6c0e2a713c17abf6ef0625c6fd --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=32832 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.204.36 waku 11872507ea6db4deace0eef510f5fb57852d9a15d27b7e00fb95fa8162bc6be7
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 11872507ea6d. Setting up logs at ./log/docker/node1_2025-02-02_04-05-47__5853bd9b-87f2-48c4-824b-13a858cdd7aa__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 32828
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 3565acc03c32. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:32828/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:32828/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.204.36/tcp/32829/p2p/16Uiu2HAm78xrRPQn4QrLfJZ8vkyeFTaSsQqucyM59vWNMCeLhMiN","/ip4/172.18.204.36/tcp/32830/ws/p2p/16Uiu2HAm78xrRPQn4QrLfJZ8vkyeFTaSsQqucyM59vWNMCeLhMiN"],"enrUri":"enr:-L24QPi5wvls9skICThUWIkYQdrY9LE8qDhq_UvtWvTKSZaZOVxBImS_KkaCYKDrEI8nCOBXhtkfOXdeBLQYb49D7PMCgmlkgnY0gmlwhKwSzCSKbXVsdGlhZGRyc5YACASsEswkBoA9AAoErBLMJAaAPt0DgnJzhQADAQAAiXNlY3AyNTZrMaECrgRylg1Y0iPQ_JRpK9RP7oeB770JpyAPvElf3FuuMH-DdGNwgoA9g3VkcIKAP4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-02-02_04-05-47__5853bd9b-87f2-48c4-824b-13a858cdd7aa__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.17.51
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['51738', '51739', '51740', '51741', '51742']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 51738:51738 -p 51739:51739 -p 51740:51740 -p 51741:51741 -p 51742:51742 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=51740 --rest-port=51738 --tcp-port=51739 --discv5-udp-port=51741 --rest-address=0.0.0.0 --nat=extip:172.18.17.51 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e37db7e6e0dbe1d75b0deeccf49caa636daafbdc9d4842cced0ad2bcb95e20ab --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=51742 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QPi5wvls9skICThUWIkYQdrY9LE8qDhq_UvtWvTKSZaZOVxBImS_KkaCYKDrEI8nCOBXhtkfOXdeBLQYb49D7PMCgmlkgnY0gmlwhKwSzCSKbXVsdGlhZGRyc5YACASsEswkBoA9AAoErBLMJAaAPt0DgnJzhQADAQAAiXNlY3AyNTZrMaECrgRylg1Y0iPQ_JRpK9RP7oeB770JpyAPvElf3FuuMH-DdGNwgoA9g3VkcIKAP4V3YWt1MgU --filternode=/ip4/172.18.204.36/tcp/32829/p2p/16Uiu2HAm78xrRPQn4QrLfJZ8vkyeFTaSsQqucyM59vWNMCeLhMiN
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.17.51 waku a31d71642de293d136548b6211a14688700f2644a842a3eb2dfe0797a6040eae
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID a31d71642de2. Setting up logs at ./log/docker/node2_2025-02-02_04-05-47__5853bd9b-87f2-48c4-824b-13a858cdd7aa__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 51738
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:51738/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:51738/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.17.51/tcp/51739/p2p/16Uiu2HAmKLFtCfu68KAnvQZAbeH47vH2E9EixeU18FXATaRbajc9","/ip4/172.18.17.51/tcp/51740/ws/p2p/16Uiu2HAmKLFtCfu68KAnvQZAbeH47vH2E9EixeU18FXATaRbajc9"],"enrUri":"enr:-L24QA5jebqE65Unc2undWogDEsCbc74lZG8jp8avYEYYzqAVdDXVxiFl9o9Udeok-AeF3qjBCgxMw9nMuqwFP0B34sCgmlkgnY0gmlwhKwSETOKbXVsdGlhZGRyc5YACASsEhEzBsobAAoErBIRMwbKHN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDYzVWF3HLuv2oIJlkriLPwSqjO8wYLWyfKZp03yjDVmaDdGNwgsobg3VkcILKHYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:51738/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.204.36/tcp/32829/p2p/16Uiu2HAm78xrRPQn4QrLfJZ8vkyeFTaSsQqucyM59vWNMCeLhMiN"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:32828/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:51738/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "0baf4e59-4530-431f-b96c-62b9bdf0e627", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"0baf4e59-4530-431f-b96c-62b9bdf0e627","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:51738/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:51738/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 11872507ea6d
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id a31d71642de2
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 11872507ea6d. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.