[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_invalid_request_id with id: 2025-02-02_04-07-12__35b2c36c-4e17-45ab-ae70-7a7fe99a0bca
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-02-02_04-07-12__35b2c36c-4e17-45ab-ae70-7a7fe99a0bca__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.38.249
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['14003', '14004', '14005', '14006', '14007']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 14003:14003 -p 14004:14004 -p 14005:14005 -p 14006:14006 -p 14007:14007 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=14005 --rest-port=14003 --tcp-port=14004 --discv5-udp-port=14006 --rest-address=0.0.0.0 --nat=extip:172.18.38.249 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=db4d4d6ecb61aaebec5fecaf8436d5da50fe7d1a7fbf86ae85b2ddd3e05cbe7f --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=14007 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.38.249 waku 3e987723b7cdf3cb4c0d0c7f7691dd3b71e13adcf827500c239f1cbce2a13cbb
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 3e987723b7cd. Setting up logs at ./log/docker/node1_2025-02-02_04-07-12__35b2c36c-4e17-45ab-ae70-7a7fe99a0bca__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 14003
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 75ef4cd75da3. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:14003/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:14003/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.38.249/tcp/14004/p2p/16Uiu2HAmAspNEeDsJ1v1RzbD3w79Km3xEk8StjZJkKJUvSbMLwux","/ip4/172.18.38.249/tcp/14005/ws/p2p/16Uiu2HAmAspNEeDsJ1v1RzbD3w79Km3xEk8StjZJkKJUvSbMLwux"],"enrUri":"enr:-L24QDNxI41zQ5R_bV6ebtiaOgt05EnHpbcd3lXoY32ahUirdppY5e6k3twNfpGw1jT0ZEFnG0qVHgl-czb9YgMRpdQCgmlkgnY0gmlwhKwSJvmKbXVsdGlhZGRyc5YACASsEib5Bja0AAoErBIm-QY2td0DgnJzhQADAQAAiXNlY3AyNTZrMaEC5ZHjWNRN4F891PYerkpOD-3-DLTQkuS2NAiOpktsdM-DdGNwgja0g3VkcII2toV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-02-02_04-07-12__35b2c36c-4e17-45ab-ae70-7a7fe99a0bca__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.176.129
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['53806', '53807', '53808', '53809', '53810']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 53806:53806 -p 53807:53807 -p 53808:53808 -p 53809:53809 -p 53810:53810 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=53808 --rest-port=53806 --tcp-port=53807 --discv5-udp-port=53809 --rest-address=0.0.0.0 --nat=extip:172.18.176.129 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=d9acb5b6999dd3af6af69bbbe7fe406bdac6fb460b2fdcffbc00a5f75343fea2 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=53810 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QDNxI41zQ5R_bV6ebtiaOgt05EnHpbcd3lXoY32ahUirdppY5e6k3twNfpGw1jT0ZEFnG0qVHgl-czb9YgMRpdQCgmlkgnY0gmlwhKwSJvmKbXVsdGlhZGRyc5YACASsEib5Bja0AAoErBIm-QY2td0DgnJzhQADAQAAiXNlY3AyNTZrMaEC5ZHjWNRN4F891PYerkpOD-3-DLTQkuS2NAiOpktsdM-DdGNwgja0g3VkcII2toV3YWt1MgU --filternode=/ip4/172.18.38.249/tcp/14004/p2p/16Uiu2HAmAspNEeDsJ1v1RzbD3w79Km3xEk8StjZJkKJUvSbMLwux
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.176.129 waku 71223927ac86c60a47f20daf9d14f29845da0b4e56e6aad8f260328a901e749b
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 71223927ac86. Setting up logs at ./log/docker/node2_2025-02-02_04-07-12__35b2c36c-4e17-45ab-ae70-7a7fe99a0bca__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 53806
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:53806/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:53806/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.176.129/tcp/53807/p2p/16Uiu2HAkzVnBzJMG2aPR162VU76DRugsaqTfrNWKVHf6AcXtSLQc","/ip4/172.18.176.129/tcp/53808/ws/p2p/16Uiu2HAkzVnBzJMG2aPR162VU76DRugsaqTfrNWKVHf6AcXtSLQc"],"enrUri":"enr:-L24QM-IHXbAJCV7wiU4UWZvboCovc7RCqM6nlEdo2_ma7aeMVRQGB-gCu7oGWqlc97ttOPXxOnNmk3YachrSknsRe0CgmlkgnY0gmlwhKwSsIGKbXVsdGlhZGRyc5YACASsErCBBtIvAAoErBKwgQbSMN0DgnJzhQADAQAAiXNlY3AyNTZrMaECS1fHozSdlDOd_755hjinzECxTVYm4PEkNkGtlYcLSh2DdGNwgtIvg3VkcILSMYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:53806/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.38.249/tcp/14004/p2p/16Uiu2HAmAspNEeDsJ1v1RzbD3w79Km3xEk8StjZJkKJUvSbMLwux"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:14003/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:53806/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "0a2b3543-aa51-49eb-adeb-9728baae2309", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"0a2b3543-aa51-49eb-adeb-9728baae2309","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:53806/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:53806/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 3e987723b7cd
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 71223927ac86
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 3e987723b7cd. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.