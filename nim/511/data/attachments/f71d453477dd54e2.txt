[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_invalid_request_id with id: 2024-12-11_04-10-55__392421ac-25db-4557-b4ce-48973213cc80
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-11_04-10-55__392421ac-25db-4557-b4ce-48973213cc80__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.151.22
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['31971', '31972', '31973', '31974', '31975']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 31971:31971 -p 31972:31972 -p 31973:31973 -p 31974:31974 -p 31975:31975 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=31973 --rest-port=31971 --tcp-port=31972 --discv5-udp-port=31974 --rest-address=0.0.0.0 --nat=extip:172.18.151.22 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=09c9eccc1c7382f24d7127cf0bec24de3decd3a66bbb69b0a43c8a3cbf8daeb1 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=31975 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.151.22 waku ba06ad877ebed6328e88d72f5eeda3b58733439a5b8d58e24143c0fd6a14bffc
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID ba06ad877ebe. Setting up logs at ./log/docker/node1_2024-12-11_04-10-55__392421ac-25db-4557-b4ce-48973213cc80__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 31971
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container dc2d09fdbd4e. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:31971/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:31971/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.151.22/tcp/31972/p2p/16Uiu2HAmRx6zGzcAjvb4Y7cGnzxmwR5N2YzxTJwdHiMCh5N3rBUP","/ip4/172.18.151.22/tcp/31973/ws/p2p/16Uiu2HAmRx6zGzcAjvb4Y7cGnzxmwR5N2YzxTJwdHiMCh5N3rBUP"],"enrUri":"enr:-L24QCPXc32cy7thLtXBgBVX7M74GZ2UujlCYgFyyRVCu4ApDjy5m1G2xO6RITXjt6HGZsbQR1u4HesEzv8dWzrbA-YCgmlkgnY0gmlwhKwSlxaKbXVsdGlhZGRyc5YACASsEpcWBnzkAAoErBKXFgZ85d0DgnJzhQADAQAAiXNlY3AyNTZrMaEDxYpPHzNxweG7Y40HzVokFJ4CIq_Vnfugl95jO69234SDdGNwgnzkg3VkcIJ85oV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-11_04-10-55__392421ac-25db-4557-b4ce-48973213cc80__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.113.133
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['31281', '31282', '31283', '31284', '31285']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 31281:31281 -p 31282:31282 -p 31283:31283 -p 31284:31284 -p 31285:31285 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=31283 --rest-port=31281 --tcp-port=31282 --discv5-udp-port=31284 --rest-address=0.0.0.0 --nat=extip:172.18.113.133 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=4d6b6efeeba17a6e9bff6b8ba9f501ef5bd4afef5c29c4ebd60fc9ab9d5c21f3 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=31285 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QCPXc32cy7thLtXBgBVX7M74GZ2UujlCYgFyyRVCu4ApDjy5m1G2xO6RITXjt6HGZsbQR1u4HesEzv8dWzrbA-YCgmlkgnY0gmlwhKwSlxaKbXVsdGlhZGRyc5YACASsEpcWBnzkAAoErBKXFgZ85d0DgnJzhQADAQAAiXNlY3AyNTZrMaEDxYpPHzNxweG7Y40HzVokFJ4CIq_Vnfugl95jO69234SDdGNwgnzkg3VkcIJ85oV3YWt1MgU --filternode=/ip4/172.18.151.22/tcp/31972/p2p/16Uiu2HAmRx6zGzcAjvb4Y7cGnzxmwR5N2YzxTJwdHiMCh5N3rBUP
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.113.133 waku f93310f1ba2fd63424c718577af190159d2fddee6f7e0dfd4f44aadcb155551e
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID f93310f1ba2f. Setting up logs at ./log/docker/node2_2024-12-11_04-10-55__392421ac-25db-4557-b4ce-48973213cc80__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 31281
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:31281/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:31281/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.113.133/tcp/31282/p2p/16Uiu2HAmVagK3nX9FoWrpdk1mDJ2HvyCz7FdjVoUavPucpiQHRp4","/ip4/172.18.113.133/tcp/31283/ws/p2p/16Uiu2HAmVagK3nX9FoWrpdk1mDJ2HvyCz7FdjVoUavPucpiQHRp4"],"enrUri":"enr:-L24QMRgPIF4BaUOjm6RjIJvkfBLUMzPaTgiiKynzQbMy9RXaR0LU5ZgEP87SHskb-cFo4s7OKnE5Awg3KFE-20XmfICgmlkgnY0gmlwhKwScYWKbXVsdGlhZGRyc5YACASsEnGFBnoyAAoErBJxhQZ6M90DgnJzhQADAQAAiXNlY3AyNTZrMaED-3v1SdWO6-Mv6zaRY3lJFM_kHkNoB4dCcjp4r6-qHNmDdGNwgnoyg3VkcIJ6NIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:31281/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.151.22/tcp/31972/p2p/16Uiu2HAmRx6zGzcAjvb4Y7cGnzxmwR5N2YzxTJwdHiMCh5N3rBUP"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:31971/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:31281/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "efc37487-e369-4d8b-9fca-a353d20def1f", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"efc37487-e369-4d8b-9fca-a353d20def1f","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:31281/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:31281/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id ba06ad877ebe
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id f93310f1ba2f
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container ba06ad877ebe. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.