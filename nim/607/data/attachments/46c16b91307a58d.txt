[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_invalid_request_id with id: 2025-01-06_04-10-26__ec52cb8e-92b5-44fe-880a-b5586672174b
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-06_04-10-26__ec52cb8e-92b5-44fe-880a-b5586672174b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.92.150
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['48536', '48537', '48538', '48539', '48540']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 48536:48536 -p 48537:48537 -p 48538:48538 -p 48539:48539 -p 48540:48540 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=48538 --rest-port=48536 --tcp-port=48537 --discv5-udp-port=48539 --rest-address=0.0.0.0 --nat=extip:172.18.92.150 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=be939fbd1dbacb30aa47decff08e21faeb681ac03c5cc9f6eba9fbb45fa0b1fd --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=48540 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.92.150 waku 9fcf120a3537fc4c2082e0b88c79f94bd127a1805be16e6c402812d7c0e853f3
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 9fcf120a3537. Setting up logs at ./log/docker/node1_2025-01-06_04-10-26__ec52cb8e-92b5-44fe-880a-b5586672174b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 48536
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 88e7eed48cb8. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:48536/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:48536/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.92.150/tcp/48537/p2p/16Uiu2HAm5fXhXrwGk1YuCypksnfYA2Fihc525TdXnAB5UEBe2ZQS","/ip4/172.18.92.150/tcp/48538/ws/p2p/16Uiu2HAm5fXhXrwGk1YuCypksnfYA2Fihc525TdXnAB5UEBe2ZQS"],"enrUri":"enr:-L24QMA8h8ZG7VYLA0KPJk-K5AEPWs9m5dgM80FQ7Xx2k46lVcfnVKeh9OXHnSGjdHwYwPac6GB9F7R5S4Sa9WQY6FACgmlkgnY0gmlwhKwSXJaKbXVsdGlhZGRyc5YACASsElyWBr2ZAAoErBJclga9mt0DgnJzhQADAQAAiXNlY3AyNTZrMaECmCGjUYhVGeaTqT1PRsavul7MiszHKsV2PkCfbe65oEeDdGNwgr2Zg3VkcIK9m4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-06_04-10-26__ec52cb8e-92b5-44fe-880a-b5586672174b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.141.46
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['28699', '28700', '28701', '28702', '28703']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 28699:28699 -p 28700:28700 -p 28701:28701 -p 28702:28702 -p 28703:28703 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=28701 --rest-port=28699 --tcp-port=28700 --discv5-udp-port=28702 --rest-address=0.0.0.0 --nat=extip:172.18.141.46 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=11be5cb28b9d45931beddc84e1ec1f7907cfef0e9be5eabd6ffcf9ba1ca3a2b2 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=28703 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QMA8h8ZG7VYLA0KPJk-K5AEPWs9m5dgM80FQ7Xx2k46lVcfnVKeh9OXHnSGjdHwYwPac6GB9F7R5S4Sa9WQY6FACgmlkgnY0gmlwhKwSXJaKbXVsdGlhZGRyc5YACASsElyWBr2ZAAoErBJclga9mt0DgnJzhQADAQAAiXNlY3AyNTZrMaECmCGjUYhVGeaTqT1PRsavul7MiszHKsV2PkCfbe65oEeDdGNwgr2Zg3VkcIK9m4V3YWt1MgU --filternode=/ip4/172.18.92.150/tcp/48537/p2p/16Uiu2HAm5fXhXrwGk1YuCypksnfYA2Fihc525TdXnAB5UEBe2ZQS
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.141.46 waku 393dbee47a9f260a5306b208fe7029bf07a39e9b00dac770709f0121f10db257
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 393dbee47a9f. Setting up logs at ./log/docker/node2_2025-01-06_04-10-26__ec52cb8e-92b5-44fe-880a-b5586672174b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 28699
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:28699/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:28699/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.141.46/tcp/28700/p2p/16Uiu2HAm3AFdpgCaMrJhSMDbF1hmw64d9fWTy6tFiig6DLWVU5CD","/ip4/172.18.141.46/tcp/28701/ws/p2p/16Uiu2HAm3AFdpgCaMrJhSMDbF1hmw64d9fWTy6tFiig6DLWVU5CD"],"enrUri":"enr:-L24QHgbcwKkYIMCXLFs-FVdL4WstAI0n5Jjd5QOqbOLwLpGWOVa5QtVMGoCfDLW0UubyfAQ4RKtHmt5Acz1jJJOga4CgmlkgnY0gmlwhKwSjS6KbXVsdGlhZGRyc5YACASsEo0uBnAcAAoErBKNLgZwHd0DgnJzhQADAQAAiXNlY3AyNTZrMaECcupBzsi2yYMe_1dsZHYnXVs7cgZyFCGSkXkOwrEM1fKDdGNwgnAcg3VkcIJwHoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:28699/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.92.150/tcp/48537/p2p/16Uiu2HAm5fXhXrwGk1YuCypksnfYA2Fihc525TdXnAB5UEBe2ZQS"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:48536/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:28699/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "a9480046-ded2-4953-84d1-ae9453d1d3bf", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"a9480046-ded2-4953-84d1-ae9453d1d3bf","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:28699/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:28699/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 9fcf120a3537
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 393dbee47a9f
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 9fcf120a3537. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.