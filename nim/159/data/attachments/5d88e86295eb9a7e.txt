[35mDEBUG   [0m tests.conftest:conftest.py:43 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:49 Running test: test_filter_subscribe_with_no_content_topic with id: 2024-04-22_04-10-55__2dabdfa9-a0f0-42d2-b68f-d0e4c2e261f4
[35mDEBUG   [0m src.steps.filter:filter.py:27 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:33 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:17 Docker client initialized with image harbor.status.im/wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:50 WakuNode instance initialized with log path ./log/docker/node1_2024-04-22_04-10-55__2dabdfa9-a0f0-42d2-b68f-d0e4c2e261f4__harbor.status.im_wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:54 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:20 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:23 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:80 Generated random external IP 172.18.176.0
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:73 Generated ports ['41805', '41806', '41807', '41808', '41809']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:315 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:115 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:47 docker run -i -t -p 41805:41805 -p 41806:41806 -p 41807:41807 -p 41808:41808 -p 41809:41809 harbor.status.im/wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=41807 --rest-port=41805 --tcp-port=41806 --discv5-udp-port=41808 --rest-address=0.0.0.0 --nat=extip:172.18.176.0 --peer-exchange=true --discv5-discovery=true --cluster-id=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=41809 --metrics-logging=true --relay=true --filter=true --nodekey=30348dd51465150e04a5d9d932c72864c8967f806cce60b5d26afeca1e77eb68
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:53 docker network connect --ip 172.18.176.0 waku a88831b8dbf7b7eaf17769275fe8eeb1f2c4d15237c57e4a7609a3e187d98a9f
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:56 Container started with ID a88831b8dbf7. Setting up logs at ./log/docker/node1_2024-04-22_04-10-55__2dabdfa9-a0f0-42d2-b68f-d0e4c2e261f4__harbor.status.im_wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:121 Started container from image harbor.status.im/wakuorg/nwaku:latest. REST: 41805
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41805/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.176.0/tcp/41806/p2p/16Uiu2HAmGNtM2rQ8abySFNhqPDFY4cmfAEpfo9Z9fD3NekoFR2ip","/ip4/172.18.176.0/tcp/41807/ws/p2p/16Uiu2HAmGNtM2rQ8abySFNhqPDFY4cmfAEpfo9Z9fD3NekoFR2ip"],"enrUri":"enr:-LO4QONXVl8dyZ15z4t4ALqL_i9GwPgtSlUXbPxpiA_DKo5rE14_guKejIg7H94lHeb5MZEODrtkTjJrEUVRrhu02GYBgmlkgnY0gmlwhKwSsACKbXVsdGlhZGRyc4wACgSsErAABqNP3QOCcnOFAAABAACJc2VjcDI1NmsxoQM3Tqpf5eFn4Jztm4gB0Y0JVSJyxyZsW8QR-QU5DZb-PYN0Y3CCo06DdWRwgqNQhXdha3UyBQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:191 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:38 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:17 Docker client initialized with image harbor.status.im/wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:50 WakuNode instance initialized with log path ./log/docker/node2_2024-04-22_04-10-55__2dabdfa9-a0f0-42d2-b68f-d0e4c2e261f4__harbor.status.im_wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:54 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:20 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:23 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:80 Generated random external IP 172.18.64.105
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:73 Generated ports ['22818', '22819', '22820', '22821', '22822']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:315 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:115 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:47 docker run -i -t -p 22818:22818 -p 22819:22819 -p 22820:22820 -p 22821:22821 -p 22822:22822 harbor.status.im/wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=22820 --rest-port=22818 --tcp-port=22819 --discv5-udp-port=22821 --rest-address=0.0.0.0 --nat=extip:172.18.64.105 --peer-exchange=true --discv5-discovery=true --cluster-id=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=22822 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-LO4QONXVl8dyZ15z4t4ALqL_i9GwPgtSlUXbPxpiA_DKo5rE14_guKejIg7H94lHeb5MZEODrtkTjJrEUVRrhu02GYBgmlkgnY0gmlwhKwSsACKbXVsdGlhZGRyc4wACgSsErAABqNP3QOCcnOFAAABAACJc2VjcDI1NmsxoQM3Tqpf5eFn4Jztm4gB0Y0JVSJyxyZsW8QR-QU5DZb-PYN0Y3CCo06DdWRwgqNQhXdha3UyBQ --filternode=/ip4/172.18.176.0/tcp/41806/p2p/16Uiu2HAmGNtM2rQ8abySFNhqPDFY4cmfAEpfo9Z9fD3NekoFR2ip
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:53 docker network connect --ip 172.18.64.105 waku 121f3ea64de3ebfbe66bbcf7d5b06ba415fe2dba2c7e52534ee00f410445041c
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:56 Container started with ID 121f3ea64de3. Setting up logs at ./log/docker/node2_2024-04-22_04-10-55__2dabdfa9-a0f0-42d2-b68f-d0e4c2e261f4__harbor.status.im_wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:121 Started container from image harbor.status.im/wakuorg/nwaku:latest. REST: 22818
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:22818/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.64.105/tcp/22819/p2p/16Uiu2HAkyUamCyBsL4Jd9advLcAUBKQsRSSZi4yj2nDZG9vsKGQt","/ip4/172.18.64.105/tcp/22820/ws/p2p/16Uiu2HAkyUamCyBsL4Jd9advLcAUBKQsRSSZi4yj2nDZG9vsKGQt"],"enrUri":"enr:-LO4QFTNxFUNDeRe0eNGUAEJ5fhuY8kgNiPabhi2GFBLAkk9AaJui2pNDSIMXpEjXNaXLV1LKWr24gLVxPHn31hoH0UBgmlkgnY0gmlwhKwSQGmKbXVsdGlhZGRyc4wACgSsEkBpBlkk3QOCcnOFAAABAACJc2VjcDI1NmsxoQI8LZdb2SnkuDWL9eVElm0I0lKO8DhkbgkrnYrMkzksFYN0Y3CCWSODdWRwglklhXdha3UyAA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:191 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:22818/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.176.0/tcp/41806/p2p/16Uiu2HAmGNtM2rQ8abySFNhqPDFY4cmfAEpfo9Z9fD3NekoFR2ip"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:41805/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/0/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:22818/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "fbc69d56-7c45-4d8b-8ac4-ad024f733ba4", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/0/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"fbc69d56-7c45-4d8b-8ac4-ad024f733ba4","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:22818/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "pubsubTopic": "/waku/2/rs/0/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:22818/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:75 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:168 Stopping container with id a88831b8dbf7
[35mDEBUG   [0m src.node.waku_node:waku_node.py:171 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:168 Stopping container with id 121f3ea64de3
[35mDEBUG   [0m src.node.waku_node:waku_node.py:171 Container stopped.