[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_on_non_subscribed_pubsub_topic with id: 2024-10-05_04-22-16__a3af39cd-3b38-4867-b90c-acee58d30f1f
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-10-05_04-22-16__a3af39cd-3b38-4867-b90c-acee58d30f1f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.92.95
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['10298', '10299', '10300', '10301', '10302']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 10298:10298 -p 10299:10299 -p 10300:10300 -p 10301:10301 -p 10302:10302 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=10300 --rest-port=10298 --tcp-port=10299 --discv5-udp-port=10301 --rest-address=0.0.0.0 --nat=extip:172.18.92.95 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e3aa124d0d36c298a77d2a6e6ccf900c8be2982cbeb31ef7fefea7d1d9fbcbf1 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=10302 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.92.95 waku e7bdc5690e8a2f1bbf658e82f610f60c9de03750ebaa3ccea33eaa96c7346cb2
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID e7bdc5690e8a. Setting up logs at ./log/docker/node1_2024-10-05_04-22-16__a3af39cd-3b38-4867-b90c-acee58d30f1f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 10298
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10298/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10298/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.92.95/tcp/10299/p2p/16Uiu2HAkwwkcqYRk3Sir5Y9jJXTqBDXmwyc8kUTVUCSU8ugYRCLo","/ip4/172.18.92.95/tcp/10300/ws/p2p/16Uiu2HAkwwkcqYRk3Sir5Y9jJXTqBDXmwyc8kUTVUCSU8ugYRCLo"],"enrUri":"enr:-LO4QHmSIIT55IUvHuZXGvEjKPvJyC14cqQHrStHAVI9r2VmdagQMoXgXrpK9sfLXx5Oe_DAVPN9GsvFUQNCt6cCYF4BgmlkgnY0gmlwhKwSXF-KbXVsdGlhZGRyc4wACgSsElxfBig83QOCcnOFAAMBAACJc2VjcDI1NmsxoQIlbAsJa9oV1tRcLySElbw7G-SU-0mEBUswtw-r6WAAmIN0Y3CCKDuDdWRwgig9hXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-10-05_04-22-16__a3af39cd-3b38-4867-b90c-acee58d30f1f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.50.38
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['44220', '44221', '44222', '44223', '44224']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 44220:44220 -p 44221:44221 -p 44222:44222 -p 44223:44223 -p 44224:44224 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=44222 --rest-port=44220 --tcp-port=44221 --discv5-udp-port=44223 --rest-address=0.0.0.0 --nat=extip:172.18.50.38 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=332af323fbac0dad6003dadede345c883dc1a5b2eee80d84bbd97319dc408b25 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=44224 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QHmSIIT55IUvHuZXGvEjKPvJyC14cqQHrStHAVI9r2VmdagQMoXgXrpK9sfLXx5Oe_DAVPN9GsvFUQNCt6cCYF4BgmlkgnY0gmlwhKwSXF-KbXVsdGlhZGRyc4wACgSsElxfBig83QOCcnOFAAMBAACJc2VjcDI1NmsxoQIlbAsJa9oV1tRcLySElbw7G-SU-0mEBUswtw-r6WAAmIN0Y3CCKDuDdWRwgig9hXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.50.38 waku 3d832c5d9d0c8ca4a523b9168fb3dc3764155148abcb961c0c1e277d661cc7f7
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 3d832c5d9d0c. Setting up logs at ./log/docker/node2_2024-10-05_04-22-16__a3af39cd-3b38-4867-b90c-acee58d30f1f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 44220
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:44220/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:44220/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.50.38/tcp/44221/p2p/16Uiu2HAkx1FGmpW2rGU2p8XL645Q8R6xRk6sVvCzSgBycUhjdBvc","/ip4/172.18.50.38/tcp/44222/ws/p2p/16Uiu2HAkx1FGmpW2rGU2p8XL645Q8R6xRk6sVvCzSgBycUhjdBvc"],"enrUri":"enr:-LO4QH8IkOdFTOOH_ukV9FK_Hr3SURynP_rcdMrtTlHIi6UCVVjnodXtusIDeGh37YLjYYDStMR25AKltjIZIsiU_y8BgmlkgnY0gmlwhKwSMiaKbXVsdGlhZGRyc4wACgSsEjImBqy-3QOCcnOFAAMBAACJc2VjcDI1NmsxoQImUS9OvCuXzq4ckKn3zhPNV_Vjoi2hLDUrvMbubLhrDYN0Y3CCrL2DdWRwgqy_hXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:44220/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.92.95/tcp/10299/p2p/16Uiu2HAkwwkcqYRk3Sir5Y9jJXTqBDXmwyc8kUTVUCSU8ugYRCLo"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:10298/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:44220/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:10298/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10298/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1728102140329931520,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:44220/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1728102140329931520,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:10298/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1000" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:10298/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1000. Response content: b'Failed to publish: Node not subscribed to topic: /waku/2/rs/3/1000'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id e7bdc5690e8a
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 3d832c5d9d0c
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.