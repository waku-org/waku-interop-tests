[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_invalid_version with id: 2024-10-05_04-22-30__342df03a-585e-4d0b-a1bd-ec3bc36325cc
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-10-05_04-22-30__342df03a-585e-4d0b-a1bd-ec3bc36325cc__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.23.53
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['49316', '49317', '49318', '49319', '49320']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 49316:49316 -p 49317:49317 -p 49318:49318 -p 49319:49319 -p 49320:49320 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=49318 --rest-port=49316 --tcp-port=49317 --discv5-udp-port=49319 --rest-address=0.0.0.0 --nat=extip:172.18.23.53 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=bbc8efea2efa02fc72ba3d415d17c80e623c940dfc772cfe567b5bcab256cfbc --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=49320 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.23.53 waku bacde4daee056b0634aca7eee893a81a309046960cbd3a1352a931340f7f1b01
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID bacde4daee05. Setting up logs at ./log/docker/node1_2024-10-05_04-22-30__342df03a-585e-4d0b-a1bd-ec3bc36325cc__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 49316
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:49316/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:49316/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.23.53/tcp/49317/p2p/16Uiu2HAkwx2rVJRcMPEXHEajAFpkoDFrb2YBA1C8S7bopkYpuKRN","/ip4/172.18.23.53/tcp/49318/ws/p2p/16Uiu2HAkwx2rVJRcMPEXHEajAFpkoDFrb2YBA1C8S7bopkYpuKRN"],"enrUri":"enr:-LO4QIbGgYO7wtuZXUmQV862H4uYCrPN410EQjU87MXVBG3rO1Cxi6wDfLrYXMeqprS3O6F8VKDAZo7CROTqx_XZogEBgmlkgnY0gmlwhKwSFzWKbXVsdGlhZGRyc4wACgSsEhc1BsCm3QOCcnOFAAMBAACJc2VjcDI1NmsxoQIlfmaG2RyzHnHB-Jh66yzWIzpPY8Q8bjmdTWAFs2pyvYN0Y3CCwKWDdWRwgsCnhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-10-05_04-22-30__342df03a-585e-4d0b-a1bd-ec3bc36325cc__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.120.177
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['34888', '34889', '34890', '34891', '34892']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 34888:34888 -p 34889:34889 -p 34890:34890 -p 34891:34891 -p 34892:34892 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=34890 --rest-port=34888 --tcp-port=34889 --discv5-udp-port=34891 --rest-address=0.0.0.0 --nat=extip:172.18.120.177 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=cd6d21804dc952ed6abdfb64c79bcc0d65ffd67ced6f946d7ce9fcfeddb4b028 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=34892 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QIbGgYO7wtuZXUmQV862H4uYCrPN410EQjU87MXVBG3rO1Cxi6wDfLrYXMeqprS3O6F8VKDAZo7CROTqx_XZogEBgmlkgnY0gmlwhKwSFzWKbXVsdGlhZGRyc4wACgSsEhc1BsCm3QOCcnOFAAMBAACJc2VjcDI1NmsxoQIlfmaG2RyzHnHB-Jh66yzWIzpPY8Q8bjmdTWAFs2pyvYN0Y3CCwKWDdWRwgsCnhXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.120.177 waku 850a8c86406084184d9d644a02bc2ad4873c7e00e639812867965c6109a98cab
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 850a8c864060. Setting up logs at ./log/docker/node2_2024-10-05_04-22-30__342df03a-585e-4d0b-a1bd-ec3bc36325cc__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 34888
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:34888/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:34888/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.120.177/tcp/34889/p2p/16Uiu2HAkyUppY6W3ajkzTgZUAD7byk6nHzAiGBj31PYpFpG3quQy","/ip4/172.18.120.177/tcp/34890/ws/p2p/16Uiu2HAkyUppY6W3ajkzTgZUAD7byk6nHzAiGBj31PYpFpG3quQy"],"enrUri":"enr:-LO4QAhqlH1aJdmwGGiwOtnfZIIzL7FHfUHmkDh8Xoy__Z7QWtztxX1wRh4iJ9heguTkVRGp9exomcvEV5gBqa9kaB4BgmlkgnY0gmlwhKwSeLGKbXVsdGlhZGRyc4wACgSsEnixBohK3QOCcnOFAAMBAACJc2VjcDI1NmsxoQI8PXxrFkhQAtmTKKHAtfY9W1bhEafgVPx9OJ23OGk8foN0Y3CCiEmDdWRwgohLhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:34888/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.23.53/tcp/49317/p2p/16Uiu2HAkwx2rVJRcMPEXHEajAFpkoDFrb2YBA1C8S7bopkYpuKRN"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:49316/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:34888/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:49316/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:49316/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1728102153822496512,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:34888/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1728102153822496512,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:49316/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)', "version": 2.1}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:49316/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id bacde4daee05
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 850a8c864060
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.