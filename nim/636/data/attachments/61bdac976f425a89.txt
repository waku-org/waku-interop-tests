[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_pubsub_topic_string_instead_of_list with id: 2025-02-01_04-03-57__643b4a62-5db8-4f0e-af41-058f9f64d8b6
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-02-01_04-03-57__643b4a62-5db8-4f0e-af41-058f9f64d8b6__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.18.17
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['19490', '19491', '19492', '19493', '19494']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 19490:19490 -p 19491:19491 -p 19492:19492 -p 19493:19493 -p 19494:19494 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=19492 --rest-port=19490 --tcp-port=19491 --discv5-udp-port=19493 --rest-address=0.0.0.0 --nat=extip:172.18.18.17 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=0e2d0ddcaffa8703ab7177648bec5e6df12aad7bcfa7eef8b3e1bf9bf043fb23 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=19494 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.18.17 waku 2f1c91ee664b8f6448f8cd7c95df9a3bd755e9fcaacc13feabf8dfffb2f0e02a
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 2f1c91ee664b. Setting up logs at ./log/docker/node1_2025-02-01_04-03-57__643b4a62-5db8-4f0e-af41-058f9f64d8b6__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 19490
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container e81175b795d7. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:19490/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:19490/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.18.17/tcp/19491/p2p/16Uiu2HAmTsvo8JjmKj6fuSkM9DvZED5JiEw6L1ubhggs7U84aeKn","/ip4/172.18.18.17/tcp/19492/ws/p2p/16Uiu2HAmTsvo8JjmKj6fuSkM9DvZED5JiEw6L1ubhggs7U84aeKn"],"enrUri":"enr:-L24QF2OyzJOgMLRJW8G36hPSRHpVfd1PjW02_WIPT4xlmcgeihIYW_MX4bY7Tj11RXfuawg2V5_5EZ0nrIB5b5USFICgmlkgnY0gmlwhKwSEhGKbXVsdGlhZGRyc5YACASsEhIRBkwjAAoErBISEQZMJN0DgnJzhQADAQAAiXNlY3AyNTZrMaED4i_V1VSMCe3oG0w4bIoYz6dY0qe5CHhByjzcm452E-2DdGNwgkwjg3VkcIJMJYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-02-01_04-03-57__643b4a62-5db8-4f0e-af41-058f9f64d8b6__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.37.226
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['4400', '4401', '4402', '4403', '4404']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 4400:4400 -p 4401:4401 -p 4402:4402 -p 4403:4403 -p 4404:4404 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=4402 --rest-port=4400 --tcp-port=4401 --discv5-udp-port=4403 --rest-address=0.0.0.0 --nat=extip:172.18.37.226 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=cba88fc2009bcaf39f4ffdd001fb428fe8a7c21adfb9aca0b54ebff5e81d7a07 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=4404 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QF2OyzJOgMLRJW8G36hPSRHpVfd1PjW02_WIPT4xlmcgeihIYW_MX4bY7Tj11RXfuawg2V5_5EZ0nrIB5b5USFICgmlkgnY0gmlwhKwSEhGKbXVsdGlhZGRyc5YACASsEhIRBkwjAAoErBISEQZMJN0DgnJzhQADAQAAiXNlY3AyNTZrMaED4i_V1VSMCe3oG0w4bIoYz6dY0qe5CHhByjzcm452E-2DdGNwgkwjg3VkcIJMJYV3YWt1MgU --filternode=/ip4/172.18.18.17/tcp/19491/p2p/16Uiu2HAmTsvo8JjmKj6fuSkM9DvZED5JiEw6L1ubhggs7U84aeKn
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.37.226 waku fcde06653f1cc8df199e7704269e1864461c714005eb6feb2e12c78e7cc32e9c
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID fcde06653f1c. Setting up logs at ./log/docker/node2_2025-02-01_04-03-57__643b4a62-5db8-4f0e-af41-058f9f64d8b6__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 4400
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:4400/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:4400/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.37.226/tcp/4401/p2p/16Uiu2HAmFR7ja3bT3DGDCTn3uatDxUA66rGiS9qzbiaAXxQKCeh3","/ip4/172.18.37.226/tcp/4402/ws/p2p/16Uiu2HAmFR7ja3bT3DGDCTn3uatDxUA66rGiS9qzbiaAXxQKCeh3"],"enrUri":"enr:-L24QEdVcLHuisftdHTQpTh_27QQvcXVqRze4J0xcQdMd83iRlA1aobTdHdpoXpPWzYgCqs8FelrnJSc24h-cqBMwlgCgmlkgnY0gmlwhKwSJeKKbXVsdGlhZGRyc5YACASsEiXiBhExAAoErBIl4gYRMt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDKQVHW0fRSeq2HdpR3Q4nKX1IwYqGfGTeoUH1TD8m5T6DdGNwghExg3VkcIIRM4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:4400/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.18.17/tcp/19491/p2p/16Uiu2HAmTsvo8JjmKj6fuSkM9DvZED5JiEw6L1ubhggs7U84aeKn"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:19490/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:4400/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "a19ded87-6dbf-4637-916a-0d08db0e5a00", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"a19ded87-6dbf-4637-916a-0d08db0e5a00","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:4400/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": "/test/1/waku-filter/proto", "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:4400/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 2f1c91ee664b
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id fcde06653f1c
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 2f1c91ee664b. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.