[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_no_request_id with id: 2025-02-01_04-05-23__e672d6a9-32ae-4d4a-8034-7882cbb19922
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-02-01_04-05-23__e672d6a9-32ae-4d4a-8034-7882cbb19922__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.83.53
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['7483', '7484', '7485', '7486', '7487']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 7483:7483 -p 7484:7484 -p 7485:7485 -p 7486:7486 -p 7487:7487 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=7485 --rest-port=7483 --tcp-port=7484 --discv5-udp-port=7486 --rest-address=0.0.0.0 --nat=extip:172.18.83.53 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=1e0e0da11b1ca4e3d44ada57af1f2dadd6d6a3b7be3a703cdabe7a4cadbeaa3c --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=7487 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.83.53 waku a5f29fb7bf2e7de4c3b18d0a1737b60517b74b86923d408630732b0fd1a4bf3d
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID a5f29fb7bf2e. Setting up logs at ./log/docker/node1_2025-02-01_04-05-23__e672d6a9-32ae-4d4a-8034-7882cbb19922__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 7483
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container a8c62316d3f3. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7483/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7483/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.83.53/tcp/7484/p2p/16Uiu2HAkxjrCM44C2sYpvcYGsURwXEoGLuFH9viv4zRHZugU2g5i","/ip4/172.18.83.53/tcp/7485/ws/p2p/16Uiu2HAkxjrCM44C2sYpvcYGsURwXEoGLuFH9viv4zRHZugU2g5i"],"enrUri":"enr:-L24QC2DaUcTIfYUq0aGK4k0YMGqGj8HvayKCKe3MUIRvr3KBvHSQ9jn5DBBnR5NQmA4-QF60erBktOnXi_BZNYk1TQCgmlkgnY0gmlwhKwSUzWKbXVsdGlhZGRyc5YACASsElM1Bh08AAoErBJTNQYdPd0DgnJzhQADAQAAiXNlY3AyNTZrMaECMTsRLV3eYA11Z6dklL2_OQ5abaoWS8Om-agjH6nkKMWDdGNwgh08g3VkcIIdPoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-02-01_04-05-23__e672d6a9-32ae-4d4a-8034-7882cbb19922__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.252.126
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['21661', '21662', '21663', '21664', '21665']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 21661:21661 -p 21662:21662 -p 21663:21663 -p 21664:21664 -p 21665:21665 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=21663 --rest-port=21661 --tcp-port=21662 --discv5-udp-port=21664 --rest-address=0.0.0.0 --nat=extip:172.18.252.126 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=af5c611bec66fcfe884b51cb8c6ddf127b3ab549a043ae84ce6bac54dda8c6a4 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=21665 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QC2DaUcTIfYUq0aGK4k0YMGqGj8HvayKCKe3MUIRvr3KBvHSQ9jn5DBBnR5NQmA4-QF60erBktOnXi_BZNYk1TQCgmlkgnY0gmlwhKwSUzWKbXVsdGlhZGRyc5YACASsElM1Bh08AAoErBJTNQYdPd0DgnJzhQADAQAAiXNlY3AyNTZrMaECMTsRLV3eYA11Z6dklL2_OQ5abaoWS8Om-agjH6nkKMWDdGNwgh08g3VkcIIdPoV3YWt1MgU --filternode=/ip4/172.18.83.53/tcp/7484/p2p/16Uiu2HAkxjrCM44C2sYpvcYGsURwXEoGLuFH9viv4zRHZugU2g5i
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.252.126 waku 6e0046bebae48714afca7c0953b6ede1f851e0cdde6259e02a5c7a59a9a78257
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 6e0046bebae4. Setting up logs at ./log/docker/node2_2025-02-01_04-05-23__e672d6a9-32ae-4d4a-8034-7882cbb19922__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 21661
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:21661/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:21661/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.252.126/tcp/21662/p2p/16Uiu2HAmQKeHUZYxhNKV5niGbqZKSCyUpiSeDKsecKpXLqxH5Bjr","/ip4/172.18.252.126/tcp/21663/ws/p2p/16Uiu2HAmQKeHUZYxhNKV5niGbqZKSCyUpiSeDKsecKpXLqxH5Bjr"],"enrUri":"enr:-L24QGXHOPcST8xCcAlV6vdUFhhddptiDAr38UiP1DyhoAyTDIHrMnrxPSKHX5-ow7T6PPIVTjADqsn_dGHSVOa76GYCgmlkgnY0gmlwhKwS_H6KbXVsdGlhZGRyc5YACASsEvx-BlSeAAoErBL8fgZUn90DgnJzhQADAQAAiXNlY3AyNTZrMaEDrVeE8jVhE_mUhs3v23TNleVn-kSeUqINhfS649QA852DdGNwglSeg3VkcIJUoIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:21661/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.83.53/tcp/7484/p2p/16Uiu2HAkxjrCM44C2sYpvcYGsURwXEoGLuFH9viv4zRHZugU2g5i"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:7483/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:21661/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "f7fda305-f9ff-47f7-a2df-d9cebb4f21c6", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"f7fda305-f9ff-47f7-a2df-d9cebb4f21c6","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:21661/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:21661/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id a5f29fb7bf2e
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 6e0046bebae4
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container a5f29fb7bf2e. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.