[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_no_content_topic with id: 2025-02-01_04-02-32__67040070-e537-4620-adad-709bbf894c65
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-02-01_04-02-32__67040070-e537-4620-adad-709bbf894c65__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.53.115
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['49070', '49071', '49072', '49073', '49074']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 49070:49070 -p 49071:49071 -p 49072:49072 -p 49073:49073 -p 49074:49074 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=49072 --rest-port=49070 --tcp-port=49071 --discv5-udp-port=49073 --rest-address=0.0.0.0 --nat=extip:172.18.53.115 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e3f8302052c519f4effb3cd83ebaecb710cdc316eeffb2ebcaeaa245ed8d4dbd --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=49074 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.53.115 waku bff4f9d15808e0495d14471df86169f83fbbc94e17cfd7b1858d94acd7c3586c
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID bff4f9d15808. Setting up logs at ./log/docker/node1_2025-02-01_04-02-32__67040070-e537-4620-adad-709bbf894c65__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 49070
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 150fb6dfb1e2. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:49070/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:49070/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.53.115/tcp/49071/p2p/16Uiu2HAmLsVXbqQqNLxN1SCcv4dB6m1xZCzPRQTmjtng22uPDxBy","/ip4/172.18.53.115/tcp/49072/ws/p2p/16Uiu2HAmLsVXbqQqNLxN1SCcv4dB6m1xZCzPRQTmjtng22uPDxBy"],"enrUri":"enr:-L24QJAZ0-mK9OGnLb_rSDwA2XMlrIhfR7SASQ_GRmjDfvNcP0jwBCN3xhYSeRca9TXE9ZNzo2wMp2W0gfESy9ompJsCgmlkgnY0gmlwhKwSNXOKbXVsdGlhZGRyc5YACASsEjVzBr-vAAoErBI1cwa_sN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDehF04DwvR26WzdaXcVDeLrMBJcZSMz5Y2ee6648KGLiDdGNwgr-vg3VkcIK_sYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-02-01_04-02-32__67040070-e537-4620-adad-709bbf894c65__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.128.90
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['38168', '38169', '38170', '38171', '38172']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 38168:38168 -p 38169:38169 -p 38170:38170 -p 38171:38171 -p 38172:38172 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=38170 --rest-port=38168 --tcp-port=38169 --discv5-udp-port=38171 --rest-address=0.0.0.0 --nat=extip:172.18.128.90 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b92e9bcdecc57bcc4fc0fced9c8d8fce8c2bc2109daa2efa883fa24fa4b53aef --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=38172 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QJAZ0-mK9OGnLb_rSDwA2XMlrIhfR7SASQ_GRmjDfvNcP0jwBCN3xhYSeRca9TXE9ZNzo2wMp2W0gfESy9ompJsCgmlkgnY0gmlwhKwSNXOKbXVsdGlhZGRyc5YACASsEjVzBr-vAAoErBI1cwa_sN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDehF04DwvR26WzdaXcVDeLrMBJcZSMz5Y2ee6648KGLiDdGNwgr-vg3VkcIK_sYV3YWt1MgU --filternode=/ip4/172.18.53.115/tcp/49071/p2p/16Uiu2HAmLsVXbqQqNLxN1SCcv4dB6m1xZCzPRQTmjtng22uPDxBy
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.128.90 waku 2bf62ef682964c4998355817e0cd37bb79a415756a3043ab4a7d1d3e0095f008
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 2bf62ef68296. Setting up logs at ./log/docker/node2_2025-02-01_04-02-32__67040070-e537-4620-adad-709bbf894c65__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 38168
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38168/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38168/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.128.90/tcp/38169/p2p/16Uiu2HAkxh8iuYWCgPsJjrGRMMwpDTcEPUX7WWe1WQ5SqRdsS8ry","/ip4/172.18.128.90/tcp/38170/ws/p2p/16Uiu2HAkxh8iuYWCgPsJjrGRMMwpDTcEPUX7WWe1WQ5SqRdsS8ry"],"enrUri":"enr:-L24QJm4vIKMItZiHPt6FfDEeSGEKDbkv7xglb38Qy1gUNfKZpqC10VcgkV-tdGEnx-HhGLZ0dam4tg-lNRdJOIz8msCgmlkgnY0gmlwhKwSgFqKbXVsdGlhZGRyc5YACASsEoBaBpUZAAoErBKAWgaVGt0DgnJzhQADAQAAiXNlY3AyNTZrMaECMIkC_odQgC5eskZI1LpWSiGQPYdXuvQne1LgA3Kif9aDdGNwgpUZg3VkcIKVG4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38168/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.53.115/tcp/49071/p2p/16Uiu2HAmLsVXbqQqNLxN1SCcv4dB6m1xZCzPRQTmjtng22uPDxBy"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:49070/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38168/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "795d6675-c05d-4529-b395-870ac55e02fa", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"795d6675-c05d-4529-b395-870ac55e02fa","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38168/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:38168/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id bff4f9d15808
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 2bf62ef68296
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container bff4f9d15808. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.