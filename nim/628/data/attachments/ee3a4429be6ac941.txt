[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_content_topic_string_instead_of_list with id: 2025-01-26_04-04-37__610bf9e4-51db-46f9-97ec-98f04c3dc32e
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-26_04-04-37__610bf9e4-51db-46f9-97ec-98f04c3dc32e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.17.133
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['52552', '52553', '52554', '52555', '52556']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 52552:52552 -p 52553:52553 -p 52554:52554 -p 52555:52555 -p 52556:52556 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=52554 --rest-port=52552 --tcp-port=52553 --discv5-udp-port=52555 --rest-address=0.0.0.0 --nat=extip:172.18.17.133 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e1bebac6a0fb4be8367f36fa725f3ec8a9afc18cb5bcbda0cf1fe0345ea15b69 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=52556 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.17.133 waku 3fd0ea32dff8751b4e75f0962f6a78376827650e7e81057bb46d92790ca50bef
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 3fd0ea32dff8. Setting up logs at ./log/docker/node1_2025-01-26_04-04-37__610bf9e4-51db-46f9-97ec-98f04c3dc32e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 52552
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 4dbb9895dc54. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:52552/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:52552/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.17.133/tcp/52553/p2p/16Uiu2HAmUHzHAyoyCTXA8odyyBGBcRdrqn9PPa8GK2P3ViGfc7sG","/ip4/172.18.17.133/tcp/52554/ws/p2p/16Uiu2HAmUHzHAyoyCTXA8odyyBGBcRdrqn9PPa8GK2P3ViGfc7sG"],"enrUri":"enr:-L24QGNM0olkDy8Zk0-9op8SM_XQXr4evEJ0ceMNXhdQ19lxah02xtOggjLgWVsR7ZSIlD4Xr1dMcHg0wqfGbxdo4vsCgmlkgnY0gmlwhKwSEYWKbXVsdGlhZGRyc5YACASsEhGFBs1JAAoErBIRhQbNSt0DgnJzhQADAQAAiXNlY3AyNTZrMaED6Fm2rJA4ZSE25jJn1XOCJ4-Rxlsg4ZlVnpxsWsr56rODdGNwgs1Jg3VkcILNS4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-26_04-04-37__610bf9e4-51db-46f9-97ec-98f04c3dc32e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.19.13
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['24004', '24005', '24006', '24007', '24008']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 24004:24004 -p 24005:24005 -p 24006:24006 -p 24007:24007 -p 24008:24008 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=24006 --rest-port=24004 --tcp-port=24005 --discv5-udp-port=24007 --rest-address=0.0.0.0 --nat=extip:172.18.19.13 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=0cdb52a61109d55e8d86e3f2644066c1ea040f41dcc904a9518807bbc1d909c7 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=24008 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QGNM0olkDy8Zk0-9op8SM_XQXr4evEJ0ceMNXhdQ19lxah02xtOggjLgWVsR7ZSIlD4Xr1dMcHg0wqfGbxdo4vsCgmlkgnY0gmlwhKwSEYWKbXVsdGlhZGRyc5YACASsEhGFBs1JAAoErBIRhQbNSt0DgnJzhQADAQAAiXNlY3AyNTZrMaED6Fm2rJA4ZSE25jJn1XOCJ4-Rxlsg4ZlVnpxsWsr56rODdGNwgs1Jg3VkcILNS4V3YWt1MgU --filternode=/ip4/172.18.17.133/tcp/52553/p2p/16Uiu2HAmUHzHAyoyCTXA8odyyBGBcRdrqn9PPa8GK2P3ViGfc7sG
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.19.13 waku 256ae35aa51a1b10a995a5b8f7d968debf072f379cf7042a506dc1d5cd16a750
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 256ae35aa51a. Setting up logs at ./log/docker/node2_2025-01-26_04-04-37__610bf9e4-51db-46f9-97ec-98f04c3dc32e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 24004
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:24004/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:24004/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.19.13/tcp/24005/p2p/16Uiu2HAkumdUAdjvCcDyqjQSY5nVLqtshDgqMLyMydsVcXKrpVsn","/ip4/172.18.19.13/tcp/24006/ws/p2p/16Uiu2HAkumdUAdjvCcDyqjQSY5nVLqtshDgqMLyMydsVcXKrpVsn"],"enrUri":"enr:-L24QIYNMujEIRPBIEjpVVlz62A0nSrOiXBf1YS1NcNUG-cJMcX5PChpT9_4d6hl77kIpyaWBknBQqaBTqNEN0vOjyACgmlkgnY0gmlwhKwSEw2KbXVsdGlhZGRyc5YACASsEhMNBl3FAAoErBITDQZdxt0DgnJzhQADAQAAiXNlY3AyNTZrMaECBRzG9wdfTym0Bj_sblYwZWIzjVt6HaUkOnZHuj08WRmDdGNwgl3Fg3VkcIJdx4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:24004/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.17.133/tcp/52553/p2p/16Uiu2HAmUHzHAyoyCTXA8odyyBGBcRdrqn9PPa8GK2P3ViGfc7sG"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:52552/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:24004/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "f3446bce-f00b-4af6-988c-8d7a5b39135b", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"f3446bce-f00b-4af6-988c-8d7a5b39135b","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:24004/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": "/test/1/waku-filter/proto", "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:24004/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 3fd0ea32dff8
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 256ae35aa51a
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 3fd0ea32dff8. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.