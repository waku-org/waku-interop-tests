[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_payload_less_than_150_kb with id: 2025-01-26_04-03-51__b43ad6e8-bb2f-4a24-847c-29a5a9a4731f
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-26_04-03-51__b43ad6e8-bb2f-4a24-847c-29a5a9a4731f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.183.46
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['31430', '31431', '31432', '31433', '31434']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 31430:31430 -p 31431:31431 -p 31432:31432 -p 31433:31433 -p 31434:31434 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=31432 --rest-port=31430 --tcp-port=31431 --discv5-udp-port=31433 --rest-address=0.0.0.0 --nat=extip:172.18.183.46 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=cd46afdcd63fff47773c960db2dbea65385d1df01ab33f86f6ff9df1f88dbdf9 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=31434 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.183.46 waku 50df043a22663472a417c6aa85fbc9de4051541ae4cad71f74e01f82bf880f5b
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 50df043a2266. Setting up logs at ./log/docker/node1_2025-01-26_04-03-51__b43ad6e8-bb2f-4a24-847c-29a5a9a4731f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 31430
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container ade74ff70f45. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:31430/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:31430/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.183.46/tcp/31431/p2p/16Uiu2HAmLJhQH4rm6PcQm4Jh2ccsUGp3u3xS3gadhKq4WVuR6KfS","/ip4/172.18.183.46/tcp/31432/ws/p2p/16Uiu2HAmLJhQH4rm6PcQm4Jh2ccsUGp3u3xS3gadhKq4WVuR6KfS"],"enrUri":"enr:-L24QLgquuj4KtlxvRnlPUP6hkRoOG2VmiCKG-7gizVXMAPDUHZIVAN5E-FbXyI_RVNOXcgEi240MSxaEI9QsgpEKLUCgmlkgnY0gmlwhKwSty6KbXVsdGlhZGRyc5YACASsErcuBnrHAAoErBK3LgZ6yN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDcaq3LCxT_1-MQKO2PWEYc7EJjwtpOoMGib1FHumYoIWDdGNwgnrHg3VkcIJ6yYV3YWt1MgE"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-26_04-03-51__b43ad6e8-bb2f-4a24-847c-29a5a9a4731f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.137.43
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['10075', '10076', '10077', '10078', '10079']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 10075:10075 -p 10076:10076 -p 10077:10077 -p 10078:10078 -p 10079:10079 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=10077 --rest-port=10075 --tcp-port=10076 --discv5-udp-port=10078 --rest-address=0.0.0.0 --nat=extip:172.18.137.43 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=519dc935c31bbc3c04041d8ac5bf0cc184937ed0eb46ce97affcb751f58fca66 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=10079 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-L24QLgquuj4KtlxvRnlPUP6hkRoOG2VmiCKG-7gizVXMAPDUHZIVAN5E-FbXyI_RVNOXcgEi240MSxaEI9QsgpEKLUCgmlkgnY0gmlwhKwSty6KbXVsdGlhZGRyc5YACASsErcuBnrHAAoErBK3LgZ6yN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDcaq3LCxT_1-MQKO2PWEYc7EJjwtpOoMGib1FHumYoIWDdGNwgnrHg3VkcIJ6yYV3YWt1MgE
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.137.43 waku 0e04a10401dc39da07cca02998a7678e53f2d70a8b84475879166d4a7949306f
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 0e04a10401dc. Setting up logs at ./log/docker/node2_2025-01-26_04-03-51__b43ad6e8-bb2f-4a24-847c-29a5a9a4731f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 10075
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10075/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10075/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.137.43/tcp/10076/p2p/16Uiu2HAmQkegA8qrYa29hxtKHFGJHA5tPsgkvHHHQ48sLKqySpe5","/ip4/172.18.137.43/tcp/10077/ws/p2p/16Uiu2HAmQkegA8qrYa29hxtKHFGJHA5tPsgkvHHHQ48sLKqySpe5"],"enrUri":"enr:-L24QLSrXvUPpSRsLt31sn9lPB6D7MYolV56Qxux8Arq_iyJR-chHCGWZnZdAJQKrSJXSnSzLcALDVC__ueLIRpfrboCgmlkgnY0gmlwhKwSiSuKbXVsdGlhZGRyc5YACASsEokrBidcAAoErBKJKwYnXd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDs797UxqtWhf5Yrqc9zjjmS3i-zCok7DIAp3ojGzS7WqDdGNwgidcg3VkcIInXoV3YWt1MgE"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:10075/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.183.46/tcp/31431/p2p/16Uiu2HAmLJhQH4rm6PcQm4Jh2ccsUGp3u3xS3gadhKq4WVuR6KfS"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:31430/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:10075/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:31430/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:31430/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1737864233711991552,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10075/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1737864233711991552,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[35mDEBUG   [0m tests.relay.test_publish:test_publish.py:49 Running test with payload length of 102400 bytes
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 2 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:31430/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10075/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 50df043a2266
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 0e04a10401dc
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 50df043a2266. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.