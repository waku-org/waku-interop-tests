[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_invalid_request_id with id: 2025-01-02_04-10-23__bac5e1b0-781e-4e57-9cfa-72b9c13bbb4c
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-02_04-10-23__bac5e1b0-781e-4e57-9cfa-72b9c13bbb4c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.137.40
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['46986', '46987', '46988', '46989', '46990']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 46986:46986 -p 46987:46987 -p 46988:46988 -p 46989:46989 -p 46990:46990 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=46988 --rest-port=46986 --tcp-port=46987 --discv5-udp-port=46989 --rest-address=0.0.0.0 --nat=extip:172.18.137.40 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=d24ca41f3bc3fcf252dbb8b7b8fbc3daeeee0234cedcd8bbdbd33e8adb7da3a9 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=46990 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.137.40 waku 3ee450833bbbd78ceee65632ebd7b5708f453ab6ba4ac0691996c15d78d0fc95
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 3ee450833bbb. Setting up logs at ./log/docker/node1_2025-01-02_04-10-23__bac5e1b0-781e-4e57-9cfa-72b9c13bbb4c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 46986
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 6e9678c76d8d. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:46986/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:46986/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.137.40/tcp/46987/p2p/16Uiu2HAm4h6iFKgDYJMa49Nmxtrz77Yi2c9a8JiwZ7Ym9JZv8otY","/ip4/172.18.137.40/tcp/46988/ws/p2p/16Uiu2HAm4h6iFKgDYJMa49Nmxtrz77Yi2c9a8JiwZ7Ym9JZv8otY"],"enrUri":"enr:-L24QM-jY0bjRXLbU20Czp6gH1IsAvyk0U0aAyTK_hgUiLraPn8Kd4-ywa-_wC6JLA8x1zmsUXmpgXRP64ncKqzI1ncCgmlkgnY0gmlwhKwSiSiKbXVsdGlhZGRyc5YACASsEokoBreLAAoErBKJKAa3jN0DgnJzhQADAQAAiXNlY3AyNTZrMaECiazb53J0RUInDwf-IWTUiKyGhE_bRWxkq8gB3dcdr82DdGNwgreLg3VkcIK3jYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-02_04-10-23__bac5e1b0-781e-4e57-9cfa-72b9c13bbb4c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.210.20
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['14558', '14559', '14560', '14561', '14562']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 14558:14558 -p 14559:14559 -p 14560:14560 -p 14561:14561 -p 14562:14562 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=14560 --rest-port=14558 --tcp-port=14559 --discv5-udp-port=14561 --rest-address=0.0.0.0 --nat=extip:172.18.210.20 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=fffa2cb6d186500de8330efd2ef52eabbf2b0be62ac0ac81d8fdf2faef1f0c6a --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=14562 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QM-jY0bjRXLbU20Czp6gH1IsAvyk0U0aAyTK_hgUiLraPn8Kd4-ywa-_wC6JLA8x1zmsUXmpgXRP64ncKqzI1ncCgmlkgnY0gmlwhKwSiSiKbXVsdGlhZGRyc5YACASsEokoBreLAAoErBKJKAa3jN0DgnJzhQADAQAAiXNlY3AyNTZrMaECiazb53J0RUInDwf-IWTUiKyGhE_bRWxkq8gB3dcdr82DdGNwgreLg3VkcIK3jYV3YWt1MgU --filternode=/ip4/172.18.137.40/tcp/46987/p2p/16Uiu2HAm4h6iFKgDYJMa49Nmxtrz77Yi2c9a8JiwZ7Ym9JZv8otY
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.210.20 waku d7e70d744788a00d04cb209f8ba4c7a6b216b3d2b6a417a3a0f93ea58a6476c2
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID d7e70d744788. Setting up logs at ./log/docker/node2_2025-01-02_04-10-23__bac5e1b0-781e-4e57-9cfa-72b9c13bbb4c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 14558
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:14558/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:14558/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.210.20/tcp/14559/p2p/16Uiu2HAmTxftt156nchERikL1Pw7eYN1bPW7Ywfwhkz18XQQ54ZP","/ip4/172.18.210.20/tcp/14560/ws/p2p/16Uiu2HAmTxftt156nchERikL1Pw7eYN1bPW7Ywfwhkz18XQQ54ZP"],"enrUri":"enr:-L24QJNIPKTI7C6-XnwaQyC52SHNQ3i30OCVejnQs2SDyOWpYnNwlFBRiPOvK93ENjX057prpMyAjtZoTAYUz8Xj5SwCgmlkgnY0gmlwhKwS0hSKbXVsdGlhZGRyc5YACASsEtIUBjjfAAoErBLSFAY44N0DgnJzhQADAQAAiXNlY3AyNTZrMaED42bkFJQ3QshoB3N3q8ki6gYA-zUTsP9zU4icIbh2sDKDdGNwgjjfg3VkcII44YV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:14558/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.137.40/tcp/46987/p2p/16Uiu2HAm4h6iFKgDYJMa49Nmxtrz77Yi2c9a8JiwZ7Ym9JZv8otY"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:46986/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:14558/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "01638f9a-d267-4dc9-a2e3-9ff09fd85241", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"01638f9a-d267-4dc9-a2e3-9ff09fd85241","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:14558/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:14558/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 3ee450833bbb
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id d7e70d744788
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 3ee450833bbb. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.