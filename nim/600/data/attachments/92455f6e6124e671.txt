[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_no_request_id with id: 2025-01-02_04-09-43__7e070276-20c5-43e8-8ab7-d2c2d77efe7e
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-02_04-09-43__7e070276-20c5-43e8-8ab7-d2c2d77efe7e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.204.93
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['4419', '4420', '4421', '4422', '4423']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 4419:4419 -p 4420:4420 -p 4421:4421 -p 4422:4422 -p 4423:4423 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=4421 --rest-port=4419 --tcp-port=4420 --discv5-udp-port=4422 --rest-address=0.0.0.0 --nat=extip:172.18.204.93 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=1dac3ed6cc632b775b1b9cbbc1ef55aab3bd2caf66bec1cf062acbd46eba107c --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=4423 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.204.93 waku 3bbc0affdcd65339b000a0ed3521ee58d4cdd2fbddc0db0ad0903cbf25052dfd
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 3bbc0affdcd6. Setting up logs at ./log/docker/node1_2025-01-02_04-09-43__7e070276-20c5-43e8-8ab7-d2c2d77efe7e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 4419
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 718cd026c215. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:4419/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:4419/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.204.93/tcp/4420/p2p/16Uiu2HAm1MFoXytSGSR7SzL2tkXuuosdyzgFe4owNwFL98Jv5cEb","/ip4/172.18.204.93/tcp/4421/ws/p2p/16Uiu2HAm1MFoXytSGSR7SzL2tkXuuosdyzgFe4owNwFL98Jv5cEb"],"enrUri":"enr:-L24QNeO2JNBdf9JHi_5VNDyZJ1RywI49fd3tP2XDlSh1zUIS0evINp5FN8j6jsp37LxXt3nmoFJ__pRhnK99Tms51ICgmlkgnY0gmlwhKwSzF2KbXVsdGlhZGRyc5YACASsEsxdBhFEAAoErBLMXQYRRd0DgnJzhQADAQAAiXNlY3AyNTZrMaECWAR2IVOZmLa_MfvSw59xzg8WsTIY2Ko6f8qQ1mPnWlCDdGNwghFEg3VkcIIRRoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-02_04-09-43__7e070276-20c5-43e8-8ab7-d2c2d77efe7e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.28.14
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['22409', '22410', '22411', '22412', '22413']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 22409:22409 -p 22410:22410 -p 22411:22411 -p 22412:22412 -p 22413:22413 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=22411 --rest-port=22409 --tcp-port=22410 --discv5-udp-port=22412 --rest-address=0.0.0.0 --nat=extip:172.18.28.14 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e4bdd134dcc8d0bc2d0da3ad2cb4dbd4e61facc9cfdced4a9fb462a61e4148ad --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=22413 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QNeO2JNBdf9JHi_5VNDyZJ1RywI49fd3tP2XDlSh1zUIS0evINp5FN8j6jsp37LxXt3nmoFJ__pRhnK99Tms51ICgmlkgnY0gmlwhKwSzF2KbXVsdGlhZGRyc5YACASsEsxdBhFEAAoErBLMXQYRRd0DgnJzhQADAQAAiXNlY3AyNTZrMaECWAR2IVOZmLa_MfvSw59xzg8WsTIY2Ko6f8qQ1mPnWlCDdGNwghFEg3VkcIIRRoV3YWt1MgU --filternode=/ip4/172.18.204.93/tcp/4420/p2p/16Uiu2HAm1MFoXytSGSR7SzL2tkXuuosdyzgFe4owNwFL98Jv5cEb
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.28.14 waku 6b8fabda767ab699d2a7cee2e372d42eb1e9d165ebf09314ce16f2e6a881fae2
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 6b8fabda767a. Setting up logs at ./log/docker/node2_2025-01-02_04-09-43__7e070276-20c5-43e8-8ab7-d2c2d77efe7e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 22409
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:22409/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:22409/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.28.14/tcp/22410/p2p/16Uiu2HAmUZFSPL2L2mxMoXRpHnjEm6MH3kXU8ajFfQyPCpwEb44m","/ip4/172.18.28.14/tcp/22411/ws/p2p/16Uiu2HAmUZFSPL2L2mxMoXRpHnjEm6MH3kXU8ajFfQyPCpwEb44m"],"enrUri":"enr:-L24QCMbDqriH3xbNH7VxdFlTOCSsquteN3s5nxlAEkLYka9Si2Ci-6n0bOKGMXzuQ2HeivIr4tEzfkdBROjY6Ug1doCgmlkgnY0gmlwhKwSHA6KbXVsdGlhZGRyc5YACASsEhwOBleKAAoErBIcDgZXi90DgnJzhQADAQAAiXNlY3AyNTZrMaED7EKQ3I2idw5jHDt5w_tBTFVaQZy3-UGKEtyawk2J5maDdGNwgleKg3VkcIJXjIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:22409/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.204.93/tcp/4420/p2p/16Uiu2HAm1MFoXytSGSR7SzL2tkXuuosdyzgFe4owNwFL98Jv5cEb"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:4419/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:22409/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "3b1d0a8e-2563-41ff-bd60-e23ad0ff39f5", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"3b1d0a8e-2563-41ff-bd60-e23ad0ff39f5","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:22409/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:22409/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 3bbc0affdcd6
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 6b8fabda767a
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 3bbc0affdcd6. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.