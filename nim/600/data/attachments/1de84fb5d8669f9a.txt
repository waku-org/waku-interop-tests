[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2025-01-02_04-10-30__5f04d531-78a1-4be8-abbc-bf2e17febf72
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-02_04-10-30__5f04d531-78a1-4be8-abbc-bf2e17febf72__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.168.8
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['56881', '56882', '56883', '56884', '56885']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 56881:56881 -p 56882:56882 -p 56883:56883 -p 56884:56884 -p 56885:56885 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=56883 --rest-port=56881 --tcp-port=56882 --discv5-udp-port=56884 --rest-address=0.0.0.0 --nat=extip:172.18.168.8 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=cc03ce4e8bd5f42edbfafa6ee88d991419bdfe01eb0b0cee1c862dd432e0131d --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=56885 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.168.8 waku f1de4fb9ae5af61bf11b416ec38aa07c83bbfd7eafc36d83a62b1f0dab901c26
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID f1de4fb9ae5a. Setting up logs at ./log/docker/node1_2025-01-02_04-10-30__5f04d531-78a1-4be8-abbc-bf2e17febf72__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 56881
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 14808a52b8b2. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:56881/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:56881/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.168.8/tcp/56882/p2p/16Uiu2HAky3etEATX15usUZq2G8HdCB3JVrF5JaRWLv4pZ34ZUrfk","/ip4/172.18.168.8/tcp/56883/ws/p2p/16Uiu2HAky3etEATX15usUZq2G8HdCB3JVrF5JaRWLv4pZ34ZUrfk"],"enrUri":"enr:-L24QNa3bRCRHG6CXNNquTAvKfeM2jHxjqNXtl5DxZKKC2MRKX2fa9ScTTG7JCU_i19RjrhXaE48SPAYMv-pWCslp6QCgmlkgnY0gmlwhKwSqAiKbXVsdGlhZGRyc5YACASsEqgIBt4yAAoErBKoCAbeM90DgnJzhQADAQAAiXNlY3AyNTZrMaECNcq7Dw2gFq7qU7jBtAre-7rVCqkh9Yx03y4I-9vGR0ODdGNwgt4yg3VkcILeNIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-02_04-10-30__5f04d531-78a1-4be8-abbc-bf2e17febf72__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.237.224
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['29502', '29503', '29504', '29505', '29506']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 29502:29502 -p 29503:29503 -p 29504:29504 -p 29505:29505 -p 29506:29506 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=29504 --rest-port=29502 --tcp-port=29503 --discv5-udp-port=29505 --rest-address=0.0.0.0 --nat=extip:172.18.237.224 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=be5aac1dadcf57eeb5b4f39e50fe2f52f24eccbbecb98e5273bdaa8adfa79fce --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=29506 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QNa3bRCRHG6CXNNquTAvKfeM2jHxjqNXtl5DxZKKC2MRKX2fa9ScTTG7JCU_i19RjrhXaE48SPAYMv-pWCslp6QCgmlkgnY0gmlwhKwSqAiKbXVsdGlhZGRyc5YACASsEqgIBt4yAAoErBKoCAbeM90DgnJzhQADAQAAiXNlY3AyNTZrMaECNcq7Dw2gFq7qU7jBtAre-7rVCqkh9Yx03y4I-9vGR0ODdGNwgt4yg3VkcILeNIV3YWt1MgU --filternode=/ip4/172.18.168.8/tcp/56882/p2p/16Uiu2HAky3etEATX15usUZq2G8HdCB3JVrF5JaRWLv4pZ34ZUrfk
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.237.224 waku ee994a7a6c151d66014978beace2270efe0a65958d6152e19ebb6db98cba13fe
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID ee994a7a6c15. Setting up logs at ./log/docker/node2_2025-01-02_04-10-30__5f04d531-78a1-4be8-abbc-bf2e17febf72__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 29502
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:29502/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:29502/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.237.224/tcp/29503/p2p/16Uiu2HAmNJngGqZpmTAJcN35j8DTDJynL7mi7yViBgLXFDMLjxz2","/ip4/172.18.237.224/tcp/29504/ws/p2p/16Uiu2HAmNJngGqZpmTAJcN35j8DTDJynL7mi7yViBgLXFDMLjxz2"],"enrUri":"enr:-L24QNk3JcCiYUakt9VqKdkDmi69ruQ_25UBUIUzDLSx_rTeIgku_Sdl_iEjUJJ622McYrJPjvxljmH48Zrl1uQTXLoCgmlkgnY0gmlwhKwS7eCKbXVsdGlhZGRyc5YACASsEu3gBnM_AAoErBLt4AZzQN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDj2gOAsQ7YEZgZlbgwI9m6CANVD8KQQMTIBN_bIzumOeDdGNwgnM_g3VkcIJzQYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:29502/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.168.8/tcp/56882/p2p/16Uiu2HAky3etEATX15usUZq2G8HdCB3JVrF5JaRWLv4pZ34ZUrfk"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:56881/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:29502/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "7e619ff3-ba61-48d3-b8a9-7d9e2fec8822", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"7e619ff3-ba61-48d3-b8a9-7d9e2fec8822","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:29502/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:29502/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id f1de4fb9ae5a
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id ee994a7a6c15
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container f1de4fb9ae5a. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.