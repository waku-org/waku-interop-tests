[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_store_with_peerAddr with id: 2024-10-01_04-27-40__f141d341-8341-40ab-8627-fab0a52de6f2
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.store:store.py:31 Running fixture setup: store_setup
[35mDEBUG   [0m src.steps.store:store.py:39 Running fixture setup: node_setup
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/publishing_node1_2024-10-01_04-27-40__f141d341-8341-40ab-8627-fab0a52de6f2__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.78.4
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['7064', '7065', '7066', '7067', '7068']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 7064:7064 -p 7065:7065 -p 7066:7066 -p 7067:7067 -p 7068:7068 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=7066 --rest-port=7064 --tcp-port=7065 --discv5-udp-port=7067 --rest-address=0.0.0.0 --nat=extip:172.18.78.4 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=cabd44c36f7b9ade9a8e4f304564f40b2bed0bf3beb671007be47fa026e1c6a9 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=7068 --metrics-logging=true --store=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.78.4 waku c484a5ff498d891c0610cb47c7e5f959b8a493e982c053c54167958fc5ad94f6
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID c484a5ff498d. Setting up logs at ./log/docker/publishing_node1_2024-10-01_04-27-40__f141d341-8341-40ab-8627-fab0a52de6f2__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 7064
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7064/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7064/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.78.4/tcp/7065/p2p/16Uiu2HAm3TLY35cvvZtJBePngNg5pr9BUzc6e8LcsUc7CJY3Zy9x","/ip4/172.18.78.4/tcp/7066/ws/p2p/16Uiu2HAm3TLY35cvvZtJBePngNg5pr9BUzc6e8LcsUc7CJY3Zy9x"],"enrUri":"enr:-LO4QJ7Cv8w6Z2RzC_lofpprRkp1fPso-h6Qv4ujEz7zNCBUTF74UVMwnk-w4Dmc8SEOwu4d-BFyMOD8_qC_97LzOoIBgmlkgnY0gmlwhKwSTgSKbXVsdGlhZGRyc4wACgSsEk4EBhua3QOCcnOFAAMBAACJc2VjcDI1NmsxoQJ3SqvpoM1EAWgr5y5reEVpNesfVpXUEGhN1p9eUOi9J4N0Y3CCG5mDdWRwghubhXdha3UyAw"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/store_node1_2024-10-01_04-27-40__f141d341-8341-40ab-8627-fab0a52de6f2__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.134.14
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['38451', '38452', '38453', '38454', '38455']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 38451:38451 -p 38452:38452 -p 38453:38453 -p 38454:38454 -p 38455:38455 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=38453 --rest-port=38451 --tcp-port=38452 --discv5-udp-port=38454 --rest-address=0.0.0.0 --nat=extip:172.18.134.14 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ac05f975ff6d7a2285464eac8cd8acecad7b32c43b74bfeebf2eca4c6220c9af --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=38455 --metrics-logging=true --discv5-bootstrap-node=enr:-LO4QJ7Cv8w6Z2RzC_lofpprRkp1fPso-h6Qv4ujEz7zNCBUTF74UVMwnk-w4Dmc8SEOwu4d-BFyMOD8_qC_97LzOoIBgmlkgnY0gmlwhKwSTgSKbXVsdGlhZGRyc4wACgSsEk4EBhua3QOCcnOFAAMBAACJc2VjcDI1NmsxoQJ3SqvpoM1EAWgr5y5reEVpNesfVpXUEGhN1p9eUOi9J4N0Y3CCG5mDdWRwghubhXdha3UyAw --storenode=/ip4/172.18.78.4/tcp/7065/p2p/16Uiu2HAm3TLY35cvvZtJBePngNg5pr9BUzc6e8LcsUc7CJY3Zy9x --store=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.134.14 waku b7821b73f01478a07e2a05f1a80b0cb9c9c8f9f4fcb9c376404867e66f86704e
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID b7821b73f014. Setting up logs at ./log/docker/store_node1_2024-10-01_04-27-40__f141d341-8341-40ab-8627-fab0a52de6f2__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 38451
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38451/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38451/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.134.14/tcp/38452/p2p/16Uiu2HAmFrwYurHjHzmJdwSJY5BduYPQUcdCkmxEBEyqpVcQmET6","/ip4/172.18.134.14/tcp/38453/ws/p2p/16Uiu2HAmFrwYurHjHzmJdwSJY5BduYPQUcdCkmxEBEyqpVcQmET6"],"enrUri":"enr:-LO4QNaZEV14DNwZvr18UqP7HimvDoOIeRM46POlL-IVr2NcYwWXfBYRdjLE-Wv8mvEHIF7QKq7ucv8EPgPN63pWEhkBgmlkgnY0gmlwhKwShg6KbXVsdGlhZGRyc4wACgSsEoYOBpY13QOCcnOFAAMBAACJc2VjcDI1NmsxoQMvot1tVYYL8aT8ynvqKyQ2UlKvLNTAcElXZbW5hoWBbYN0Y3CCljSDdWRwgpY2hXdha3UyAw"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38451/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.78.4/tcp/7065/p2p/16Uiu2HAm3TLY35cvvZtJBePngNg5pr9BUzc6e8LcsUc7CJY3Zy9x"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:7064/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/0"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38451/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/0"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.store:store.py:132 Relaying message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:7064/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F0" -H "Content-Type: application/json" -d '{"payload": "U3RvcmUgd29ya3MhIQ==", "contentTopic": "/myapp/1/latest/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.2 seconds
[35mDEBUG   [0m src.steps.store:store.py:218 Checking that peer wakuorg/nwaku:latest can find the stored messages
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38451/store/v3/messages?peerAddr=%2Fip4%2F172.18.78.4%2Ftcp%2F7065%2Fp2p%2F16Uiu2HAm3TLY35cvvZtJBePngNg5pr9BUzc6e8LcsUc7CJY3Zy9x&pubsubTopic=%2Fwaku%2F2%2Frs%2F3%2F0" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"0c317c20526157bb7c45","statusCode":200,"statusDesc":"OK","messages":[{"messageHash":"1ALgzqX/T5PwC3RoR7xd5pH38zLkjs8B0ev+HfVpyI4="}]}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id c484a5ff498d
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id b7821b73f014
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.