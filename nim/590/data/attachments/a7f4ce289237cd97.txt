[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_invalid_request_id with id: 2024-12-28_04-10-14__44962419-966d-4e78-bf00-1f95b62d119a
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-28_04-10-14__44962419-966d-4e78-bf00-1f95b62d119a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.48.231
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['39669', '39670', '39671', '39672', '39673']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 39669:39669 -p 39670:39670 -p 39671:39671 -p 39672:39672 -p 39673:39673 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=39671 --rest-port=39669 --tcp-port=39670 --discv5-udp-port=39672 --rest-address=0.0.0.0 --nat=extip:172.18.48.231 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=f1866f3b0ecd8eed44f62ddd40aacbf938febbec7d1d9da99b5e3bbc84cccac1 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=39673 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.48.231 waku 9e2f4df75e2db455a6abf254e4c8e61e367e294af56efbc0904aad8b616ae26f
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 9e2f4df75e2d. Setting up logs at ./log/docker/node1_2024-12-28_04-10-14__44962419-966d-4e78-bf00-1f95b62d119a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 39669
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 8b1a45d12372. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:39669/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:39669/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.48.231/tcp/39670/p2p/16Uiu2HAkurSS6fdsdMiumrihPhVEAKmGiafdZAsG5mHZEt16wfcc","/ip4/172.18.48.231/tcp/39671/ws/p2p/16Uiu2HAkurSS6fdsdMiumrihPhVEAKmGiafdZAsG5mHZEt16wfcc"],"enrUri":"enr:-L24QGC4EIMYHalXbE9DB7oAH63okb2_goHlXibfQG69rgpPKVH_1lcJKb0GwEGDZqF0HlPQu8S5t8qSqBKBCBY0cmgCgmlkgnY0gmlwhKwSMOeKbXVsdGlhZGRyc5YACASsEjDnBpr2AAoErBIw5waa990DgnJzhQADAQAAiXNlY3AyNTZrMaECBlg0BDcHSEN-7WDcAJC5BGBxv1Prtn4t3RJJg0FEaGmDdGNwgpr2g3VkcIKa-IV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-28_04-10-14__44962419-966d-4e78-bf00-1f95b62d119a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.189.39
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['52105', '52106', '52107', '52108', '52109']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 52105:52105 -p 52106:52106 -p 52107:52107 -p 52108:52108 -p 52109:52109 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=52107 --rest-port=52105 --tcp-port=52106 --discv5-udp-port=52108 --rest-address=0.0.0.0 --nat=extip:172.18.189.39 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=81d2cdd7bcffc4df529b71c89e4ae6dd24ffd9d8eb3bcbb7cc6b7c2ecc3cccd8 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=52109 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QGC4EIMYHalXbE9DB7oAH63okb2_goHlXibfQG69rgpPKVH_1lcJKb0GwEGDZqF0HlPQu8S5t8qSqBKBCBY0cmgCgmlkgnY0gmlwhKwSMOeKbXVsdGlhZGRyc5YACASsEjDnBpr2AAoErBIw5waa990DgnJzhQADAQAAiXNlY3AyNTZrMaECBlg0BDcHSEN-7WDcAJC5BGBxv1Prtn4t3RJJg0FEaGmDdGNwgpr2g3VkcIKa-IV3YWt1MgU --filternode=/ip4/172.18.48.231/tcp/39670/p2p/16Uiu2HAkurSS6fdsdMiumrihPhVEAKmGiafdZAsG5mHZEt16wfcc
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.189.39 waku 6a7a2ee8d12b9237e372d1e6b7116671e7178a2707541e424bbdfa26b0a05e09
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 6a7a2ee8d12b. Setting up logs at ./log/docker/node2_2024-12-28_04-10-14__44962419-966d-4e78-bf00-1f95b62d119a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 52105
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:52105/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:52105/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.189.39/tcp/52106/p2p/16Uiu2HAmJ69fmQqJY6ZeFQzDon9e9We1S4tmxDPMyAwRwx4zu1u7","/ip4/172.18.189.39/tcp/52107/ws/p2p/16Uiu2HAmJ69fmQqJY6ZeFQzDon9e9We1S4tmxDPMyAwRwx4zu1u7"],"enrUri":"enr:-L24QLz0B_Kdc3XCyZGAEngHq18AayuAvGpOHDCzRup3qh43Em9VZwRV4RcUW-emQCm2_f71-WEISjzVmJk3h_pU9iECgmlkgnY0gmlwhKwSvSeKbXVsdGlhZGRyc5YACASsEr0nBsuKAAoErBK9JwbLi90DgnJzhQADAQAAiXNlY3AyNTZrMaEDULx9y9EqQXSvd9bD291lnueaRVLA49A7jmXFVY_rDB6DdGNwgsuKg3VkcILLjIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:52105/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.48.231/tcp/39670/p2p/16Uiu2HAkurSS6fdsdMiumrihPhVEAKmGiafdZAsG5mHZEt16wfcc"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:39669/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:52105/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "301da4f6-602e-4aff-9240-0f59a5886de5", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"301da4f6-602e-4aff-9240-0f59a5886de5","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:52105/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:52105/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 9e2f4df75e2d
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 6a7a2ee8d12b
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 9e2f4df75e2d. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.