[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_no_request_id with id: 2024-12-28_04-10-11__6cd8cccf-25cd-4681-91fd-9e825662c21e
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-28_04-10-11__6cd8cccf-25cd-4681-91fd-9e825662c21e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.170.149
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['39041', '39042', '39043', '39044', '39045']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 39041:39041 -p 39042:39042 -p 39043:39043 -p 39044:39044 -p 39045:39045 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=39043 --rest-port=39041 --tcp-port=39042 --discv5-udp-port=39044 --rest-address=0.0.0.0 --nat=extip:172.18.170.149 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=db9c6e8db461fb7ac2536d1da51a1bb22a07afa223d5baae9eee3ff97608c2d1 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=39045 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.170.149 waku 9de5a333809dc313e17b9701d4de46dae51a4f07ef799b4ee1692dc335a037d8
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 9de5a333809d. Setting up logs at ./log/docker/node1_2024-12-28_04-10-11__6cd8cccf-25cd-4681-91fd-9e825662c21e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 39041
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 6f8104f8618f. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:39041/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:39041/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.170.149/tcp/39042/p2p/16Uiu2HAmDBmfjYFdc6VhoTBimuyAvzMR9SbHizTUT2xQTp67gygh","/ip4/172.18.170.149/tcp/39043/ws/p2p/16Uiu2HAmDBmfjYFdc6VhoTBimuyAvzMR9SbHizTUT2xQTp67gygh"],"enrUri":"enr:-L24QDMikPgjn6XUlcZ6Xkzvjsx1leQuEL_csjx8n3siVH-pKypumYS_xwzzRpPfhVhlXqNL-x7CmV_6PijMBp_PK-4CgmlkgnY0gmlwhKwSqpWKbXVsdGlhZGRyc5YACASsEqqVBpiCAAoErBKqlQaYg90DgnJzhQADAQAAiXNlY3AyNTZrMaEDB-KqXo_BykzuDMljMVd5vbxSHntxbByaAWuIQe3xhzaDdGNwgpiCg3VkcIKYhIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-28_04-10-11__6cd8cccf-25cd-4681-91fd-9e825662c21e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.4.68
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['13932', '13933', '13934', '13935', '13936']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 13932:13932 -p 13933:13933 -p 13934:13934 -p 13935:13935 -p 13936:13936 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=13934 --rest-port=13932 --tcp-port=13933 --discv5-udp-port=13935 --rest-address=0.0.0.0 --nat=extip:172.18.4.68 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=38a318bdde7e894d5bed218a7bd6ca09b66b8e30ff6ff6cd6df1b6ccb8cdfa95 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=13936 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QDMikPgjn6XUlcZ6Xkzvjsx1leQuEL_csjx8n3siVH-pKypumYS_xwzzRpPfhVhlXqNL-x7CmV_6PijMBp_PK-4CgmlkgnY0gmlwhKwSqpWKbXVsdGlhZGRyc5YACASsEqqVBpiCAAoErBKqlQaYg90DgnJzhQADAQAAiXNlY3AyNTZrMaEDB-KqXo_BykzuDMljMVd5vbxSHntxbByaAWuIQe3xhzaDdGNwgpiCg3VkcIKYhIV3YWt1MgU --filternode=/ip4/172.18.170.149/tcp/39042/p2p/16Uiu2HAmDBmfjYFdc6VhoTBimuyAvzMR9SbHizTUT2xQTp67gygh
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.4.68 waku dd28a7f0f694119f0f4e3afebce8c6c5ecbf245524a3ae290304b364a6852d9b
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID dd28a7f0f694. Setting up logs at ./log/docker/node2_2024-12-28_04-10-11__6cd8cccf-25cd-4681-91fd-9e825662c21e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 13932
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:13932/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:13932/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.4.68/tcp/13933/p2p/16Uiu2HAmH3sDsp1aYMZgp2u31VzHAc6h2EMBjMLGAhidkmnoieXM","/ip4/172.18.4.68/tcp/13934/ws/p2p/16Uiu2HAmH3sDsp1aYMZgp2u31VzHAc6h2EMBjMLGAhidkmnoieXM"],"enrUri":"enr:-L24QM4wvpW9719GbymmGN-jvBVZ9KG7TD478wtg7Scu7vzpWZB1qX-sFz_dCCWjwi99N-c1vylIDg72wvI5-VmwnZsCgmlkgnY0gmlwhKwSBESKbXVsdGlhZGRyc5YACASsEgREBjZtAAoErBIERAY2bt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDQUsL_93n-h-c5dXVgONoN1AEmzkPX88iTpGejIjTv_yDdGNwgjZtg3VkcII2b4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:13932/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.170.149/tcp/39042/p2p/16Uiu2HAmDBmfjYFdc6VhoTBimuyAvzMR9SbHizTUT2xQTp67gygh"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:39041/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:13932/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "a537b919-d8f9-4e1e-8d60-75bda7215ae2", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"a537b919-d8f9-4e1e-8d60-75bda7215ae2","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:13932/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:13932/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 9de5a333809d
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id dd28a7f0f694
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 9de5a333809d. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.