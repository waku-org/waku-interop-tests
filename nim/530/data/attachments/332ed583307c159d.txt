[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_no_request_id with id: 2024-12-17_04-10-15__2638a87d-83ff-4360-b74f-b76d4df3091e
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-17_04-10-15__2638a87d-83ff-4360-b74f-b76d4df3091e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.26.170
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['53173', '53174', '53175', '53176', '53177']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 53173:53173 -p 53174:53174 -p 53175:53175 -p 53176:53176 -p 53177:53177 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=53175 --rest-port=53173 --tcp-port=53174 --discv5-udp-port=53176 --rest-address=0.0.0.0 --nat=extip:172.18.26.170 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=f7bf5e4df06ecaa32d0ccabd3aa97bedadebcf5cb1c153d2accafbf6a4a102b5 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=53177 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.26.170 waku 188c5b421caff5e7ba5fcdef7c3cddfa500c2b8af4a7e3a8ef54f2a10ad4493c
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 188c5b421caf. Setting up logs at ./log/docker/node1_2024-12-17_04-10-15__2638a87d-83ff-4360-b74f-b76d4df3091e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 53173
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 817d0068edf6. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:53173/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:53173/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.26.170/tcp/53174/p2p/16Uiu2HAm3feDtZxPKFHQniFPa4bLipa6dbDaHFXrrUFkD7yV8mQE","/ip4/172.18.26.170/tcp/53175/ws/p2p/16Uiu2HAm3feDtZxPKFHQniFPa4bLipa6dbDaHFXrrUFkD7yV8mQE"],"enrUri":"enr:-L24QHjwz2aoK1nJ9MsLYaxhJdi_72ecusXLuv3-vx7A_5kbD-G_JOPEt48EEdLN3PxVmQU7gG2toZeA6BsbPlKA7xcCgmlkgnY0gmlwhKwSGqqKbXVsdGlhZGRyc5YACASsEhqqBs-2AAoErBIaqgbPt90DgnJzhQADAQAAiXNlY3AyNTZrMaECenGj4B6WxBKbzQeF4ikoMt99uPYaGljrzXM2yIsOpcuDdGNwgs-2g3VkcILPuIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-17_04-10-15__2638a87d-83ff-4360-b74f-b76d4df3091e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.168.249
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['10140', '10141', '10142', '10143', '10144']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 10140:10140 -p 10141:10141 -p 10142:10142 -p 10143:10143 -p 10144:10144 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=10142 --rest-port=10140 --tcp-port=10141 --discv5-udp-port=10143 --rest-address=0.0.0.0 --nat=extip:172.18.168.249 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=9f78d70ef825485ced3b4b3a4cddcc7daaf6bcabce4d00ce369c6fc6c2dd4d86 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=10144 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QHjwz2aoK1nJ9MsLYaxhJdi_72ecusXLuv3-vx7A_5kbD-G_JOPEt48EEdLN3PxVmQU7gG2toZeA6BsbPlKA7xcCgmlkgnY0gmlwhKwSGqqKbXVsdGlhZGRyc5YACASsEhqqBs-2AAoErBIaqgbPt90DgnJzhQADAQAAiXNlY3AyNTZrMaECenGj4B6WxBKbzQeF4ikoMt99uPYaGljrzXM2yIsOpcuDdGNwgs-2g3VkcILPuIV3YWt1MgU --filternode=/ip4/172.18.26.170/tcp/53174/p2p/16Uiu2HAm3feDtZxPKFHQniFPa4bLipa6dbDaHFXrrUFkD7yV8mQE
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.168.249 waku 161f157edc12be679769986baaf8fe34045c09d7ce78914eaa6bb13f4270fccd
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 161f157edc12. Setting up logs at ./log/docker/node2_2024-12-17_04-10-15__2638a87d-83ff-4360-b74f-b76d4df3091e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 10140
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10140/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10140/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.168.249/tcp/10141/p2p/16Uiu2HAmVEC4LvNFqnuXfLaoCZEJhJmphTRYj67BVhRLnXfLecJi","/ip4/172.18.168.249/tcp/10142/ws/p2p/16Uiu2HAmVEC4LvNFqnuXfLaoCZEJhJmphTRYj67BVhRLnXfLecJi"],"enrUri":"enr:-L24QAwCXm_YocnCtv9abtP313MF0y7Lvb7T2E5Zrob3Hxh6B3_gia1BATTIeAa0oIJplK1lnTaHkT-MqmbU0ukehZ4CgmlkgnY0gmlwhKwSqPmKbXVsdGlhZGRyc5YACASsEqj5BiedAAoErBKo-QYnnt0DgnJzhQADAQAAiXNlY3AyNTZrMaED9jxlRsz-C9aaZN8A8fNByGmAPP1GAMM31vRSFKjwPKeDdGNwgiedg3VkcIInn4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:10140/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.26.170/tcp/53174/p2p/16Uiu2HAm3feDtZxPKFHQniFPa4bLipa6dbDaHFXrrUFkD7yV8mQE"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:53173/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:10140/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "ecac9c04-f67b-4065-8670-b60ddd832b86", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"ecac9c04-f67b-4065-8670-b60ddd832b86","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:10140/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:10140/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 188c5b421caf
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 161f157edc12
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 188c5b421caf. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.