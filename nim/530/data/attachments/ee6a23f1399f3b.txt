[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2024-12-17_04-10-25__51a20855-ecab-4d9f-ab1c-8e84be891b64
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-17_04-10-25__51a20855-ecab-4d9f-ab1c-8e84be891b64__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.88.134
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['45668', '45669', '45670', '45671', '45672']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 45668:45668 -p 45669:45669 -p 45670:45670 -p 45671:45671 -p 45672:45672 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=45670 --rest-port=45668 --tcp-port=45669 --discv5-udp-port=45671 --rest-address=0.0.0.0 --nat=extip:172.18.88.134 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=deb48a8116eaeab3d69710bcb3910e95edfcc17b866bc0ed0dc7cc49bebabfdd --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=45672 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.88.134 waku 5d8b6b584ee2c8bac332ca7839af66bc2ae3053849c718a1253937119fce7b5c
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 7182c031da85. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 5d8b6b584ee2. Setting up logs at ./log/docker/node1_2024-12-17_04-10-25__51a20855-ecab-4d9f-ab1c-8e84be891b64__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 45668
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:45668/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:45668/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.88.134/tcp/45669/p2p/16Uiu2HAmNnEamEuWiuzDF6GxKiwn8HpP75B8H8suyKFu127QPY22","/ip4/172.18.88.134/tcp/45670/ws/p2p/16Uiu2HAmNnEamEuWiuzDF6GxKiwn8HpP75B8H8suyKFu127QPY22"],"enrUri":"enr:-L24QOlvRfe6msS-yCy_1QZ8Sq69CgXmSU6CQa3y8QevVcQEQNvaAjca9QNSAyB1mJll7hUAfHryMpxtrAzMSjISJ-cCgmlkgnY0gmlwhKwSWIaKbXVsdGlhZGRyc5YACASsEliGBrJlAAoErBJYhgayZt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDlnAHBq6Msj3iTdsJMJZNkHUSTL0hm-Ji4W1wiJCc83eDdGNwgrJlg3VkcIKyZ4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-17_04-10-25__51a20855-ecab-4d9f-ab1c-8e84be891b64__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.69.163
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['23073', '23074', '23075', '23076', '23077']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 23073:23073 -p 23074:23074 -p 23075:23075 -p 23076:23076 -p 23077:23077 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=23075 --rest-port=23073 --tcp-port=23074 --discv5-udp-port=23076 --rest-address=0.0.0.0 --nat=extip:172.18.69.163 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ef8b49d8edbecee910aeca2acd5d29ca897faa8f2e5e37d9612fe00ebb525d72 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=23077 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QOlvRfe6msS-yCy_1QZ8Sq69CgXmSU6CQa3y8QevVcQEQNvaAjca9QNSAyB1mJll7hUAfHryMpxtrAzMSjISJ-cCgmlkgnY0gmlwhKwSWIaKbXVsdGlhZGRyc5YACASsEliGBrJlAAoErBJYhgayZt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDlnAHBq6Msj3iTdsJMJZNkHUSTL0hm-Ji4W1wiJCc83eDdGNwgrJlg3VkcIKyZ4V3YWt1MgU --filternode=/ip4/172.18.88.134/tcp/45669/p2p/16Uiu2HAmNnEamEuWiuzDF6GxKiwn8HpP75B8H8suyKFu127QPY22
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.69.163 waku 891ff249ac249d804292bcb9f016a639c39859e7e0655c36618ec7f3c8e9cc68
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 891ff249ac24. Setting up logs at ./log/docker/node2_2024-12-17_04-10-25__51a20855-ecab-4d9f-ab1c-8e84be891b64__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 23073
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:23073/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:23073/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.69.163/tcp/23074/p2p/16Uiu2HAmBMdtprAh4g1YoFXcZcuAauG16rJ5japfjzqTTXQtRMVy","/ip4/172.18.69.163/tcp/23075/ws/p2p/16Uiu2HAmBMdtprAh4g1YoFXcZcuAauG16rJ5japfjzqTTXQtRMVy"],"enrUri":"enr:-L24QHDEOi4jD1LQciIYu1VKdpKrB_kCU6CiEpNu3_t80wBudRftAsZCugX3FS7YujVag4Cuh1HnW3xrU_0x2f3ZLb8CgmlkgnY0gmlwhKwSRaOKbXVsdGlhZGRyc5YACASsEkWjBloiAAoErBJFowZaI90DgnJzhQADAQAAiXNlY3AyNTZrMaEC7LJPMGuLuKW1i9x_NpMMfwrmRxPnF6ZcmJN3i3pf5zCDdGNwgloig3VkcIJaJIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:23073/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.88.134/tcp/45669/p2p/16Uiu2HAmNnEamEuWiuzDF6GxKiwn8HpP75B8H8suyKFu127QPY22"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:45668/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:23073/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "c7a34668-8d24-457f-9cc9-cbcfe1e38f79", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"c7a34668-8d24-457f-9cc9-cbcfe1e38f79","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:23073/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:23073/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 5d8b6b584ee2
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 891ff249ac24
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 5d8b6b584ee2. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.