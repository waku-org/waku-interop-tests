[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2024-12-15_11-56-06__a03b1021-650b-4aa6-915c-5436799c8daf
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-15_11-56-06__a03b1021-650b-4aa6-915c-5436799c8daf__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.167.235
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['53867', '53868', '53869', '53870', '53871']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 53867:53867 -p 53868:53868 -p 53869:53869 -p 53870:53870 -p 53871:53871 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=53869 --rest-port=53867 --tcp-port=53868 --discv5-udp-port=53870 --rest-address=0.0.0.0 --nat=extip:172.18.167.235 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=8ab108fdc65fd6a3e0cce22eb588fecee4a37d4688455cb3c2feacf797dcdd78 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=53871 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.167.235 waku d66abb790847d404c9db04e6fe8eeac93e3b894baaaac8ae402383c677e1be39
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID d66abb790847. Setting up logs at ./log/docker/node1_2024-12-15_11-56-06__a03b1021-650b-4aa6-915c-5436799c8daf__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 53867
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 961486915cbd. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:53867/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:53867/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.167.235/tcp/53868/p2p/16Uiu2HAkwv9jW7sexnfzUeBg6XfFVQQzcoTzmaDMk21E7gYdsEKK","/ip4/172.18.167.235/tcp/53869/ws/p2p/16Uiu2HAkwv9jW7sexnfzUeBg6XfFVQQzcoTzmaDMk21E7gYdsEKK"],"enrUri":"enr:-L24QB_Ko5refv1FVls0NS7pOLcxak0tELAEYzXCQHq_zhmyMrg9Qe-0s1baQaaeHDdRQOoO9DyxaSOa1CgqB6z1DVkCgmlkgnY0gmlwhKwSp-uKbXVsdGlhZGRyc5YACASsEqfrBtJsAAoErBKn6wbSbd0DgnJzhQADAQAAiXNlY3AyNTZrMaECJQMEgkg7v6k8U1oZJlZvZiC-0n33XIjG8aCtzPtouyqDdGNwgtJsg3VkcILSboV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-15_11-56-06__a03b1021-650b-4aa6-915c-5436799c8daf__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.91.240
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['61238', '61239', '61240', '61241', '61242']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 61238:61238 -p 61239:61239 -p 61240:61240 -p 61241:61241 -p 61242:61242 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=61240 --rest-port=61238 --tcp-port=61239 --discv5-udp-port=61241 --rest-address=0.0.0.0 --nat=extip:172.18.91.240 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=8357a2150aecaf3fa471df7c545db255090df5840fcbbfcdb2edb1f380bf8bdd --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=61242 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QB_Ko5refv1FVls0NS7pOLcxak0tELAEYzXCQHq_zhmyMrg9Qe-0s1baQaaeHDdRQOoO9DyxaSOa1CgqB6z1DVkCgmlkgnY0gmlwhKwSp-uKbXVsdGlhZGRyc5YACASsEqfrBtJsAAoErBKn6wbSbd0DgnJzhQADAQAAiXNlY3AyNTZrMaECJQMEgkg7v6k8U1oZJlZvZiC-0n33XIjG8aCtzPtouyqDdGNwgtJsg3VkcILSboV3YWt1MgU --filternode=/ip4/172.18.167.235/tcp/53868/p2p/16Uiu2HAkwv9jW7sexnfzUeBg6XfFVQQzcoTzmaDMk21E7gYdsEKK
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.91.240 waku e845574f2dc5d74e325e04fe31616cfb5475aef0f6e8235ebe37ad5a4c21a1e8
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID e845574f2dc5. Setting up logs at ./log/docker/node2_2024-12-15_11-56-06__a03b1021-650b-4aa6-915c-5436799c8daf__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 61238
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:61238/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:61238/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.91.240/tcp/61239/p2p/16Uiu2HAmJWpYBgmgZcEcbcUdmqhwTre8CiUV8h3BoSfcq6igKzmU","/ip4/172.18.91.240/tcp/61240/ws/p2p/16Uiu2HAmJWpYBgmgZcEcbcUdmqhwTre8CiUV8h3BoSfcq6igKzmU"],"enrUri":"enr:-L24QCK_aJXjz0EJfM4oQWyW-7h1VCyo9LuTOtMW0NnlybNufmjazqS1loRx0GNt1yltt-dE9horZNNibX-LHmCJVIgCgmlkgnY0gmlwhKwSW_CKbXVsdGlhZGRyc5YACASsElvwBu83AAoErBJb8AbvON0DgnJzhQADAQAAiXNlY3AyNTZrMaEDVw5hZSdQne6SDJbjhQq2TNqNhJlGZFkvNqOtDdna7DeDdGNwgu83g3VkcILvOYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:61238/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.167.235/tcp/53868/p2p/16Uiu2HAkwv9jW7sexnfzUeBg6XfFVQQzcoTzmaDMk21E7gYdsEKK"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:53867/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:61238/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "16befdc7-d8ff-4ca2-855b-eba7616c8ff5", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"16befdc7-d8ff-4ca2-855b-eba7616c8ff5","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:61238/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:61238/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id d66abb790847
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id e845574f2dc5
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container d66abb790847. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.