[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2025-02-17_04-04-13__10db90ed-340c-46d4-8574-d45d0768c730
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-02-17_04-04-13__10db90ed-340c-46d4-8574-d45d0768c730__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.108.27
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['60278', '60279', '60280', '60281', '60282']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 60278:60278 -p 60279:60279 -p 60280:60280 -p 60281:60281 -p 60282:60282 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=60280 --rest-port=60278 --tcp-port=60279 --discv5-udp-port=60281 --rest-address=0.0.0.0 --nat=extip:172.18.108.27 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=bcbaa83f91f7bbb1a6cceec6cfdce623c22cced81323d612fdbf740d7eea5a46 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=60282 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.108.27 waku 3eaba5e7b07d9ee604aa7add0f37c1e31521b5c6bc81f0fa8888dd660531c73a
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 3eaba5e7b07d. Setting up logs at ./log/docker/node1_2025-02-17_04-04-13__10db90ed-340c-46d4-8574-d45d0768c730__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 60278
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 6f01f5a35eea. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:60278/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:60278/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.108.27/tcp/60279/p2p/16Uiu2HAm6EFBacktHwDgwWDsJKSdhXd81RaTm7GHhTR7M3DcHgc5","/ip4/172.18.108.27/tcp/60280/ws/p2p/16Uiu2HAm6EFBacktHwDgwWDsJKSdhXd81RaTm7GHhTR7M3DcHgc5"],"enrUri":"enr:-L24QMrBTW4Vjm0WY89KKPiHhubr5UwPd_uAqaJ_zH67KROKDgUFWRqOxbxeiLVpAZmyxHQ1-HSuXXfoPNW9AtxHtt0CgmlkgnY0gmlwhKwSbBuKbXVsdGlhZGRyc5YACASsEmwbBut3AAoErBJsGwbreN0DgnJzhQADAQAAiXNlY3AyNTZrMaECoIMhJd9DdK9wTiU7o3YpR9tMnuDB_mluiqWZw_2OdB6DdGNwgut3g3VkcILreYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-02-17_04-04-13__10db90ed-340c-46d4-8574-d45d0768c730__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.191.60
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['26320', '26321', '26322', '26323', '26324']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 26320:26320 -p 26321:26321 -p 26322:26322 -p 26323:26323 -p 26324:26324 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=26322 --rest-port=26320 --tcp-port=26321 --discv5-udp-port=26323 --rest-address=0.0.0.0 --nat=extip:172.18.191.60 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b21e005ce842895112dc17ddaeafa944d3dc9fafd1fafe4c7842d205dbe8b4ff --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=26324 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QMrBTW4Vjm0WY89KKPiHhubr5UwPd_uAqaJ_zH67KROKDgUFWRqOxbxeiLVpAZmyxHQ1-HSuXXfoPNW9AtxHtt0CgmlkgnY0gmlwhKwSbBuKbXVsdGlhZGRyc5YACASsEmwbBut3AAoErBJsGwbreN0DgnJzhQADAQAAiXNlY3AyNTZrMaECoIMhJd9DdK9wTiU7o3YpR9tMnuDB_mluiqWZw_2OdB6DdGNwgut3g3VkcILreYV3YWt1MgU --filternode=/ip4/172.18.108.27/tcp/60279/p2p/16Uiu2HAm6EFBacktHwDgwWDsJKSdhXd81RaTm7GHhTR7M3DcHgc5
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.191.60 waku 83c5f104b3be6185a351da7b5932043b6562103a48cb5d6a0165d66344218c84
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 83c5f104b3be. Setting up logs at ./log/docker/node2_2025-02-17_04-04-13__10db90ed-340c-46d4-8574-d45d0768c730__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 26320
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:26320/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:26320/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.191.60/tcp/26321/p2p/16Uiu2HAm1XyiCxZcDiYoDSM6rUXxwnrsPb1mZV268CU6akjM8fvB","/ip4/172.18.191.60/tcp/26322/ws/p2p/16Uiu2HAm1XyiCxZcDiYoDSM6rUXxwnrsPb1mZV268CU6akjM8fvB"],"enrUri":"enr:-L24QG5HPiRabQXewGjanaHLhx-D-fCDGiuRLVi6p3Ptk31FXCoyDYfAtUTWL3wBlTnoqrzaH_t4oXbylH5XKJDUqoICgmlkgnY0gmlwhKwSvzyKbXVsdGlhZGRyc5YACASsEr88BmbRAAoErBK_PAZm0t0DgnJzhQADAQAAiXNlY3AyNTZrMaECWsOnvHvzzOAZK2VsEf0y8cvNZumFOpuLJlfpQbG9pjyDdGNwgmbRg3VkcIJm04V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:26320/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.108.27/tcp/60279/p2p/16Uiu2HAm6EFBacktHwDgwWDsJKSdhXd81RaTm7GHhTR7M3DcHgc5"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:60278/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:26320/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "c9e41b1e-cda4-4c8e-ad15-3814498440fb", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"c9e41b1e-cda4-4c8e-ad15-3814498440fb","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:26320/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:26320/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data: \\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 3eaba5e7b07d
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 83c5f104b3be
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 3eaba5e7b07d. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.