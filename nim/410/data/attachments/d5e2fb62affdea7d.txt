[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_extra_field with id: 2024-10-27_13-17-53__bee32b3f-42c7-49ed-8fcf-037413f7e840
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-10-27_13-17-53__bee32b3f-42c7-49ed-8fcf-037413f7e840__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.141.98
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['13678', '13679', '13680', '13681', '13682']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 13678:13678 -p 13679:13679 -p 13680:13680 -p 13681:13681 -p 13682:13682 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=13680 --rest-port=13678 --tcp-port=13679 --discv5-udp-port=13681 --rest-address=0.0.0.0 --nat=extip:172.18.141.98 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=6ee8abe122cca9ef64dbdbda73f679293ac9d14b42ca6dcc1bb60e64ddab8a1a --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=13682 --metrics-logging=true --relay=true --filter=true
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 89d953cc27c7. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.141.98 waku 1fedc1c583d907f523e4aac90d35d1ca6ad887119b9ee18d954760ef5199dc51
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 1fedc1c583d9. Setting up logs at ./log/docker/node1_2024-10-27_13-17-53__bee32b3f-42c7-49ed-8fcf-037413f7e840__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 13678
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:13678/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:13678/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.141.98/tcp/13679/p2p/16Uiu2HAmLEctra8errv4hR8FiA3t2HQhPfFyT1cw53QUzK6XE5Lm","/ip4/172.18.141.98/tcp/13680/ws/p2p/16Uiu2HAmLEctra8errv4hR8FiA3t2HQhPfFyT1cw53QUzK6XE5Lm"],"enrUri":"enr:-LO4QNa2rpBAFo-fHqUcx9zfSGJkSgENgWKVi4ZsLExCX0IXNXPIhzkr43Aqij7i2ikyhwZ_ej490KoSQeBiGffzxoABgmlkgnY0gmlwhKwSjWKKbXVsdGlhZGRyc4wACgSsEo1iBjVw3QOCcnOFAAMBAACJc2VjcDI1NmsxoQNwn0u-6yI5LNqsRxt0vq9jgIFEr96V4YUbfR2T5Z0BEoN0Y3CCNW-DdWRwgjVxhXdha3UyBQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-10-27_13-17-53__bee32b3f-42c7-49ed-8fcf-037413f7e840__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.76.185
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['28577', '28578', '28579', '28580', '28581']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 28577:28577 -p 28578:28578 -p 28579:28579 -p 28580:28580 -p 28581:28581 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=28579 --rest-port=28577 --tcp-port=28578 --discv5-udp-port=28580 --rest-address=0.0.0.0 --nat=extip:172.18.76.185 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=accaec6433c36ef8b2dc3123407e736715ba2d3bb0b5bdf1fd2891ebea22a4b7 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=28581 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-LO4QNa2rpBAFo-fHqUcx9zfSGJkSgENgWKVi4ZsLExCX0IXNXPIhzkr43Aqij7i2ikyhwZ_ej490KoSQeBiGffzxoABgmlkgnY0gmlwhKwSjWKKbXVsdGlhZGRyc4wACgSsEo1iBjVw3QOCcnOFAAMBAACJc2VjcDI1NmsxoQNwn0u-6yI5LNqsRxt0vq9jgIFEr96V4YUbfR2T5Z0BEoN0Y3CCNW-DdWRwgjVxhXdha3UyBQ --filternode=/ip4/172.18.141.98/tcp/13679/p2p/16Uiu2HAmLEctra8errv4hR8FiA3t2HQhPfFyT1cw53QUzK6XE5Lm
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.76.185 waku 03c1d9e91359921f4f28ad6934137378b26a9c80ad7caf73d5c4dcca192ce0f9
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 03c1d9e91359. Setting up logs at ./log/docker/node2_2024-10-27_13-17-53__bee32b3f-42c7-49ed-8fcf-037413f7e840__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 28577
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:28577/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:28577/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.76.185/tcp/28578/p2p/16Uiu2HAmG8XdBLn58FFaGcZ4bfNJFXxMVsUkvNeZmV5d6pkXLJ9a","/ip4/172.18.76.185/tcp/28579/ws/p2p/16Uiu2HAmG8XdBLn58FFaGcZ4bfNJFXxMVsUkvNeZmV5d6pkXLJ9a"],"enrUri":"enr:-LO4QEGGC-8-KCVq1QxDuigOgXgEoLselvEafFRqhhVGMNlFFmAJXIlCDQzpYP-7oUrJcpDUjYcy5rMDz5mMYHzH6rABgmlkgnY0gmlwhKwSTLmKbXVsdGlhZGRyc4wACgSsEky5Bm-j3QOCcnOFAAMBAACJc2VjcDI1NmsxoQMzoRqsgKQDsCovneKItvG2CQirvZo8s0EVZAgMjYhSTYN0Y3CCb6KDdWRwgm-khXdha3UyAA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:28577/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.141.98/tcp/13679/p2p/16Uiu2HAmLEctra8errv4hR8FiA3t2HQhPfFyT1cw53QUzK6XE5Lm"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:13678/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:28577/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "cd48c674-2504-4ac2-92b5-686613968687", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"cd48c674-2504-4ac2-92b5-686613968687","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:28577/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:28577/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 1fedc1c583d9
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 03c1d9e91359
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 1fedc1c583d9. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.