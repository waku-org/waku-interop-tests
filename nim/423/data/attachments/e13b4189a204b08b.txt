[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_no_content_topic with id: 2024-11-06_16-50-00__cc94a67d-0724-4cec-909d-85ba455952bf
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-06_16-50-00__cc94a67d-0724-4cec-909d-85ba455952bf__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.65.228
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['41396', '41397', '41398', '41399', '41400']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 41396:41396 -p 41397:41397 -p 41398:41398 -p 41399:41399 -p 41400:41400 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=41398 --rest-port=41396 --tcp-port=41397 --discv5-udp-port=41399 --rest-address=0.0.0.0 --nat=extip:172.18.65.228 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=42ce62c5f5b2fabad7e25b2ea09e55aba9fb2defa0fa4cfb3726afce9fded0e0 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=41400 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.65.228 waku 712e6f5fec972e4ad9562b33707c829ef1c90d53561695f0a199991783afc1ef
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container f4047eb26a40. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 712e6f5fec97. Setting up logs at ./log/docker/node1_2024-11-06_16-50-00__cc94a67d-0724-4cec-909d-85ba455952bf__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 41396
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41396/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41396/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.65.228/tcp/41397/p2p/16Uiu2HAmJsTivgMYvFByhzsM7Xdb36MLXRmSrkAt39yUNvQDXh7T","/ip4/172.18.65.228/tcp/41398/ws/p2p/16Uiu2HAmJsTivgMYvFByhzsM7Xdb36MLXRmSrkAt39yUNvQDXh7T"],"enrUri":"enr:-L24QB0jyv46QrP7rnwR3iSkGjpPpA2Y5AXyxsoTGvOWjhE-F6OhcujNivuM-71OIJePGp2lPSS_2HSPA_wJtaeKBLECgmlkgnY0gmlwhKwSQeSKbXVsdGlhZGRyc5YACASsEkHkBqG1AAoErBJB5Aahtt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDXFgKxLgxgqAq4DvQ7012Hsmqg4CUrwxZU6xAa99dYKaDdGNwgqG1g3VkcIKht4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-06_16-50-00__cc94a67d-0724-4cec-909d-85ba455952bf__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.208.105
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['8469', '8470', '8471', '8472', '8473']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 8469:8469 -p 8470:8470 -p 8471:8471 -p 8472:8472 -p 8473:8473 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=8471 --rest-port=8469 --tcp-port=8470 --discv5-udp-port=8472 --rest-address=0.0.0.0 --nat=extip:172.18.208.105 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=fcdbdad23cacb7787eb97aa6bfc9b1ee5068a69da6620a5f77da06adfe0f12b8 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=8473 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QB0jyv46QrP7rnwR3iSkGjpPpA2Y5AXyxsoTGvOWjhE-F6OhcujNivuM-71OIJePGp2lPSS_2HSPA_wJtaeKBLECgmlkgnY0gmlwhKwSQeSKbXVsdGlhZGRyc5YACASsEkHkBqG1AAoErBJB5Aahtt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDXFgKxLgxgqAq4DvQ7012Hsmqg4CUrwxZU6xAa99dYKaDdGNwgqG1g3VkcIKht4V3YWt1MgU --filternode=/ip4/172.18.65.228/tcp/41397/p2p/16Uiu2HAmJsTivgMYvFByhzsM7Xdb36MLXRmSrkAt39yUNvQDXh7T
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.208.105 waku 5a0f2a831df0d77d9cfa4b4cf01237e0acc14df265367749541bccc9ccfd6856
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 5a0f2a831df0. Setting up logs at ./log/docker/node2_2024-11-06_16-50-00__cc94a67d-0724-4cec-909d-85ba455952bf__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 8469
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8469/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8469/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.208.105/tcp/8470/p2p/16Uiu2HAmRvtZHnaXRLBF9geSpWM757B39XvkGyGW2aHowpBQjqZu","/ip4/172.18.208.105/tcp/8471/ws/p2p/16Uiu2HAmRvtZHnaXRLBF9geSpWM757B39XvkGyGW2aHowpBQjqZu"],"enrUri":"enr:-L24QJxYEpobEEstBUSjOSZIvq5QlhY8LAURgsp6R0O3dnTyV2ZGVqQS-B8p0NGMGW1Fc96A5iYl9QJZj7R7ORu8-yUCgmlkgnY0gmlwhKwS0GmKbXVsdGlhZGRyc5YACASsEtBpBiEWAAoErBLQaQYhF90DgnJzhQADAQAAiXNlY3AyNTZrMaEDxTqsNtUY0MV7HfWVHdY9RoewY_MHIpo0a8j09yMFtDSDdGNwgiEWg3VkcIIhGIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8469/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.65.228/tcp/41397/p2p/16Uiu2HAmJsTivgMYvFByhzsM7Xdb36MLXRmSrkAt39yUNvQDXh7T"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:41396/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8469/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "00a26bc2-edc1-4e46-96f7-15bd14404c26", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"00a26bc2-edc1-4e46-96f7-15bd14404c26","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:8469/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:8469/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 712e6f5fec97
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 5a0f2a831df0
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 712e6f5fec97. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.