[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_no_request_id with id: 2024-11-06_16-50-05__404ac66a-9fc3-47c8-8076-ff9befc6f25f
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-06_16-50-05__404ac66a-9fc3-47c8-8076-ff9befc6f25f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.121.1
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['58063', '58064', '58065', '58066', '58067']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 58063:58063 -p 58064:58064 -p 58065:58065 -p 58066:58066 -p 58067:58067 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=58065 --rest-port=58063 --tcp-port=58064 --discv5-udp-port=58066 --rest-address=0.0.0.0 --nat=extip:172.18.121.1 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=abffbff44ecbc59c688a141006a6a62db38fb73dafe5dfc32c8cddc73013a8a2 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=58067 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.121.1 waku 2fd1f31dbea514e9ddd3bba8c53cacbc25ec4ee0b5b0d07e3efc7f74aba6bec2
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 92c284dd1741. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 2fd1f31dbea5. Setting up logs at ./log/docker/node1_2024-11-06_16-50-05__404ac66a-9fc3-47c8-8076-ff9befc6f25f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 58063
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:58063/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:58063/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.121.1/tcp/58064/p2p/16Uiu2HAm7x986E9tamNth6mP4LYv5TZxnvzu7Sn8QLAPFTgsjtx8","/ip4/172.18.121.1/tcp/58065/ws/p2p/16Uiu2HAm7x986E9tamNth6mP4LYv5TZxnvzu7Sn8QLAPFTgsjtx8"],"enrUri":"enr:-L24QKPfvv4GjhwMlRZ-BzJuolgqAmI5_oUZNZRsroknqPBXUivQDyNVlBKk6pQXtt_gAT9Ud46wTPhhGCNuBDRavQsCgmlkgnY0gmlwhKwSeQGKbXVsdGlhZGRyc5YACASsEnkBBuLQAAoErBJ5AQbi0d0DgnJzhQADAQAAiXNlY3AyNTZrMaECuhpbr0Lb267Yn2y--o_6DP7tM8vf993SA3d4qC4flzmDdGNwguLQg3VkcILi0oV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-06_16-50-05__404ac66a-9fc3-47c8-8076-ff9befc6f25f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.199.83
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['3210', '3211', '3212', '3213', '3214']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 3210:3210 -p 3211:3211 -p 3212:3212 -p 3213:3213 -p 3214:3214 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=3212 --rest-port=3210 --tcp-port=3211 --discv5-udp-port=3213 --rest-address=0.0.0.0 --nat=extip:172.18.199.83 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=7d2d7e17f5afd0adc89ad2e6cab9ce111fd7629c024381d0fa1b3bb8eb9994d0 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=3214 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QKPfvv4GjhwMlRZ-BzJuolgqAmI5_oUZNZRsroknqPBXUivQDyNVlBKk6pQXtt_gAT9Ud46wTPhhGCNuBDRavQsCgmlkgnY0gmlwhKwSeQGKbXVsdGlhZGRyc5YACASsEnkBBuLQAAoErBJ5AQbi0d0DgnJzhQADAQAAiXNlY3AyNTZrMaECuhpbr0Lb267Yn2y--o_6DP7tM8vf993SA3d4qC4flzmDdGNwguLQg3VkcILi0oV3YWt1MgU --filternode=/ip4/172.18.121.1/tcp/58064/p2p/16Uiu2HAm7x986E9tamNth6mP4LYv5TZxnvzu7Sn8QLAPFTgsjtx8
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.199.83 waku 53cac2656d5d42f24df655b039ef02e3fc96c0c92a93acd5357beca970b83802
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 53cac2656d5d. Setting up logs at ./log/docker/node2_2024-11-06_16-50-05__404ac66a-9fc3-47c8-8076-ff9befc6f25f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 3210
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:3210/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:3210/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.199.83/tcp/3211/p2p/16Uiu2HAmE5ssrKApCPHcZdWu9UxAekrGgmdFDir4wn6gq8U8MCZD","/ip4/172.18.199.83/tcp/3212/ws/p2p/16Uiu2HAmE5ssrKApCPHcZdWu9UxAekrGgmdFDir4wn6gq8U8MCZD"],"enrUri":"enr:-L24QFBI6H2ZMbRsQCdHN_Gx1gEOQQT-urhN0fom0Zm33HsdDr44Ii4FNBq--tULywgv9ijwLEKtANWec5CD3ZuZz9oCgmlkgnY0gmlwhKwSx1OKbXVsdGlhZGRyc5YACASsEsdTBgyLAAoErBLHUwYMjN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDFTvjVO0Dfqn5fKadvpkKlfs4-LO1N3wqEiIAJ9-CxwiDdGNwggyLg3VkcIIMjYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:3210/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.121.1/tcp/58064/p2p/16Uiu2HAm7x986E9tamNth6mP4LYv5TZxnvzu7Sn8QLAPFTgsjtx8"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:58063/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:3210/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "f665196a-d00c-4fd8-99e5-8498954c48c9", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"f665196a-d00c-4fd8-99e5-8498954c48c9","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:3210/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:3210/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 2fd1f31dbea5
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 53cac2656d5d
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 2fd1f31dbea5. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.