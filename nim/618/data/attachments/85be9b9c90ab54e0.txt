[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_no_content_topic with id: 2025-01-16_04-06-37__217fd41a-2e14-4650-b75b-1f203625f5e5
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-16_04-06-37__217fd41a-2e14-4650-b75b-1f203625f5e5__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.164.180
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['13064', '13065', '13066', '13067', '13068']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 13064:13064 -p 13065:13065 -p 13066:13066 -p 13067:13067 -p 13068:13068 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=13066 --rest-port=13064 --tcp-port=13065 --discv5-udp-port=13067 --rest-address=0.0.0.0 --nat=extip:172.18.164.180 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=cfca67ad7c31f6993da5bdae740c63d16eb0e474ebcfec8a3db92e4eb2656b1b --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=13068 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.164.180 waku 108a37d35e04dc28752eaa850415e9a37cba17f28b12f085a618b456ba5bd134
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 108a37d35e04. Setting up logs at ./log/docker/node1_2025-01-16_04-06-37__217fd41a-2e14-4650-b75b-1f203625f5e5__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 13064
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 7542495339a5. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:13064/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:13064/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.164.180/tcp/13065/p2p/16Uiu2HAmLurUYKaThUYgDKmEfbTm4VE7wZqFEXvM8rLsnXTwCMiv","/ip4/172.18.164.180/tcp/13066/ws/p2p/16Uiu2HAmLurUYKaThUYgDKmEfbTm4VE7wZqFEXvM8rLsnXTwCMiv"],"enrUri":"enr:-L24QDF6z3INtzCvtt1eLpL6TPfKv-vQ11n3J8BON4eDW6gzTMX5HWrjp9rwjQomSqGDeXW6MfZItObwD_M1dBMITU0CgmlkgnY0gmlwhKwSpLSKbXVsdGlhZGRyc5YACASsEqS0BjMJAAoErBKktAYzCt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDeqxNo2WVJnaJMQs4OcKQgEBcgsdSrCnv1BlZfxZ2k6eDdGNwgjMJg3VkcIIzC4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-16_04-06-37__217fd41a-2e14-4650-b75b-1f203625f5e5__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.18.23
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['1901', '1902', '1903', '1904', '1905']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 1901:1901 -p 1902:1902 -p 1903:1903 -p 1904:1904 -p 1905:1905 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=1903 --rest-port=1901 --tcp-port=1902 --discv5-udp-port=1904 --rest-address=0.0.0.0 --nat=extip:172.18.18.23 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=7832e11d39aa85e0cbf58bedfb2deafc7d549d65c33d4011f5b99a6dd6495e4c --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=1905 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QDF6z3INtzCvtt1eLpL6TPfKv-vQ11n3J8BON4eDW6gzTMX5HWrjp9rwjQomSqGDeXW6MfZItObwD_M1dBMITU0CgmlkgnY0gmlwhKwSpLSKbXVsdGlhZGRyc5YACASsEqS0BjMJAAoErBKktAYzCt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDeqxNo2WVJnaJMQs4OcKQgEBcgsdSrCnv1BlZfxZ2k6eDdGNwgjMJg3VkcIIzC4V3YWt1MgU --filternode=/ip4/172.18.164.180/tcp/13065/p2p/16Uiu2HAmLurUYKaThUYgDKmEfbTm4VE7wZqFEXvM8rLsnXTwCMiv
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.18.23 waku 2ed01e209372f659e9356a8ce5dc4a587615fe1fd6f5bc07b71d78f35fd4b3ca
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 2ed01e209372. Setting up logs at ./log/docker/node2_2025-01-16_04-06-37__217fd41a-2e14-4650-b75b-1f203625f5e5__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 1901
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:1901/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:1901/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.18.23/tcp/1902/p2p/16Uiu2HAmUNCYWhnD3vZ28V6JvwLg4tNqxvxtWEAkCC5S37Kry8mg","/ip4/172.18.18.23/tcp/1903/ws/p2p/16Uiu2HAmUNCYWhnD3vZ28V6JvwLg4tNqxvxtWEAkCC5S37Kry8mg"],"enrUri":"enr:-L24QL8hV5XtQ0CN7oArsIhCIcK5yPStM8m5wjcgutpXZtkLPk8ZFbT3n6D-H73Ed24uQiRbmznVKqNFjWdAzoLpzVMCgmlkgnY0gmlwhKwSEheKbXVsdGlhZGRyc5YACASsEhIXBgduAAoErBISFwYHb90DgnJzhQADAQAAiXNlY3AyNTZrMaED6W3ngGaQ76sBwobR5RnQdjDuI_FqG8miRyrNfpfTs6uDdGNwggdug3VkcIIHcIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:1901/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.164.180/tcp/13065/p2p/16Uiu2HAmLurUYKaThUYgDKmEfbTm4VE7wZqFEXvM8rLsnXTwCMiv"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:13064/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:1901/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "4c862d9f-337c-4c55-b554-5f4a29e24984", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"4c862d9f-337c-4c55-b554-5f4a29e24984","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:1901/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:1901/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 108a37d35e04
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 2ed01e209372
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 108a37d35e04. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.