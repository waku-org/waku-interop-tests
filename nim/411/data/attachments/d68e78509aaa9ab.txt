[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_payload_equal_or_more_150_kb with id: 2024-10-28_04-13-52__5428feef-7203-4d5a-82b2-284dd273204c
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-10-28_04-13-52__5428feef-7203-4d5a-82b2-284dd273204c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.202.118
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['10269', '10270', '10271', '10272', '10273']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 10269:10269 -p 10270:10270 -p 10271:10271 -p 10272:10272 -p 10273:10273 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=10271 --rest-port=10269 --tcp-port=10270 --discv5-udp-port=10272 --rest-address=0.0.0.0 --nat=extip:172.18.202.118 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=5e3c86def0da7173c2d7e16bc2fdec6143d870962821ece6cc79ef76e3e7ef6e --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=10273 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.202.118 waku a64f655a95b3c8f886bd1b392ad058a070343c289b94310ac1629b0665a71be0
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container c9b90bdc8704. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID a64f655a95b3. Setting up logs at ./log/docker/node1_2024-10-28_04-13-52__5428feef-7203-4d5a-82b2-284dd273204c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 10269
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10269/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10269/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.202.118/tcp/10270/p2p/16Uiu2HAm2ffsbPKouEmh3GjPM8WFbT6svHet5iUSKtciMFeu2CiP","/ip4/172.18.202.118/tcp/10271/ws/p2p/16Uiu2HAm2ffsbPKouEmh3GjPM8WFbT6svHet5iUSKtciMFeu2CiP"],"enrUri":"enr:-LO4QPpZAQnM_rnKv-fxAGlp0d2QMzpDoAnBe3XlC3pf5_o5V2GuB0u7c4diBs0Y5_YeBGBdNeY675L5oCy9EcqjmmIBgmlkgnY0gmlwhKwSynaKbXVsdGlhZGRyc4wACgSsEsp2Bigf3QOCcnOFAAMBAACJc2VjcDI1NmsxoQJrl9GmcZSEAv4Qyo-E5r2R0_1ZuyrY9xjVhjfshhuH9IN0Y3CCKB6DdWRwgigghXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-10-28_04-13-52__5428feef-7203-4d5a-82b2-284dd273204c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.110.53
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['38313', '38314', '38315', '38316', '38317']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 38313:38313 -p 38314:38314 -p 38315:38315 -p 38316:38316 -p 38317:38317 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=38315 --rest-port=38313 --tcp-port=38314 --discv5-udp-port=38316 --rest-address=0.0.0.0 --nat=extip:172.18.110.53 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ecca64ec9aabdb4c0de16d4b52ca7b1aed72c8effe203fa70d8cd8cb230f4b18 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=38317 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QPpZAQnM_rnKv-fxAGlp0d2QMzpDoAnBe3XlC3pf5_o5V2GuB0u7c4diBs0Y5_YeBGBdNeY675L5oCy9EcqjmmIBgmlkgnY0gmlwhKwSynaKbXVsdGlhZGRyc4wACgSsEsp2Bigf3QOCcnOFAAMBAACJc2VjcDI1NmsxoQJrl9GmcZSEAv4Qyo-E5r2R0_1ZuyrY9xjVhjfshhuH9IN0Y3CCKB6DdWRwgigghXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.110.53 waku 532c0139e6bba0938789f30ec0c70e6d3f82458d2d8166ea485c59f212a72959
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 532c0139e6bb. Setting up logs at ./log/docker/node2_2024-10-28_04-13-52__5428feef-7203-4d5a-82b2-284dd273204c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 38313
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38313/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38313/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.110.53/tcp/38314/p2p/16Uiu2HAmVtALkWGCuJuGdRPpSt4ZTQ2fgaeT2izC4R4pY9sRCy3r","/ip4/172.18.110.53/tcp/38315/ws/p2p/16Uiu2HAmVtALkWGCuJuGdRPpSt4ZTQ2fgaeT2izC4R4pY9sRCy3r"],"enrUri":"enr:-LO4QLIxqChR7TOAwHyPXQWCaVZcNZMvlnqcuod_CW1iG71aSTahilrPFabyy0MnhHqColD8vJ5UUMRLDy6vOtbFXC0BgmlkgnY0gmlwhKwSbjWKbXVsdGlhZGRyc4wACgSsEm41BpWr3QOCcnOFAAMBAACJc2VjcDI1NmsxoQP_9oZY8MSUWeKpJuQ5OzBdayayKoXnk-N7DpD101UPfYN0Y3CClaqDdWRwgpWshXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38313/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.202.118/tcp/10270/p2p/16Uiu2HAm2ffsbPKouEmh3GjPM8WFbT6svHet5iUSKtciMFeu2CiP"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:10269/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38313/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:10269/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10269/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1730088836732200960,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38313/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1730088836732200960,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[35mDEBUG   [0m tests.relay.test_publish:test_publish.py:55 Running test with payload length of 204800 bytes
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:10269/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
[35mDEBUG   [0m tests.relay.test_publish:test_publish.py:55 Running test with payload length of 1048576 bytes
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:10269/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
[35mDEBUG   [0m tests.relay.test_publish:test_publish.py:55 Running test with payload length of 10485760 bytes
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:10269/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Failed to publish: Message size exceeded maximum of 153600 bytes'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id a64f655a95b3
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 532c0139e6bb
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container a64f655a95b3. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.