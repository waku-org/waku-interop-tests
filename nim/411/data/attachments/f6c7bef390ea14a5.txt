[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_invalid_request_id with id: 2024-10-28_04-07-07__cd306f15-6afd-4561-b4f1-32cbab0fd442
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-10-28_04-07-07__cd306f15-6afd-4561-b4f1-32cbab0fd442__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.49.185
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['37001', '37002', '37003', '37004', '37005']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 37001:37001 -p 37002:37002 -p 37003:37003 -p 37004:37004 -p 37005:37005 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=37003 --rest-port=37001 --tcp-port=37002 --discv5-udp-port=37004 --rest-address=0.0.0.0 --nat=extip:172.18.49.185 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=1b1ae1c2f7ff516ee4c576c4ca67f52d9eeef5da0a2f8b9eb7562ba43d5e5ab7 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=37005 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.49.185 waku a7df25a5cbe7bb84c9da57d8cfe041c528c2e1a7a8230407c1f7aeffbe284d00
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID a7df25a5cbe7. Setting up logs at ./log/docker/node1_2024-10-28_04-07-07__cd306f15-6afd-4561-b4f1-32cbab0fd442__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 37001
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 4282a63868c7. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:37001/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:37001/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.49.185/tcp/37002/p2p/16Uiu2HAmC8kptUKmTRHM1bg8Menx86F7TwuFRe66vcgPAPjTMcaV","/ip4/172.18.49.185/tcp/37003/ws/p2p/16Uiu2HAmC8kptUKmTRHM1bg8Menx86F7TwuFRe66vcgPAPjTMcaV"],"enrUri":"enr:-LO4QI-AVCqPQ2CmE6s7aMBeGzkQQeX5VyksxCWNMCu4UH2VYUqJITQ61IZaNN9tBFKZgwvzFLzuvxBtoHEIX7r0DswBgmlkgnY0gmlwhKwSMbmKbXVsdGlhZGRyc4wACgSsEjG5BpCL3QOCcnOFAAMBAACJc2VjcDI1NmsxoQL4QUit93xweMjjIXzP9HfgFCVvNhDtKbUVrHkisibWgoN0Y3CCkIqDdWRwgpCMhXdha3UyBQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-10-28_04-07-07__cd306f15-6afd-4561-b4f1-32cbab0fd442__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.109.99
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['28217', '28218', '28219', '28220', '28221']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 28217:28217 -p 28218:28218 -p 28219:28219 -p 28220:28220 -p 28221:28221 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=28219 --rest-port=28217 --tcp-port=28218 --discv5-udp-port=28220 --rest-address=0.0.0.0 --nat=extip:172.18.109.99 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=d9ce643c41f643ff8fbccd7bbf4aa3d27f32f57e47faf948b30ebc63bd5afc82 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=28221 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-LO4QI-AVCqPQ2CmE6s7aMBeGzkQQeX5VyksxCWNMCu4UH2VYUqJITQ61IZaNN9tBFKZgwvzFLzuvxBtoHEIX7r0DswBgmlkgnY0gmlwhKwSMbmKbXVsdGlhZGRyc4wACgSsEjG5BpCL3QOCcnOFAAMBAACJc2VjcDI1NmsxoQL4QUit93xweMjjIXzP9HfgFCVvNhDtKbUVrHkisibWgoN0Y3CCkIqDdWRwgpCMhXdha3UyBQ --filternode=/ip4/172.18.49.185/tcp/37002/p2p/16Uiu2HAmC8kptUKmTRHM1bg8Menx86F7TwuFRe66vcgPAPjTMcaV
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.109.99 waku e2145edf9ad55ca4b9c99302a023d2ad8a33e07bd98dfd5a66972e8ec3e8a6cd
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID e2145edf9ad5. Setting up logs at ./log/docker/node2_2024-10-28_04-07-07__cd306f15-6afd-4561-b4f1-32cbab0fd442__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 28217
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:28217/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:28217/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.109.99/tcp/28218/p2p/16Uiu2HAmEHjv2vEY6u8zJgJA7SsXG4L6sVwYapk13x3KSSBGPtUn","/ip4/172.18.109.99/tcp/28219/ws/p2p/16Uiu2HAmEHjv2vEY6u8zJgJA7SsXG4L6sVwYapk13x3KSSBGPtUn"],"enrUri":"enr:-LO4QJgKZKd81cY3BlrMFLDZkRZB0odoEwjViFz1BMTz8sDOB76SFpJMjy7Z3505hRDd1e017DboejqkkmYMPmh-ySYBgmlkgnY0gmlwhKwSbWOKbXVsdGlhZGRyc4wACgSsEm1jBm473QOCcnOFAAMBAACJc2VjcDI1NmsxoQMYRdrKRFHOFYe2BrKQf7Kk13Jh1HwOKdziRnFR7uy014N0Y3CCbjqDdWRwgm48hXdha3UyAA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:28217/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.49.185/tcp/37002/p2p/16Uiu2HAmC8kptUKmTRHM1bg8Menx86F7TwuFRe66vcgPAPjTMcaV"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:37001/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:28217/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "ab956dab-688a-4ebd-b7d2-d6d33eba24ea", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"ab956dab-688a-4ebd-b7d2-d6d33eba24ea","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:28217/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:28217/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id a7df25a5cbe7
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id e2145edf9ad5
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container a7df25a5cbe7. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.