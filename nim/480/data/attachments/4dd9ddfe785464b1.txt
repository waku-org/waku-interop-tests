[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_invalid_pubsub_topic_format with id: 2024-12-02_04-11-36__e1ede58f-2d0d-47cc-b0b1-cdaa0856f05e
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-02_04-11-36__e1ede58f-2d0d-47cc-b0b1-cdaa0856f05e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.127.194
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['47760', '47761', '47762', '47763', '47764']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 47760:47760 -p 47761:47761 -p 47762:47762 -p 47763:47763 -p 47764:47764 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=47762 --rest-port=47760 --tcp-port=47761 --discv5-udp-port=47763 --rest-address=0.0.0.0 --nat=extip:172.18.127.194 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=f05a875c55744eed9eeaa1d6afc4ae72aaabdb7dbfbdcdf0cc9936fc6c80ddf5 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=47764 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.127.194 waku 700ef3d98791234ba1e95cb870ccc7bc2b63cc1d91d5166585fa83713501f795
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 700ef3d98791. Setting up logs at ./log/docker/node1_2024-12-02_04-11-36__e1ede58f-2d0d-47cc-b0b1-cdaa0856f05e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 47760
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container c3bea3033880. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:47760/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:47760/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.127.194/tcp/47761/p2p/16Uiu2HAm9YxwgYvRFnB9gjqhnhmfPtPtAjUcKWWPa9p6nxDASvjW","/ip4/172.18.127.194/tcp/47762/ws/p2p/16Uiu2HAm9YxwgYvRFnB9gjqhnhmfPtPtAjUcKWWPa9p6nxDASvjW"],"enrUri":"enr:-L24QB1ensx3tOwOK3bvH6AaqT2Z6TMFZxya8ffIWZ5WZcxDD8h3hbRxuO4ciggyIQSh-G3fqvk-bxUkJqYrltPjFfYCgmlkgnY0gmlwhKwSf8KKbXVsdGlhZGRyc5YACASsEn_CBrqRAAoErBJ_wga6kt0DgnJzhQADAQAAiXNlY3AyNTZrMaEC0eHdCqn1MpJYV_V_cq2qpmvQqewSmAO30pZQT8oojE2DdGNwgrqRg3VkcIK6k4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-02_04-11-36__e1ede58f-2d0d-47cc-b0b1-cdaa0856f05e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.25.68
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['35603', '35604', '35605', '35606', '35607']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 35603:35603 -p 35604:35604 -p 35605:35605 -p 35606:35606 -p 35607:35607 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=35605 --rest-port=35603 --tcp-port=35604 --discv5-udp-port=35606 --rest-address=0.0.0.0 --nat=extip:172.18.25.68 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=8be2dd7d4be0aef4aea1ea1a5bc7aea4c20ea70d3cb4258cfe994e60a4af99ad --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=35607 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QB1ensx3tOwOK3bvH6AaqT2Z6TMFZxya8ffIWZ5WZcxDD8h3hbRxuO4ciggyIQSh-G3fqvk-bxUkJqYrltPjFfYCgmlkgnY0gmlwhKwSf8KKbXVsdGlhZGRyc5YACASsEn_CBrqRAAoErBJ_wga6kt0DgnJzhQADAQAAiXNlY3AyNTZrMaEC0eHdCqn1MpJYV_V_cq2qpmvQqewSmAO30pZQT8oojE2DdGNwgrqRg3VkcIK6k4V3YWt1MgU --filternode=/ip4/172.18.127.194/tcp/47761/p2p/16Uiu2HAm9YxwgYvRFnB9gjqhnhmfPtPtAjUcKWWPa9p6nxDASvjW
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.25.68 waku db2e7cab4f2faf10bc27b012656550347778023478aa0ff86ae67966db4f6dc6
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID db2e7cab4f2f. Setting up logs at ./log/docker/node2_2024-12-02_04-11-36__e1ede58f-2d0d-47cc-b0b1-cdaa0856f05e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 35603
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:35603/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:35603/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.25.68/tcp/35604/p2p/16Uiu2HAmFjyxHwtSx1Nr95zpqAcW4mHhSNj4WzwfHWuhmqfEmJe1","/ip4/172.18.25.68/tcp/35605/ws/p2p/16Uiu2HAmFjyxHwtSx1Nr95zpqAcW4mHhSNj4WzwfHWuhmqfEmJe1"],"enrUri":"enr:-L24QBd6yZ2aAR-4wpYLnASKiwR0yLzLW1T_mRwmTn2km_ndV-dbiO7LhbyWYMXS8cPVFA2FeNrxTi_z8IWJSh7zDp0CgmlkgnY0gmlwhKwSGUSKbXVsdGlhZGRyc5YACASsEhlEBosUAAoErBIZRAaLFd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDLdqEOYZmJvN4bMOA2BseFb2x_fZyioi0eP7ZuqDZBDaDdGNwgosUg3VkcIKLFoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:35603/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.127.194/tcp/47761/p2p/16Uiu2HAm9YxwgYvRFnB9gjqhnhmfPtPtAjUcKWWPa9p6nxDASvjW"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:47760/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:35603/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "e1c4ecbc-462c-4e85-8abc-6eb9bd8c0d75", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"e1c4ecbc-462c-4e85-8abc-6eb9bd8c0d75","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:35603/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": ["/waku/2/rs/3/1"]}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:35603/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 700ef3d98791
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id db2e7cab4f2f
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 700ef3d98791. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.