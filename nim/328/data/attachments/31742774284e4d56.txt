[35mDEBUG   [0m src.postgres_setup:postgres_setup.py:36 Postgres container started
[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_on_empty_postgress_db with id: 2024-08-23_04-31-21__cd42cdd5-685f-4493-a002-d8e97576bc37
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.store:store.py:28 Running fixture setup: store_setup
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:17 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:84 WakuNode instance initialized with log path ./log/docker/publishing_node1_2024-08-23_04-31-21__cd42cdd5-685f-4493-a002-d8e97576bc37__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:88 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:20 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:23 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:80 Generated random external IP 172.18.113.168
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:73 Generated ports ['57520', '57521', '57522', '57523', '57524']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:430 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:162 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:164 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:47 docker run -i -t -p 57520:57520 -p 57521:57521 -p 57522:57522 -p 57523:57523 -p 57524:57524 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=57522 --rest-port=57520 --tcp-port=57521 --discv5-udp-port=57523 --rest-address=0.0.0.0 --nat=extip:172.18.113.168 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b3c5affdebef0c934c73de73d88d7cdb6a514f68ccaf1ee2bd13772068fe341e --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=57524 --metrics-logging=true --store=true --relay=true --store-message-db-url=postgres://postgres:test123@postgres:5432/postgres
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:53 docker network connect --ip 172.18.113.168 waku b53ba48ffb3105d325567546d4f6e9a5059cda2c8dcce6b70e8ac7bcbb6ffcb9
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:56 Container started with ID b53ba48ffb31. Setting up logs at ./log/docker/publishing_node1_2024-08-23_04-31-21__cd42cdd5-685f-4493-a002-d8e97576bc37__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:176 Started container from image wakuorg/nwaku:latest. REST: 57520
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:57520/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Initializing","protocolsHealth":[]}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:57520/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Initializing","protocolsHealth":[]}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:57520/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:276 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:57520/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.113.168/tcp/57521/p2p/16Uiu2HAm6Jw1xwmYJGRo6WzuD5psdJsw1eH7s5o2sShDubcMsx4U","/ip4/172.18.113.168/tcp/57522/ws/p2p/16Uiu2HAm6Jw1xwmYJGRo6WzuD5psdJsw1eH7s5o2sShDubcMsx4U"],"enrUri":"enr:-LO4QO5DiDpN0IVOZzcVooANS8LSVLyYSccmto5f8YvmrEy0CX6Wr6rg2FaA7PsjUidQfd2d7NOo3zgbHGQKSIrqxwcBgmlkgnY0gmlwhKwScaiKbXVsdGlhZGRyc4wACgSsEnGoBuCy3QOCcnOFAAMBAACJc2VjcDI1NmsxoQKhtn5QzoHZVvzOOfLY6b9ReZ4R5YZTZQzkaSMSkrp_9YN0Y3CC4LGDdWRwguCzhXdha3UyAw"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:281 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:17 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:84 WakuNode instance initialized with log path ./log/docker/store_node1_2024-08-23_04-31-21__cd42cdd5-685f-4493-a002-d8e97576bc37__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:88 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:20 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:23 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:80 Generated random external IP 172.18.61.39
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:73 Generated ports ['62928', '62929', '62930', '62931', '62932']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:430 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:162 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:164 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:47 docker run -i -t -p 62928:62928 -p 62929:62929 -p 62930:62930 -p 62931:62931 -p 62932:62932 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=62930 --rest-port=62928 --tcp-port=62929 --discv5-udp-port=62931 --rest-address=0.0.0.0 --nat=extip:172.18.61.39 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=973dce2b4d98fa7b4b566b77ce1abab8cd05511be4feaff28bdaf3f08faaefaa --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=62932 --metrics-logging=true --discv5-bootstrap-node=enr:-LO4QO5DiDpN0IVOZzcVooANS8LSVLyYSccmto5f8YvmrEy0CX6Wr6rg2FaA7PsjUidQfd2d7NOo3zgbHGQKSIrqxwcBgmlkgnY0gmlwhKwScaiKbXVsdGlhZGRyc4wACgSsEnGoBuCy3QOCcnOFAAMBAACJc2VjcDI1NmsxoQKhtn5QzoHZVvzOOfLY6b9ReZ4R5YZTZQzkaSMSkrp_9YN0Y3CC4LGDdWRwguCzhXdha3UyAw --storenode=/ip4/172.18.113.168/tcp/57521/p2p/16Uiu2HAm6Jw1xwmYJGRo6WzuD5psdJsw1eH7s5o2sShDubcMsx4U --store=false --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:53 docker network connect --ip 172.18.61.39 waku 6a8911e63ba328968153bfe1ab5bcda1be32e4d985178053a868c27b2b42963d
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:56 Container started with ID 6a8911e63ba3. Setting up logs at ./log/docker/store_node1_2024-08-23_04-31-21__cd42cdd5-685f-4493-a002-d8e97576bc37__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:176 Started container from image wakuorg/nwaku:latest. REST: 62928
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:62928/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:276 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:62928/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.61.39/tcp/62929/p2p/16Uiu2HAm5cL9ywiPEZEf1XKHJQqiaJyHktNdXUtZYQYCWFWTTEZY","/ip4/172.18.61.39/tcp/62930/ws/p2p/16Uiu2HAm5cL9ywiPEZEf1XKHJQqiaJyHktNdXUtZYQYCWFWTTEZY"],"enrUri":"enr:-LO4QJWBwBsZr8R2QXSKBf-9lnC7Htjz3qqBfn-x_0cRGtL5IQMTYwG7qLr7gUO2NEaB5GU-_MQK9QImGDk4odHDAH4BgmlkgnY0gmlwhKwSPSeKbXVsdGlhZGRyc4wACgSsEj0nBvXS3QOCcnOFAAMBAACJc2VjcDI1NmsxoQKXT9e86JZVMPKsioalLK647BqvbWjBBp-5eD_5g24OA4N0Y3CC9dGDdWRwgvXThXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:281 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:62928/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.113.168/tcp/57521/p2p/16Uiu2HAm6Jw1xwmYJGRo6WzuD5psdJsw1eH7s5o2sShDubcMsx4U"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:57520/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/0"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:62928/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/0"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.store:store.py:128 Relaying message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:57520/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F0" -H "Content-Type: application/json" -d '{"payload": "U3RvcmUgd29ya3MhIQ==", "contentTopic": "/myapp/1/latest/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.2 seconds
[35mDEBUG   [0m src.steps.store:store.py:216 Checking that peer wakuorg/nwaku:latest can find the stored message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:57520/store/v3/messages?pubsubTopic=%2Fwaku%2F2%2Frs%2F3%2F0&pageSize=5&ascending=true" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"","statusCode":200,"statusDesc":"OK","messages":[{"messageHash":"38hze3Uwj1fhuezpEctzvG9SMnOJ1FfiBov6nCKwwsg="}]}'
[35mDEBUG   [0m src.steps.store:store.py:216 Checking that peer wakuorg/nwaku:latest can find the stored message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:62928/store/v3/messages?pubsubTopic=%2Fwaku%2F2%2Frs%2F3%2F0&pageSize=5&ascending=true" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"1e04d03d55b7c01bbe11","statusCode":200,"statusDesc":"OK","messages":[{"messageHash":"38hze3Uwj1fhuezpEctzvG9SMnOJ1FfiBov6nCKwwsg="}]}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:220 Stopping container with id b53ba48ffb31
[35mDEBUG   [0m src.node.waku_node:waku_node.py:227 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:220 Stopping container with id 6a8911e63ba3
[35mDEBUG   [0m src.node.waku_node:waku_node.py:227 Container stopped.
[35mDEBUG   [0m src.postgres_setup:postgres_setup.py:44 Postgres container stopped and removed.