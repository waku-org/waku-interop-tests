[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_pubsub_topic_list_instead_of_string with id: 2025-01-28_04-03-26__acaed7b8-303e-4e94-8f8f-e88ff83d5910
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-28_04-03-26__acaed7b8-303e-4e94-8f8f-e88ff83d5910__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.97.37
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['10036', '10037', '10038', '10039', '10040']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 10036:10036 -p 10037:10037 -p 10038:10038 -p 10039:10039 -p 10040:10040 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=10038 --rest-port=10036 --tcp-port=10037 --discv5-udp-port=10039 --rest-address=0.0.0.0 --nat=extip:172.18.97.37 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=df03fd51e8e233797e9f2adaf0a4fa1aba5efa6bb7eb048cca11fe6496aaaaf0 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=10040 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.97.37 waku a5174d28ab079715429af4076060821352f13726ff0cf034e3ce310077430130
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID a5174d28ab07. Setting up logs at ./log/docker/node1_2025-01-28_04-03-26__acaed7b8-303e-4e94-8f8f-e88ff83d5910__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 10036
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 33f7adc0f719. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10036/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10036/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.97.37/tcp/10037/p2p/16Uiu2HAm7yTfiAX5dSJkEGy2BVzTRGmC6SvJSCovtcrjKxviWqBh","/ip4/172.18.97.37/tcp/10038/ws/p2p/16Uiu2HAm7yTfiAX5dSJkEGy2BVzTRGmC6SvJSCovtcrjKxviWqBh"],"enrUri":"enr:-L24QLKrxBWx5XhMxBlyG5CYd_ncSxEcORvlNfmCc2R5u2T6AvDBx5RTGA7lv_XvC2x1cH50oxAJUvCQPvc3W6ZGWBcCgmlkgnY0gmlwhKwSYSWKbXVsdGlhZGRyc5YACASsEmElBic1AAoErBJhJQYnNt0DgnJzhQADAQAAiXNlY3AyNTZrMaECunDodSnyHEONVTsRrRJNsWfYnI_-BpStOydq8W2aTiSDdGNwgic1g3VkcIInN4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-28_04-03-26__acaed7b8-303e-4e94-8f8f-e88ff83d5910__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.141.169
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['63870', '63871', '63872', '63873', '63874']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 63870:63870 -p 63871:63871 -p 63872:63872 -p 63873:63873 -p 63874:63874 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=63872 --rest-port=63870 --tcp-port=63871 --discv5-udp-port=63873 --rest-address=0.0.0.0 --nat=extip:172.18.141.169 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=db1e4a914352d8db95e20dbb612ec24fd748a4fe7fad591a7c833f81bbdb7fab --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=63874 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QLKrxBWx5XhMxBlyG5CYd_ncSxEcORvlNfmCc2R5u2T6AvDBx5RTGA7lv_XvC2x1cH50oxAJUvCQPvc3W6ZGWBcCgmlkgnY0gmlwhKwSYSWKbXVsdGlhZGRyc5YACASsEmElBic1AAoErBJhJQYnNt0DgnJzhQADAQAAiXNlY3AyNTZrMaECunDodSnyHEONVTsRrRJNsWfYnI_-BpStOydq8W2aTiSDdGNwgic1g3VkcIInN4V3YWt1MgU --filternode=/ip4/172.18.97.37/tcp/10037/p2p/16Uiu2HAm7yTfiAX5dSJkEGy2BVzTRGmC6SvJSCovtcrjKxviWqBh
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.141.169 waku 4ee5d7ca77f4bf863ed3c3fe3223eea10b0f175bfb96818b9072d7b3e1acae65
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 4ee5d7ca77f4. Setting up logs at ./log/docker/node2_2025-01-28_04-03-26__acaed7b8-303e-4e94-8f8f-e88ff83d5910__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 63870
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:63870/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:63870/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.141.169/tcp/63871/p2p/16Uiu2HAkwqeJVGuguDe852GuqF6DUqqWZGE6pXnPEdBVLkgrnqRp","/ip4/172.18.141.169/tcp/63872/ws/p2p/16Uiu2HAkwqeJVGuguDe852GuqF6DUqqWZGE6pXnPEdBVLkgrnqRp"],"enrUri":"enr:-L24QIiu4wJQjjPeBKY_6x3Ei3F57lQblId-5Vfjl0W2pUN4VCgPMPbPvWqSDXwRxvLaBMA-BfDhbKx-dEzqsL7r0h8CgmlkgnY0gmlwhKwSjamKbXVsdGlhZGRyc5YACASsEo2pBvl_AAoErBKNqQb5gN0DgnJzhQADAQAAiXNlY3AyNTZrMaECI9tqk7FDNoyizny61MY7q8vaPfOQOzIWvMcPK6V2zReDdGNwgvl_g3VkcIL5gYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:63870/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.97.37/tcp/10037/p2p/16Uiu2HAm7yTfiAX5dSJkEGy2BVzTRGmC6SvJSCovtcrjKxviWqBh"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:10036/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:63870/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "f8cbc098-8ddb-4df2-a1e3-0697de4eecf6", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"f8cbc098-8ddb-4df2-a1e3-0697de4eecf6","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:63870/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": ["/waku/2/rs/3/1"]}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:63870/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id a5174d28ab07
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 4ee5d7ca77f4
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container a5174d28ab07. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.