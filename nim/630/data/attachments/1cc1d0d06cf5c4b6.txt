[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_invalid_request_id with id: 2025-01-28_04-05-31__d6ad30db-a578-414f-a8b3-b8ee32e37d4a
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-28_04-05-31__d6ad30db-a578-414f-a8b3-b8ee32e37d4a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.81.132
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['17582', '17583', '17584', '17585', '17586']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 17582:17582 -p 17583:17583 -p 17584:17584 -p 17585:17585 -p 17586:17586 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=17584 --rest-port=17582 --tcp-port=17583 --discv5-udp-port=17585 --rest-address=0.0.0.0 --nat=extip:172.18.81.132 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=00f1a8d9ee561213b94ad9dcd27c8ac21ace6ec15374ebf80c67c56ba1bb595e --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=17586 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.81.132 waku 9cf1f5486b6da89a4de7247c5395358677fbd7dc85c8f73f0e501554a6569360
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 9cf1f5486b6d. Setting up logs at ./log/docker/node1_2025-01-28_04-05-31__d6ad30db-a578-414f-a8b3-b8ee32e37d4a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 17582
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 3dd777329220. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17582/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17582/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.81.132/tcp/17583/p2p/16Uiu2HAm33VEmvMLz6fmgPmNpMj8twxQerdZWA4ujQDE3aMypMD4","/ip4/172.18.81.132/tcp/17584/ws/p2p/16Uiu2HAm33VEmvMLz6fmgPmNpMj8twxQerdZWA4ujQDE3aMypMD4"],"enrUri":"enr:-L24QLCMCljyOEEbXheoHZrP8tkvCHjZkVXoOwi2VZjBj1UoU9dbaPCQzylvk2X8IwwoOYUEybqDnw2EWZnVlfbf-yACgmlkgnY0gmlwhKwSUYSKbXVsdGlhZGRyc5YACASsElGEBkSvAAoErBJRhAZEsN0DgnJzhQADAQAAiXNlY3AyNTZrMaECcS6SaqMZkAOGWscsF8fDqKJ6SKTInGTQn00sQmYoVyODdGNwgkSvg3VkcIJEsYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-28_04-05-31__d6ad30db-a578-414f-a8b3-b8ee32e37d4a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.88.43
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['61105', '61106', '61107', '61108', '61109']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 61105:61105 -p 61106:61106 -p 61107:61107 -p 61108:61108 -p 61109:61109 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=61107 --rest-port=61105 --tcp-port=61106 --discv5-udp-port=61108 --rest-address=0.0.0.0 --nat=extip:172.18.88.43 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=a96decc51f82069ded3d7efac46f9d8d6419e6d9abb4b5fab7dfa6a5eebe02be --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=61109 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QLCMCljyOEEbXheoHZrP8tkvCHjZkVXoOwi2VZjBj1UoU9dbaPCQzylvk2X8IwwoOYUEybqDnw2EWZnVlfbf-yACgmlkgnY0gmlwhKwSUYSKbXVsdGlhZGRyc5YACASsElGEBkSvAAoErBJRhAZEsN0DgnJzhQADAQAAiXNlY3AyNTZrMaECcS6SaqMZkAOGWscsF8fDqKJ6SKTInGTQn00sQmYoVyODdGNwgkSvg3VkcIJEsYV3YWt1MgU --filternode=/ip4/172.18.81.132/tcp/17583/p2p/16Uiu2HAm33VEmvMLz6fmgPmNpMj8twxQerdZWA4ujQDE3aMypMD4
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.88.43 waku 3b5daf51cbb69abcfcc3676c33bc177043e14529b5ae454e3b8603bb6dd23003
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 3b5daf51cbb6. Setting up logs at ./log/docker/node2_2025-01-28_04-05-31__d6ad30db-a578-414f-a8b3-b8ee32e37d4a__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 61105
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:61105/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:61105/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.88.43/tcp/61106/p2p/16Uiu2HAm7CuJWKAb1p1QrYtQRifswMfv7yraB562gkpBVGevErJq","/ip4/172.18.88.43/tcp/61107/ws/p2p/16Uiu2HAm7CuJWKAb1p1QrYtQRifswMfv7yraB562gkpBVGevErJq"],"enrUri":"enr:-L24QExulolRVIPcqVxVBJrV736OcFT4IwRTdtvm1KlCzxzwFqzTIhZ_1IlN_Mab-4PdQmvAPzNdikUWcOJcjcOj3T4CgmlkgnY0gmlwhKwSWCuKbXVsdGlhZGRyc5YACASsElgrBu6yAAoErBJYKwbus90DgnJzhQADAQAAiXNlY3AyNTZrMaECrwbBrRKCVBXs4109Ba2bBTqP7tHli6Jw7jO-0I0rOCaDdGNwgu6yg3VkcILutIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:61105/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.81.132/tcp/17583/p2p/16Uiu2HAm33VEmvMLz6fmgPmNpMj8twxQerdZWA4ujQDE3aMypMD4"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17582/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:61105/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "55f0deec-1380-49e6-a789-190040288885", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"55f0deec-1380-49e6-a789-190040288885","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:61105/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:61105/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 9cf1f5486b6d
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 3b5daf51cbb6
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 9cf1f5486b6d. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.