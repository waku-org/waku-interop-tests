[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_payload_equal_or_more_150_kb with id: 2025-01-29_12-37-32__4a67de74-c19d-4ff7-b912-28380d2c9760
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-29_12-37-32__4a67de74-c19d-4ff7-b912-28380d2c9760__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.36.231
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['8466', '8467', '8468', '8469', '8470']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 8466:8466 -p 8467:8467 -p 8468:8468 -p 8469:8469 -p 8470:8470 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=8468 --rest-port=8466 --tcp-port=8467 --discv5-udp-port=8469 --rest-address=0.0.0.0 --nat=extip:172.18.36.231 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=51f2cacaeac193b4e697ddc3ceddbeaee087c0f81b368ac5e9dad7fd1f5a6af9 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=8470 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.36.231 waku 9943ae1b71de474ea48c933e29683d5b16f5c6d7099fa5ea2e39cdd6b11a77c6
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 9943ae1b71de. Setting up logs at ./log/docker/node1_2025-01-29_12-37-32__4a67de74-c19d-4ff7-b912-28380d2c9760__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 8466
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 6f7319d7c3df. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8466/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8466/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.36.231/tcp/8467/p2p/16Uiu2HAm1YPxDtMzma9pcF3wZ3ez27F5PC89Qn4T8sENT2dxZz4L","/ip4/172.18.36.231/tcp/8468/ws/p2p/16Uiu2HAm1YPxDtMzma9pcF3wZ3ez27F5PC89Qn4T8sENT2dxZz4L"],"enrUri":"enr:-L24QLsAJOcRAEry8Ris6QWpj8n20FKpa2ZpuOY3RDQF7DKYUbljOY0cc5ReOVq1ZycpYr8f3W0gFYh7aeRfHvrt8rECgmlkgnY0gmlwhKwSJOeKbXVsdGlhZGRyc5YACASsEiTnBiETAAoErBIk5wYhFN0DgnJzhQADAQAAiXNlY3AyNTZrMaECWt8Quoz-WsFGYqk00aAU1ZPw5bQItdHmPoLbk8PRKfWDdGNwgiETg3VkcIIhFYV3YWt1MgE"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-29_12-37-32__4a67de74-c19d-4ff7-b912-28380d2c9760__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.233.162
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['60246', '60247', '60248', '60249', '60250']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 60246:60246 -p 60247:60247 -p 60248:60248 -p 60249:60249 -p 60250:60250 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=60248 --rest-port=60246 --tcp-port=60247 --discv5-udp-port=60249 --rest-address=0.0.0.0 --nat=extip:172.18.233.162 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b0ebe3534c8d303fcf7db68b3ab346ce972f2c9a9d831c3ad8ca5e3ec19dc55f --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=60250 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-L24QLsAJOcRAEry8Ris6QWpj8n20FKpa2ZpuOY3RDQF7DKYUbljOY0cc5ReOVq1ZycpYr8f3W0gFYh7aeRfHvrt8rECgmlkgnY0gmlwhKwSJOeKbXVsdGlhZGRyc5YACASsEiTnBiETAAoErBIk5wYhFN0DgnJzhQADAQAAiXNlY3AyNTZrMaECWt8Quoz-WsFGYqk00aAU1ZPw5bQItdHmPoLbk8PRKfWDdGNwgiETg3VkcIIhFYV3YWt1MgE
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.233.162 waku 809255b4de337dac7af64b7e9e38aacf0095d48fd27407ec7bb872bf03b6d6e4
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 809255b4de33. Setting up logs at ./log/docker/node2_2025-01-29_12-37-32__4a67de74-c19d-4ff7-b912-28380d2c9760__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 60246
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:60246/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:60246/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.233.162/tcp/60247/p2p/16Uiu2HAm2bASMomG1a8gLbn1p2LjbB5qvuxwtmcD65jApR23LWX5","/ip4/172.18.233.162/tcp/60248/ws/p2p/16Uiu2HAm2bASMomG1a8gLbn1p2LjbB5qvuxwtmcD65jApR23LWX5"],"enrUri":"enr:-L24QOo-wRLjCYOyE2YN1yiyxpEjHLmCfYg9Cdq7Qduyhew9NCRTWlwiI0YyQhrruZ1E6JBI4eFZpumrGKpWv0-bu5MCgmlkgnY0gmlwhKwS6aKKbXVsdGlhZGRyc5YACASsEumiButXAAoErBLpogbrWN0DgnJzhQADAQAAiXNlY3AyNTZrMaECanA2n1d5HurAPvWPYllg9r_iDjZFQH0KaUK1Q66jrRyDdGNwgutXg3VkcILrWYV3YWt1MgE"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:60246/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.36.231/tcp/8467/p2p/16Uiu2HAm1YPxDtMzma9pcF3wZ3ez27F5PC89Qn4T8sENT2dxZz4L"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8466/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:60246/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8466/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8466/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1738154255304869632,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:60246/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1738154255304869632,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[35mDEBUG   [0m tests.relay.test_publish:test_publish.py:55 Running test with payload length of 204800 bytes
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:8466/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Failed to publish: Message size exceeded maximum of 153600 bytes'
[35mDEBUG   [0m tests.relay.test_publish:test_publish.py:55 Running test with payload length of 1048576 bytes
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:8466/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Failed to publish: Message size exceeded maximum of 153600 bytes'
[35mDEBUG   [0m tests.relay.test_publish:test_publish.py:55 Running test with payload length of 10485760 bytes
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:8466/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Failed to publish: Message size exceeded maximum of 153600 bytes'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 9943ae1b71de
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 809255b4de33
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 9943ae1b71de. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.