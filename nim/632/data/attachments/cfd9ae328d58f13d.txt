[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_invalid_pubsub_topic_format with id: 2025-01-29_12-38-26__aef94c75-73a1-45e8-b0a7-0ac90ca0a027
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-29_12-38-26__aef94c75-73a1-45e8-b0a7-0ac90ca0a027__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.34.118
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['53301', '53302', '53303', '53304', '53305']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 53301:53301 -p 53302:53302 -p 53303:53303 -p 53304:53304 -p 53305:53305 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=53303 --rest-port=53301 --tcp-port=53302 --discv5-udp-port=53304 --rest-address=0.0.0.0 --nat=extip:172.18.34.118 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=fcfe0db88ecb1807dea345cab8bbcdd1d3426d09ca00bdfa3923ce29f48faa68 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=53305 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.34.118 waku e8e68c9bd369832e8a223a4e2e8cd8878dd34b5a70b4f78e096c49f2431edaff
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID e8e68c9bd369. Setting up logs at ./log/docker/node1_2025-01-29_12-38-26__aef94c75-73a1-45e8-b0a7-0ac90ca0a027__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 53301
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 97e26e358d66. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:53301/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:53301/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.34.118/tcp/53302/p2p/16Uiu2HAmKEukitog8FjWPpNV2qQHrW6S1m7tdR4gctQSDYbVmNjQ","/ip4/172.18.34.118/tcp/53303/ws/p2p/16Uiu2HAmKEukitog8FjWPpNV2qQHrW6S1m7tdR4gctQSDYbVmNjQ"],"enrUri":"enr:-L24QJ0Fy-tJ42F_FOlyClIWV81jqPF5ya1ARSCDZ9iG7WzxUFkchJd8pOzu8piHviL6PkP75ay0b9s17kCENuYp_TkCgmlkgnY0gmlwhKwSInaKbXVsdGlhZGRyc5YACASsEiJ2BtA2AAoErBIidgbQN90DgnJzhQADAQAAiXNlY3AyNTZrMaEDYdasIOZGNLHg7X5cjWdJxwTf3NyGjDV3fnRUztmu7C-DdGNwgtA2g3VkcILQOIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-29_12-38-26__aef94c75-73a1-45e8-b0a7-0ac90ca0a027__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.113.166
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['37762', '37763', '37764', '37765', '37766']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 37762:37762 -p 37763:37763 -p 37764:37764 -p 37765:37765 -p 37766:37766 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=37764 --rest-port=37762 --tcp-port=37763 --discv5-udp-port=37765 --rest-address=0.0.0.0 --nat=extip:172.18.113.166 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=bf2c074fdd9b5ab3aebbad78ef2ee29f18ee0ec3cf7e3c2db9cafa44ec1eb5bd --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=37766 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QJ0Fy-tJ42F_FOlyClIWV81jqPF5ya1ARSCDZ9iG7WzxUFkchJd8pOzu8piHviL6PkP75ay0b9s17kCENuYp_TkCgmlkgnY0gmlwhKwSInaKbXVsdGlhZGRyc5YACASsEiJ2BtA2AAoErBIidgbQN90DgnJzhQADAQAAiXNlY3AyNTZrMaEDYdasIOZGNLHg7X5cjWdJxwTf3NyGjDV3fnRUztmu7C-DdGNwgtA2g3VkcILQOIV3YWt1MgU --filternode=/ip4/172.18.34.118/tcp/53302/p2p/16Uiu2HAmKEukitog8FjWPpNV2qQHrW6S1m7tdR4gctQSDYbVmNjQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.113.166 waku 00f3b367189860f5623c5e000d3377f5bfbe207bc8c7190134d71a6a76fe2ebb
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 00f3b3671898. Setting up logs at ./log/docker/node2_2025-01-29_12-38-26__aef94c75-73a1-45e8-b0a7-0ac90ca0a027__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 37762
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:37762/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:37762/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.113.166/tcp/37763/p2p/16Uiu2HAm4CPm4zH2M7UC6EVKsdofGW9nmwetq9Dxxka59YzeNT4v","/ip4/172.18.113.166/tcp/37764/ws/p2p/16Uiu2HAm4CPm4zH2M7UC6EVKsdofGW9nmwetq9Dxxka59YzeNT4v"],"enrUri":"enr:-L24QIgO_XcqC6qLZapP3VbEGIZ2wFy13ALnZsYGA8GCDcViaQiR-PkjemnM2Tuv2PBrvSr5ZFg3JHqtEKGId1ymKMECgmlkgnY0gmlwhKwScaaKbXVsdGlhZGRyc5YACASsEnGmBpODAAoErBJxpgaThN0DgnJzhQADAQAAiXNlY3AyNTZrMaECglJK4edHMibGA4uGczrV8jUxDXPVzq7BB-ZMBKA7F4ODdGNwgpODg3VkcIKThYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:37762/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.34.118/tcp/53302/p2p/16Uiu2HAmKEukitog8FjWPpNV2qQHrW6S1m7tdR4gctQSDYbVmNjQ"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:53301/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:37762/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1a5f4fde-3a54-458a-a2d7-ca846bfda7b3", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"1a5f4fde-3a54-458a-a2d7-ca846bfda7b3","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:37762/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": ["/waku/2/rs/3/1"]}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:37762/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id e8e68c9bd369
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 00f3b3671898
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container e8e68c9bd369. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.