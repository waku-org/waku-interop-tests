[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_extra_field with id: 2025-01-29_12-39-27__5214f1b4-d995-4714-9099-104b9750a351
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-29_12-39-27__5214f1b4-d995-4714-9099-104b9750a351__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.42.210
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['22838', '22839', '22840', '22841', '22842']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 22838:22838 -p 22839:22839 -p 22840:22840 -p 22841:22841 -p 22842:22842 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=22840 --rest-port=22838 --tcp-port=22839 --discv5-udp-port=22841 --rest-address=0.0.0.0 --nat=extip:172.18.42.210 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=57186c35ae8ab9e2d3c4cfbea1a8cae3f2cd273e8b0ed2baee8ed2787d9d5435 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=22842 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.42.210 waku 389cef9c8a70f9c0c739bc48a20fc3c94fdc130709d06e6f7eb7e72ca50d38d2
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 389cef9c8a70. Setting up logs at ./log/docker/node1_2025-01-29_12-39-27__5214f1b4-d995-4714-9099-104b9750a351__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 22838
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container ea9783d313f2. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:22838/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:22838/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.42.210/tcp/22839/p2p/16Uiu2HAkytgysWpwTyvAxto6hQtWf3oePpwZUNEk71SeBM71FkP3","/ip4/172.18.42.210/tcp/22840/ws/p2p/16Uiu2HAkytgysWpwTyvAxto6hQtWf3oePpwZUNEk71SeBM71FkP3"],"enrUri":"enr:-L24QCTdU_R6OwalDFwOzKb1nN8b6A5aqpIY82y5gRKH-nCJMSdwjxPA65JFYgMbmCySIe-v92Gqo03zqV56rrUg4csCgmlkgnY0gmlwhKwSKtKKbXVsdGlhZGRyc5YACASsEirSBlk3AAoErBIq0gZZON0DgnJzhQADAQAAiXNlY3AyNTZrMaECQlqP0MNHxczzs0RH4fpmj-JVLmsJHL4esL5BEknIfvqDdGNwglk3g3VkcIJZOYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-29_12-39-27__5214f1b4-d995-4714-9099-104b9750a351__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.113.250
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['33503', '33504', '33505', '33506', '33507']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 33503:33503 -p 33504:33504 -p 33505:33505 -p 33506:33506 -p 33507:33507 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=33505 --rest-port=33503 --tcp-port=33504 --discv5-udp-port=33506 --rest-address=0.0.0.0 --nat=extip:172.18.113.250 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e9cada091dd9a7afda50da811b6e6bc6b59a8c48a27e5caab69bc8d2fb412ebe --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=33507 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QCTdU_R6OwalDFwOzKb1nN8b6A5aqpIY82y5gRKH-nCJMSdwjxPA65JFYgMbmCySIe-v92Gqo03zqV56rrUg4csCgmlkgnY0gmlwhKwSKtKKbXVsdGlhZGRyc5YACASsEirSBlk3AAoErBIq0gZZON0DgnJzhQADAQAAiXNlY3AyNTZrMaECQlqP0MNHxczzs0RH4fpmj-JVLmsJHL4esL5BEknIfvqDdGNwglk3g3VkcIJZOYV3YWt1MgU --filternode=/ip4/172.18.42.210/tcp/22839/p2p/16Uiu2HAkytgysWpwTyvAxto6hQtWf3oePpwZUNEk71SeBM71FkP3
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.113.250 waku 7888b4b2df87dd3d11c7af0319fac19f05c20b9ce15ef933b265efa27cd8da76
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 7888b4b2df87. Setting up logs at ./log/docker/node2_2025-01-29_12-39-27__5214f1b4-d995-4714-9099-104b9750a351__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 33503
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33503/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33503/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.113.250/tcp/33504/p2p/16Uiu2HAmNuJygYnvSGeGLfErN2CGYeFjaV9CWY48pjr9esSai5dQ","/ip4/172.18.113.250/tcp/33505/ws/p2p/16Uiu2HAmNuJygYnvSGeGLfErN2CGYeFjaV9CWY48pjr9esSai5dQ"],"enrUri":"enr:-L24QHCPmj5kDyPirR7U-L355znzMewgOcA2IoMBihKXv18KHeNW7M4o-YGa1M3hAEW0vvIGRSgFKFPJ8-8lpJMT0mECgmlkgnY0gmlwhKwScfqKbXVsdGlhZGRyc5YACASsEnH6BoLgAAoErBJx-gaC4d0DgnJzhQADAQAAiXNlY3AyNTZrMaEDmEAQDwTrq3yi0f_Xij4IZEWx-S1xTchtA303dhUuJ-eDdGNwgoLgg3VkcIKC4oV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:33503/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.42.210/tcp/22839/p2p/16Uiu2HAkytgysWpwTyvAxto6hQtWf3oePpwZUNEk71SeBM71FkP3"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:22838/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:33503/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "b962f572-ad26-42fa-87ae-f59920e125d2", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"b962f572-ad26-42fa-87ae-f59920e125d2","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:33503/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:33503/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 389cef9c8a70
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 7888b4b2df87
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 389cef9c8a70. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.