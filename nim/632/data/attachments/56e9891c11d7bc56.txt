[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_invalid_request_id with id: 2025-01-29_12-35-56__0f1421e0-efef-4548-801d-ef1e57d2b664
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-29_12-35-56__0f1421e0-efef-4548-801d-ef1e57d2b664__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.113.200
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['25467', '25468', '25469', '25470', '25471']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 25467:25467 -p 25468:25468 -p 25469:25469 -p 25470:25470 -p 25471:25471 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=25469 --rest-port=25467 --tcp-port=25468 --discv5-udp-port=25470 --rest-address=0.0.0.0 --nat=extip:172.18.113.200 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=a562febce26e2ddfa86b84f3b39a516805f6362aad6a521ceabfeabf6afdacc7 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=25471 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.113.200 waku 41f7da3bbb7c126a172ef911644e96a8245dc0049a505221683e1bfff69ea0b7
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 41f7da3bbb7c. Setting up logs at ./log/docker/node1_2025-01-29_12-35-56__0f1421e0-efef-4548-801d-ef1e57d2b664__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 25467
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 6bd4e668e9e9. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:25467/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:25467/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.113.200/tcp/25468/p2p/16Uiu2HAmPmBS3PcMNdUhbVCUREX1qk8VeAVDUunxtEkkKfNDXnzY","/ip4/172.18.113.200/tcp/25469/ws/p2p/16Uiu2HAmPmBS3PcMNdUhbVCUREX1qk8VeAVDUunxtEkkKfNDXnzY"],"enrUri":"enr:-L24QCgXA7kxJXnBO7lFWOte0N87R-5SukuYWJA5xx0KZ15JWZ-1P4m3zjP7Wjmg88pDIyYXlOaVz4lPI7R6lVP6wG0CgmlkgnY0gmlwhKwScciKbXVsdGlhZGRyc5YACASsEnHIBmN8AAoErBJxyAZjfd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDpQaSSQHkxt41tDkfNt3QVgt9AhGErj0P2dmscVIgv22DdGNwgmN8g3VkcIJjfoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-29_12-35-56__0f1421e0-efef-4548-801d-ef1e57d2b664__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.125.184
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['13881', '13882', '13883', '13884', '13885']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 13881:13881 -p 13882:13882 -p 13883:13883 -p 13884:13884 -p 13885:13885 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=13883 --rest-port=13881 --tcp-port=13882 --discv5-udp-port=13884 --rest-address=0.0.0.0 --nat=extip:172.18.125.184 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=d4d48f0a3a807fb769d6decda7a38bc1971de6de43fe2cf6bd90924fef3adb97 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=13885 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QCgXA7kxJXnBO7lFWOte0N87R-5SukuYWJA5xx0KZ15JWZ-1P4m3zjP7Wjmg88pDIyYXlOaVz4lPI7R6lVP6wG0CgmlkgnY0gmlwhKwScciKbXVsdGlhZGRyc5YACASsEnHIBmN8AAoErBJxyAZjfd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDpQaSSQHkxt41tDkfNt3QVgt9AhGErj0P2dmscVIgv22DdGNwgmN8g3VkcIJjfoV3YWt1MgU --filternode=/ip4/172.18.113.200/tcp/25468/p2p/16Uiu2HAmPmBS3PcMNdUhbVCUREX1qk8VeAVDUunxtEkkKfNDXnzY
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.125.184 waku 90888914d080dff5f4d07b30ef3f71d7927cf0e356651c52167c2300e9aa99d4
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 90888914d080. Setting up logs at ./log/docker/node2_2025-01-29_12-35-56__0f1421e0-efef-4548-801d-ef1e57d2b664__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 13881
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:13881/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:13881/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.125.184/tcp/13882/p2p/16Uiu2HAm2bFd37cRUkfDJTBK66wiTWQ8aGH88hzQLH2V9ZAztYk6","/ip4/172.18.125.184/tcp/13883/ws/p2p/16Uiu2HAm2bFd37cRUkfDJTBK66wiTWQ8aGH88hzQLH2V9ZAztYk6"],"enrUri":"enr:-L24QIYcSF09B3pa8R1oxt8JmE6NG8p5bQ-gKIHXkC2WHOQKe8WfGchTKlSOcoz5loJY0nXDKBFYtkKK4lLJNWQiKhcCgmlkgnY0gmlwhKwSfbiKbXVsdGlhZGRyc5YACASsEn24BjY6AAoErBJ9uAY2O90DgnJzhQADAQAAiXNlY3AyNTZrMaECanYTNlXncS6nd7EWpLKra2vBeyIWytZ5mqUiQzPk3EeDdGNwgjY6g3VkcII2PIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:13881/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.113.200/tcp/25468/p2p/16Uiu2HAmPmBS3PcMNdUhbVCUREX1qk8VeAVDUunxtEkkKfNDXnzY"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:25467/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:13881/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "964632d8-9bfc-44b2-90d0-7cbfa8e02efa", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"964632d8-9bfc-44b2-90d0-7cbfa8e02efa","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:13881/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:13881/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 41f7da3bbb7c
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 90888914d080
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 41f7da3bbb7c. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.