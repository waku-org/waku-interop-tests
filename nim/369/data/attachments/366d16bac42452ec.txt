[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_invalid_version with id: 2024-09-23_04-22-28__7d64b6f8-2f91-410f-b9ae-eb802445bc19
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-09-23_04-22-28__7d64b6f8-2f91-410f-b9ae-eb802445bc19__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.41.75
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['43181', '43182', '43183', '43184', '43185']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 43181:43181 -p 43182:43182 -p 43183:43183 -p 43184:43184 -p 43185:43185 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=43183 --rest-port=43181 --tcp-port=43182 --discv5-udp-port=43184 --rest-address=0.0.0.0 --nat=extip:172.18.41.75 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=78ada9dccbef158e3c46daeebbb7eff1cce116cb90ae4fd25fc28f7a4e4a4643 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=43185 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.41.75 waku 6bbe0e79aee291aaecac4a7f4f726a8370696092f61bef0599de31ddc9456257
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 6bbe0e79aee2. Setting up logs at ./log/docker/node1_2024-09-23_04-22-28__7d64b6f8-2f91-410f-b9ae-eb802445bc19__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 43181
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:43181/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:43181/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.41.75/tcp/43182/p2p/16Uiu2HAmEXo5JUwrRWq1iAUiw3o2tejocsGQPm4gswmJj17677w6","/ip4/172.18.41.75/tcp/43183/ws/p2p/16Uiu2HAmEXo5JUwrRWq1iAUiw3o2tejocsGQPm4gswmJj17677w6"],"enrUri":"enr:-LO4QGy9dUxFsgjGbBSaW7mAkwR_MUa_PZLNCZNMSrjZbRTCaVkrBQeMd72EK1Hgu3ATv8Ko1aMtOoiGKGplZxoZwEQBgmlkgnY0gmlwhKwSKUuKbXVsdGlhZGRyc4wACgSsEilLBqiv3QOCcnOFAAMBAACJc2VjcDI1NmsxoQMb348Lr8srmNszGnKjCOe9sVuaIQr5f40jctyTpjg1GYN0Y3CCqK6DdWRwgqiwhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-09-23_04-22-28__7d64b6f8-2f91-410f-b9ae-eb802445bc19__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.244.14
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['48984', '48985', '48986', '48987', '48988']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 48984:48984 -p 48985:48985 -p 48986:48986 -p 48987:48987 -p 48988:48988 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=48986 --rest-port=48984 --tcp-port=48985 --discv5-udp-port=48987 --rest-address=0.0.0.0 --nat=extip:172.18.244.14 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=bd4a430cb0a3ded3ead3ce26dcbce36c297c5c5fc206fe16f9393bfbfa9dbeab --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=48988 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QGy9dUxFsgjGbBSaW7mAkwR_MUa_PZLNCZNMSrjZbRTCaVkrBQeMd72EK1Hgu3ATv8Ko1aMtOoiGKGplZxoZwEQBgmlkgnY0gmlwhKwSKUuKbXVsdGlhZGRyc4wACgSsEilLBqiv3QOCcnOFAAMBAACJc2VjcDI1NmsxoQMb348Lr8srmNszGnKjCOe9sVuaIQr5f40jctyTpjg1GYN0Y3CCqK6DdWRwgqiwhXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.244.14 waku 7d1d23dcd40cf9367a3268aff87795d83ed6aa2c3e8b89a47c17e6caf532fb90
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 7d1d23dcd40c. Setting up logs at ./log/docker/node2_2024-09-23_04-22-28__7d64b6f8-2f91-410f-b9ae-eb802445bc19__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 48984
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:48984/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:48984/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.244.14/tcp/48985/p2p/16Uiu2HAmJ6oV9QbJxzFf39rzWamQ4G8xKWv8bBvUAu8kG5MuTwuH","/ip4/172.18.244.14/tcp/48986/ws/p2p/16Uiu2HAmJ6oV9QbJxzFf39rzWamQ4G8xKWv8bBvUAu8kG5MuTwuH"],"enrUri":"enr:-LO4QOpfI3C9FuMFr82NQMDD5bmYFKqouszMNyQh0hJZJ12lD3ZU3GPUMfx1gb2OUeRI9OW0CtV0fIpWuP2sh6BOlQ0BgmlkgnY0gmlwhKwS9A6KbXVsdGlhZGRyc4wACgSsEvQOBr9a3QOCcnOFAAMBAACJc2VjcDI1NmsxoQNQ50BGoCFW5YCNQ4rWNsqTn7RS_QDGOh9iUUIxLSmQwIN0Y3CCv1mDdWRwgr9bhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:48984/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.41.75/tcp/43182/p2p/16Uiu2HAmEXo5JUwrRWq1iAUiw3o2tejocsGQPm4gswmJj17677w6"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:43181/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:48984/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:43181/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:43181/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1727065351948513536,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:48984/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1727065351948513536,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:43181/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)', "version": 2.1}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:43181/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 6bbe0e79aee2
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 7d1d23dcd40c
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.