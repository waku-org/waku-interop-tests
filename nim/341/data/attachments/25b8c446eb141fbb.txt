[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_add_a_new_pubsub_topic with id: 2024-09-01_04-18-26__188c946d-1809-4f13-9439-33ad7e50e2f8
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-09-01_04-18-26__188c946d-1809-4f13-9439-33ad7e50e2f8__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.251.18
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['17685', '17686', '17687', '17688', '17689']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 17685:17685 -p 17686:17686 -p 17687:17687 -p 17688:17688 -p 17689:17689 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=17687 --rest-port=17685 --tcp-port=17686 --discv5-udp-port=17688 --rest-address=0.0.0.0 --nat=extip:172.18.251.18 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ebd6aaeecc4dd8a1da3de1ae4ff9a3ceb89c54a5e0608de60d4f24f5ead2a2d5 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=17689 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.251.18 waku bb2f3aff2ad580170d861367f5308d2d8f01c4928574cd4e75853d0c41c54513
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID bb2f3aff2ad5. Setting up logs at ./log/docker/node1_2024-09-01_04-18-26__188c946d-1809-4f13-9439-33ad7e50e2f8__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 17685
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17685/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17685/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.251.18/tcp/17686/p2p/16Uiu2HAmMTk4F4HLHN98ks3KWFymPAojVBHLhMi8xx5DKTE82L9v","/ip4/172.18.251.18/tcp/17687/ws/p2p/16Uiu2HAmMTk4F4HLHN98ks3KWFymPAojVBHLhMi8xx5DKTE82L9v"],"enrUri":"enr:-LO4QEjIOeaAohpcD_RJLLaG670NS6cPn6tLqlk8Ce9oW-VzFbJsCmia3qnTTOAEA5sEygO4RksJtf7gTOwKWykwrcMBgmlkgnY0gmlwhKwS-xKKbXVsdGlhZGRyc4wACgSsEvsSBkUX3QOCcnOFAAMBAACJc2VjcDI1NmsxoQOC16Gad9-zNOetWhlRcWC6HWe-7R-z3A_0_SlF1DWh6YN0Y3CCRRaDdWRwgkUYhXdha3UyBQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-09-01_04-18-26__188c946d-1809-4f13-9439-33ad7e50e2f8__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.135.5
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['26338', '26339', '26340', '26341', '26342']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 26338:26338 -p 26339:26339 -p 26340:26340 -p 26341:26341 -p 26342:26342 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=26340 --rest-port=26338 --tcp-port=26339 --discv5-udp-port=26341 --rest-address=0.0.0.0 --nat=extip:172.18.135.5 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=10387fcff23ba31d88b6bb38dd58099fd43e84ddcaa78efc2cdd504ed6d6b5d1 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=26342 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-LO4QEjIOeaAohpcD_RJLLaG670NS6cPn6tLqlk8Ce9oW-VzFbJsCmia3qnTTOAEA5sEygO4RksJtf7gTOwKWykwrcMBgmlkgnY0gmlwhKwS-xKKbXVsdGlhZGRyc4wACgSsEvsSBkUX3QOCcnOFAAMBAACJc2VjcDI1NmsxoQOC16Gad9-zNOetWhlRcWC6HWe-7R-z3A_0_SlF1DWh6YN0Y3CCRRaDdWRwgkUYhXdha3UyBQ --filternode=/ip4/172.18.251.18/tcp/17686/p2p/16Uiu2HAmMTk4F4HLHN98ks3KWFymPAojVBHLhMi8xx5DKTE82L9v
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.135.5 waku ac8071e2c3777ba513524b41e2111e9546f109741cd6df89f8be7a48a69a065c
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID ac8071e2c377. Setting up logs at ./log/docker/node2_2024-09-01_04-18-26__188c946d-1809-4f13-9439-33ad7e50e2f8__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 26338
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:26338/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:26338/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.135.5/tcp/26339/p2p/16Uiu2HAmMGjQ5RZSsabmsQGvxU11aSQ8tKjLugC13FBVGCAwdr95","/ip4/172.18.135.5/tcp/26340/ws/p2p/16Uiu2HAmMGjQ5RZSsabmsQGvxU11aSQ8tKjLugC13FBVGCAwdr95"],"enrUri":"enr:-LO4QIpdipCRLq-p_ruUtQzxb8u3deoaLHGsO4B-g2nMvK5MEzISVEPvtwUjeu4XKZo51P4zbSyg7F7gfdsKxIPkr6YBgmlkgnY0gmlwhKwShwWKbXVsdGlhZGRyc4wACgSsEocFBmbk3QOCcnOFAAMBAACJc2VjcDI1NmsxoQOABX-R4c3yV2N0zUgRADZHmJb-I5XB64XAP5a48B8BmIN0Y3CCZuODdWRwgmblhXdha3UyAA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:26338/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.251.18/tcp/17686/p2p/16Uiu2HAmMTk4F4HLHN98ks3KWFymPAojVBHLhMi8xx5DKTE82L9v"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17685/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:26338/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "3f51dc6e-a977-4a06-8f85-3107c69d1798", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"3f51dc6e-a977-4a06-8f85-3107c69d1798","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:26338/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto", "/test/2/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1000"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"1","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17685/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1000"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17685/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "RmlsdGVyIHdvcmtzISE=", "contentTopic": "/test/1/waku-filter/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.filter:filter.py:98 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:26338/filter/v2/messages/%2Ftest%2F1%2Fwaku-filter%2Fproto" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"RmlsdGVyIHdvcmtzISE=","contentTopic":"/test/1/waku-filter/proto","version":0,"timestamp":1725164310243797504,"ephemeral":false}]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17685/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1000" -H "Content-Type: application/json" -d '{"payload": "RmlsdGVyIHdvcmtzISE=", "contentTopic": "/test/1/waku-filter/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.filter:filter.py:98 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:26338/filter/v2/messages/%2Ftest%2F1%2Fwaku-filter%2Fproto" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"RmlsdGVyIHdvcmtzISE=","contentTopic":"/test/1/waku-filter/proto","version":0,"timestamp":1725164310363628544,"ephemeral":false}]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17685/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1000" -H "Content-Type: application/json" -d '{"payload": "RmlsdGVyIHdvcmtzISE=", "contentTopic": "/test/2/waku-filter/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.filter:filter.py:98 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:26338/filter/v2/messages/%2Ftest%2F2%2Fwaku-filter%2Fproto" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"RmlsdGVyIHdvcmtzISE=","contentTopic":"/test/2/waku-filter/proto","version":0,"timestamp":1725164310477460480,"ephemeral":false}]'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id bb2f3aff2ad5
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id ac8071e2c377
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.