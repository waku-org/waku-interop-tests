{"uid":"4b4757e66a1912dae1a509f688f20b0f","children":[{"name":"Product defects","children":[{"name":"AssertionError: assert 'INVALID_QUERY: time range should be smaller than one day in nanos' in 'Request for stored messages with invalid end_time 2430360288082561024 is successful'\n +  where 'Request for stored messages with invalid end_time 2430360288082561024 is successful' = str(Exception('Request for stored messages with invalid end_time 2430360288082561024 is successful'))","children":[{"name":"test_time_filter_big_timestamp","uid":"e4d68b57a1063a59","parentUid":"eb7542837db7795bbb47e580be2d8dce","status":"failed","time":{"start":1739160286837,"stop":1739160288088,"duration":1251},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":2,"retriesStatusChange":false,"parameters":[],"tags":["@pytest.mark.usefixtures('node_setup')"]}],"uid":"eb7542837db7795bbb47e580be2d8dce"},{"name":"AssertionError: assert 'INVALID_QUERY: startTime should be before endTime' in 'Request for stored messages with start_time==end_time is successful'\n +  where 'Request for stored messages with start_time==end_time is successful' = str(Exception('Request for stored messages with start_time==end_time is successful'))","children":[{"name":"test_time_filter_start_time_equals_end_time","uid":"66280cc6982090c1","parentUid":"4a56aaf662e0b66abafd4b12013a6e0b","status":"failed","time":{"start":1739160457837,"stop":1739160459085,"duration":1248},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":2,"retriesStatusChange":false,"parameters":[],"tags":["@pytest.mark.usefixtures('node_setup')"]},{"name":"test_time_filter_start_time_after_end_time","uid":"4450955614cf1b89","parentUid":"4a56aaf662e0b66abafd4b12013a6e0b","status":"failed","time":{"start":1739160633909,"stop":1739160635152,"duration":1243},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":2,"retriesStatusChange":false,"parameters":[],"tags":["@pytest.mark.skipif(False, reason='Test works only with nwaku')","@pytest.mark.usefixtures('node_setup')"]}],"uid":"4a56aaf662e0b66abafd4b12013a6e0b"}],"uid":"8fb3a91ba5aaf9de24cc8a92edc82b5d"}],"name":"categories"}