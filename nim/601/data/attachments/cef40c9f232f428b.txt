[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_while_peer_is_paused with id: 2025-01-03_04-15-55__05dce076-7f93-44c3-ada6-a9af4fa0f05f
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-03_04-15-55__05dce076-7f93-44c3-ada6-a9af4fa0f05f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.246.153
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['24791', '24792', '24793', '24794', '24795']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 24791:24791 -p 24792:24792 -p 24793:24793 -p 24794:24794 -p 24795:24795 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=24793 --rest-port=24791 --tcp-port=24792 --discv5-udp-port=24794 --rest-address=0.0.0.0 --nat=extip:172.18.246.153 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=da524e8ae5a79a5febda93ef62b1bcbbcd12f5314bdb6d83950ee91d6e599f6e --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=24795 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.246.153 waku 1e29d64ca9cc70c098bdf8348f9dd4f34258d1d93aa8459887d6a39aa98162c4
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 1e29d64ca9cc. Setting up logs at ./log/docker/node1_2025-01-03_04-15-55__05dce076-7f93-44c3-ada6-a9af4fa0f05f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 24791
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container ba927e4f9f1e. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:24791/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:24791/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.246.153/tcp/24792/p2p/16Uiu2HAmK75Ez7ee9tN1aWWb2tbPwd2dYsXLCyJc9E8HmMjQLfi6","/ip4/172.18.246.153/tcp/24793/ws/p2p/16Uiu2HAmK75Ez7ee9tN1aWWb2tbPwd2dYsXLCyJc9E8HmMjQLfi6"],"enrUri":"enr:-L24QKYztLkhjxL7Qzzxm-nqD_9MsAbYOkAdiVLZbILdLB8EPL-TE9K4CH4H4-pKDV6kD3OxwjZ2rpNaLJjrdOgmugcCgmlkgnY0gmlwhKwS9pmKbXVsdGlhZGRyc5YACASsEvaZBmDYAAoErBL2mQZg2d0DgnJzhQADAQAAiXNlY3AyNTZrMaEDX9TA0l59r6a3i90rfZ4mNahVdoK0T8MENoi_v9zue0-DdGNwgmDYg3VkcIJg2oV3YWt1MgE"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-03_04-15-55__05dce076-7f93-44c3-ada6-a9af4fa0f05f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.178.10
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['10645', '10646', '10647', '10648', '10649']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 10645:10645 -p 10646:10646 -p 10647:10647 -p 10648:10648 -p 10649:10649 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=10647 --rest-port=10645 --tcp-port=10646 --discv5-udp-port=10648 --rest-address=0.0.0.0 --nat=extip:172.18.178.10 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=2d0a8f3a9debbe3f87f4b0becbcc73bdacbbd9f99363a7331bc2a79d6b2cb9bf --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=10649 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-L24QKYztLkhjxL7Qzzxm-nqD_9MsAbYOkAdiVLZbILdLB8EPL-TE9K4CH4H4-pKDV6kD3OxwjZ2rpNaLJjrdOgmugcCgmlkgnY0gmlwhKwS9pmKbXVsdGlhZGRyc5YACASsEvaZBmDYAAoErBL2mQZg2d0DgnJzhQADAQAAiXNlY3AyNTZrMaEDX9TA0l59r6a3i90rfZ4mNahVdoK0T8MENoi_v9zue0-DdGNwgmDYg3VkcIJg2oV3YWt1MgE
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.178.10 waku 4b284f55a227bc6c0a0c417b15ffe2364399a3d95c6e867b9ab9019d535abc44
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 4b284f55a227. Setting up logs at ./log/docker/node2_2025-01-03_04-15-55__05dce076-7f93-44c3-ada6-a9af4fa0f05f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 10645
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10645/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10645/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.178.10/tcp/10646/p2p/16Uiu2HAm4BwdJWvAqR1FoVHg4XMvWCQbm5pD1tqqV2fNt9fCW5Qe","/ip4/172.18.178.10/tcp/10647/ws/p2p/16Uiu2HAm4BwdJWvAqR1FoVHg4XMvWCQbm5pD1tqqV2fNt9fCW5Qe"],"enrUri":"enr:-L24QDWQVkNzH0_QqdfwHlDHvnOThWWNb2pVLq0H48XKtSU-OziH_jMlSK7dvr8kr9CQCf1MjlkK30u6DYWNRfUTysICgmlkgnY0gmlwhKwSsgqKbXVsdGlhZGRyc5YACASsErIKBimWAAoErBKyCgYpl90DgnJzhQADAQAAiXNlY3AyNTZrMaECgjS-KGN-tt2QVP8l-hsrFv-cg--iGr93m4KXQWZuNGODdGNwgimWg3VkcIIpmIV3YWt1MgE"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:10645/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.246.153/tcp/24792/p2p/16Uiu2HAmK75Ez7ee9tN1aWWb2tbPwd2dYsXLCyJc9E8HmMjQLfi6"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:24791/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:10645/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:24791/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:24791/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1735877758230884352,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10645/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1735877758230884352,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[35mDEBUG   [0m src.node.waku_node:waku_node.py:254 Pausing container with id 4b284f55a227
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:24791/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.node.waku_node:waku_node.py:259 Unpause container with id 4b284f55a227
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10645/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1735877758345623552,"ephemeral":false}]'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 1e29d64ca9cc
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 4b284f55a227
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 1e29d64ca9cc. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.