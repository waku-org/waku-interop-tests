[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_add_a_new_pubsub_topic with id: 2024-09-12_04-18-45__6d63132c-e17f-43ea-aa50-a0d34012df52
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-09-12_04-18-45__6d63132c-e17f-43ea-aa50-a0d34012df52__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.98.221
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['52455', '52456', '52457', '52458', '52459']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 52455:52455 -p 52456:52456 -p 52457:52457 -p 52458:52458 -p 52459:52459 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=52457 --rest-port=52455 --tcp-port=52456 --discv5-udp-port=52458 --rest-address=0.0.0.0 --nat=extip:172.18.98.221 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=0a2ffa433d49de1390eff6fb0a637f5084ea93f03cb5ffb0edd8ce6d11d2f8bd --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=52459 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.98.221 waku fe43fafcf592e4c2b57b5c2c2708c409e6c9af515dff120d9312e2b140be6c0c
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID fe43fafcf592. Setting up logs at ./log/docker/node1_2024-09-12_04-18-45__6d63132c-e17f-43ea-aa50-a0d34012df52__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 52455
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:52455/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:52455/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.98.221/tcp/52456/p2p/16Uiu2HAkuswFX2ZbDPuFBDsFTc3HHkYcnVLNqapTKrypSsReUjuU","/ip4/172.18.98.221/tcp/52457/ws/p2p/16Uiu2HAkuswFX2ZbDPuFBDsFTc3HHkYcnVLNqapTKrypSsReUjuU"],"enrUri":"enr:-LO4QGW8Arxt0Nb3SXKeLm3okHMRf6O4kQ8WK1EjwXvaZxZIKQxxQblPOnbqecLs-Pb37yIFgih7SSMcf_actMqkUPwBgmlkgnY0gmlwhKwSYt2KbXVsdGlhZGRyc4wACgSsEmLdBszp3QOCcnOFAAMBAACJc2VjcDI1NmsxoQIGul4-5iE9onoHq5cmrlwl79XrHY1E9YnuZDZ9FW9yU4N0Y3CCzOiDdWRwgszqhXdha3UyBQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-09-12_04-18-45__6d63132c-e17f-43ea-aa50-a0d34012df52__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.181.191
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['30855', '30856', '30857', '30858', '30859']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 30855:30855 -p 30856:30856 -p 30857:30857 -p 30858:30858 -p 30859:30859 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=30857 --rest-port=30855 --tcp-port=30856 --discv5-udp-port=30858 --rest-address=0.0.0.0 --nat=extip:172.18.181.191 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=fdc67e26b548fec1ec64739bd6daa2adda2e862d1d65655037aa1e82bbf9a1c8 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=30859 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-LO4QGW8Arxt0Nb3SXKeLm3okHMRf6O4kQ8WK1EjwXvaZxZIKQxxQblPOnbqecLs-Pb37yIFgih7SSMcf_actMqkUPwBgmlkgnY0gmlwhKwSYt2KbXVsdGlhZGRyc4wACgSsEmLdBszp3QOCcnOFAAMBAACJc2VjcDI1NmsxoQIGul4-5iE9onoHq5cmrlwl79XrHY1E9YnuZDZ9FW9yU4N0Y3CCzOiDdWRwgszqhXdha3UyBQ --filternode=/ip4/172.18.98.221/tcp/52456/p2p/16Uiu2HAkuswFX2ZbDPuFBDsFTc3HHkYcnVLNqapTKrypSsReUjuU
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.181.191 waku c3e80c01bb8d5c26573ca5c125cab45292b2da337b792fec1d7a330d5be0e9c2
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID c3e80c01bb8d. Setting up logs at ./log/docker/node2_2024-09-12_04-18-45__6d63132c-e17f-43ea-aa50-a0d34012df52__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 30855
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30855/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30855/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.181.191/tcp/30856/p2p/16Uiu2HAmLkjM7MZTJt8qji1VuhJYccfKmtRg6XPuPpxeeH2E1VdL","/ip4/172.18.181.191/tcp/30857/ws/p2p/16Uiu2HAmLkjM7MZTJt8qji1VuhJYccfKmtRg6XPuPpxeeH2E1VdL"],"enrUri":"enr:-LO4QGcmJUPAzGwmtfPTY8IQS3XJMwVCJEo83UoeBXu0cIsxWFj8o3rSmN-JzowoL5fb20oL0cwjl8s8V_zUvcG9Y6wBgmlkgnY0gmlwhKwStb-KbXVsdGlhZGRyc4wACgSsErW_BniJ3QOCcnOFAAMBAACJc2VjcDI1NmsxoQN4VgQmdg5ukLkvH3hBjZBx2jwNHzzqtLcbAi5AqNKHG4N0Y3CCeIiDdWRwgniKhXdha3UyAA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:30855/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.98.221/tcp/52456/p2p/16Uiu2HAkuswFX2ZbDPuFBDsFTc3HHkYcnVLNqapTKrypSsReUjuU"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:52455/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:30855/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "c22dd1f5-827f-405d-b8f9-74d0ba1c8c3f", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"c22dd1f5-827f-405d-b8f9-74d0ba1c8c3f","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:30855/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto", "/test/2/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1000"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"1","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:52455/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1000"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:52455/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "RmlsdGVyIHdvcmtzISE=", "contentTopic": "/test/1/waku-filter/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.filter:filter.py:98 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30855/filter/v2/messages/%2Ftest%2F1%2Fwaku-filter%2Fproto" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"RmlsdGVyIHdvcmtzISE=","contentTopic":"/test/1/waku-filter/proto","version":0,"timestamp":1726114728929584896,"ephemeral":false}]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:52455/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1000" -H "Content-Type: application/json" -d '{"payload": "RmlsdGVyIHdvcmtzISE=", "contentTopic": "/test/1/waku-filter/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.filter:filter.py:98 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30855/filter/v2/messages/%2Ftest%2F1%2Fwaku-filter%2Fproto" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"RmlsdGVyIHdvcmtzISE=","contentTopic":"/test/1/waku-filter/proto","version":0,"timestamp":1726114729043920640,"ephemeral":false}]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:52455/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1000" -H "Content-Type: application/json" -d '{"payload": "RmlsdGVyIHdvcmtzISE=", "contentTopic": "/test/2/waku-filter/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.filter:filter.py:98 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30855/filter/v2/messages/%2Ftest%2F2%2Fwaku-filter%2Fproto" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"RmlsdGVyIHdvcmtzISE=","contentTopic":"/test/2/waku-filter/proto","version":0,"timestamp":1726114729163131136,"ephemeral":false}]'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id fe43fafcf592
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id c3e80c01bb8d
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.