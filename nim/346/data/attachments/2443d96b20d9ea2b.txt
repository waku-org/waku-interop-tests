[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_valid_payloads_random_user_message_limit with id: 2024-09-06_04-14-37__5a779aea-ce21-4ae8-bafc-e6cecec80cd3
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-09-06_04-14-37__5a779aea-ce21-4ae8-bafc-e6cecec80cd3__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.67.11
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['17289', '17290', '17291', '17292', '17293']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes ['/home/runner/work/waku-interop-tests/waku-interop-tests/rln_tree_nbhh_1:/etc/rln_tree', '/home/runner/work/waku-interop-tests/waku-interop-tests/keystore_nbhh_1:/keystore']
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 17289:17289 -p 17290:17290 -p 17291:17291 -p 17292:17292 -p 17293:17293 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=17291 --rest-port=17289 --tcp-port=17290 --discv5-udp-port=17292 --rest-address=0.0.0.0 --nat=extip:172.18.67.11 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=1a56fbf831b4dfe44dcb7df1df540cafae7ab90ea346adecdaacf663f9aefdc8 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=17293 --metrics-logging=true --relay=true --rln-relay-membership-index=1 --rln-relay-user-message-limit=2 --rln-relay-epoch-sec=1 --rln-relay=true --rln-relay-cred-path=/keystore/keystore.json --rln-relay-cred-password=password
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.67.11 waku 87d8734a6ec08a03df832615316b14c80905b9dbb150de752f394199dfd2584c
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 87d8734a6ec0. Setting up logs at ./log/docker/node1_2024-09-06_04-14-37__5a779aea-ce21-4ae8-bafc-e6cecec80cd3__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 17289
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17289/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Initializing","protocolsHealth":[{"Rln Relay":"Ready"}]}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17289/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[{"Rln Relay":"Ready"}]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17289/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.67.11/tcp/17290/p2p/16Uiu2HAkxoEsCheVAizNTEQpduBVVwGunUKVGBte98Pj94YATtCj","/ip4/172.18.67.11/tcp/17291/ws/p2p/16Uiu2HAkxoEsCheVAizNTEQpduBVVwGunUKVGBte98Pj94YATtCj"],"enrUri":"enr:-LO4QLtMkrwtRjHp3gbeBD9oTQxXPqE3koAtTo7CjeYYj-YxWbWb63Y5PUd5LWdixg48MakdG7LDyWnYtMDNsYsQuXsBgmlkgnY0gmlwhKwSQwuKbXVsdGlhZGRyc4wACgSsEkMLBkOL3QOCcnOFAAMBAACJc2VjcDI1NmsxoQIyGXFHlOD4f_IFemYMVDCT8EZeLQqZtvG7mDOrTAE1lIN0Y3CCQ4qDdWRwgkOMhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-09-06_04-14-37__5a779aea-ce21-4ae8-bafc-e6cecec80cd3__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.212.137
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['37164', '37165', '37166', '37167', '37168']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes ['/home/runner/work/waku-interop-tests/waku-interop-tests/rln_tree_xkok_2:/etc/rln_tree', '/home/runner/work/waku-interop-tests/waku-interop-tests/keystore_xkok_2:/keystore']
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 37164:37164 -p 37165:37165 -p 37166:37166 -p 37167:37167 -p 37168:37168 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=37166 --rest-port=37164 --tcp-port=37165 --discv5-udp-port=37167 --rest-address=0.0.0.0 --nat=extip:172.18.212.137 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=a8fcf6ef5f19966683e42fd23eadf9e6711cbc04857d7cf4daffd3c0ad741dc4 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=37168 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QLtMkrwtRjHp3gbeBD9oTQxXPqE3koAtTo7CjeYYj-YxWbWb63Y5PUd5LWdixg48MakdG7LDyWnYtMDNsYsQuXsBgmlkgnY0gmlwhKwSQwuKbXVsdGlhZGRyc4wACgSsEkMLBkOL3QOCcnOFAAMBAACJc2VjcDI1NmsxoQIyGXFHlOD4f_IFemYMVDCT8EZeLQqZtvG7mDOrTAE1lIN0Y3CCQ4qDdWRwgkOMhXdha3UyAQ --rln-relay-membership-index=1 --rln-relay-user-message-limit=2 --rln-relay-epoch-sec=1 --rln-relay=true --rln-relay-cred-path=/keystore/keystore.json --rln-relay-cred-password=password
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.212.137 waku 4e251ae747509bb83b391994ddd2981548b06b584c55b911829f2ceb1cca3f26
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 4e251ae74750. Setting up logs at ./log/docker/node2_2024-09-06_04-14-37__5a779aea-ce21-4ae8-bafc-e6cecec80cd3__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 37164
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:37164/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Initializing","protocolsHealth":[{"Rln Relay":"Ready"}]}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:37164/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[{"Rln Relay":"Ready"}]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:37164/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.212.137/tcp/37165/p2p/16Uiu2HAmQSNb2Jheb5cwuT4YgFQWYX9NqbHwpZRBfp2ZBCsFbfgo","/ip4/172.18.212.137/tcp/37166/ws/p2p/16Uiu2HAmQSNb2Jheb5cwuT4YgFQWYX9NqbHwpZRBfp2ZBCsFbfgo"],"enrUri":"enr:-LO4QDorJnQhy2uRllrrWJqTVVWcySrAjUd4_UQ6GixEzwLzTGCndw-P0xZB6RwdVuOQZM9yUxsfLpdCzqySywBIjT8BgmlkgnY0gmlwhKwS1ImKbXVsdGlhZGRyc4wACgSsEtSJBpEu3QOCcnOFAAMBAACJc2VjcDI1NmsxoQOvENX3nPHzvMpIgDHN6-QhLaglW1AqfvMYytYdVQg5jIN0Y3CCkS2DdWRwgpEvhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:37164/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.67.11/tcp/17290/p2p/16Uiu2HAkxoEsCheVAizNTEQpduBVVwGunUKVGBte98Pj94YATtCj"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17289/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/1/0"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:37164/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/1/0"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m tests.relay.test_rln:test_rln.py:128 Running test with payload A simple string
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17289/relay/v1/messages/%2Fwaku%2F2%2Frs%2F1%2F0" -H "Content-Type: application/json" -d '{"payload": "SGVsbG8gV29ybGQh", "contentTopic": "/test/1/waku-rln-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m tests.relay.test_rln:test_rln.py:128 Running test with payload An integer
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17289/relay/v1/messages/%2Fwaku%2F2%2Frs%2F1%2F0" -H "Content-Type: application/json" -d '{"payload": "MTIzNDU2Nzg5MA==", "contentTopic": "/test/1/waku-rln-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 87d8734a6ec0
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 4e251ae74750
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.