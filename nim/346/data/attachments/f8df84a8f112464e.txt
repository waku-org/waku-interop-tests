[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_relay_no_subscription with id: 2024-09-06_04-25-46__e316ad19-47fd-432d-a767-7c187c6a6434
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-09-06_04-25-46__e316ad19-47fd-432d-a767-7c187c6a6434__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.5.210
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['36527', '36528', '36529', '36530', '36531']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 36527:36527 -p 36528:36528 -p 36529:36529 -p 36530:36530 -p 36531:36531 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=36529 --rest-port=36527 --tcp-port=36528 --discv5-udp-port=36530 --rest-address=0.0.0.0 --nat=extip:172.18.5.210 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=592ca26d3ff124af0bd0ebf35cd772ff5ed179a420a22096095210c9cef3fea5 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=36531 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.5.210 waku d8dc7672e500ce10349d1ba5b44940c6a833a69c8741d2ce66e50854b36c459a
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID d8dc7672e500. Setting up logs at ./log/docker/node1_2024-09-06_04-25-46__e316ad19-47fd-432d-a767-7c187c6a6434__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 36527
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:36527/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:36527/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.5.210/tcp/36528/p2p/16Uiu2HAmBjzwXmKFx5qNjPPArtJMv412zQhy5nckXeVsMDhK2Ppf","/ip4/172.18.5.210/tcp/36529/ws/p2p/16Uiu2HAmBjzwXmKFx5qNjPPArtJMv412zQhy5nckXeVsMDhK2Ppf"],"enrUri":"enr:-LO4QPsm6_PhfIWdiJJnRnilh2q8a4Q5TSp7mdPrcp6yJKuacPw9YcLhRph5lrGElskWZIuZ0thYVMjEOQ60ugvT--0BgmlkgnY0gmlwhKwSBdKKbXVsdGlhZGRyc4wACgSsEgXSBo6x3QOCcnOFAAMBAACJc2VjcDI1NmsxoQLybOJ4c-VYlbYeeckSB8tlzqzgTgZ8dya8fjEwqO3NLIN0Y3CCjrCDdWRwgo6yhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-09-06_04-25-46__e316ad19-47fd-432d-a767-7c187c6a6434__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.98.170
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['6972', '6973', '6974', '6975', '6976']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 6972:6972 -p 6973:6973 -p 6974:6974 -p 6975:6975 -p 6976:6976 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=6974 --rest-port=6972 --tcp-port=6973 --discv5-udp-port=6975 --rest-address=0.0.0.0 --nat=extip:172.18.98.170 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=dfb2cda35ccdaf918eb0b22d289bbbdee05c252480a478385e1cdd0a62f37ba3 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=6976 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QPsm6_PhfIWdiJJnRnilh2q8a4Q5TSp7mdPrcp6yJKuacPw9YcLhRph5lrGElskWZIuZ0thYVMjEOQ60ugvT--0BgmlkgnY0gmlwhKwSBdKKbXVsdGlhZGRyc4wACgSsEgXSBo6x3QOCcnOFAAMBAACJc2VjcDI1NmsxoQLybOJ4c-VYlbYeeckSB8tlzqzgTgZ8dya8fjEwqO3NLIN0Y3CCjrCDdWRwgo6yhXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.98.170 waku fc2b3ce4f3adcc02da4662937b42b9aceda1db6d72b6538476bf856b2c34e0a6
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID fc2b3ce4f3ad. Setting up logs at ./log/docker/node2_2024-09-06_04-25-46__e316ad19-47fd-432d-a767-7c187c6a6434__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 6972
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:6972/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:6972/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.98.170/tcp/6973/p2p/16Uiu2HAmUWktKddJdzjC8k2hQLU3ris3eLR7YDp5PSQeVP1HTjKA","/ip4/172.18.98.170/tcp/6974/ws/p2p/16Uiu2HAmUWktKddJdzjC8k2hQLU3ris3eLR7YDp5PSQeVP1HTjKA"],"enrUri":"enr:-LO4QCZurVudNBsev5I2xSzWX1UEmAzyQbSOwhczenI0z2jBM8S4oIePywjlcC0X1D4W3IE7EIpnghKttc8OXaM0IhsBgmlkgnY0gmlwhKwSYqqKbXVsdGlhZGRyc4wACgSsEmKqBhs-3QOCcnOFAAMBAACJc2VjcDI1NmsxoQPrnx6Vaaz3cel0T7VyCP8ChmwJ2kpyFS7KTZw3xUgjlYN0Y3CCGz2DdWRwghs_hXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:6972/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.5.210/tcp/36528/p2p/16Uiu2HAmBjzwXmKFx5qNjPPArtJMv412zQhy5nckXeVsMDhK2Ppf"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:36527/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:36527/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Failed to publish: Node not subscribed to topic: /waku/2/rs/3/1'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id d8dc7672e500
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id fc2b3ce4f3ad
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.