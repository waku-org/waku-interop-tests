[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_invalid_request_id with id: 2024-12-01_04-16-59__6a303813-bddd-4685-85f7-3a6bd2750f7b
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-01_04-16-59__6a303813-bddd-4685-85f7-3a6bd2750f7b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.224.136
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['64066', '64067', '64068', '64069', '64070']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 64066:64066 -p 64067:64067 -p 64068:64068 -p 64069:64069 -p 64070:64070 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=64068 --rest-port=64066 --tcp-port=64067 --discv5-udp-port=64069 --rest-address=0.0.0.0 --nat=extip:172.18.224.136 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ba2ffb0d7686ceacb0bcfe0ea7b696f8dd7eea9ad62c39db3287cba9cdaa1014 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=64070 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.224.136 waku 2f4b8113839475fad7c622933513043d4cd47627abaa19f316f3d7b1252e1e02
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 2f4b81138394. Setting up logs at ./log/docker/node1_2024-12-01_04-16-59__6a303813-bddd-4685-85f7-3a6bd2750f7b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 64066
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container fa969d7edb34. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:64066/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:64066/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.224.136/tcp/64067/p2p/16Uiu2HAmRmMY68xavjcpokcCLhTUeJ7gGz4wUdBxx7ydRNmK4nCM","/ip4/172.18.224.136/tcp/64068/ws/p2p/16Uiu2HAmRmMY68xavjcpokcCLhTUeJ7gGz4wUdBxx7ydRNmK4nCM"],"enrUri":"enr:-L24QKXbXp1NiOidtnvBP2OlLZ4hTkGDTxYfDwdHyX2KhZ80Q49UITV-93JWgvl3IAD-Gs0sDGJlvsGQXtaYhtyKQGsCgmlkgnY0gmlwhKwS4IiKbXVsdGlhZGRyc5YACASsEuCIBvpDAAoErBLgiAb6RN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDwslexfRZlUyaGzc1hVCv5W5wHF-xZeHXtBO2x8gntj6DdGNwgvpDg3VkcIL6RYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-01_04-16-59__6a303813-bddd-4685-85f7-3a6bd2750f7b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.65.170
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['2188', '2189', '2190', '2191', '2192']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 2188:2188 -p 2189:2189 -p 2190:2190 -p 2191:2191 -p 2192:2192 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=2190 --rest-port=2188 --tcp-port=2189 --discv5-udp-port=2191 --rest-address=0.0.0.0 --nat=extip:172.18.65.170 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=caba59bbaadf5e4fc7f9e9af72c65d3679a225b27e0b0ac48bd15e7754ee5efb --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=2192 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QKXbXp1NiOidtnvBP2OlLZ4hTkGDTxYfDwdHyX2KhZ80Q49UITV-93JWgvl3IAD-Gs0sDGJlvsGQXtaYhtyKQGsCgmlkgnY0gmlwhKwS4IiKbXVsdGlhZGRyc5YACASsEuCIBvpDAAoErBLgiAb6RN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDwslexfRZlUyaGzc1hVCv5W5wHF-xZeHXtBO2x8gntj6DdGNwgvpDg3VkcIL6RYV3YWt1MgU --filternode=/ip4/172.18.224.136/tcp/64067/p2p/16Uiu2HAmRmMY68xavjcpokcCLhTUeJ7gGz4wUdBxx7ydRNmK4nCM
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.65.170 waku f45a73d896b125f0925afe3076e68b67a1e3162f4ae4ff4510ab1684bc3cd2f4
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID f45a73d896b1. Setting up logs at ./log/docker/node2_2024-12-01_04-16-59__6a303813-bddd-4685-85f7-3a6bd2750f7b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 2188
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:2188/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:2188/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.65.170/tcp/2189/p2p/16Uiu2HAkv3ui4gbymLKxYTk4MZ9zuQaSjfYmqC7htXH1f7nBPre3","/ip4/172.18.65.170/tcp/2190/ws/p2p/16Uiu2HAkv3ui4gbymLKxYTk4MZ9zuQaSjfYmqC7htXH1f7nBPre3"],"enrUri":"enr:-L24QMi04CDBIeBT11hfdaenN4DANnK5ZfMmaHeDCxKdn-otavqQQGu7BcPQb0bdfraL1X_6Wz9PW3U4J5DUjQbqF0wCgmlkgnY0gmlwhKwSQaqKbXVsdGlhZGRyc5YACASsEkGqBgiNAAoErBJBqgYIjt0DgnJzhQADAQAAiXNlY3AyNTZrMaECCUhurbU7D6O_Jkp7yPCyJt5TvWFc01tPRewpCOBmP_iDdGNwggiNg3VkcIIIj4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:2188/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.224.136/tcp/64067/p2p/16Uiu2HAmRmMY68xavjcpokcCLhTUeJ7gGz4wUdBxx7ydRNmK4nCM"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:64066/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:2188/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "db8af969-8c62-4283-9b07-6a37ef117f33", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"db8af969-8c62-4283-9b07-6a37ef117f33","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:2188/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:2188/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 2f4b81138394
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id f45a73d896b1
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 2f4b81138394. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.