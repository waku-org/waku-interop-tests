[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_no_content_topic with id: 2024-11-06_23-45-16__5cc504b1-c97a-4fed-8e81-4242931ccd9b
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-06_23-45-16__5cc504b1-c97a-4fed-8e81-4242931ccd9b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.22.172
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['36326', '36327', '36328', '36329', '36330']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:435 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:164 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:166 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 36326:36326 -p 36327:36327 -p 36328:36328 -p 36329:36329 -p 36330:36330 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=36328 --rest-port=36326 --tcp-port=36327 --discv5-udp-port=36329 --rest-address=0.0.0.0 --nat=extip:172.18.22.172 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=710f7d386917226c46aa547c1e7bd2fe600bb06ef5cffaec67ccadcbe80da2a9 --max-connections=1000 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=36330 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.22.172 waku c68803e15773efd63b23ef8890e3c392ded749923e724da72648e1e08f5e8737
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID c68803e15773. Setting up logs at ./log/docker/node1_2024-11-06_23-45-16__5cc504b1-c97a-4fed-8e81-4242931ccd9b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:178 Started container from image wakuorg/nwaku:latest. REST: 36326
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 827e65f47f02. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:36326/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:278 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:36326/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.22.172/tcp/36327/p2p/16Uiu2HAkubtHcXijNzXCU97VKuFBXNisC67aHq7RDEwuji8crgpC","/ip4/172.18.22.172/tcp/36328/ws/p2p/16Uiu2HAkubtHcXijNzXCU97VKuFBXNisC67aHq7RDEwuji8crgpC"],"enrUri":"enr:-L24QB7ur6WW6I4w3iw0g6IyxG6TORsj4Oh37dNzOw8SjnR9FRIm23CUeqOPjdEaHrBcA_t6HMCtpNpsH0oHHr4Zs-0CgmlkgnY0gmlwhKwSFqyKbXVsdGlhZGRyc5YACASsEhasBo3nAAoErBIWrAaN6N0DgnJzhQADAQAAiXNlY3AyNTZrMaECAp25U4PtZNFttXCiME3tNbeytMuez7R0ALuZhSQGCqWDdGNwgo3ng3VkcIKN6YV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:283 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-06_23-45-16__5cc504b1-c97a-4fed-8e81-4242931ccd9b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.188.167
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['15859', '15860', '15861', '15862', '15863']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:435 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:164 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:166 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 15859:15859 -p 15860:15860 -p 15861:15861 -p 15862:15862 -p 15863:15863 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=15861 --rest-port=15859 --tcp-port=15860 --discv5-udp-port=15862 --rest-address=0.0.0.0 --nat=extip:172.18.188.167 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=d1ff9c05b91a2b826c823e6e14af9b6c1f5eeb79d905f87b90faa8a1fe70cfbd --max-connections=1000 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=15863 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QB7ur6WW6I4w3iw0g6IyxG6TORsj4Oh37dNzOw8SjnR9FRIm23CUeqOPjdEaHrBcA_t6HMCtpNpsH0oHHr4Zs-0CgmlkgnY0gmlwhKwSFqyKbXVsdGlhZGRyc5YACASsEhasBo3nAAoErBIWrAaN6N0DgnJzhQADAQAAiXNlY3AyNTZrMaECAp25U4PtZNFttXCiME3tNbeytMuez7R0ALuZhSQGCqWDdGNwgo3ng3VkcIKN6YV3YWt1MgU --filternode=/ip4/172.18.22.172/tcp/36327/p2p/16Uiu2HAkubtHcXijNzXCU97VKuFBXNisC67aHq7RDEwuji8crgpC
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.188.167 waku ccc1661868ae9e6f001c39209b0d6cfd2ef36d2d215bceba79851c0025776e35
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID ccc1661868ae. Setting up logs at ./log/docker/node2_2024-11-06_23-45-16__5cc504b1-c97a-4fed-8e81-4242931ccd9b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:178 Started container from image wakuorg/nwaku:latest. REST: 15859
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:15859/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:278 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:15859/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.188.167/tcp/15860/p2p/16Uiu2HAm48mVYoGRHfDUkN3AmYDakAG9cdgMLQQdRaWbmwRZoM49","/ip4/172.18.188.167/tcp/15861/ws/p2p/16Uiu2HAm48mVYoGRHfDUkN3AmYDakAG9cdgMLQQdRaWbmwRZoM49"],"enrUri":"enr:-L24QNlu8hdVM4EqJfXlfhUJpl33spxrsHmk3QFBw1mEyNm-YA9vMBGMBb1ojEGmv63qYWDGLjLk1yoHHEfCV5YXguICgmlkgnY0gmlwhKwSvKeKbXVsdGlhZGRyc5YACASsErynBj30AAoErBK8pwY99d0DgnJzhQADAQAAiXNlY3AyNTZrMaECgWSKzG0sPeP7i6u633qZ6PapGmsa1QdTNlR-yMO1-zaDdGNwgj30g3VkcII99oV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:283 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:15859/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.22.172/tcp/36327/p2p/16Uiu2HAkubtHcXijNzXCU97VKuFBXNisC67aHq7RDEwuji8crgpC"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:36326/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:15859/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "619fe010-09b3-41f4-a301-010f4d23e76e", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"619fe010-09b3-41f4-a301-010f4d23e76e","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:15859/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:15859/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:222 Stopping container with id c68803e15773
[35mDEBUG   [0m src.node.waku_node:waku_node.py:229 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:222 Stopping container with id ccc1661868ae
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container c68803e15773. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:229 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.