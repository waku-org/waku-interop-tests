[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_invalid_pubsub_topic_format with id: 2024-11-06_23-45-15__c11afaef-f4ee-45fa-b521-a6a39b66b939
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-06_23-45-15__c11afaef-f4ee-45fa-b521-a6a39b66b939__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.34.83
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['30628', '30629', '30630', '30631', '30632']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:435 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:164 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:166 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 30628:30628 -p 30629:30629 -p 30630:30630 -p 30631:30631 -p 30632:30632 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=30630 --rest-port=30628 --tcp-port=30629 --discv5-udp-port=30631 --rest-address=0.0.0.0 --nat=extip:172.18.34.83 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=fd7a24fbfb69fc1c0b825a1e2eacebd72ae6cc202ef6c13fce0a90eb4f9b5ec4 --max-connections=1000 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=30632 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.34.83 waku e9881a70d2f887002651b331cb649d439c3ae6076872f5d8d582d91e724f391c
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID e9881a70d2f8. Setting up logs at ./log/docker/node1_2024-11-06_23-45-15__c11afaef-f4ee-45fa-b521-a6a39b66b939__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:178 Started container from image wakuorg/nwaku:latest. REST: 30628
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container e48d94e5a42a. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30628/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:278 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30628/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.34.83/tcp/30629/p2p/16Uiu2HAm8NyvS7CX5eBPhmPydBBAZsJkzpZcbsuv3FYgKdUYrvCa","/ip4/172.18.34.83/tcp/30630/ws/p2p/16Uiu2HAm8NyvS7CX5eBPhmPydBBAZsJkzpZcbsuv3FYgKdUYrvCa"],"enrUri":"enr:-L24QHCT4kyufPhEij7-dIQsF69YFcrCNyP2XD4ReGfaeuRlUUNF5NUEBL6ldf9vlHsHOHqRjQIAdEkFD3C0WCux37ECgmlkgnY0gmlwhKwSIlOKbXVsdGlhZGRyc5YACASsEiJTBnelAAoErBIiUwZ3pt0DgnJzhQADAQAAiXNlY3AyNTZrMaECwHd5izzojC1aVpPXMU6dlJKpFnY92QxJw-l1bihrfIuDdGNwgnelg3VkcIJ3p4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:283 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-06_23-45-15__c11afaef-f4ee-45fa-b521-a6a39b66b939__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.91.84
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['6029', '6030', '6031', '6032', '6033']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:435 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:164 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:166 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 6029:6029 -p 6030:6030 -p 6031:6031 -p 6032:6032 -p 6033:6033 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=6031 --rest-port=6029 --tcp-port=6030 --discv5-udp-port=6032 --rest-address=0.0.0.0 --nat=extip:172.18.91.84 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=dfdb403db4eaaeabfefefb5ad4cf1b30b806bdf1db90b3f7bd4b4f3ab5bf9af3 --max-connections=1000 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=6033 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QHCT4kyufPhEij7-dIQsF69YFcrCNyP2XD4ReGfaeuRlUUNF5NUEBL6ldf9vlHsHOHqRjQIAdEkFD3C0WCux37ECgmlkgnY0gmlwhKwSIlOKbXVsdGlhZGRyc5YACASsEiJTBnelAAoErBIiUwZ3pt0DgnJzhQADAQAAiXNlY3AyNTZrMaECwHd5izzojC1aVpPXMU6dlJKpFnY92QxJw-l1bihrfIuDdGNwgnelg3VkcIJ3p4V3YWt1MgU --filternode=/ip4/172.18.34.83/tcp/30629/p2p/16Uiu2HAm8NyvS7CX5eBPhmPydBBAZsJkzpZcbsuv3FYgKdUYrvCa
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.91.84 waku cf3575968a3e9456a9bef0c5e17f623a57a6ccdf0498bd2d5c3e394afbbd0947
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID cf3575968a3e. Setting up logs at ./log/docker/node2_2024-11-06_23-45-15__c11afaef-f4ee-45fa-b521-a6a39b66b939__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:178 Started container from image wakuorg/nwaku:latest. REST: 6029
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:6029/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:278 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:6029/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.91.84/tcp/6030/p2p/16Uiu2HAmQeM3CKV3qJvYWxzaXmHA6e4ESK7U4zQizzfkCoTyMv6C","/ip4/172.18.91.84/tcp/6031/ws/p2p/16Uiu2HAmQeM3CKV3qJvYWxzaXmHA6e4ESK7U4zQizzfkCoTyMv6C"],"enrUri":"enr:-L24QHWweO69QIiaOMQXO0wIIQhEjOiiBV2SNCDyUx7jZG6gf3BvuqyoLJY5sc3NC_RJcEDhD56DF-3xMrUdxvoDpLACgmlkgnY0gmlwhKwSW1SKbXVsdGlhZGRyc5YACASsEltUBheOAAoErBJbVAYXj90DgnJzhQADAQAAiXNlY3AyNTZrMaEDsiIN6X5EGjUJ-iYzIMk-PCeaI39NjfxILyQyBRSSCIGDdGNwgheOg3VkcIIXkIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:283 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:6029/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.34.83/tcp/30629/p2p/16Uiu2HAm8NyvS7CX5eBPhmPydBBAZsJkzpZcbsuv3FYgKdUYrvCa"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:30628/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:6029/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "d62e055c-69f9-43d3-b899-3d43c7c758f9", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"d62e055c-69f9-43d3-b899-3d43c7c758f9","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:6029/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": ["/waku/2/rs/3/1"]}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:6029/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:222 Stopping container with id e9881a70d2f8
[35mDEBUG   [0m src.node.waku_node:waku_node.py:229 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:222 Stopping container with id cf3575968a3e
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container e9881a70d2f8. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:229 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.