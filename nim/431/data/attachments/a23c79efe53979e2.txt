[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_no_request_id with id: 2024-11-06_23-46-59__d7ab89d9-6e57-4d1d-b7be-2c8211846e90
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-06_23-46-59__d7ab89d9-6e57-4d1d-b7be-2c8211846e90__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.94.121
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['43775', '43776', '43777', '43778', '43779']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:435 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:164 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:166 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 43775:43775 -p 43776:43776 -p 43777:43777 -p 43778:43778 -p 43779:43779 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=43777 --rest-port=43775 --tcp-port=43776 --discv5-udp-port=43778 --rest-address=0.0.0.0 --nat=extip:172.18.94.121 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=2929ebb8c8dcb5ab1f5921dc3505d9e3d74d5db7acfebb7a0f4c4cffc4f1cbc1 --max-connections=1000 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=43779 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.94.121 waku 7d256079a8fd00cf1d617066ee5a1aabf6bc400755479d306b29e2fc18bfbf30
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 7d256079a8fd. Setting up logs at ./log/docker/node1_2024-11-06_23-46-59__d7ab89d9-6e57-4d1d-b7be-2c8211846e90__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:178 Started container from image wakuorg/nwaku:latest. REST: 43775
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container c9725dab901c. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:43775/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:278 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:43775/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.94.121/tcp/43776/p2p/16Uiu2HAm9cPEubtGTAJtkh9H9q1drNLn56Y4pRAYiA29qLrTd8ah","/ip4/172.18.94.121/tcp/43777/ws/p2p/16Uiu2HAm9cPEubtGTAJtkh9H9q1drNLn56Y4pRAYiA29qLrTd8ah"],"enrUri":"enr:-L24QHi5Ygc_HpKsFjwugw57ZhSj_R14-zPxCt2E6H2JGsMpHIfW6nOUAm7V6Zuek0jAxoq27gtCLMsj19lmhSNCge0CgmlkgnY0gmlwhKwSXnmKbXVsdGlhZGRyc5YACASsEl55BqsAAAoErBJeeQarAd0DgnJzhQADAQAAiXNlY3AyNTZrMaEC0sIUHFjwpgI-xZ79agx1Q43eUyRe0Rp6MW6PTzI49T6DdGNwgqsAg3VkcIKrAoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:283 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-06_23-46-59__d7ab89d9-6e57-4d1d-b7be-2c8211846e90__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.169.177
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['58555', '58556', '58557', '58558', '58559']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:435 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:164 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:166 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 58555:58555 -p 58556:58556 -p 58557:58557 -p 58558:58558 -p 58559:58559 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=58557 --rest-port=58555 --tcp-port=58556 --discv5-udp-port=58558 --rest-address=0.0.0.0 --nat=extip:172.18.169.177 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=bbbc1cbd18da9fd4c976da62eb5f70dece0c7da48aee6f78ddf2cba6a00eab10 --max-connections=1000 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=58559 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QHi5Ygc_HpKsFjwugw57ZhSj_R14-zPxCt2E6H2JGsMpHIfW6nOUAm7V6Zuek0jAxoq27gtCLMsj19lmhSNCge0CgmlkgnY0gmlwhKwSXnmKbXVsdGlhZGRyc5YACASsEl55BqsAAAoErBJeeQarAd0DgnJzhQADAQAAiXNlY3AyNTZrMaEC0sIUHFjwpgI-xZ79agx1Q43eUyRe0Rp6MW6PTzI49T6DdGNwgqsAg3VkcIKrAoV3YWt1MgU --filternode=/ip4/172.18.94.121/tcp/43776/p2p/16Uiu2HAm9cPEubtGTAJtkh9H9q1drNLn56Y4pRAYiA29qLrTd8ah
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.169.177 waku ddd7b5e1774cf620fec460acc19112631eb318968ea23b2940716c5c23916fdd
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID ddd7b5e1774c. Setting up logs at ./log/docker/node2_2024-11-06_23-46-59__d7ab89d9-6e57-4d1d-b7be-2c8211846e90__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:178 Started container from image wakuorg/nwaku:latest. REST: 58555
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:58555/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:278 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:58555/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.169.177/tcp/58556/p2p/16Uiu2HAkwvRp5v4iupcrqYeEJjt88eVmsUZ4ocaNx6xgVsmLSfDN","/ip4/172.18.169.177/tcp/58557/ws/p2p/16Uiu2HAkwvRp5v4iupcrqYeEJjt88eVmsUZ4ocaNx6xgVsmLSfDN"],"enrUri":"enr:-L24QLsf480eQjYNKuEVSfWwIDnLMMcvRVE5ImY88ZftTxreWRvXPMDQGiBbk3AfiPHwUj6VVAdlwcjUmwUwid0vQkQCgmlkgnY0gmlwhKwSqbGKbXVsdGlhZGRyc5YACASsEqmxBuS8AAoErBKpsQbkvd0DgnJzhQADAQAAiXNlY3AyNTZrMaECJRUyveBja1SF-3aMuIqOJnJlCuc_F8f-Wz85Hwk7yz2DdGNwguS8g3VkcILkvoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:283 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:58555/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.94.121/tcp/43776/p2p/16Uiu2HAm9cPEubtGTAJtkh9H9q1drNLn56Y4pRAYiA29qLrTd8ah"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:43775/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:58555/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "ab18ed3e-3ae4-4ce3-9a8c-3502a2169e54", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"ab18ed3e-3ae4-4ce3-9a8c-3502a2169e54","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:58555/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:58555/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:222 Stopping container with id 7d256079a8fd
[35mDEBUG   [0m src.node.waku_node:waku_node.py:229 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:222 Stopping container with id ddd7b5e1774c
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 7d256079a8fd. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:229 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.