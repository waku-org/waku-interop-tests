[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_no_request_id with id: 2024-11-06_23-46-08__44eb0de0-d8c9-4309-963a-7c228b6a39cf
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-06_23-46-08__44eb0de0-d8c9-4309-963a-7c228b6a39cf__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.227.224
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['5789', '5790', '5791', '5792', '5793']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:435 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:164 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:166 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 5789:5789 -p 5790:5790 -p 5791:5791 -p 5792:5792 -p 5793:5793 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=5791 --rest-port=5789 --tcp-port=5790 --discv5-udp-port=5792 --rest-address=0.0.0.0 --nat=extip:172.18.227.224 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=06c5966d88bc3ecf7dfddddec03f9b7779e95361acd9838e01f9d615bbd6eb51 --max-connections=1000 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=5793 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.227.224 waku 3953acac9a3471ceb5661827ed03bf156ed6f0d6d5e6a7622575dcf99e1a8c0c
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 3953acac9a34. Setting up logs at ./log/docker/node1_2024-11-06_23-46-08__44eb0de0-d8c9-4309-963a-7c228b6a39cf__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:178 Started container from image wakuorg/nwaku:latest. REST: 5789
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container e5916de854df. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:5789/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:278 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:5789/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.227.224/tcp/5790/p2p/16Uiu2HAmF4X8TTohxSNJ7xBQzY8pPSuPZsLqABCBbcCTPGCtfbxg","/ip4/172.18.227.224/tcp/5791/ws/p2p/16Uiu2HAmF4X8TTohxSNJ7xBQzY8pPSuPZsLqABCBbcCTPGCtfbxg"],"enrUri":"enr:-L24QGvWL_pmahTIC9UoDjsELAppUMhvOUl4GbHOqYhGoNvrQR7oj_9LrBTa07_TWr48d-hTsZakH-NfHigEehN3DqoCgmlkgnY0gmlwhKwS4-CKbXVsdGlhZGRyc5YACASsEuPgBhaeAAoErBLj4AYWn90DgnJzhQADAQAAiXNlY3AyNTZrMaEDI76IurPYnovY6QEgQsBWXFxaOltXiB31qeNOx48fbiWDdGNwghaeg3VkcIIWoIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:283 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-06_23-46-08__44eb0de0-d8c9-4309-963a-7c228b6a39cf__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.57.17
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['8482', '8483', '8484', '8485', '8486']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:435 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:164 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:166 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 8482:8482 -p 8483:8483 -p 8484:8484 -p 8485:8485 -p 8486:8486 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=8484 --rest-port=8482 --tcp-port=8483 --discv5-udp-port=8485 --rest-address=0.0.0.0 --nat=extip:172.18.57.17 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b41be609f0ec403a1efaf774c183e8abbc9ffc6ca9e0d4cca555bbaaebcfc78a --max-connections=1000 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=8486 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QGvWL_pmahTIC9UoDjsELAppUMhvOUl4GbHOqYhGoNvrQR7oj_9LrBTa07_TWr48d-hTsZakH-NfHigEehN3DqoCgmlkgnY0gmlwhKwS4-CKbXVsdGlhZGRyc5YACASsEuPgBhaeAAoErBLj4AYWn90DgnJzhQADAQAAiXNlY3AyNTZrMaEDI76IurPYnovY6QEgQsBWXFxaOltXiB31qeNOx48fbiWDdGNwghaeg3VkcIIWoIV3YWt1MgU --filternode=/ip4/172.18.227.224/tcp/5790/p2p/16Uiu2HAmF4X8TTohxSNJ7xBQzY8pPSuPZsLqABCBbcCTPGCtfbxg
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.57.17 waku eda9157a48733bce75f100f50c62e3236e3f592d502d750ef1dc0e4494db0a56
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID eda9157a4873. Setting up logs at ./log/docker/node2_2024-11-06_23-46-08__44eb0de0-d8c9-4309-963a-7c228b6a39cf__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:178 Started container from image wakuorg/nwaku:latest. REST: 8482
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8482/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:278 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8482/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.57.17/tcp/8483/p2p/16Uiu2HAmSGpf9w1vaBqBXteKZKFNCq3ZGV5KjVPbR2ZuCVytLTN2","/ip4/172.18.57.17/tcp/8484/ws/p2p/16Uiu2HAmSGpf9w1vaBqBXteKZKFNCq3ZGV5KjVPbR2ZuCVytLTN2"],"enrUri":"enr:-L24QL4h-hYWaufWhvAo_tIyw12uO3HUyA_C_a3wgHenccpVDCcxxB4Rc19p8CHiqZLiSPZYdT40InycrT-HJNmPPYUCgmlkgnY0gmlwhKwSORGKbXVsdGlhZGRyc5YACASsEjkRBiEjAAoErBI5EQYhJN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDylXhYmvxC7O0bRbAhJ0yhpPGXypOsMC_2GIbLkIo2xODdGNwgiEjg3VkcIIhJYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:283 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8482/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.227.224/tcp/5790/p2p/16Uiu2HAmF4X8TTohxSNJ7xBQzY8pPSuPZsLqABCBbcCTPGCtfbxg"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:5789/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8482/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "42c2383f-660e-4066-96b0-d8ccf6041b5b", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"42c2383f-660e-4066-96b0-d8ccf6041b5b","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:8482/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:8482/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:222 Stopping container with id 3953acac9a34
[35mDEBUG   [0m src.node.waku_node:waku_node.py:229 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:222 Stopping container with id eda9157a4873
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 3953acac9a34. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:229 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.