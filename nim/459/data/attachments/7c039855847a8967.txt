[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_pubsub_topic_list_instead_of_string with id: 2024-11-23_04-13-13__0abe99d3-09f5-4436-ad2c-e8a9b21c1664
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-23_04-13-13__0abe99d3-09f5-4436-ad2c-e8a9b21c1664__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.2.124
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['22081', '22082', '22083', '22084', '22085']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 22081:22081 -p 22082:22082 -p 22083:22083 -p 22084:22084 -p 22085:22085 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=22083 --rest-port=22081 --tcp-port=22082 --discv5-udp-port=22084 --rest-address=0.0.0.0 --nat=extip:172.18.2.124 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=716e5d4de57a1d990fdc6e65d4aacbd613bd498addd3f4e9c522bff4d16c5ef1 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=22085 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.2.124 waku ec2c1c044a8281433bdfe1889fd9d4291c195d82962171c87684528f21a9d3de
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 1b5df712c019. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID ec2c1c044a82. Setting up logs at ./log/docker/node1_2024-11-23_04-13-13__0abe99d3-09f5-4436-ad2c-e8a9b21c1664__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 22081
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:22081/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:22081/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.2.124/tcp/22082/p2p/16Uiu2HAmBVRcrzC6pDDkWQeADTShgMej3haAQVYBLx19LnGZ8gjp","/ip4/172.18.2.124/tcp/22083/ws/p2p/16Uiu2HAmBVRcrzC6pDDkWQeADTShgMej3haAQVYBLx19LnGZ8gjp"],"enrUri":"enr:-L24QD63LaZBsteNtH6UYsNfRtq0wiDCdbhQ0IDTfldLxxzKNbaudVFR9s35QUZjrApIwtBJ8sQMBsj4E7uTfTHAfhcCgmlkgnY0gmlwhKwSAnyKbXVsdGlhZGRyc5YACASsEgJ8BlZCAAoErBICfAZWQ90DgnJzhQADAQAAiXNlY3AyNTZrMaEC7rETf2GHRLAn84l96z5fmArBCBUOUPRazcr04mM3xGeDdGNwglZCg3VkcIJWRIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-23_04-13-13__0abe99d3-09f5-4436-ad2c-e8a9b21c1664__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.60.58
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['39341', '39342', '39343', '39344', '39345']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 39341:39341 -p 39342:39342 -p 39343:39343 -p 39344:39344 -p 39345:39345 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=39343 --rest-port=39341 --tcp-port=39342 --discv5-udp-port=39344 --rest-address=0.0.0.0 --nat=extip:172.18.60.58 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=a7c9e029a95a3c458aceac5eadadcca8eed3bb42f40aef1cd244df9aad58eda1 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=39345 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QD63LaZBsteNtH6UYsNfRtq0wiDCdbhQ0IDTfldLxxzKNbaudVFR9s35QUZjrApIwtBJ8sQMBsj4E7uTfTHAfhcCgmlkgnY0gmlwhKwSAnyKbXVsdGlhZGRyc5YACASsEgJ8BlZCAAoErBICfAZWQ90DgnJzhQADAQAAiXNlY3AyNTZrMaEC7rETf2GHRLAn84l96z5fmArBCBUOUPRazcr04mM3xGeDdGNwglZCg3VkcIJWRIV3YWt1MgU --filternode=/ip4/172.18.2.124/tcp/22082/p2p/16Uiu2HAmBVRcrzC6pDDkWQeADTShgMej3haAQVYBLx19LnGZ8gjp
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.60.58 waku 154ec1ff8b8877510b3cd8c58fc7bc9c273a191f5018a3e223487fe1977ff66e
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 154ec1ff8b88. Setting up logs at ./log/docker/node2_2024-11-23_04-13-13__0abe99d3-09f5-4436-ad2c-e8a9b21c1664__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 39341
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:39341/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:39341/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.60.58/tcp/39342/p2p/16Uiu2HAkz9C26eKHShRJ52bhj4bwq1S1SDxFxdVoZKHQyCTDz4ci","/ip4/172.18.60.58/tcp/39343/ws/p2p/16Uiu2HAkz9C26eKHShRJ52bhj4bwq1S1SDxFxdVoZKHQyCTDz4ci"],"enrUri":"enr:-L24QPnXYs36Ad57U6TFLaa2qccGkc1grNBz6Szuqn-X3dvNGdSDbpWowVLjYECBoZ0xc0u7TyS9VZjbnefE8vucBksCgmlkgnY0gmlwhKwSPDqKbXVsdGlhZGRyc5YACASsEjw6BpmuAAoErBI8OgaZr90DgnJzhQADAQAAiXNlY3AyNTZrMaECRhGG484RRvSgmM0vGCFicI0T9VuaZkX8A2xCLCr54SuDdGNwgpmug3VkcIKZsIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:39341/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.2.124/tcp/22082/p2p/16Uiu2HAmBVRcrzC6pDDkWQeADTShgMej3haAQVYBLx19LnGZ8gjp"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:22081/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:39341/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "02bca2a5-1fa9-4b7b-bfd7-03188b160740", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"02bca2a5-1fa9-4b7b-bfd7-03188b160740","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:39341/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": ["/waku/2/rs/3/1"]}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:39341/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id ec2c1c044a82
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 154ec1ff8b88
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container ec2c1c044a82. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.