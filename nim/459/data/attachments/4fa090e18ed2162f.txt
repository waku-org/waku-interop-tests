[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_invalid_request_id with id: 2024-11-23_04-13-29__50e303af-a685-4e70-b339-37ae89d82882
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-23_04-13-29__50e303af-a685-4e70-b339-37ae89d82882__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.166.213
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['16838', '16839', '16840', '16841', '16842']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 16838:16838 -p 16839:16839 -p 16840:16840 -p 16841:16841 -p 16842:16842 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=16840 --rest-port=16838 --tcp-port=16839 --discv5-udp-port=16841 --rest-address=0.0.0.0 --nat=extip:172.18.166.213 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e77eb4a03dce0a0eaa258d3eeccf32a4c9ced4df2ad9fadf7b1f6e03f231e624 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=16842 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.166.213 waku 8132ebf201f71beb16ccf2d32f5955d15ba49a6af07c936d5b1d34337d2a8729
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container deab0cf55ff1. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 8132ebf201f7. Setting up logs at ./log/docker/node1_2024-11-23_04-13-29__50e303af-a685-4e70-b339-37ae89d82882__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 16838
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:16838/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:16838/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.166.213/tcp/16839/p2p/16Uiu2HAkzr8g3XEJdULgTPqBrg3mBA77dCY4eom6JE33nECGMbzm","/ip4/172.18.166.213/tcp/16840/ws/p2p/16Uiu2HAkzr8g3XEJdULgTPqBrg3mBA77dCY4eom6JE33nECGMbzm"],"enrUri":"enr:-L24QKJENyfDap8k5Ff0lH0giCLA-oomS2e15VWUPvKcZPlBSLZ-tX1k5qBKPacRZPzGg9-2s7yNbrWvZ70co2xXDXsCgmlkgnY0gmlwhKwSptWKbXVsdGlhZGRyc5YACASsEqbVBkHHAAoErBKm1QZByN0DgnJzhQADAQAAiXNlY3AyNTZrMaECUI6OmVvzgk5h2G-ZoXfs9vSykhBHp8biyZOPpPxXtI6DdGNwgkHHg3VkcIJByYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-23_04-13-29__50e303af-a685-4e70-b339-37ae89d82882__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.53.196
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['50837', '50838', '50839', '50840', '50841']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 50837:50837 -p 50838:50838 -p 50839:50839 -p 50840:50840 -p 50841:50841 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=50839 --rest-port=50837 --tcp-port=50838 --discv5-udp-port=50840 --rest-address=0.0.0.0 --nat=extip:172.18.53.196 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=cac38ba31279eb6b924e15bbb44abfffaf6be7c0e8dce3f6e94b7c8ba27bdeca --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=50841 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QKJENyfDap8k5Ff0lH0giCLA-oomS2e15VWUPvKcZPlBSLZ-tX1k5qBKPacRZPzGg9-2s7yNbrWvZ70co2xXDXsCgmlkgnY0gmlwhKwSptWKbXVsdGlhZGRyc5YACASsEqbVBkHHAAoErBKm1QZByN0DgnJzhQADAQAAiXNlY3AyNTZrMaECUI6OmVvzgk5h2G-ZoXfs9vSykhBHp8biyZOPpPxXtI6DdGNwgkHHg3VkcIJByYV3YWt1MgU --filternode=/ip4/172.18.166.213/tcp/16839/p2p/16Uiu2HAkzr8g3XEJdULgTPqBrg3mBA77dCY4eom6JE33nECGMbzm
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.53.196 waku 6fbf5033595ded67266c2814b232ffa4944175472298887a2ab1b2b47818e08a
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 6fbf5033595d. Setting up logs at ./log/docker/node2_2024-11-23_04-13-29__50e303af-a685-4e70-b339-37ae89d82882__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 50837
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:50837/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:50837/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.53.196/tcp/50838/p2p/16Uiu2HAmJf5pyfaGyb9ALLC3q4pvYMdkw2LHXkmFfBmFmQwQu3PQ","/ip4/172.18.53.196/tcp/50839/ws/p2p/16Uiu2HAmJf5pyfaGyb9ALLC3q4pvYMdkw2LHXkmFfBmFmQwQu3PQ"],"enrUri":"enr:-L24QAanvfB2AzM8zo3gkGs_4F4wepNC5EnwfXsTldIrsdn9PqrDvuXSL1axn-YzGYGq9YUYHm5gDwKTHsLyZ_o_JUYCgmlkgnY0gmlwhKwSNcSKbXVsdGlhZGRyc5YACASsEjXEBsaWAAoErBI1xAbGl90DgnJzhQADAQAAiXNlY3AyNTZrMaEDWSxQmfR-eIQ4cTuNKvKiYRWc4uWzzkkBK4ZP5RScx2uDdGNwgsaWg3VkcILGmIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:50837/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.166.213/tcp/16839/p2p/16Uiu2HAkzr8g3XEJdULgTPqBrg3mBA77dCY4eom6JE33nECGMbzm"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:16838/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:50837/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1d3dca15-2cbe-4aa4-997c-7eb37df5af60", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"1d3dca15-2cbe-4aa4-997c-7eb37df5af60","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:50837/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:50837/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 8132ebf201f7
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 6fbf5033595d
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 8132ebf201f7. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.