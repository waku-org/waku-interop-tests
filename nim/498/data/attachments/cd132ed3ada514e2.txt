[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2024-12-03_04-12-15__6882771e-5eca-4e0d-b9a5-f756082db40b
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-03_04-12-15__6882771e-5eca-4e0d-b9a5-f756082db40b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.163.112
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['30635', '30636', '30637', '30638', '30639']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 30635:30635 -p 30636:30636 -p 30637:30637 -p 30638:30638 -p 30639:30639 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=30637 --rest-port=30635 --tcp-port=30636 --discv5-udp-port=30638 --rest-address=0.0.0.0 --nat=extip:172.18.163.112 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=0aff07a50ff0a9e2b4afcf465da50070a928cab3dfbad2c2081fcfddb59cd24c --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=30639 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.163.112 waku 31aff88ae3b32a3593accebdde38b7c5a61faea05616d268c9a2289e1c5d5286
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 31aff88ae3b3. Setting up logs at ./log/docker/node1_2024-12-03_04-12-15__6882771e-5eca-4e0d-b9a5-f756082db40b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 30635
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 17caa35f5c5d. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30635/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30635/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.163.112/tcp/30636/p2p/16Uiu2HAm93wEYw7gyLp6ZK9drCt8KapxwNJW4AAjfQg3BM8KE8jm","/ip4/172.18.163.112/tcp/30637/ws/p2p/16Uiu2HAm93wEYw7gyLp6ZK9drCt8KapxwNJW4AAjfQg3BM8KE8jm"],"enrUri":"enr:-L24QCQBgO4wVGBbGqT0JH6o3Xj0zyNMwiWv71Ot_sv3PrwkF7BzoY-g57M1bP0PMR4aLjmwYA9V17EEngs_t5V8ojkCgmlkgnY0gmlwhKwSo3CKbXVsdGlhZGRyc5YACASsEqNwBnesAAoErBKjcAZ3rd0DgnJzhQADAQAAiXNlY3AyNTZrMaECynIWYZM24xvUE2D9p6AOBw_IOmFYe4YUNgHJQ6vM5jSDdGNwgnesg3VkcIJ3roV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-03_04-12-15__6882771e-5eca-4e0d-b9a5-f756082db40b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.56.180
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['31802', '31803', '31804', '31805', '31806']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 31802:31802 -p 31803:31803 -p 31804:31804 -p 31805:31805 -p 31806:31806 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=31804 --rest-port=31802 --tcp-port=31803 --discv5-udp-port=31805 --rest-address=0.0.0.0 --nat=extip:172.18.56.180 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=fd58552bf9da45dd32aada6fdabc20a85f17438eea6aacb71fce1cd9a00bab84 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=31806 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QCQBgO4wVGBbGqT0JH6o3Xj0zyNMwiWv71Ot_sv3PrwkF7BzoY-g57M1bP0PMR4aLjmwYA9V17EEngs_t5V8ojkCgmlkgnY0gmlwhKwSo3CKbXVsdGlhZGRyc5YACASsEqNwBnesAAoErBKjcAZ3rd0DgnJzhQADAQAAiXNlY3AyNTZrMaECynIWYZM24xvUE2D9p6AOBw_IOmFYe4YUNgHJQ6vM5jSDdGNwgnesg3VkcIJ3roV3YWt1MgU --filternode=/ip4/172.18.163.112/tcp/30636/p2p/16Uiu2HAm93wEYw7gyLp6ZK9drCt8KapxwNJW4AAjfQg3BM8KE8jm
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.56.180 waku 5dc7b95f818a0858a3a23b85dbbd50cccf727b8c691bb22b107da2e86c0f51bd
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 5dc7b95f818a. Setting up logs at ./log/docker/node2_2024-12-03_04-12-15__6882771e-5eca-4e0d-b9a5-f756082db40b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 31802
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:31802/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:31802/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.56.180/tcp/31803/p2p/16Uiu2HAmME9MtuXPxrYxAcjsNKgqGhNZTAT3jpBtnTT7VzysSJDS","/ip4/172.18.56.180/tcp/31804/ws/p2p/16Uiu2HAmME9MtuXPxrYxAcjsNKgqGhNZTAT3jpBtnTT7VzysSJDS"],"enrUri":"enr:-L24QAWwKGHeLPHiE6nHbaackuPyrS-q43d8Df8bOrCmg1RzYVDf7-BV54AUH2vSHUB8M8XokCyx3hfB8y1IlO415BMCgmlkgnY0gmlwhKwSOLSKbXVsdGlhZGRyc5YACASsEji0Bnw7AAoErBI4tAZ8PN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDf1vZqj7vT3pnyMOBIyfKsz-nrDiRZRtXJgfea6tQDH2DdGNwgnw7g3VkcIJ8PYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:31802/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.163.112/tcp/30636/p2p/16Uiu2HAm93wEYw7gyLp6ZK9drCt8KapxwNJW4AAjfQg3BM8KE8jm"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:30635/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:31802/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "aa2765b4-ed1a-4dd8-9723-8ba928c74c6b", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"aa2765b4-ed1a-4dd8-9723-8ba928c74c6b","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:31802/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:31802/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 31aff88ae3b3
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 5dc7b95f818a
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 31aff88ae3b3. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.