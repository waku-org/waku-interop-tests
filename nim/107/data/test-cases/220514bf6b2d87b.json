{"uid":"220514bf6b2d87b","name":"test_filter_subscribe_with_invalid_content_topic_format","fullName":"tests.filter.test_subscribe_create.TestFilterSubscribeCreate#test_filter_subscribe_with_invalid_content_topic_format","historyId":"47bb6c53b65e859cfe437838222772ee","time":{"start":1711104317123,"stop":1711104317139,"duration":16},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"set_allure_env_variables","time":{"start":1711104163462,"stop":1711104163462,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"attach_logs_on_fail","time":{"start":1711104313765,"stop":1711104313765,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"test_id","time":{"start":1711104313765,"stop":1711104313766,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"close_open_nodes","time":{"start":1711104313765,"stop":1711104313765,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"setup_main_relay_node","time":{"start":1711104313766,"stop":1711104315371,"duration":1605},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"test_setup","time":{"start":1711104313766,"stop":1711104313766,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"filter_setup","time":{"start":1711104313766,"stop":1711104313766,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"setup_main_filter_node","time":{"start":1711104315371,"stop":1711104317074,"duration":1703},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"subscribe_main_nodes","time":{"start":1711104317075,"stop":1711104317122,"duration":47},"status":"passed","steps":[{"name":"wait_for_subscriptions_on_main_nodes","time":{"start":1711104317075,"stop":1711104317122,"duration":47},"status":"passed","steps":[{"name":"create_filter_subscription_with_retry","time":{"start":1711104317092,"stop":1711104317122,"duration":30},"status":"passed","steps":[{"name":"create_filter_subscription","time":{"start":1711104317092,"stop":1711104317122,"duration":30},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"subscription","value":"{'requestId': '2827365b-9935-464c-ac58-6cf1b7e8e858', 'contentFilters': ['/test/1/waku-filter/proto'], 'pubsubTopic': '/waku/2/rs/0/1'}"},{"name":"node","value":"None"}],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":false}],"attachments":[],"parameters":[{"name":"subscription","value":"{'requestId': '2827365b-9935-464c-ac58-6cf1b7e8e858', 'contentFilters': ['/test/1/waku-filter/proto'], 'pubsubTopic': '/waku/2/rs/0/1'}"},{"name":"node","value":"None"}],"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":false}],"attachments":[],"parameters":[{"name":"content_topic_list","value":"['/test/1/waku-filter/proto']"},{"name":"pubsub_topic","value":"None"}],"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":false}],"testStage":{"status":"passed","steps":[{"name":"create_filter_subscription","time":{"start":1711104317123,"stop":1711104317127,"duration":4},"status":"broken","statusMessage":"Exception: Error: 400 Client Error: Bad Request for url: http://127.0.0.1:61786/filter/v2/subscriptions with response: b'{\"requestId\":\"unknown\",\"statusDesc\":\"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\\\\"Invalid content body, could not decode. Unable to deserialize data\\\\\", contentType: \\\\\"text/plain\\\\\"))\"}'\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/steps/filter.py\", line 151, in create_filter_subscription\n    return node.set_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/waku_node.py\", line 243, in set_filter_subscriptions\n    return self._api.set_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 56, in set_filter_subscriptions\n    set_subscriptions_response = self.rest_call(\"post\", \"filter/v2/subscriptions\", json.dumps(subscription))\n                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 16, in rest_call\n    return self.make_request(method, url, headers=headers, data=payload)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/base_client.py\", line 18, in make_request\n    raise Exception(f\"Error: {http_err} with response: {response.content}\")\n","steps":[],"attachments":[],"parameters":[{"name":"subscription","value":"{'requestId': '1', 'contentFilters': [{'description': 'Empty string', 'value': ''}], 'pubsubTopic': '/waku/2/rs/0/1'}"},{"name":"node","value":"None"}],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},{"name":"create_filter_subscription","time":{"start":1711104317128,"stop":1711104317130,"duration":2},"status":"broken","statusMessage":"Exception: Error: 400 Client Error: Bad Request for url: http://127.0.0.1:61786/filter/v2/subscriptions with response: b'{\"requestId\":\"unknown\",\"statusDesc\":\"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\\\\"Invalid content body, could not decode. Unable to deserialize data\\\\\", contentType: \\\\\"text/plain\\\\\"))\"}'\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/steps/filter.py\", line 151, in create_filter_subscription\n    return node.set_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/waku_node.py\", line 243, in set_filter_subscriptions\n    return self._api.set_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 56, in set_filter_subscriptions\n    set_subscriptions_response = self.rest_call(\"post\", \"filter/v2/subscriptions\", json.dumps(subscription))\n                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 16, in rest_call\n    return self.make_request(method, url, headers=headers, data=payload)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/base_client.py\", line 18, in make_request\n    raise Exception(f\"Error: {http_err} with response: {response.content}\")\n","steps":[],"attachments":[],"parameters":[{"name":"subscription","value":"{'requestId': '1', 'contentFilters': [{'description': 'A dictionary', 'value': {'key': 'YWFh'}}], 'pubsubTopic': '/waku/2/rs/0/1'}"},{"name":"node","value":"None"}],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},{"name":"create_filter_subscription","time":{"start":1711104317131,"stop":1711104317133,"duration":2},"status":"broken","statusMessage":"Exception: Error: 400 Client Error: Bad Request for url: http://127.0.0.1:61786/filter/v2/subscriptions with response: b'{\"requestId\":\"unknown\",\"statusDesc\":\"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\\\\"Invalid content body, could not decode. Unable to deserialize data\\\\\", contentType: \\\\\"text/plain\\\\\"))\"}'\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/steps/filter.py\", line 151, in create_filter_subscription\n    return node.set_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/waku_node.py\", line 243, in set_filter_subscriptions\n    return self._api.set_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 56, in set_filter_subscriptions\n    set_subscriptions_response = self.rest_call(\"post\", \"filter/v2/subscriptions\", json.dumps(subscription))\n                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 16, in rest_call\n    return self.make_request(method, url, headers=headers, data=payload)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/base_client.py\", line 18, in make_request\n    raise Exception(f\"Error: {http_err} with response: {response.content}\")\n","steps":[],"attachments":[],"parameters":[{"name":"subscription","value":"{'requestId': '1', 'contentFilters': [{'description': 'An integer', 'value': 1234567890}], 'pubsubTopic': '/waku/2/rs/0/1'}"},{"name":"node","value":"None"}],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},{"name":"create_filter_subscription","time":{"start":1711104317134,"stop":1711104317136,"duration":2},"status":"broken","statusMessage":"Exception: Error: 400 Client Error: Bad Request for url: http://127.0.0.1:61786/filter/v2/subscriptions with response: b'{\"requestId\":\"unknown\",\"statusDesc\":\"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\\\\"Invalid content body, could not decode. Unable to deserialize data\\\\\", contentType: \\\\\"text/plain\\\\\"))\"}'\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/steps/filter.py\", line 151, in create_filter_subscription\n    return node.set_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/waku_node.py\", line 243, in set_filter_subscriptions\n    return self._api.set_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 56, in set_filter_subscriptions\n    set_subscriptions_response = self.rest_call(\"post\", \"filter/v2/subscriptions\", json.dumps(subscription))\n                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 16, in rest_call\n    return self.make_request(method, url, headers=headers, data=payload)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/base_client.py\", line 18, in make_request\n    raise Exception(f\"Error: {http_err} with response: {response.content}\")\n","steps":[],"attachments":[],"parameters":[{"name":"subscription","value":"{'requestId': '1', 'contentFilters': [{'description': 'A list', 'value': ['YWFh']}], 'pubsubTopic': '/waku/2/rs/0/1'}"},{"name":"node","value":"None"}],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},{"name":"create_filter_subscription","time":{"start":1711104317137,"stop":1711104317139,"duration":2},"status":"broken","statusMessage":"Exception: Error: 400 Client Error: Bad Request for url: http://127.0.0.1:61786/filter/v2/subscriptions with response: b'{\"requestId\":\"unknown\",\"statusDesc\":\"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\\\\"Invalid content body, could not decode. Unable to deserialize data\\\\\", contentType: \\\\\"text/plain\\\\\"))\"}'\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/steps/filter.py\", line 151, in create_filter_subscription\n    return node.set_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/waku_node.py\", line 243, in set_filter_subscriptions\n    return self._api.set_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 56, in set_filter_subscriptions\n    set_subscriptions_response = self.rest_call(\"post\", \"filter/v2/subscriptions\", json.dumps(subscription))\n                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 16, in rest_call\n    return self.make_request(method, url, headers=headers, data=payload)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/base_client.py\", line 18, in make_request\n    raise Exception(f\"Error: {http_err} with response: {response.content}\")\n","steps":[],"attachments":[],"parameters":[{"name":"subscription","value":"{'requestId': '1', 'contentFilters': [{'description': 'A bool', 'value': True}], 'pubsubTopic': '/waku/2/rs/0/1'}"},{"name":"node","value":"None"}],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true}],"attachments":[{"uid":"b67116b1c9213323","name":"log","source":"b67116b1c9213323.txt","type":"text/plain","size":13217}],"parameters":[],"stepsCount":5,"attachmentsCount":1,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":false},"afterStages":[{"name":"test_setup::0","time":{"start":1711104317141,"stop":1711104317141,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"close_open_nodes::0","time":{"start":1711104317142,"stop":1711104321532,"duration":4390},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"attach_logs_on_fail::0","time":{"start":1711104321533,"stop":1711104321533,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"set_allure_env_variables::0","time":{"start":1711104554318,"stop":1711104554318,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false}],"labels":[{"name":"tag","value":"@pytest.mark.usefixtures('setup_main_relay_node', 'setup_main_filter_node')"},{"name":"parentSuite","value":"tests.filter"},{"name":"suite","value":"test_subscribe_create"},{"name":"subSuite","value":"TestFilterSubscribeCreate"},{"name":"host","value":"fv-az979-844"},{"name":"thread","value":"2064-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.filter.test_subscribe_create"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":79,"unknown":0,"total":79},"items":[{"uid":"5262b0b31c001d9b","reportUrl":"https://waku-org.github.io/waku-interop-tests/106//#testresult/5262b0b31c001d9b","status":"passed","time":{"start":1711080737304,"stop":1711080737322,"duration":18}},{"uid":"3f8d57ce29041eeb","reportUrl":"https://waku-org.github.io/waku-interop-tests/105//#testresult/3f8d57ce29041eeb","status":"passed","time":{"start":1710994357037,"stop":1710994357057,"duration":20}},{"uid":"21f698a13c99f80d","reportUrl":"https://waku-org.github.io/waku-interop-tests/104//#testresult/21f698a13c99f80d","status":"passed","time":{"start":1710907975480,"stop":1710907975495,"duration":15}},{"uid":"7648cde576adc253","reportUrl":"https://waku-org.github.io/waku-interop-tests/103//#testresult/7648cde576adc253","status":"passed","time":{"start":1710866082575,"stop":1710866082593,"duration":18}},{"uid":"48eedc50c861ed20","reportUrl":"https://waku-org.github.io/waku-interop-tests/102//#testresult/48eedc50c861ed20","status":"passed","time":{"start":1710821569071,"stop":1710821569086,"duration":15}},{"uid":"12590ff0a3222285","reportUrl":"https://waku-org.github.io/waku-interop-tests/101//#testresult/12590ff0a3222285","status":"passed","time":{"start":1710735137059,"stop":1710735137088,"duration":29}},{"uid":"5c9c57d28ca57e33","reportUrl":"https://waku-org.github.io/waku-interop-tests/100//#testresult/5c9c57d28ca57e33","status":"passed","time":{"start":1710648765439,"stop":1710648765501,"duration":62}},{"uid":"a1d90338afdcff34","reportUrl":"https://waku-org.github.io/waku-interop-tests/99//#testresult/a1d90338afdcff34","status":"passed","time":{"start":1710562322410,"stop":1710562322432,"duration":22}},{"uid":"7156b3e2324aaf76","reportUrl":"https://waku-org.github.io/waku-interop-tests/98//#testresult/7156b3e2324aaf76","status":"passed","time":{"start":1710475990054,"stop":1710475990074,"duration":20}},{"uid":"2413f49915069598","reportUrl":"https://waku-org.github.io/waku-interop-tests/97//#testresult/2413f49915069598","status":"passed","time":{"start":1710389535019,"stop":1710389535042,"duration":23}},{"uid":"ef9df37f394875fe","reportUrl":"https://waku-org.github.io/waku-interop-tests/96//#testresult/ef9df37f394875fe","status":"passed","time":{"start":1710303123976,"stop":1710303124010,"duration":34}},{"uid":"2879ca6b765d5824","reportUrl":"https://waku-org.github.io/waku-interop-tests/95//#testresult/2879ca6b765d5824","status":"passed","time":{"start":1710227684353,"stop":1710227684375,"duration":22}},{"uid":"101671890039a02e","reportUrl":"https://waku-org.github.io/waku-interop-tests/94//#testresult/101671890039a02e","status":"passed","time":{"start":1710216807410,"stop":1710216807427,"duration":17}},{"uid":"6673363ac49cc624","reportUrl":"https://waku-org.github.io/waku-interop-tests/93//#testresult/6673363ac49cc624","status":"passed","time":{"start":1710130345509,"stop":1710130345529,"duration":20}},{"uid":"50923ccb26cea280","reportUrl":"https://waku-org.github.io/waku-interop-tests/92//#testresult/50923ccb26cea280","status":"passed","time":{"start":1710043901202,"stop":1710043901223,"duration":21}},{"uid":"65473a2eabff4965","reportUrl":"https://waku-org.github.io/waku-interop-tests/91//#testresult/65473a2eabff4965","status":"passed","time":{"start":1709957483409,"stop":1709957483427,"duration":18}},{"uid":"4b9387609434f9e1","reportUrl":"https://waku-org.github.io/waku-interop-tests/90//#testresult/4b9387609434f9e1","status":"passed","time":{"start":1709871142697,"stop":1709871142713,"duration":16}},{"uid":"7098f2211ed6b1e2","reportUrl":"https://waku-org.github.io/waku-interop-tests/89//#testresult/7098f2211ed6b1e2","status":"passed","time":{"start":1709799815293,"stop":1709799815313,"duration":20}},{"uid":"b81dc1ffc9b5d458","reportUrl":"https://waku-org.github.io/waku-interop-tests/88//#testresult/b81dc1ffc9b5d458","status":"passed","time":{"start":1709797025547,"stop":1709797025564,"duration":17}},{"uid":"4c197a993176d3af","reportUrl":"https://waku-org.github.io/waku-interop-tests/87//#testresult/4c197a993176d3af","status":"passed","time":{"start":1709784717122,"stop":1709784717138,"duration":16}}]},"tags":["@pytest.mark.usefixtures('setup_main_relay_node', 'setup_main_filter_node')"]},"source":"220514bf6b2d87b.json","parameterValues":[]}