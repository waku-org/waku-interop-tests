{"uid":"4b4757e66a1912dae1a509f688f20b0f","children":[{"name":"Product defects","children":[{"name":"AssertionError: assert 'INVALID_QUERY: time range should be smaller than one day in nanos' in 'Request for stored messages with invalid end_time 2430273901078599168 is successful'\n +  where 'Request for stored messages with invalid end_time 2430273901078599168 is successful' = str(Exception('Request for stored messages with invalid end_time 2430273901078599168 is successful'))","children":[{"name":"test_time_filter_big_timestamp","uid":"40e8d2b1a5de3a3d","parentUid":"a5cf5600ae6463bebe067d0f31ad35c3","status":"failed","time":{"start":1739073899834,"stop":1739073901084,"duration":1250},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":2,"retriesStatusChange":false,"parameters":[],"tags":["@pytest.mark.usefixtures('node_setup')"]}],"uid":"a5cf5600ae6463bebe067d0f31ad35c3"},{"name":"AssertionError: assert 'INVALID_QUERY: startTime should be before endTime' in 'Request for stored messages with start_time==end_time is successful'\n +  where 'Request for stored messages with start_time==end_time is successful' = str(Exception('Request for stored messages with start_time==end_time is successful'))","children":[{"name":"test_time_filter_start_time_equals_end_time","uid":"5572130d802f857b","parentUid":"4a56aaf662e0b66abafd4b12013a6e0b","status":"failed","time":{"start":1739073939914,"stop":1739073941166,"duration":1252},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":2,"retriesStatusChange":false,"parameters":[],"tags":["@pytest.mark.usefixtures('node_setup')"]},{"name":"test_time_filter_start_time_after_end_time","uid":"8f61e0980bbfb584","parentUid":"4a56aaf662e0b66abafd4b12013a6e0b","status":"failed","time":{"start":1739074210964,"stop":1739074212214,"duration":1250},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":2,"retriesStatusChange":false,"parameters":[],"tags":["@pytest.mark.skipif(False, reason='Test works only with nwaku')","@pytest.mark.usefixtures('node_setup')"]}],"uid":"4a56aaf662e0b66abafd4b12013a6e0b"}],"uid":"8fb3a91ba5aaf9de24cc8a92edc82b5d"}],"name":"categories"}