[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_pubsub_topic_string_instead_of_list with id: 2025-02-09_04-02-54__1fd72eb3-0998-47a6-8219-42d01abfe970
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-02-09_04-02-54__1fd72eb3-0998-47a6-8219-42d01abfe970__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.205.149
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['7515', '7516', '7517', '7518', '7519']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 7515:7515 -p 7516:7516 -p 7517:7517 -p 7518:7518 -p 7519:7519 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=7517 --rest-port=7515 --tcp-port=7516 --discv5-udp-port=7518 --rest-address=0.0.0.0 --nat=extip:172.18.205.149 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=cd1d61baa6e8beb5f83dad72e904d3a0f24afd467edecbeca005be8a21c2bef4 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=7519 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.205.149 waku ebd3f835c421ab20d883eb32e4541e1054fcd209e7dafb16780c0e40aaba323b
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID ebd3f835c421. Setting up logs at ./log/docker/node1_2025-02-09_04-02-54__1fd72eb3-0998-47a6-8219-42d01abfe970__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 7515
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 76134c4b8cd2. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7515/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7515/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.205.149/tcp/7516/p2p/16Uiu2HAmLynfHGuaFTHHFsgHKtrSVdRvgKrooff2EhzUWmiF46W5","/ip4/172.18.205.149/tcp/7517/ws/p2p/16Uiu2HAmLynfHGuaFTHHFsgHKtrSVdRvgKrooff2EhzUWmiF46W5"],"enrUri":"enr:-L24QFgBPzv1-XZoAPpupClFiHaThO47aSAtNhHIYTuWKYo7B-JbDDHLmqB-eW51mex1rOSzAyUY9Uu8LvgjJMXS0mICgmlkgnY0gmlwhKwSzZWKbXVsdGlhZGRyc5YACASsEs2VBh1cAAoErBLNlQYdXd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDe65QJjNoZxyEYCshgmEtdmjKmzYmnWSCr02yS1aWRMKDdGNwgh1cg3VkcIIdXoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-02-09_04-02-54__1fd72eb3-0998-47a6-8219-42d01abfe970__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.89.150
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['10324', '10325', '10326', '10327', '10328']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 10324:10324 -p 10325:10325 -p 10326:10326 -p 10327:10327 -p 10328:10328 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=10326 --rest-port=10324 --tcp-port=10325 --discv5-udp-port=10327 --rest-address=0.0.0.0 --nat=extip:172.18.89.150 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=30cd1ceaaf5702cd7fc2c5a5912ca2ab71bca7bb8c9df5fcb45eaef28bf7ebe2 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=10328 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QFgBPzv1-XZoAPpupClFiHaThO47aSAtNhHIYTuWKYo7B-JbDDHLmqB-eW51mex1rOSzAyUY9Uu8LvgjJMXS0mICgmlkgnY0gmlwhKwSzZWKbXVsdGlhZGRyc5YACASsEs2VBh1cAAoErBLNlQYdXd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDe65QJjNoZxyEYCshgmEtdmjKmzYmnWSCr02yS1aWRMKDdGNwgh1cg3VkcIIdXoV3YWt1MgU --filternode=/ip4/172.18.205.149/tcp/7516/p2p/16Uiu2HAmLynfHGuaFTHHFsgHKtrSVdRvgKrooff2EhzUWmiF46W5
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.89.150 waku 1d84665d053040fefe99d8ad471e6cd6a5c5a8648fb712446262463a8ce983fc
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 1d84665d0530. Setting up logs at ./log/docker/node2_2025-02-09_04-02-54__1fd72eb3-0998-47a6-8219-42d01abfe970__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 10324
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10324/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10324/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.89.150/tcp/10325/p2p/16Uiu2HAmJ6xCULKGzQps97R1pMY2JeyYN247P1s2FNPYRcphSQ1B","/ip4/172.18.89.150/tcp/10326/ws/p2p/16Uiu2HAmJ6xCULKGzQps97R1pMY2JeyYN247P1s2FNPYRcphSQ1B"],"enrUri":"enr:-L24QBQXo-k5zjgmPukubKxgdi0thQCIfol4IpbAZ-0l9myaA72pRm3YupbgmS_fquflnKh-YAbC27kQQQq7McuvRvgCgmlkgnY0gmlwhKwSWZaKbXVsdGlhZGRyc5YACASsElmWBihVAAoErBJZlgYoVt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDUPEaNCnYYbidPEUp4S8swlz8uiodUoFat7zMnkXMpM6DdGNwgihVg3VkcIIoV4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:10324/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.205.149/tcp/7516/p2p/16Uiu2HAmLynfHGuaFTHHFsgHKtrSVdRvgKrooff2EhzUWmiF46W5"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:7515/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:10324/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "22f903b1-7b75-4af6-a2b6-159a8e3ac283", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"22f903b1-7b75-4af6-a2b6-159a8e3ac283","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:10324/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": "/test/1/waku-filter/proto", "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:10324/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id ebd3f835c421
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 1d84665d0530
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container ebd3f835c421. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.