2025-02-09 04:03:38.661 DEBUG [tests.conftest] Running fixture setup: test_id
2025-02-09 04:03:38.661 DEBUG [tests.conftest] Running test: test_publish_with_invalid_version with id: 2025-02-09_04-03-38__64ccf897-bc35-4699-833c-9e48b1f1dbe9
2025-02-09 04:03:38.662 DEBUG [src.steps.common] Running fixture setup: common_setup
2025-02-09 04:03:38.662 DEBUG [src.steps.relay] Running fixture setup: relay_setup
2025-02-09 04:03:38.662 DEBUG [src.steps.relay] Running fixture setup: setup_main_relay_nodes
2025-02-09 04:03:38.668 DEBUG [src.node.docker_mananger] Docker client initialized with image wakuorg/nwaku:latest
2025-02-09 04:03:38.668 DEBUG [src.node.waku_node] WakuNode instance initialized with log path ./log/docker/node1_2025-02-09_04-03-38__64ccf897-bc35-4699-833c-9e48b1f1dbe9__wakuorg_nwaku:latest.log
2025-02-09 04:03:38.668 DEBUG [src.node.waku_node] Starting Node...
2025-02-09 04:03:38.668 DEBUG [src.node.docker_mananger] Attempting to create or retrieve network waku
2025-02-09 04:03:38.670 DEBUG [src.node.docker_mananger] Network waku already exists
2025-02-09 04:03:38.670 DEBUG [src.node.docker_mananger] Generated random external IP 172.18.154.109
2025-02-09 04:03:38.670 DEBUG [src.node.docker_mananger] Generated ports ['20552', '20553', '20554', '20555', '20556']
2025-02-09 04:03:38.670 DEBUG [src.node.waku_node] RLN credentials were not set
2025-02-09 04:03:38.670 INFO [src.node.waku_node] RLN credentials not set or credential store not available, starting without RLN
2025-02-09 04:03:38.671 DEBUG [src.node.waku_node] Using volumes []
2025-02-09 04:03:38.671 DEBUG [src.node.docker_mananger] docker run -i -t -p 20552:20552 -p 20553:20553 -p 20554:20554 -p 20555:20555 -p 20556:20556 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=20554 --rest-port=20552 --tcp-port=20553 --discv5-udp-port=20555 --rest-address=0.0.0.0 --nat=extip:172.18.154.109 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=cbf41bf3ec9a02b43beecd36d37e5120c357fcc9c936d76aa30b21fe2909f710 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=20556 --metrics-logging=true --relay=true
2025-02-09 04:03:38.894 DEBUG [src.node.docker_mananger] docker network connect --ip 172.18.154.109 waku d31cc78263b8337e6166007757700ac1f7440b0c77d72bd52d08be6f05cf0999
2025-02-09 04:03:38.941 DEBUG [src.node.docker_mananger] Container started with ID d31cc78263b8. Setting up logs at ./log/docker/node1_2025-02-09_04-03-38__64ccf897-bc35-4699-833c-9e48b1f1dbe9__wakuorg_nwaku:latest.log
2025-02-09 04:03:38.942 DEBUG [src.node.waku_node] Started container from image wakuorg/nwaku:latest. REST: 20552
2025-02-09 04:03:38.943 DEBUG [src.libs.common] Sleeping for 1 seconds
2025-02-09 04:03:39.460 ERROR [src.node.docker_mananger] Max retries reached for container b8eaf89d4347. Exiting log stream.
2025-02-09 04:03:39.943 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:20552/health" -H "Content-Type: application/json" -d 'None'
2025-02-09 04:03:39.946 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
2025-02-09 04:03:39.946 INFO [src.node.waku_node] Node protocols are initialized !!
2025-02-09 04:03:39.946 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:20552/debug/v1/info" -H "Content-Type: application/json" -d 'None'
2025-02-09 04:03:39.948 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.154.109/tcp/20553/p2p/16Uiu2HAmGj1CZNoL1gpRC5MbkB47x2odqXy9st46sDHMxJH4DRFV","/ip4/172.18.154.109/tcp/20554/ws/p2p/16Uiu2HAmGj1CZNoL1gpRC5MbkB47x2odqXy9st46sDHMxJH4DRFV"],"enrUri":"enr:-L24QNRSfM4QQJxh6RtpRho7XU6LEQX8XRt57QQ9HWEUQNH1br2kLcTTDKvtTEpRTGN1OIJ6vdiP8SP4Zj_9I1Z5xrkCgmlkgnY0gmlwhKwSmm2KbXVsdGlhZGRyc5YACASsEpptBlBJAAoErBKabQZQSt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDPHYIDFZMbNaBi0PkdBFTPEhDFKotBFI3M8Hj6gHFKXiDdGNwglBJg3VkcIJQS4V3YWt1MgE"}'
2025-02-09 04:03:39.949 INFO [src.node.waku_node] REST service is ready !!
2025-02-09 04:03:39.955 DEBUG [src.node.docker_mananger] Docker client initialized with image wakuorg/nwaku:latest
2025-02-09 04:03:39.955 DEBUG [src.node.waku_node] WakuNode instance initialized with log path ./log/docker/node2_2025-02-09_04-03-38__64ccf897-bc35-4699-833c-9e48b1f1dbe9__wakuorg_nwaku:latest.log
2025-02-09 04:03:39.955 DEBUG [src.node.waku_node] Starting Node...
2025-02-09 04:03:39.955 DEBUG [src.node.docker_mananger] Attempting to create or retrieve network waku
2025-02-09 04:03:39.957 DEBUG [src.node.docker_mananger] Network waku already exists
2025-02-09 04:03:39.957 DEBUG [src.node.docker_mananger] Generated random external IP 172.18.207.115
2025-02-09 04:03:39.957 DEBUG [src.node.docker_mananger] Generated ports ['37872', '37873', '37874', '37875', '37876']
2025-02-09 04:03:39.957 DEBUG [src.node.waku_node] RLN credentials were not set
2025-02-09 04:03:39.957 INFO [src.node.waku_node] RLN credentials not set or credential store not available, starting without RLN
2025-02-09 04:03:39.957 DEBUG [src.node.waku_node] Using volumes []
2025-02-09 04:03:39.958 DEBUG [src.node.docker_mananger] docker run -i -t -p 37872:37872 -p 37873:37873 -p 37874:37874 -p 37875:37875 -p 37876:37876 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=37874 --rest-port=37872 --tcp-port=37873 --discv5-udp-port=37875 --rest-address=0.0.0.0 --nat=extip:172.18.207.115 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e5ceac259fae02d7bdfd75467ac5e7bdfafa6dd66ded2caf4bfcf4baf1412732 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=37876 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-L24QNRSfM4QQJxh6RtpRho7XU6LEQX8XRt57QQ9HWEUQNH1br2kLcTTDKvtTEpRTGN1OIJ6vdiP8SP4Zj_9I1Z5xrkCgmlkgnY0gmlwhKwSmm2KbXVsdGlhZGRyc5YACASsEpptBlBJAAoErBKabQZQSt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDPHYIDFZMbNaBi0PkdBFTPEhDFKotBFI3M8Hj6gHFKXiDdGNwglBJg3VkcIJQS4V3YWt1MgE
2025-02-09 04:03:40.183 DEBUG [src.node.docker_mananger] docker network connect --ip 172.18.207.115 waku 3bef1c0e781b0c2a4f85ae5394cf2211213b8b45e7a440a401f36bb7cb9016f7
2025-02-09 04:03:40.232 DEBUG [src.node.docker_mananger] Container started with ID 3bef1c0e781b. Setting up logs at ./log/docker/node2_2025-02-09_04-03-38__64ccf897-bc35-4699-833c-9e48b1f1dbe9__wakuorg_nwaku:latest.log
2025-02-09 04:03:40.232 DEBUG [src.node.waku_node] Started container from image wakuorg/nwaku:latest. REST: 37872
2025-02-09 04:03:40.232 DEBUG [src.libs.common] Sleeping for 1 seconds
2025-02-09 04:03:41.236 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:37872/health" -H "Content-Type: application/json" -d 'None'
2025-02-09 04:03:41.243 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
2025-02-09 04:03:41.243 INFO [src.node.waku_node] Node protocols are initialized !!
2025-02-09 04:03:41.244 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:37872/debug/v1/info" -H "Content-Type: application/json" -d 'None'
2025-02-09 04:03:41.246 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.207.115/tcp/37873/p2p/16Uiu2HAmDCNWunbP2duzPj9xSvhN6ykyt55RG1h9bHKmPRSvkjoF","/ip4/172.18.207.115/tcp/37874/ws/p2p/16Uiu2HAmDCNWunbP2duzPj9xSvhN6ykyt55RG1h9bHKmPRSvkjoF"],"enrUri":"enr:-L24QHHHBYOO4FVTU-KUDu9OKT6dFgN2jrjQmmh6NVq27ARGMOe4_zfmLag4ILUvZ6LQEe-VZoMZdbtBRzu-jD05VHECgmlkgnY0gmlwhKwSz3OKbXVsdGlhZGRyc5YACASsEs9zBpPxAAoErBLPcwaT8t0DgnJzhQADAQAAiXNlY3AyNTZrMaEDCAoRcG7uFxvA_l4aUlqHFg_XHS1-2tA5ifnWXp9ZVQqDdGNwgpPxg3VkcIKT84V3YWt1MgE"}'
2025-02-09 04:03:41.246 INFO [src.node.waku_node] REST service is ready !!
2025-02-09 04:03:41.246 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:37872/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.154.109/tcp/20553/p2p/16Uiu2HAmGj1CZNoL1gpRC5MbkB47x2odqXy9st46sDHMxJH4DRFV"]'
2025-02-09 04:03:41.249 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-09 04:03:41.249 DEBUG [src.steps.relay] Running fixture setup: subscribe_main_relay_nodes
2025-02-09 04:03:41.249 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:20552/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
2025-02-09 04:03:41.253 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-09 04:03:41.253 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:37872/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
2025-02-09 04:03:41.259 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-09 04:03:41.261 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:20552/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-09 04:03:41.266 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-09 04:03:41.266 DEBUG [src.libs.common] Sleeping for 0.1 seconds
2025-02-09 04:03:41.367 DEBUG [src.steps.relay] Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
2025-02-09 04:03:41.367 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:20552/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
2025-02-09 04:03:41.369 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1739073821260969216,"ephemeral":false}]'
2025-02-09 04:03:41.371 DEBUG [src.steps.relay] Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
2025-02-09 04:03:41.371 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:37872/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
2025-02-09 04:03:41.373 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1739073821260969216,"ephemeral":false}]'
2025-02-09 04:03:41.374 INFO [src.steps.relay] WARM UP successful!!
2025-02-09 04:03:41.375 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:20552/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)', "version": 2.1}'
2025-02-09 04:03:41.378 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:20552/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-09 04:03:41.380 DEBUG [tests.conftest] Running fixture teardown: test_setup
2025-02-09 04:03:41.382 DEBUG [tests.conftest] Running fixture teardown: close_open_nodes
2025-02-09 04:03:41.382 DEBUG [src.node.waku_node] Stopping container with id d31cc78263b8
2025-02-09 04:03:42.423 DEBUG [src.node.waku_node] Container stopped.
2025-02-09 04:03:42.423 DEBUG [src.node.waku_node] Stopping container with id 3bef1c0e781b
2025-02-09 04:03:43.235 ERROR [src.node.docker_mananger] Max retries reached for container d31cc78263b8. Exiting log stream.
2025-02-09 04:03:43.912 DEBUG [src.node.waku_node] Container stopped.
2025-02-09 04:03:43.915 DEBUG [tests.conftest] Running fixture teardown: check_waku_log_errors
2025-02-09 04:03:43.920 DEBUG [src.node.docker_mananger] No errors found in the waku logs.
2025-02-09 04:03:43.924 DEBUG [src.node.docker_mananger] No errors found in the waku logs.
