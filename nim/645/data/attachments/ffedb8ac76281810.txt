[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_no_request_id with id: 2025-02-09_04-05-00__e819e68f-6276-4b98-8f7b-96c0f5142cb4
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-02-09_04-05-00__e819e68f-6276-4b98-8f7b-96c0f5142cb4__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.88.253
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['48878', '48879', '48880', '48881', '48882']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 48878:48878 -p 48879:48879 -p 48880:48880 -p 48881:48881 -p 48882:48882 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=48880 --rest-port=48878 --tcp-port=48879 --discv5-udp-port=48881 --rest-address=0.0.0.0 --nat=extip:172.18.88.253 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=f7e0a34dcadbfd3c2da9a85dbe1fcc8cd6abe98a1f97c2ce17e68f5ada717adb --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=48882 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.88.253 waku 819d389d986b422011c7de7aba90ff5a864c756a299cd498f78363988a724343
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 819d389d986b. Setting up logs at ./log/docker/node1_2025-02-09_04-05-00__e819e68f-6276-4b98-8f7b-96c0f5142cb4__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 48878
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 2afb4db13ec1. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:48878/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:48878/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.88.253/tcp/48879/p2p/16Uiu2HAmKKZEi3FZsWtqWvzsF8vx4emqvqhzNnuhjLVNEaNErPRX","/ip4/172.18.88.253/tcp/48880/ws/p2p/16Uiu2HAmKKZEi3FZsWtqWvzsF8vx4emqvqhzNnuhjLVNEaNErPRX"],"enrUri":"enr:-L24QNXlrOA_CRJBbrwR_l0gsc5T_863vci7nUcyDmuTWxR2GA3Ck_Gs1kY7NiKQ8cEUnZsmsGTN0Rv53C9Ys4-WImYCgmlkgnY0gmlwhKwSWP2KbXVsdGlhZGRyc5YACASsElj9Br7vAAoErBJY_Qa-8N0DgnJzhQADAQAAiXNlY3AyNTZrMaEDYwdgkUFuSzjo9VRG-f95g5QafTZa4ckJ4VlCKCOC1_6DdGNwgr7vg3VkcIK-8YV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-02-09_04-05-00__e819e68f-6276-4b98-8f7b-96c0f5142cb4__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.25.145
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['35226', '35227', '35228', '35229', '35230']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 35226:35226 -p 35227:35227 -p 35228:35228 -p 35229:35229 -p 35230:35230 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=35228 --rest-port=35226 --tcp-port=35227 --discv5-udp-port=35229 --rest-address=0.0.0.0 --nat=extip:172.18.25.145 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=f67ae758d83eca2192e8cc451b3c5124e0eaf1fc09a969c62ecddc784f3a3fce --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=35230 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QNXlrOA_CRJBbrwR_l0gsc5T_863vci7nUcyDmuTWxR2GA3Ck_Gs1kY7NiKQ8cEUnZsmsGTN0Rv53C9Ys4-WImYCgmlkgnY0gmlwhKwSWP2KbXVsdGlhZGRyc5YACASsElj9Br7vAAoErBJY_Qa-8N0DgnJzhQADAQAAiXNlY3AyNTZrMaEDYwdgkUFuSzjo9VRG-f95g5QafTZa4ckJ4VlCKCOC1_6DdGNwgr7vg3VkcIK-8YV3YWt1MgU --filternode=/ip4/172.18.88.253/tcp/48879/p2p/16Uiu2HAmKKZEi3FZsWtqWvzsF8vx4emqvqhzNnuhjLVNEaNErPRX
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.25.145 waku 1d0bf1bfd3c37f444de1b55c8355d652ea217d3fc72856d82fd3de3b545fedb0
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 1d0bf1bfd3c3. Setting up logs at ./log/docker/node2_2025-02-09_04-05-00__e819e68f-6276-4b98-8f7b-96c0f5142cb4__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 35226
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:35226/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:35226/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.25.145/tcp/35227/p2p/16Uiu2HAkzbV3TSSAEwf4mCkonW3i8UWXJn94HmTmLJ8sftNP1GN3","/ip4/172.18.25.145/tcp/35228/ws/p2p/16Uiu2HAkzbV3TSSAEwf4mCkonW3i8UWXJn94HmTmLJ8sftNP1GN3"],"enrUri":"enr:-L24QOFojCllyotUnkh5o-C2PfIRq57_h-S1OmhpPUONmnPTTWd03XY1mN5bBTk_L7-h6mQbYKesRiVwOzGs6LepVaQCgmlkgnY0gmlwhKwSGZGKbXVsdGlhZGRyc5YACASsEhmRBombAAoErBIZkQaJnN0DgnJzhQADAQAAiXNlY3AyNTZrMaECTM3gW3EQCH40C0D415BOOfrJ_IDnspiQmhsXpaKBoSCDdGNwgombg3VkcIKJnYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:35226/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.88.253/tcp/48879/p2p/16Uiu2HAmKKZEi3FZsWtqWvzsF8vx4emqvqhzNnuhjLVNEaNErPRX"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:48878/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:35226/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "d058df01-8c44-4b81-bf51-14c4bbad28e0", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"d058df01-8c44-4b81-bf51-14c4bbad28e0","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:35226/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:35226/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 819d389d986b
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 1d0bf1bfd3c3
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 819d389d986b. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.