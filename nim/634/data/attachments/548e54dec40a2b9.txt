[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_no_request_id with id: 2025-01-30_04-05-09__dff97f7b-4434-4e4a-9095-ae8140ca77c7
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-30_04-05-09__dff97f7b-4434-4e4a-9095-ae8140ca77c7__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.86.189
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['29830', '29831', '29832', '29833', '29834']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 29830:29830 -p 29831:29831 -p 29832:29832 -p 29833:29833 -p 29834:29834 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=29832 --rest-port=29830 --tcp-port=29831 --discv5-udp-port=29833 --rest-address=0.0.0.0 --nat=extip:172.18.86.189 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=5a764ca9f404302ec55d2c97aeb74ef30ddbec84c7af3c88fec503caa0ece28d --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=29834 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.86.189 waku 1c1e68c12371fe5c23d3c408926c8b80cba0aea571829e4d43210130f847ec46
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 1c1e68c12371. Setting up logs at ./log/docker/node1_2025-01-30_04-05-09__dff97f7b-4434-4e4a-9095-ae8140ca77c7__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 29830
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 741272519b58. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:29830/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:29830/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.86.189/tcp/29831/p2p/16Uiu2HAmMXPwtsgVxukNqzRMfDm1vgJAn4MyBmGXQ9aKAWPaVV2o","/ip4/172.18.86.189/tcp/29832/ws/p2p/16Uiu2HAmMXPwtsgVxukNqzRMfDm1vgJAn4MyBmGXQ9aKAWPaVV2o"],"enrUri":"enr:-L24QM4eeP3kSwbJZ3c9o-1wfwYadMNgUXMqZeXrCFcZZRSbQczdwXLwQE_UUMKf5ynoyas_D1q20SaS8KAKGPiXMu4CgmlkgnY0gmlwhKwSVr2KbXVsdGlhZGRyc5YACASsEla9BnSHAAoErBJWvQZ0iN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDg8c3d_epwqoviDrbf-zcM_xTw6AOvuvwzWrwUGgXD0iDdGNwgnSHg3VkcIJ0iYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-30_04-05-09__dff97f7b-4434-4e4a-9095-ae8140ca77c7__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.225.17
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['17011', '17012', '17013', '17014', '17015']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 17011:17011 -p 17012:17012 -p 17013:17013 -p 17014:17014 -p 17015:17015 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=17013 --rest-port=17011 --tcp-port=17012 --discv5-udp-port=17014 --rest-address=0.0.0.0 --nat=extip:172.18.225.17 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=76f6e2eab20afcd9f5be4c4bf29a0c12f7faf97050a13fb3bfbaeac35faebe96 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=17015 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QM4eeP3kSwbJZ3c9o-1wfwYadMNgUXMqZeXrCFcZZRSbQczdwXLwQE_UUMKf5ynoyas_D1q20SaS8KAKGPiXMu4CgmlkgnY0gmlwhKwSVr2KbXVsdGlhZGRyc5YACASsEla9BnSHAAoErBJWvQZ0iN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDg8c3d_epwqoviDrbf-zcM_xTw6AOvuvwzWrwUGgXD0iDdGNwgnSHg3VkcIJ0iYV3YWt1MgU --filternode=/ip4/172.18.86.189/tcp/29831/p2p/16Uiu2HAmMXPwtsgVxukNqzRMfDm1vgJAn4MyBmGXQ9aKAWPaVV2o
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.225.17 waku bd0dffdd40b8fe17e0ba51ccbad8c98f337070f54147ff63dcc8cfb66eb41a59
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID bd0dffdd40b8. Setting up logs at ./log/docker/node2_2025-01-30_04-05-09__dff97f7b-4434-4e4a-9095-ae8140ca77c7__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 17011
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17011/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17011/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.225.17/tcp/17012/p2p/16Uiu2HAmRLvJ8DtdSAE1XnUHTS9WFdDLAb22R3so395XcBaBWVJD","/ip4/172.18.225.17/tcp/17013/ws/p2p/16Uiu2HAmRLvJ8DtdSAE1XnUHTS9WFdDLAb22R3so395XcBaBWVJD"],"enrUri":"enr:-L24QI9D2KUi7brU1YLd_EMGTJ43I-Kpg68l6C7e0Cl9StgwBKCjwZsnqpXY4ayYVQ5qdf7ZX38ge4FtAbEu0ppiHO4CgmlkgnY0gmlwhKwS4RGKbXVsdGlhZGRyc5YACASsEuERBkJ0AAoErBLhEQZCdd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDvIbkFsXhekcgzx2YC5Vih6KiK96dY6U9jYl3IbpTGp6DdGNwgkJ0g3VkcIJCdoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17011/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.86.189/tcp/29831/p2p/16Uiu2HAmMXPwtsgVxukNqzRMfDm1vgJAn4MyBmGXQ9aKAWPaVV2o"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:29830/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17011/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "051b0857-97f7-449f-b469-8a21cedd1bc9", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"051b0857-97f7-449f-b469-8a21cedd1bc9","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:17011/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:17011/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 1c1e68c12371
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id bd0dffdd40b8
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 1c1e68c12371. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.