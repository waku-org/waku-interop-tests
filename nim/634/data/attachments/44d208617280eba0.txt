[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_invalid_request_id with id: 2025-01-30_04-05-33__6e79ebda-4ad6-451b-89bf-7b7d5cd0f1f5
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-30_04-05-33__6e79ebda-4ad6-451b-89bf-7b7d5cd0f1f5__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.42.15
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['28717', '28718', '28719', '28720', '28721']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 28717:28717 -p 28718:28718 -p 28719:28719 -p 28720:28720 -p 28721:28721 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=28719 --rest-port=28717 --tcp-port=28718 --discv5-udp-port=28720 --rest-address=0.0.0.0 --nat=extip:172.18.42.15 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=22cedc9cb009ceb5d5ac01fdcde5e688a1bec1c7f76da014fc75b77cb3fe6fd5 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=28721 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.42.15 waku 2b137cf342f9da572bc7abf9ee81043bf8bacf1f3fe1026ef76391084f912f0b
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 2b137cf342f9. Setting up logs at ./log/docker/node1_2025-01-30_04-05-33__6e79ebda-4ad6-451b-89bf-7b7d5cd0f1f5__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 28717
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container f7f6466f9aa1. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:28717/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:28717/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.42.15/tcp/28718/p2p/16Uiu2HAkxVQRuaDWMyvRm1cCByNnZeCqryN668Ub3qDUicDDEEt5","/ip4/172.18.42.15/tcp/28719/ws/p2p/16Uiu2HAkxVQRuaDWMyvRm1cCByNnZeCqryN668Ub3qDUicDDEEt5"],"enrUri":"enr:-L24QP6XquaKhE951yLBJuB5S1nJPkZ5xkEE_H8k-8gi5k0dCGkiuXvM24ApFuKcJC66FMMgTNvVqqE7rhmE0jwf6hECgmlkgnY0gmlwhKwSKg-KbXVsdGlhZGRyc5YACASsEioPBnAuAAoErBIqDwZwL90DgnJzhQADAQAAiXNlY3AyNTZrMaECLYfNRYI_fZqnRYHIp-i4NL5vd1OvkqxgzTddDET5lu6DdGNwgnAug3VkcIJwMIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-30_04-05-33__6e79ebda-4ad6-451b-89bf-7b7d5cd0f1f5__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.247.40
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['49504', '49505', '49506', '49507', '49508']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 49504:49504 -p 49505:49505 -p 49506:49506 -p 49507:49507 -p 49508:49508 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=49506 --rest-port=49504 --tcp-port=49505 --discv5-udp-port=49507 --rest-address=0.0.0.0 --nat=extip:172.18.247.40 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=f79a62d039c425ddbafff38cfef7adcc1b3559aebfbdae4ed682bec9fe62a2e8 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=49508 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QP6XquaKhE951yLBJuB5S1nJPkZ5xkEE_H8k-8gi5k0dCGkiuXvM24ApFuKcJC66FMMgTNvVqqE7rhmE0jwf6hECgmlkgnY0gmlwhKwSKg-KbXVsdGlhZGRyc5YACASsEioPBnAuAAoErBIqDwZwL90DgnJzhQADAQAAiXNlY3AyNTZrMaECLYfNRYI_fZqnRYHIp-i4NL5vd1OvkqxgzTddDET5lu6DdGNwgnAug3VkcIJwMIV3YWt1MgU --filternode=/ip4/172.18.42.15/tcp/28718/p2p/16Uiu2HAkxVQRuaDWMyvRm1cCByNnZeCqryN668Ub3qDUicDDEEt5
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.247.40 waku 392747a116b09066ada41de1337c9e97ccc25f994795841afa59611d7ce21840
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 392747a116b0. Setting up logs at ./log/docker/node2_2025-01-30_04-05-33__6e79ebda-4ad6-451b-89bf-7b7d5cd0f1f5__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 49504
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:49504/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:49504/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.247.40/tcp/49505/p2p/16Uiu2HAm8VjfP98EcSaTEpVBHacWDDDga4KQotedqbe3NtSHetRi","/ip4/172.18.247.40/tcp/49506/ws/p2p/16Uiu2HAm8VjfP98EcSaTEpVBHacWDDDga4KQotedqbe3NtSHetRi"],"enrUri":"enr:-L24QFFtA963XFGsHBn-qWU5GNdA5Ou4ZLwfOqwlc9N0Sy9CKGg3fMZ_WossCQj4q92kHiHRxAk7I-w8UHckGbNZAdECgmlkgnY0gmlwhKwS9yiKbXVsdGlhZGRyc5YACASsEvcoBsFhAAoErBL3KAbBYt0DgnJzhQADAQAAiXNlY3AyNTZrMaECwjJqy9_AjJpsctCqlUU66kB_yIz00B0CFwqWP4tcwG2DdGNwgsFhg3VkcILBY4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:49504/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.42.15/tcp/28718/p2p/16Uiu2HAkxVQRuaDWMyvRm1cCByNnZeCqryN668Ub3qDUicDDEEt5"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:28717/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:49504/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "cbbab5e5-cb75-401e-a25c-eb9e1a9f9d0e", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"cbbab5e5-cb75-401e-a25c-eb9e1a9f9d0e","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:49504/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:49504/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 2b137cf342f9
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 392747a116b0
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 2b137cf342f9. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.