[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_no_content_topic with id: 2025-01-22_04-02-35__d8e3111d-1d66-4187-9aa9-0d55da44e573
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-22_04-02-35__d8e3111d-1d66-4187-9aa9-0d55da44e573__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.225.38
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['4584', '4585', '4586', '4587', '4588']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 4584:4584 -p 4585:4585 -p 4586:4586 -p 4587:4587 -p 4588:4588 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=4586 --rest-port=4584 --tcp-port=4585 --discv5-udp-port=4587 --rest-address=0.0.0.0 --nat=extip:172.18.225.38 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=5df6e5e8ded6b483c2c9725cea9e91e1a0ef43bfce72d37fc0afc03d8eedfc9e --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=4588 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.225.38 waku f38dd770825d5739900a9c19b607f6ca48b48854c70943e3b8b7ab106415630f
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID f38dd770825d. Setting up logs at ./log/docker/node1_2025-01-22_04-02-35__d8e3111d-1d66-4187-9aa9-0d55da44e573__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 4584
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 4f426726555c. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:4584/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:4584/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.225.38/tcp/4585/p2p/16Uiu2HAmQCSuDkoE6JoDABDUSBREBQidcLy5zFrWWDQBBsUYGgyQ","/ip4/172.18.225.38/tcp/4586/ws/p2p/16Uiu2HAmQCSuDkoE6JoDABDUSBREBQidcLy5zFrWWDQBBsUYGgyQ"],"enrUri":"enr:-L24QJxHfjnQIWvLM0waoYDFbbe6ToI_ew7AtzOu5b-iZak7Ft6jvGD6mTSjIcisdEWVqHLi1C9vPylLGcO_xwyPhRMCgmlkgnY0gmlwhKwS4SaKbXVsdGlhZGRyc5YACASsEuEmBhHpAAoErBLhJgYR6t0DgnJzhQADAQAAiXNlY3AyNTZrMaEDq3-VAXRn8hHJEQ4-EV4cn6yRfaqkPtWkXLyzhVpLW-uDdGNwghHpg3VkcIIR64V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-22_04-02-35__d8e3111d-1d66-4187-9aa9-0d55da44e573__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.63.51
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['58505', '58506', '58507', '58508', '58509']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 58505:58505 -p 58506:58506 -p 58507:58507 -p 58508:58508 -p 58509:58509 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=58507 --rest-port=58505 --tcp-port=58506 --discv5-udp-port=58508 --rest-address=0.0.0.0 --nat=extip:172.18.63.51 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=be88c8db5d79a078cbfb7fa67b94f55fc2d8ccab9931c36f9d87dd0afcdcc557 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=58509 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QJxHfjnQIWvLM0waoYDFbbe6ToI_ew7AtzOu5b-iZak7Ft6jvGD6mTSjIcisdEWVqHLi1C9vPylLGcO_xwyPhRMCgmlkgnY0gmlwhKwS4SaKbXVsdGlhZGRyc5YACASsEuEmBhHpAAoErBLhJgYR6t0DgnJzhQADAQAAiXNlY3AyNTZrMaEDq3-VAXRn8hHJEQ4-EV4cn6yRfaqkPtWkXLyzhVpLW-uDdGNwghHpg3VkcIIR64V3YWt1MgU --filternode=/ip4/172.18.225.38/tcp/4585/p2p/16Uiu2HAmQCSuDkoE6JoDABDUSBREBQidcLy5zFrWWDQBBsUYGgyQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.63.51 waku 6e6ba440f459e4618fdaa9acdea74a7a8f50f3a69daec69f6ecdf25405ee9ce5
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 6e6ba440f459. Setting up logs at ./log/docker/node2_2025-01-22_04-02-35__d8e3111d-1d66-4187-9aa9-0d55da44e573__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 58505
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:58505/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:58505/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.63.51/tcp/58506/p2p/16Uiu2HAmUcJWJRSMyeDrMyWH1w8Q5can8zoDEFAmxsWkhsYFdrX1","/ip4/172.18.63.51/tcp/58507/ws/p2p/16Uiu2HAmUcJWJRSMyeDrMyWH1w8Q5can8zoDEFAmxsWkhsYFdrX1"],"enrUri":"enr:-L24QGk74bvLoRtpYMeH8eaBh6jIJwNXazWeRJS5tsxoomP4LOB7kw50rX4hQ1lfeDQQxkA0GK5tCzBWxZmUnKsC-MgCgmlkgnY0gmlwhKwSPzOKbXVsdGlhZGRyc5YACASsEj8zBuSKAAoErBI_Mwbki90DgnJzhQADAQAAiXNlY3AyNTZrMaED7QrG2AYEliVv-lqcZXsacZyCeQc__SBROW6jXUcEpxCDdGNwguSKg3VkcILkjIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:58505/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.225.38/tcp/4585/p2p/16Uiu2HAmQCSuDkoE6JoDABDUSBREBQidcLy5zFrWWDQBBsUYGgyQ"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:4584/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:58505/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "d86c849e-e54d-4421-9cd0-86bab909e647", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"d86c849e-e54d-4421-9cd0-86bab909e647","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:58505/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:58505/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id f38dd770825d
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 6e6ba440f459
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container f38dd770825d. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.