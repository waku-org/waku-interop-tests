[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_no_request_id with id: 2024-12-25_18-04-26__d7e2cc7a-31e8-4243-a442-7589f77171c1
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-25_18-04-26__d7e2cc7a-31e8-4243-a442-7589f77171c1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.255.153
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['19338', '19339', '19340', '19341', '19342']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 19338:19338 -p 19339:19339 -p 19340:19340 -p 19341:19341 -p 19342:19342 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=19340 --rest-port=19338 --tcp-port=19339 --discv5-udp-port=19341 --rest-address=0.0.0.0 --nat=extip:172.18.255.153 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=eaab4afcabe6bd71f4eecaf63744dd8062abaad856aa9f2a88cdc4f7f9bebb23 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=19342 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.255.153 waku f4af3d8ee491cdbe843a4361e93507291c4e2dfc5c3725f615e5c76e57c69374
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID f4af3d8ee491. Setting up logs at ./log/docker/node1_2024-12-25_18-04-26__d7e2cc7a-31e8-4243-a442-7589f77171c1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 19338
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 7af9f672281c. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:19338/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:19338/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.255.153/tcp/19339/p2p/16Uiu2HAmCp7UXUHQGMiTjUGCWfgJSPN6o6kxpAzi89qMDTCcQSKM","/ip4/172.18.255.153/tcp/19340/ws/p2p/16Uiu2HAmCp7UXUHQGMiTjUGCWfgJSPN6o6kxpAzi89qMDTCcQSKM"],"enrUri":"enr:-L24QPzWBASaYxaYXoRjzn-iBZ1RjbQee8fMyv8ZcoWoGOawKRXnyv5czjWRbFcf1P1jW0RMyaJUDXH62kSkIUjZix4CgmlkgnY0gmlwhKwS_5mKbXVsdGlhZGRyc5YACASsEv-ZBkuLAAoErBL_mQZLjN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDAlZIhOHbyBZ8dPVkNWAUocFKOcBR94qsAQu-GvYEOdSDdGNwgkuLg3VkcIJLjYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-25_18-04-26__d7e2cc7a-31e8-4243-a442-7589f77171c1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.81.179
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['38375', '38376', '38377', '38378', '38379']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 38375:38375 -p 38376:38376 -p 38377:38377 -p 38378:38378 -p 38379:38379 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=38377 --rest-port=38375 --tcp-port=38376 --discv5-udp-port=38378 --rest-address=0.0.0.0 --nat=extip:172.18.81.179 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=bd5fddeb1c49dbc1301b5fccb21b3abb3da2e3faa64fac76e47f28cc31dfecda --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=38379 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QPzWBASaYxaYXoRjzn-iBZ1RjbQee8fMyv8ZcoWoGOawKRXnyv5czjWRbFcf1P1jW0RMyaJUDXH62kSkIUjZix4CgmlkgnY0gmlwhKwS_5mKbXVsdGlhZGRyc5YACASsEv-ZBkuLAAoErBL_mQZLjN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDAlZIhOHbyBZ8dPVkNWAUocFKOcBR94qsAQu-GvYEOdSDdGNwgkuLg3VkcIJLjYV3YWt1MgU --filternode=/ip4/172.18.255.153/tcp/19339/p2p/16Uiu2HAmCp7UXUHQGMiTjUGCWfgJSPN6o6kxpAzi89qMDTCcQSKM
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.81.179 waku f4055889075ada6787c5496d91edd0bb2b9a944c76029e66909485cbe5dc7a0e
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID f4055889075a. Setting up logs at ./log/docker/node2_2024-12-25_18-04-26__d7e2cc7a-31e8-4243-a442-7589f77171c1__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 38375
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38375/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38375/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.81.179/tcp/38376/p2p/16Uiu2HAmQbevgwGBKMMH7yJjXYVMhw1vsmmCdBRChhcX6Z42VuWg","/ip4/172.18.81.179/tcp/38377/ws/p2p/16Uiu2HAmQbevgwGBKMMH7yJjXYVMhw1vsmmCdBRChhcX6Z42VuWg"],"enrUri":"enr:-L24QAm8k5nkAM6_3N8HZ9xi3rSQU3R_0AvA5vBFgmUaEUP6elmNI2yUdtVEmfvNEZ3njX47KF-bDDHeVEa2zo8fvJYCgmlkgnY0gmlwhKwSUbOKbXVsdGlhZGRyc5YACASsElGzBpXoAAoErBJRswaV6d0DgnJzhQADAQAAiXNlY3AyNTZrMaEDsXGJqRPmZOAspcEsgDtgn0dsUniV-nfWNeVmYmicFNmDdGNwgpXog3VkcIKV6oV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38375/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.255.153/tcp/19339/p2p/16Uiu2HAmCp7UXUHQGMiTjUGCWfgJSPN6o6kxpAzi89qMDTCcQSKM"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:19338/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38375/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "daba738c-1359-422d-956b-329831f7eb74", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"daba738c-1359-422d-956b-329831f7eb74","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38375/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:38375/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id f4af3d8ee491
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id f4055889075a
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container f4af3d8ee491. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.