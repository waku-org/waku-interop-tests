[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_main_node_only_relay__peer_only_relay with id: 2024-12-25_18-03-54__a74307b1-26e8-4d3e-b09c-e62994237647
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.store:store.py:31 Running fixture setup: store_setup
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/publishing_node1_2024-12-25_18-03-54__a74307b1-26e8-4d3e-b09c-e62994237647__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.38.58
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['4040', '4041', '4042', '4043', '4044']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 4040:4040 -p 4041:4041 -p 4042:4042 -p 4043:4043 -p 4044:4044 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=4042 --rest-port=4040 --tcp-port=4041 --discv5-udp-port=4043 --rest-address=0.0.0.0 --nat=extip:172.18.38.58 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=7f75fb7dd8de3be144ab7d729fee5b748e17289fd9facfccbe78b0a0386e9b68 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=4044 --metrics-logging=true --store=false --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.38.58 waku aa8ccdc8a1b7a840e1f554e2fdb84d2f7cbe0b7aabe805738e437fa0ca158422
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID aa8ccdc8a1b7. Setting up logs at ./log/docker/publishing_node1_2024-12-25_18-03-54__a74307b1-26e8-4d3e-b09c-e62994237647__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 4040
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 3db5a0684e5e. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:4040/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:4040/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.38.58/tcp/4041/p2p/16Uiu2HAm5CMAUXza39ppmpN3eSv5QsPW3EUdXiMxNT5L8zBw2VhZ","/ip4/172.18.38.58/tcp/4042/ws/p2p/16Uiu2HAm5CMAUXza39ppmpN3eSv5QsPW3EUdXiMxNT5L8zBw2VhZ"],"enrUri":"enr:-L24QO2Ps8wDRWllMc7wj5CUdIZk0LgQ0VyEdFOuJWwJZKNId-4n4KLHwf63HAM3wXscNdNDQS1Z5i-DVIpRieBspTcCgmlkgnY0gmlwhKwSJjqKbXVsdGlhZGRyc5YACASsEiY6Bg_JAAoErBImOgYPyt0DgnJzhQADAQAAiXNlY3AyNTZrMaECkSsLKtCFD9ael7OiRo7pP7A_WZoToglai69IneVjNaiDdGNwgg_Jg3VkcIIPy4V3YWt1MgE"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/store_node1_2024-12-25_18-03-54__a74307b1-26e8-4d3e-b09c-e62994237647__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.182.252
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['58402', '58403', '58404', '58405', '58406']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 58402:58402 -p 58403:58403 -p 58404:58404 -p 58405:58405 -p 58406:58406 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=58404 --rest-port=58402 --tcp-port=58403 --discv5-udp-port=58405 --rest-address=0.0.0.0 --nat=extip:172.18.182.252 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=68a386bb7cab2fcd98aef1e2c4c6fdca9ae519ed97b6abbcabe81e8fcac4ab60 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=58406 --metrics-logging=true --discv5-bootstrap-node=enr:-L24QO2Ps8wDRWllMc7wj5CUdIZk0LgQ0VyEdFOuJWwJZKNId-4n4KLHwf63HAM3wXscNdNDQS1Z5i-DVIpRieBspTcCgmlkgnY0gmlwhKwSJjqKbXVsdGlhZGRyc5YACASsEiY6Bg_JAAoErBImOgYPyt0DgnJzhQADAQAAiXNlY3AyNTZrMaECkSsLKtCFD9ael7OiRo7pP7A_WZoToglai69IneVjNaiDdGNwgg_Jg3VkcIIPy4V3YWt1MgE --storenode=/ip4/172.18.38.58/tcp/4041/p2p/16Uiu2HAm5CMAUXza39ppmpN3eSv5QsPW3EUdXiMxNT5L8zBw2VhZ --store=false --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.182.252 waku 91f687d84f704aa9ec770b76a23db2612b421efc70a2b744e8eaa5b6cf4e3410
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 91f687d84f70. Setting up logs at ./log/docker/store_node1_2024-12-25_18-03-54__a74307b1-26e8-4d3e-b09c-e62994237647__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 58402
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:58402/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:58402/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.182.252/tcp/58403/p2p/16Uiu2HAkvRYy6yQWbJnJCiGHtAHhDoLMyR7BCj1N2Lhdd1meDVRY","/ip4/172.18.182.252/tcp/58404/ws/p2p/16Uiu2HAkvRYy6yQWbJnJCiGHtAHhDoLMyR7BCj1N2Lhdd1meDVRY"],"enrUri":"enr:-L24QFq9gtwEDxARbLTX9WK-Fu00IW9hkh5nFIniA_-Q8AUXB7wIp2jgapIvo9v9KaqXgMh_5GtieJu4RHfFlwCNYJYCgmlkgnY0gmlwhKwStvyKbXVsdGlhZGRyc5YACASsErb8BuQjAAoErBK2_AbkJN0DgnJzhQADAQAAiXNlY3AyNTZrMaECDtPCMKi8dDSkjMFgp5FsyF-EAeTVtVxSZD2_WKAVvC-DdGNwguQjg3VkcILkJYV3YWt1MgE"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:58402/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.38.58/tcp/4041/p2p/16Uiu2HAm5CMAUXza39ppmpN3eSv5QsPW3EUdXiMxNT5L8zBw2VhZ"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:4040/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/0"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:58402/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/0"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.store:store.py:132 Relaying message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:4040/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F0" -H "Content-Type: application/json" -d '{"payload": "U3RvcmUgd29ya3MhIQ==", "contentTopic": "/myapp/1/latest/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.2 seconds
[35mDEBUG   [0m src.steps.store:store.py:218 Checking that peer wakuorg/nwaku:latest can find the stored messages
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:58402/store/v3/messages?pubsubTopic=%2Fwaku%2F2%2Frs%2F3%2F0&pageSize=5&ascending=true" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"","statusCode":504,"statusDesc":"PEER_DIAL_FAILURE: 16Uiu2HAm5CMAUXza39ppmpN3eSv5QsPW3EUdXiMxNT5L8zBw2VhZ","messages":[]}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id aa8ccdc8a1b7
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 91f687d84f70
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container aa8ccdc8a1b7. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.