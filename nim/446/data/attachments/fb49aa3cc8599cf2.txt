[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2024-11-11_04-13-12__78821dee-6a63-438c-bd10-3da98c65d9e9
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-11_04-13-12__78821dee-6a63-438c-bd10-3da98c65d9e9__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.36.243
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['41953', '41954', '41955', '41956', '41957']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 41953:41953 -p 41954:41954 -p 41955:41955 -p 41956:41956 -p 41957:41957 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=41955 --rest-port=41953 --tcp-port=41954 --discv5-udp-port=41956 --rest-address=0.0.0.0 --nat=extip:172.18.36.243 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=dfdabc7af71e5baef5d70caf7736b0b8e4b2a51947aaa9bdefdbaea2b2ee038f --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=41957 --metrics-logging=true --relay=true --filter=true
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 22e3faddbeec. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.36.243 waku 78930b13d36af6256f5302703653dec4ffe46af84cf6c83a0a795970eb58a20c
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 78930b13d36a. Setting up logs at ./log/docker/node1_2024-11-11_04-13-12__78821dee-6a63-438c-bd10-3da98c65d9e9__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 41953
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41953/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41953/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.36.243/tcp/41954/p2p/16Uiu2HAmDbNjwxiaHwHw3o9yngyRD4Ug5wpGejhNwQjWqHTz8NVz","/ip4/172.18.36.243/tcp/41955/ws/p2p/16Uiu2HAmDbNjwxiaHwHw3o9yngyRD4Ug5wpGejhNwQjWqHTz8NVz"],"enrUri":"enr:-L24QErxpyusDtcmzBFHc5-GDJMJALw5sysGZtHf_h_WS06iRtVkeISHP2C--y7PiObruzbeA1CrrA33mispgUMft40CgmlkgnY0gmlwhKwSJPOKbXVsdGlhZGRyc5YACASsEiTzBqPiAAoErBIk8waj490DgnJzhQADAQAAiXNlY3AyNTZrMaEDDe6uTyNF0WfsIo9LcZdhFfkHGNGP3KKPZr-W3LjWBW2DdGNwgqPig3VkcIKj5IV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-11_04-13-12__78821dee-6a63-438c-bd10-3da98c65d9e9__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.118.161
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['26270', '26271', '26272', '26273', '26274']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 26270:26270 -p 26271:26271 -p 26272:26272 -p 26273:26273 -p 26274:26274 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=26272 --rest-port=26270 --tcp-port=26271 --discv5-udp-port=26273 --rest-address=0.0.0.0 --nat=extip:172.18.118.161 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=43f4de7aee8fbd9eeafa75febbc5afe8fbd90ba455e5ed50a03af9c36ca1cebf --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=26274 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QErxpyusDtcmzBFHc5-GDJMJALw5sysGZtHf_h_WS06iRtVkeISHP2C--y7PiObruzbeA1CrrA33mispgUMft40CgmlkgnY0gmlwhKwSJPOKbXVsdGlhZGRyc5YACASsEiTzBqPiAAoErBIk8waj490DgnJzhQADAQAAiXNlY3AyNTZrMaEDDe6uTyNF0WfsIo9LcZdhFfkHGNGP3KKPZr-W3LjWBW2DdGNwgqPig3VkcIKj5IV3YWt1MgU --filternode=/ip4/172.18.36.243/tcp/41954/p2p/16Uiu2HAmDbNjwxiaHwHw3o9yngyRD4Ug5wpGejhNwQjWqHTz8NVz
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.118.161 waku e158dfb1ceafa7425c62c3f04641e8e34d3d247d6e56ff54f85d2e2ebd8bde2d
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID e158dfb1ceaf. Setting up logs at ./log/docker/node2_2024-11-11_04-13-12__78821dee-6a63-438c-bd10-3da98c65d9e9__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 26270
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:26270/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:26270/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.118.161/tcp/26271/p2p/16Uiu2HAm8mpgMXyQGcejsDdUwBxwt96WTU6dgoE1GAu85Cbe9HDu","/ip4/172.18.118.161/tcp/26272/ws/p2p/16Uiu2HAm8mpgMXyQGcejsDdUwBxwt96WTU6dgoE1GAu85Cbe9HDu"],"enrUri":"enr:-L24QH41nOii-NGEEj4nSJ9gUaVF1ep2QhjNdq72pKJ5a_IYSViX921jwPOKxhKmyf0IQyzukILVjq-utsQNUASdCKQCgmlkgnY0gmlwhKwSdqGKbXVsdGlhZGRyc5YACASsEnahBmafAAoErBJ2oQZmoN0DgnJzhQADAQAAiXNlY3AyNTZrMaECxlFh8YbObEbtrb082IvDi7vey2dLjaQPxcWpFwZ8gryDdGNwgmafg3VkcIJmoYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:26270/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.36.243/tcp/41954/p2p/16Uiu2HAmDbNjwxiaHwHw3o9yngyRD4Ug5wpGejhNwQjWqHTz8NVz"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:41953/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:26270/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "a0645baa-9319-4b44-8554-ab2b5fe53394", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"a0645baa-9319-4b44-8554-ab2b5fe53394","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:26270/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:26270/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 78930b13d36a
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id e158dfb1ceaf
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 78930b13d36a. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.