[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_pubsub_topic_list_instead_of_string with id: 2024-11-11_04-12-57__9f8e9d26-2662-40cd-954e-59b19e8ba992
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-11_04-12-57__9f8e9d26-2662-40cd-954e-59b19e8ba992__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.178.217
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['34168', '34169', '34170', '34171', '34172']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 34168:34168 -p 34169:34169 -p 34170:34170 -p 34171:34171 -p 34172:34172 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=34170 --rest-port=34168 --tcp-port=34169 --discv5-udp-port=34171 --rest-address=0.0.0.0 --nat=extip:172.18.178.217 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e3699becbd7dcddac4e41bf4bcd64f9a7d6162765058d9bedf9bb3fbadbeb9fe --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=34172 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.178.217 waku 9f3459d62b5ff1862766175caa7207f5eaf35d17371d53402e8b1697376b7a02
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 9f3459d62b5f. Setting up logs at ./log/docker/node1_2024-11-11_04-12-57__9f8e9d26-2662-40cd-954e-59b19e8ba992__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 34168
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container de3500d5efde. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:34168/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:34168/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.178.217/tcp/34169/p2p/16Uiu2HAmRhstaLPiAKSKYvSpjE8ugHcnShFGZmj78WBY9fP2yohG","/ip4/172.18.178.217/tcp/34170/ws/p2p/16Uiu2HAmRhstaLPiAKSKYvSpjE8ugHcnShFGZmj78WBY9fP2yohG"],"enrUri":"enr:-L24QBBxdvcrKbCvrXwZkz30Lgdz1CKhRFe4Wiv_lmfd79_kVDt1q1gUd8l6bUr3qx-nazdp7d5cmyEsyhZZjH23-IMCgmlkgnY0gmlwhKwSstmKbXVsdGlhZGRyc5YACASsErLZBoV5AAoErBKy2QaFet0DgnJzhQADAQAAiXNlY3AyNTZrMaEDweVeEYxdUsbIz0z6wAaANSUbHnn6JDFhAOy2DHkh96eDdGNwgoV5g3VkcIKFe4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-11_04-12-57__9f8e9d26-2662-40cd-954e-59b19e8ba992__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.174.95
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['8540', '8541', '8542', '8543', '8544']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 8540:8540 -p 8541:8541 -p 8542:8542 -p 8543:8543 -p 8544:8544 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=8542 --rest-port=8540 --tcp-port=8541 --discv5-udp-port=8543 --rest-address=0.0.0.0 --nat=extip:172.18.174.95 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=0fd2fa0265dcce55adbd2c9d4942a0520f100af91b219160aceaf59caea51ca9 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=8544 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QBBxdvcrKbCvrXwZkz30Lgdz1CKhRFe4Wiv_lmfd79_kVDt1q1gUd8l6bUr3qx-nazdp7d5cmyEsyhZZjH23-IMCgmlkgnY0gmlwhKwSstmKbXVsdGlhZGRyc5YACASsErLZBoV5AAoErBKy2QaFet0DgnJzhQADAQAAiXNlY3AyNTZrMaEDweVeEYxdUsbIz0z6wAaANSUbHnn6JDFhAOy2DHkh96eDdGNwgoV5g3VkcIKFe4V3YWt1MgU --filternode=/ip4/172.18.178.217/tcp/34169/p2p/16Uiu2HAmRhstaLPiAKSKYvSpjE8ugHcnShFGZmj78WBY9fP2yohG
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.174.95 waku 136b51d0e12979e5cb819edb967e8be6c311c1c0bdd924ab8f9dad82343939c5
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 136b51d0e129. Setting up logs at ./log/docker/node2_2024-11-11_04-12-57__9f8e9d26-2662-40cd-954e-59b19e8ba992__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 8540
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8540/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8540/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.174.95/tcp/8541/p2p/16Uiu2HAmMxQXgczbhkUJGRhoL8ca4DPeSRVeBEC3i5jujVHSnWSn","/ip4/172.18.174.95/tcp/8542/ws/p2p/16Uiu2HAmMxQXgczbhkUJGRhoL8ca4DPeSRVeBEC3i5jujVHSnWSn"],"enrUri":"enr:-L24QJr5X9emsaYic6Ewu11dmgPIHTtW1aQQraLBLyqeWwdXO9etDmsk4hlKD3T_yk603FdgHIhhXC7aavRRB1id9VcCgmlkgnY0gmlwhKwSrl-KbXVsdGlhZGRyc5YACASsEq5fBiFdAAoErBKuXwYhXt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDii9lRp_OsGGYgM80jM3jejYVh2oAah_ab0JB-l7j1IODdGNwgiFdg3VkcIIhX4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8540/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.178.217/tcp/34169/p2p/16Uiu2HAmRhstaLPiAKSKYvSpjE8ugHcnShFGZmj78WBY9fP2yohG"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:34168/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8540/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "70ad1851-eb06-46b6-bd03-b09f0b920ef0", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"70ad1851-eb06-46b6-bd03-b09f0b920ef0","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:8540/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": ["/waku/2/rs/3/1"]}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:8540/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 9f3459d62b5f
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 136b51d0e129
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 9f3459d62b5f. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.