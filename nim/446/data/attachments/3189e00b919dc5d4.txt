[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_no_request_id with id: 2024-11-11_04-13-05__2619edc8-95ec-4d46-89b1-984f81618c0f
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-11_04-13-05__2619edc8-95ec-4d46-89b1-984f81618c0f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.160.68
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['50006', '50007', '50008', '50009', '50010']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 50006:50006 -p 50007:50007 -p 50008:50008 -p 50009:50009 -p 50010:50010 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=50008 --rest-port=50006 --tcp-port=50007 --discv5-udp-port=50009 --rest-address=0.0.0.0 --nat=extip:172.18.160.68 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=edfaa4dd6ce55a2cbaecf32bdedef8dba2d17b11fafaeefa1ec3805ccd7a3e7c --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=50010 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.160.68 waku 4cee4069d455b5cdda9ec91663f5d9f2ea806fe4de33765c4fffd3a98ea95109
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 4cee4069d455. Setting up logs at ./log/docker/node1_2024-11-11_04-13-05__2619edc8-95ec-4d46-89b1-984f81618c0f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 50006
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 136b51d0e129. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:50006/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:50006/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.160.68/tcp/50007/p2p/16Uiu2HAmNQ8Vm81s7uYA3UH48uPDUEGv5FuVhXnEKth5Y5qT4aTG","/ip4/172.18.160.68/tcp/50008/ws/p2p/16Uiu2HAmNQ8Vm81s7uYA3UH48uPDUEGv5FuVhXnEKth5Y5qT4aTG"],"enrUri":"enr:-L24QIHd_VitTqDYLSjjZo23sfZpSWXct6VPvJ5pGkYXhy8GVGZOth7mOeAzRhr4BH3TfzVkiC1016B2NjQfl_2-1k0CgmlkgnY0gmlwhKwSoESKbXVsdGlhZGRyc5YACASsEqBEBsNXAAoErBKgRAbDWN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDkMZeL1pUwN-IGnqS3YFlQ6gGNqdnY1-50ulT8WqABi-DdGNwgsNXg3VkcILDWYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-11_04-13-05__2619edc8-95ec-4d46-89b1-984f81618c0f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.189.171
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['34793', '34794', '34795', '34796', '34797']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 34793:34793 -p 34794:34794 -p 34795:34795 -p 34796:34796 -p 34797:34797 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=34795 --rest-port=34793 --tcp-port=34794 --discv5-udp-port=34796 --rest-address=0.0.0.0 --nat=extip:172.18.189.171 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b2132f7d7e68beb11f0cfda5738fdceac1c683dd3ebdc00d9dbfbeff23ae76de --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=34797 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QIHd_VitTqDYLSjjZo23sfZpSWXct6VPvJ5pGkYXhy8GVGZOth7mOeAzRhr4BH3TfzVkiC1016B2NjQfl_2-1k0CgmlkgnY0gmlwhKwSoESKbXVsdGlhZGRyc5YACASsEqBEBsNXAAoErBKgRAbDWN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDkMZeL1pUwN-IGnqS3YFlQ6gGNqdnY1-50ulT8WqABi-DdGNwgsNXg3VkcILDWYV3YWt1MgU --filternode=/ip4/172.18.160.68/tcp/50007/p2p/16Uiu2HAmNQ8Vm81s7uYA3UH48uPDUEGv5FuVhXnEKth5Y5qT4aTG
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.189.171 waku 2dbb3e6a018ffeed3d91ef14cd0d13e392848aa303ad61adb94ea2839ba5773c
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 2dbb3e6a018f. Setting up logs at ./log/docker/node2_2024-11-11_04-13-05__2619edc8-95ec-4d46-89b1-984f81618c0f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 34793
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:34793/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:34793/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.189.171/tcp/34794/p2p/16Uiu2HAm9KUukVHDtoFth5xYrNCTcXEYvZ97eUmtPd1oHJGN9Ent","/ip4/172.18.189.171/tcp/34795/ws/p2p/16Uiu2HAm9KUukVHDtoFth5xYrNCTcXEYvZ97eUmtPd1oHJGN9Ent"],"enrUri":"enr:-L24QC0xqoM5j4dvWnsmWsouZ0Q3lrqj4ttttlJw08q9Az3jfofffTOFh63wNwvqOQDc5itnFIAyOPe_NVJk49DmcV0CgmlkgnY0gmlwhKwSvauKbXVsdGlhZGRyc5YACASsEr2rBofqAAoErBK9qwaH690DgnJzhQADAQAAiXNlY3AyNTZrMaECzm2dlUB9-3wYe9Wvm7iTs6XA-J4tlmWOpEOrHPSCbWmDdGNwgofqg3VkcIKH7IV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:34793/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.160.68/tcp/50007/p2p/16Uiu2HAmNQ8Vm81s7uYA3UH48uPDUEGv5FuVhXnEKth5Y5qT4aTG"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:50006/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:34793/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "55d4f676-3826-4b11-9352-b731412aa047", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"55d4f676-3826-4b11-9352-b731412aa047","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:34793/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:34793/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 4cee4069d455
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 2dbb3e6a018f
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 4cee4069d455. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.