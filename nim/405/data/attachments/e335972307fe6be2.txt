[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2024-10-24_11-26-37__d3814bc8-d652-4253-9b59-0d2e9cc4ecab
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-10-24_11-26-37__d3814bc8-d652-4253-9b59-0d2e9cc4ecab__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.170.48
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['45052', '45053', '45054', '45055', '45056']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 45052:45052 -p 45053:45053 -p 45054:45054 -p 45055:45055 -p 45056:45056 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=45054 --rest-port=45052 --tcp-port=45053 --discv5-udp-port=45055 --rest-address=0.0.0.0 --nat=extip:172.18.170.48 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=f04aa4bed02914b38daca27fbf8c50aea94cd2d71ed8a1edc7743b82fc5ff8f0 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=45056 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.170.48 waku 9fe1b34aba657d983a72e5ce77b10131f25aa644e2f83d32d04e3fa834fe2f09
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 9fe1b34aba65. Setting up logs at ./log/docker/node1_2024-10-24_11-26-37__d3814bc8-d652-4253-9b59-0d2e9cc4ecab__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 45052
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container d845c14ae7f3. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:45052/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:45052/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.170.48/tcp/45053/p2p/16Uiu2HAmMDteZwTkk3Q1Pujf12sUtLh5Hv2by8G4CG6sAjKpkzkJ","/ip4/172.18.170.48/tcp/45054/ws/p2p/16Uiu2HAmMDteZwTkk3Q1Pujf12sUtLh5Hv2by8G4CG6sAjKpkzkJ"],"enrUri":"enr:-LO4QJoWnYYJrtCuL4kmHtRhPKdbqTNJR459oqKka93efZO0eNPwmx_gn6avCk3VyNzSpjRzcoy1GzE-UePhM1u_y-sBgmlkgnY0gmlwhKwSqjCKbXVsdGlhZGRyc4wACgSsEqowBq_-3QOCcnOFAAMBAACJc2VjcDI1NmsxoQN_Szb5EiGmJBKDDtoyyvcrtmQfCK2DXcnkzLox4TlDu4N0Y3CCr_2DdWRwgq__hXdha3UyBQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-10-24_11-26-37__d3814bc8-d652-4253-9b59-0d2e9cc4ecab__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.109.217
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['41100', '41101', '41102', '41103', '41104']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 41100:41100 -p 41101:41101 -p 41102:41102 -p 41103:41103 -p 41104:41104 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=41102 --rest-port=41100 --tcp-port=41101 --discv5-udp-port=41103 --rest-address=0.0.0.0 --nat=extip:172.18.109.217 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=996be5a52d5e49ffaaf5e99303bddb1e9f991203fd7a5bfbb1ff1b439cddbf5c --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=41104 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-LO4QJoWnYYJrtCuL4kmHtRhPKdbqTNJR459oqKka93efZO0eNPwmx_gn6avCk3VyNzSpjRzcoy1GzE-UePhM1u_y-sBgmlkgnY0gmlwhKwSqjCKbXVsdGlhZGRyc4wACgSsEqowBq_-3QOCcnOFAAMBAACJc2VjcDI1NmsxoQN_Szb5EiGmJBKDDtoyyvcrtmQfCK2DXcnkzLox4TlDu4N0Y3CCr_2DdWRwgq__hXdha3UyBQ --filternode=/ip4/172.18.170.48/tcp/45053/p2p/16Uiu2HAmMDteZwTkk3Q1Pujf12sUtLh5Hv2by8G4CG6sAjKpkzkJ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.109.217 waku 6e3246d0b506372e7b35898b652441cb470b8a34220569829a73edbd8dd4fd88
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 6e3246d0b506. Setting up logs at ./log/docker/node2_2024-10-24_11-26-37__d3814bc8-d652-4253-9b59-0d2e9cc4ecab__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 41100
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41100/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:41100/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.109.217/tcp/41101/p2p/16Uiu2HAm3Dk6ECb2fQwuh9AxYuTH191cAonzLXFELc4kRNn7wgCz","/ip4/172.18.109.217/tcp/41102/ws/p2p/16Uiu2HAm3Dk6ECb2fQwuh9AxYuTH191cAonzLXFELc4kRNn7wgCz"],"enrUri":"enr:-LO4QMXV1p_YJK76R3Zah8-1GyBLCpfqm5x0QEzDdjvx2_hDJBD2InrYBCddaDQMxIOFzTPg8xmTViJ-3YXsy8tydzoBgmlkgnY0gmlwhKwSbdmKbXVsdGlhZGRyc4wACgSsEm3ZBqCO3QOCcnOFAAMBAACJc2VjcDI1NmsxoQJzzyyI4acMLZxSIzSkTCm4-f_oeKLTrbvamDdBVILPY4N0Y3CCoI2DdWRwgqCPhXdha3UyAA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:41100/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.170.48/tcp/45053/p2p/16Uiu2HAmMDteZwTkk3Q1Pujf12sUtLh5Hv2by8G4CG6sAjKpkzkJ"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:45052/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:41100/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "d1fff853-14fe-4197-87eb-e0450f5e32c9", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"d1fff853-14fe-4197-87eb-e0450f5e32c9","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:41100/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:41100/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 9fe1b34aba65
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 6e3246d0b506
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 9fe1b34aba65. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.