[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_invalid_request_id with id: 2024-10-24_11-26-36__6d1bbc92-fbcc-41bc-937e-38c6bad2e168
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-10-24_11-26-36__6d1bbc92-fbcc-41bc-937e-38c6bad2e168__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.86.153
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['20410', '20411', '20412', '20413', '20414']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 20410:20410 -p 20411:20411 -p 20412:20412 -p 20413:20413 -p 20414:20414 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=20412 --rest-port=20410 --tcp-port=20411 --discv5-udp-port=20413 --rest-address=0.0.0.0 --nat=extip:172.18.86.153 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=32169db0dffed78a3c3297455386cffeab71d894ee37c81d4fb4fcf1bf5933a7 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=20414 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.86.153 waku 657eb8373ef1786acd4795729852451144123145f33b316f25eae8eb7b9f0b93
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 657eb8373ef1. Setting up logs at ./log/docker/node1_2024-10-24_11-26-36__6d1bbc92-fbcc-41bc-937e-38c6bad2e168__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 20410
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 8f76a39c9d70. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:20410/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:20410/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.86.153/tcp/20411/p2p/16Uiu2HAmDbHWPWcGj9LFHzoFVFub1voh64AiamLZ8ibMpEEWiSb5","/ip4/172.18.86.153/tcp/20412/ws/p2p/16Uiu2HAmDbHWPWcGj9LFHzoFVFub1voh64AiamLZ8ibMpEEWiSb5"],"enrUri":"enr:-LO4QM3rexo1og0ro9YqzYqtOGCa3l0v99CNbtpgbGlVgojvB9dWJeUnNfmM6ivnSq3AUnzm0UIuJwE3Nl5BL1aoCnwBgmlkgnY0gmlwhKwSVpmKbXVsdGlhZGRyc4wACgSsElaZBk-83QOCcnOFAAMBAACJc2VjcDI1NmsxoQMN6MNWWa98wFgruwhaCRu7WigbxycgZhH7nS6HiBV3VIN0Y3CCT7uDdWRwgk-9hXdha3UyBQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-10-24_11-26-36__6d1bbc92-fbcc-41bc-937e-38c6bad2e168__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.107.251
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['8305', '8306', '8307', '8308', '8309']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 8305:8305 -p 8306:8306 -p 8307:8307 -p 8308:8308 -p 8309:8309 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=8307 --rest-port=8305 --tcp-port=8306 --discv5-udp-port=8308 --rest-address=0.0.0.0 --nat=extip:172.18.107.251 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=4fe04a13969d9474581420925abe9aa2ca6bde8af90e2ad1dfbfa4b79c6dfab0 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=8309 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-LO4QM3rexo1og0ro9YqzYqtOGCa3l0v99CNbtpgbGlVgojvB9dWJeUnNfmM6ivnSq3AUnzm0UIuJwE3Nl5BL1aoCnwBgmlkgnY0gmlwhKwSVpmKbXVsdGlhZGRyc4wACgSsElaZBk-83QOCcnOFAAMBAACJc2VjcDI1NmsxoQMN6MNWWa98wFgruwhaCRu7WigbxycgZhH7nS6HiBV3VIN0Y3CCT7uDdWRwgk-9hXdha3UyBQ --filternode=/ip4/172.18.86.153/tcp/20411/p2p/16Uiu2HAmDbHWPWcGj9LFHzoFVFub1voh64AiamLZ8ibMpEEWiSb5
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.107.251 waku 0241329d240ea098008029cefda0cd185e8b9f9fce66fdb322ed114c6428dfe5
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 0241329d240e. Setting up logs at ./log/docker/node2_2024-10-24_11-26-36__6d1bbc92-fbcc-41bc-937e-38c6bad2e168__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 8305
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8305/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8305/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.107.251/tcp/8306/p2p/16Uiu2HAmAkX77ma1Q1R4xjrBKxqW3cAAejFqfNkRDTLs6NRAMetD","/ip4/172.18.107.251/tcp/8307/ws/p2p/16Uiu2HAmAkX77ma1Q1R4xjrBKxqW3cAAejFqfNkRDTLs6NRAMetD"],"enrUri":"enr:-LO4QO0-mDZospyj6joMol_qPoKpOTIQum-q9Cty1VfxEQYGXRCKBuY8DWKI8eWAoIZRPL-RlI-viHvaPXlfkbqvg8EBgmlkgnY0gmlwhKwSa_uKbXVsdGlhZGRyc4wACgSsEmv7BiBz3QOCcnOFAAMBAACJc2VjcDI1NmsxoQLjs05DY41NOhfQEhUNbyTvB1acoTqeBxf_EgSUDL-5PoN0Y3CCIHKDdWRwgiB0hXdha3UyAA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8305/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.86.153/tcp/20411/p2p/16Uiu2HAmDbHWPWcGj9LFHzoFVFub1voh64AiamLZ8ibMpEEWiSb5"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:20410/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8305/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "51f04fce-c1f2-4b8d-8e6f-b9ad345cf383", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"51f04fce-c1f2-4b8d-8e6f-b9ad345cf383","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:8305/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:8305/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 657eb8373ef1
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 0241329d240e
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 657eb8373ef1. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.