[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_invalid_request_id with id: 2025-02-04_17-12-56__c8099762-16bf-4990-8d9b-64cd80c7513c
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-02-04_17-12-56__c8099762-16bf-4990-8d9b-64cd80c7513c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.102.143
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['29673', '29674', '29675', '29676', '29677']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 29673:29673 -p 29674:29674 -p 29675:29675 -p 29676:29676 -p 29677:29677 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=29675 --rest-port=29673 --tcp-port=29674 --discv5-udp-port=29676 --rest-address=0.0.0.0 --nat=extip:172.18.102.143 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=bcc3aa7184b1a1f485edef65d51aaece153b7d93fe5baab2a9ef6a3de323fbff --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=29677 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.102.143 waku d414b2a82ef281ad5b9340f9e3e28526323ca8265de8e51cdf787cdbd7d68a15
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID d414b2a82ef2. Setting up logs at ./log/docker/node1_2025-02-04_17-12-56__c8099762-16bf-4990-8d9b-64cd80c7513c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 29673
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 1ac6abd9d35b. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:29673/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:29673/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.102.143/tcp/29674/p2p/16Uiu2HAmS3THcE3wYa7HYi8dqVDMqKG2wxFVWbkwbMkKGYHuDgXd","/ip4/172.18.102.143/tcp/29675/ws/p2p/16Uiu2HAmS3THcE3wYa7HYi8dqVDMqKG2wxFVWbkwbMkKGYHuDgXd"],"enrUri":"enr:-L24QIU4e2YvRmS8sKZ8m97OC9QUBAyszh84uePIaWX84DTJQG8DeqIZ1IBxX4ik2jYCpPnR2Iufl-6ILMurG-VRPPACgmlkgnY0gmlwhKwSZo-KbXVsdGlhZGRyc5YACASsEmaPBnPqAAoErBJmjwZz690DgnJzhQADAQAAiXNlY3AyNTZrMaEDxukqQayBWmSwBvWf6w2MpWr0TaI0BJ4Oj0YGLl-hEcyDdGNwgnPqg3VkcIJz7IV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-02-04_17-12-56__c8099762-16bf-4990-8d9b-64cd80c7513c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.34.55
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['12809', '12810', '12811', '12812', '12813']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 12809:12809 -p 12810:12810 -p 12811:12811 -p 12812:12812 -p 12813:12813 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=12811 --rest-port=12809 --tcp-port=12810 --discv5-udp-port=12812 --rest-address=0.0.0.0 --nat=extip:172.18.34.55 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b67dcede8660035180b3decdccc2d1ee332f4ebce23baa73bceedf9a9a139e9e --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=12813 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QIU4e2YvRmS8sKZ8m97OC9QUBAyszh84uePIaWX84DTJQG8DeqIZ1IBxX4ik2jYCpPnR2Iufl-6ILMurG-VRPPACgmlkgnY0gmlwhKwSZo-KbXVsdGlhZGRyc5YACASsEmaPBnPqAAoErBJmjwZz690DgnJzhQADAQAAiXNlY3AyNTZrMaEDxukqQayBWmSwBvWf6w2MpWr0TaI0BJ4Oj0YGLl-hEcyDdGNwgnPqg3VkcIJz7IV3YWt1MgU --filternode=/ip4/172.18.102.143/tcp/29674/p2p/16Uiu2HAmS3THcE3wYa7HYi8dqVDMqKG2wxFVWbkwbMkKGYHuDgXd
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.34.55 waku c2258a5cd70e4b6f94ef9bbe3f5ca0deba97a762c05ae6010b508291e28c0bf7
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID c2258a5cd70e. Setting up logs at ./log/docker/node2_2025-02-04_17-12-56__c8099762-16bf-4990-8d9b-64cd80c7513c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 12809
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:12809/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:12809/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.34.55/tcp/12810/p2p/16Uiu2HAmVJiYTJ14vTsTLTF6ERGAVZLGMitYvJhma9rC4kjDXj9Z","/ip4/172.18.34.55/tcp/12811/ws/p2p/16Uiu2HAmVJiYTJ14vTsTLTF6ERGAVZLGMitYvJhma9rC4kjDXj9Z"],"enrUri":"enr:-L24QMfy7TaHphPTtoyw3gNBhoFWbxDEdaqVvy7TslbqE53jFT0CFrArDyDtoLrRVgqc3MpQOT1LgS6260A5IQjmhVkCgmlkgnY0gmlwhKwSIjeKbXVsdGlhZGRyc5YACASsEiI3BjIKAAoErBIiNwYyC90DgnJzhQADAQAAiXNlY3AyNTZrMaED92UwHdIZhwNu-6a2yBlGnjgJQVwcpW9-I70hq3IZ3MiDdGNwgjIKg3VkcIIyDIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:12809/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.102.143/tcp/29674/p2p/16Uiu2HAmS3THcE3wYa7HYi8dqVDMqKG2wxFVWbkwbMkKGYHuDgXd"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:29673/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:12809/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "22f04982-106e-4859-b7d5-a14b10d81f58", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"22f04982-106e-4859-b7d5-a14b10d81f58","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:12809/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:12809/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id d414b2a82ef2
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id c2258a5cd70e
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container d414b2a82ef2. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.