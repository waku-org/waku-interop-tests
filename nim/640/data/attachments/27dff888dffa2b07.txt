2025-02-04 17:11:26.505 DEBUG [tests.conftest] Running fixture setup: test_id
2025-02-04 17:11:26.506 DEBUG [tests.conftest] Running test: test_valid_payloads_n1_with_rln_n2_without_rln_at_spam_rate with id: 2025-02-04_17-11-26__4ae32009-c9b9-4950-a703-867568260a5e
2025-02-04 17:11:26.506 DEBUG [src.steps.common] Running fixture setup: common_setup
2025-02-04 17:11:26.506 DEBUG [src.steps.relay] Running fixture setup: relay_setup
2025-02-04 17:11:26.513 DEBUG [src.node.docker_mananger] Docker client initialized with image wakuorg/nwaku:latest
2025-02-04 17:11:26.513 DEBUG [src.node.waku_node] WakuNode instance initialized with log path ./log/docker/node1_2025-02-04_17-11-26__4ae32009-c9b9-4950-a703-867568260a5e__wakuorg_nwaku:latest.log
2025-02-04 17:11:26.513 DEBUG [src.node.waku_node] Starting Node...
2025-02-04 17:11:26.513 DEBUG [src.node.docker_mananger] Attempting to create or retrieve network waku
2025-02-04 17:11:26.514 DEBUG [src.node.docker_mananger] Network waku already exists
2025-02-04 17:11:26.515 DEBUG [src.node.docker_mananger] Generated random external IP 172.18.93.93
2025-02-04 17:11:26.515 DEBUG [src.node.docker_mananger] Generated ports ['3351', '3352', '3353', '3354', '3355']
2025-02-04 17:11:26.515 DEBUG [src.node.waku_node] Using volumes ['/home/runner/work/waku-interop-tests/waku-interop-tests/rln_tree_pcoe_1:/etc/rln_tree', '/home/runner/work/waku-interop-tests/waku-interop-tests/keystore_pcoe_1:/keystore']
2025-02-04 17:11:26.515 DEBUG [src.node.docker_mananger] docker run -i -t -p 3351:3351 -p 3352:3352 -p 3353:3353 -p 3354:3354 -p 3355:3355 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=3353 --rest-port=3351 --tcp-port=3352 --discv5-udp-port=3354 --rest-address=0.0.0.0 --nat=extip:172.18.93.93 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=becf614fdd5ccd6dbebef0feabd4bcbce65ac3632f415c7e345ce4ce8a3b5f0d --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=3355 --metrics-logging=true --relay=true --rln-relay-membership-index=1 --rln-relay-user-message-limit=1 --rln-relay-epoch-sec=1 --rln-relay=true --rln-relay-cred-path=/keystore/keystore.json --rln-relay-cred-password=password
2025-02-04 17:11:26.741 DEBUG [src.node.docker_mananger] docker network connect --ip 172.18.93.93 waku 7e786d7391f74b1e4c26deee81e06a3572d40380ed9b69a1e1dd7193abdc2ea8
2025-02-04 17:11:26.795 DEBUG [src.node.docker_mananger] Container started with ID 7e786d7391f7. Setting up logs at ./log/docker/node1_2025-02-04_17-11-26__4ae32009-c9b9-4950-a703-867568260a5e__wakuorg_nwaku:latest.log
2025-02-04 17:11:26.796 DEBUG [src.node.waku_node] Started container from image wakuorg/nwaku:latest. REST: 3351
2025-02-04 17:11:26.796 DEBUG [src.libs.common] Sleeping for 1 seconds
2025-02-04 17:11:27.307 ERROR [src.node.docker_mananger] Max retries reached for container acbad532e10d. Exiting log stream.
2025-02-04 17:11:27.797 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:3351/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:11:33.193 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"nodeHealth":"Initializing","protocolsHealth":[{"Rln Relay":"Ready"}]}'
2025-02-04 17:11:33.294 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:3351/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:11:33.296 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[{"Rln Relay":"Ready"}]}'
2025-02-04 17:11:33.296 INFO [src.node.waku_node] Node protocols are initialized !!
2025-02-04 17:11:33.297 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:3351/debug/v1/info" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:11:33.299 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.93.93/tcp/3352/p2p/16Uiu2HAmPvwSJd7JPZbNMRTcHEtRuC57mYNrrvMQjREQBZo7ZrPr","/ip4/172.18.93.93/tcp/3353/ws/p2p/16Uiu2HAmPvwSJd7JPZbNMRTcHEtRuC57mYNrrvMQjREQBZo7ZrPr"],"enrUri":"enr:-L24QNhag4V_HLHvtYIRdiUNYBRgZ7pi9DnqZQmdImcHqXi8artPK6b_mAhIz7DfpQjnT5Ri5hZqL2e9RbynVX9S-w8CgmlkgnY0gmlwhKwSXV2KbXVsdGlhZGRyc5YACASsEl1dBg0YAAoErBJdXQYNGd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDp4aOBoH5FBn5C9S7lNmBdCqd9QvZ2tVxoryHbSsHOTGDdGNwgg0Yg3VkcIINGoV3YWt1MgE"}'
2025-02-04 17:11:33.299 INFO [src.node.waku_node] REST service is ready !!
2025-02-04 17:11:33.308 DEBUG [src.node.docker_mananger] Docker client initialized with image wakuorg/nwaku:latest
2025-02-04 17:11:33.308 DEBUG [src.node.waku_node] WakuNode instance initialized with log path ./log/docker/node2_2025-02-04_17-11-26__4ae32009-c9b9-4950-a703-867568260a5e__wakuorg_nwaku:latest.log
2025-02-04 17:11:33.309 DEBUG [src.node.waku_node] Starting Node...
2025-02-04 17:11:33.309 DEBUG [src.node.docker_mananger] Attempting to create or retrieve network waku
2025-02-04 17:11:33.310 DEBUG [src.node.docker_mananger] Network waku already exists
2025-02-04 17:11:33.310 DEBUG [src.node.docker_mananger] Generated random external IP 172.18.146.172
2025-02-04 17:11:33.310 DEBUG [src.node.docker_mananger] Generated ports ['8203', '8204', '8205', '8206', '8207']
2025-02-04 17:11:33.310 DEBUG [src.node.waku_node] RLN credentials were not set
2025-02-04 17:11:33.311 INFO [src.node.waku_node] RLN credentials not set or credential store not available, starting without RLN
2025-02-04 17:11:33.311 DEBUG [src.node.waku_node] Using volumes []
2025-02-04 17:11:33.311 DEBUG [src.node.docker_mananger] docker run -i -t -p 8203:8203 -p 8204:8204 -p 8205:8205 -p 8206:8206 -p 8207:8207 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=8205 --rest-port=8203 --tcp-port=8204 --discv5-udp-port=8206 --rest-address=0.0.0.0 --nat=extip:172.18.146.172 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=624463fff5cfc9ffa9dd0b449fdc6a20bbdb1d2c0ca955a3f1dacfc70ba7aca0 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=8207 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-L24QNhag4V_HLHvtYIRdiUNYBRgZ7pi9DnqZQmdImcHqXi8artPK6b_mAhIz7DfpQjnT5Ri5hZqL2e9RbynVX9S-w8CgmlkgnY0gmlwhKwSXV2KbXVsdGlhZGRyc5YACASsEl1dBg0YAAoErBJdXQYNGd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDp4aOBoH5FBn5C9S7lNmBdCqd9QvZ2tVxoryHbSsHOTGDdGNwgg0Yg3VkcIINGoV3YWt1MgE
2025-02-04 17:11:33.564 DEBUG [src.node.docker_mananger] docker network connect --ip 172.18.146.172 waku a005a8e8bdf25863ac665bbea2ae8f15bdf2f46aeedfc576ce2b5951660aebf6
2025-02-04 17:11:33.611 DEBUG [src.node.docker_mananger] Container started with ID a005a8e8bdf2. Setting up logs at ./log/docker/node2_2025-02-04_17-11-26__4ae32009-c9b9-4950-a703-867568260a5e__wakuorg_nwaku:latest.log
2025-02-04 17:11:33.611 DEBUG [src.node.waku_node] Started container from image wakuorg/nwaku:latest. REST: 8203
2025-02-04 17:11:33.612 DEBUG [src.libs.common] Sleeping for 1 seconds
2025-02-04 17:11:34.613 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:8203/health" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:11:34.623 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
2025-02-04 17:11:34.623 INFO [src.node.waku_node] Node protocols are initialized !!
2025-02-04 17:11:34.624 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:8203/debug/v1/info" -H "Content-Type: application/json" -d 'None'
2025-02-04 17:11:34.626 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.146.172/tcp/8204/p2p/16Uiu2HAm7uGgRFL69iPqMdgpGwfL4RbzvHAJZWHxEHGwDkRafob9","/ip4/172.18.146.172/tcp/8205/ws/p2p/16Uiu2HAm7uGgRFL69iPqMdgpGwfL4RbzvHAJZWHxEHGwDkRafob9"],"enrUri":"enr:-L24QL6UVrz9NV-fT0mytIJ29QcGLHO_ky_L3qXsig1aLc2fTOIkcb4qGOxzMaykOHgW9sR9JSxq5XIHDmVBzRAuwS0CgmlkgnY0gmlwhKwSkqyKbXVsdGlhZGRyc5YACASsEpKsBiAMAAoErBKSrAYgDd0DgnJzhQADAQAAiXNlY3AyNTZrMaECuV4pLtBefJ9U1H5sI7zpxKM5S4mCPYziPnsURJUGWvSDdGNwgiAMg3VkcIIgDoV3YWt1MgE"}'
2025-02-04 17:11:34.627 INFO [src.node.waku_node] REST service is ready !!
2025-02-04 17:11:34.627 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:8203/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.93.93/tcp/3352/p2p/16Uiu2HAmPvwSJd7JPZbNMRTcHEtRuC57mYNrrvMQjREQBZo7ZrPr"]'
2025-02-04 17:11:34.629 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-04 17:11:34.630 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:3351/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/1/0"]'
2025-02-04 17:11:34.634 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-04 17:11:34.634 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:8203/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/1/0"]'
2025-02-04 17:11:34.640 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-04 17:11:34.640 DEBUG [tests.relay.test_rln] Running test with payload A simple string
2025-02-04 17:11:34.641 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:3351/relay/v1/messages/%2Fwaku%2F2%2Frs%2F1%2F0" -H "Content-Type: application/json" -d '{"payload": "SGVsbG8gV29ybGQh", "contentTopic": "/test/1/waku-rln-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-04 17:11:34.924 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-04 17:11:34.924 DEBUG [tests.relay.test_rln] Running test with payload An integer
2025-02-04 17:11:34.925 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:3351/relay/v1/messages/%2Fwaku%2F2%2Frs%2F1%2F0" -H "Content-Type: application/json" -d '{"payload": "MTIzNDU2Nzg5MA==", "contentTopic": "/test/1/waku-rln-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-04 17:11:34.927 ERROR [src.node.api_clients.base_client] HTTP error occurred: 500 Server Error: Internal Server Error for url: http://127.0.0.1:3351/relay/v1/messages/%2Fwaku%2F2%2Frs%2F1%2F0. Response content: b'Failed to publish: error appending RLN proof to message: could not get new message id to generate an rln proof: NonceLimitReached: Nonce limit reached. Please wait for the next epoch. requested nonce: 1 & nonceLimit: 1'
2025-02-04 17:11:34.928 DEBUG [tests.relay.test_rln] Running test with payload A dictionary
2025-02-04 17:11:34.928 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:3351/relay/v1/messages/%2Fwaku%2F2%2Frs%2F1%2F0" -H "Content-Type: application/json" -d '{"payload": "eyJrZXkiOiAidmFsdWUifQ==", "contentTopic": "/test/1/waku-rln-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-04 17:11:34.931 ERROR [src.node.api_clients.base_client] HTTP error occurred: 500 Server Error: Internal Server Error for url: http://127.0.0.1:3351/relay/v1/messages/%2Fwaku%2F2%2Frs%2F1%2F0. Response content: b'Failed to publish: error appending RLN proof to message: could not get new message id to generate an rln proof: NonceLimitReached: Nonce limit reached. Please wait for the next epoch. requested nonce: 2 & nonceLimit: 1'
2025-02-04 17:11:34.931 DEBUG [tests.relay.test_rln] Running test with payload Chinese characters
2025-02-04 17:11:34.932 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:3351/relay/v1/messages/%2Fwaku%2F2%2Frs%2F1%2F0" -H "Content-Type: application/json" -d '{"payload": "6L+Z5piv5LiA5Lqb5Lit5paH", "contentTopic": "/test/1/waku-rln-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-04 17:11:34.934 ERROR [src.node.api_clients.base_client] HTTP error occurred: 500 Server Error: Internal Server Error for url: http://127.0.0.1:3351/relay/v1/messages/%2Fwaku%2F2%2Frs%2F1%2F0. Response content: b'Failed to publish: error appending RLN proof to message: could not get new message id to generate an rln proof: NonceLimitReached: Nonce limit reached. Please wait for the next epoch. requested nonce: 3 & nonceLimit: 1'
2025-02-04 17:11:34.934 DEBUG [tests.relay.test_rln] Running test with payload Emojis
2025-02-04 17:11:34.935 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:3351/relay/v1/messages/%2Fwaku%2F2%2Frs%2F1%2F0" -H "Content-Type: application/json" -d '{"payload": "8J+agPCfjJ/inKg=", "contentTopic": "/test/1/waku-rln-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-04 17:11:34.937 ERROR [src.node.api_clients.base_client] HTTP error occurred: 500 Server Error: Internal Server Error for url: http://127.0.0.1:3351/relay/v1/messages/%2Fwaku%2F2%2Frs%2F1%2F0. Response content: b'Failed to publish: error appending RLN proof to message: could not get new message id to generate an rln proof: NonceLimitReached: Nonce limit reached. Please wait for the next epoch. requested nonce: 4 & nonceLimit: 1'
2025-02-04 17:11:34.939 DEBUG [tests.conftest] Running fixture teardown: test_setup
2025-02-04 17:11:34.939 DEBUG [tests.conftest] Running fixture teardown: close_open_nodes
2025-02-04 17:11:34.940 DEBUG [src.node.waku_node] Stopping container with id 7e786d7391f7
2025-02-04 17:11:35.713 DEBUG [src.node.waku_node] Container stopped.
2025-02-04 17:11:35.713 DEBUG [src.node.waku_node] Stopping container with id a005a8e8bdf2
2025-02-04 17:11:36.541 ERROR [src.node.docker_mananger] Max retries reached for container 7e786d7391f7. Exiting log stream.
2025-02-04 17:11:37.202 DEBUG [src.node.waku_node] Container stopped.
2025-02-04 17:11:37.204 DEBUG [tests.conftest] Running fixture teardown: check_waku_log_errors
2025-02-04 17:11:37.214 DEBUG [src.node.docker_mananger] No errors found in the waku logs.
2025-02-04 17:11:37.218 DEBUG [src.node.docker_mananger] No errors found in the waku logs.
