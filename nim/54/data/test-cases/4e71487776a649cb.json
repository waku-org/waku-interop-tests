{"uid":"4e71487776a649cb","name":"test_filter_subscribe_with_invalid_content_topic_format","fullName":"tests.filter.test_subscribe_create.TestFilterSubscribeCreate#test_filter_subscribe_with_invalid_content_topic_format","historyId":"47bb6c53b65e859cfe437838222772ee","time":{"start":1707211774033,"stop":1707211774061,"duration":28},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"set_allure_env_variables","time":{"start":1707211607883,"stop":1707211607883,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"close_open_nodes","time":{"start":1707211770543,"stop":1707211770543,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"attach_logs_on_fail","time":{"start":1707211770543,"stop":1707211770543,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"test_id","time":{"start":1707211770544,"stop":1707211770544,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"filter_setup","time":{"start":1707211770544,"stop":1707211770544,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"test_setup","time":{"start":1707211770544,"stop":1707211770544,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_main_relay_node","time":{"start":1707211770545,"stop":1707211772322,"duration":1777},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_main_filter_node","time":{"start":1707211772322,"stop":1707211773921,"duration":1599},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"subscribe_main_nodes","time":{"start":1707211773921,"stop":1707211774033,"duration":112},"status":"passed","steps":[{"name":"wait_for_subscriptions_on_main_nodes","time":{"start":1707211773922,"stop":1707211774033,"duration":111},"status":"passed","steps":[{"name":"create_filter_subscription_with_retry","time":{"start":1707211773956,"stop":1707211774033,"duration":77},"status":"passed","steps":[{"name":"create_filter_subscription","time":{"start":1707211773956,"stop":1707211774033,"duration":77},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"subscription","value":"{'requestId': '7796d1c1-e5a5-4801-89bb-ed42446a9de9', 'contentFilters': ['/test/1/waku-filter/proto'], 'pubsubTopic': '/waku/2/rs/0/1'}"},{"name":"node","value":"None"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"subscription","value":"{'requestId': '7796d1c1-e5a5-4801-89bb-ed42446a9de9', 'contentFilters': ['/test/1/waku-filter/proto'], 'pubsubTopic': '/waku/2/rs/0/1'}"},{"name":"node","value":"None"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"content_topic_list","value":"['/test/1/waku-filter/proto']"},{"name":"pubsub_topic","value":"None"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"passed","steps":[{"name":"create_filter_subscription","time":{"start":1707211774034,"stop":1707211774043,"duration":9},"status":"broken","statusMessage":"Exception: Error: 400 Client Error: Bad Request for url: http://127.0.0.1:45581/filter/v2/subscriptions with response: b'{\"requestId\":\"unknown\",\"statusCode\":400,\"statusDesc\":\"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\\\\"Invalid content body, could not decode. Unable to deserialize data\\\\\", contentType: \\\\\"text/plain\\\\\"))\"}'\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/steps/filter.py\", line 140, in create_filter_subscription\n    return node.set_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/waku_node.py\", line 147, in set_filter_subscriptions\n    return self._api.set_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 36, in set_filter_subscriptions\n    set_subscriptions_response = self.rest_call(\"post\", \"filter/v2/subscriptions\", json.dumps(subscription))\n                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 16, in rest_call\n    return self.make_request(method, url, headers=headers, data=payload)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/base_client.py\", line 17, in make_request\n    raise Exception(f\"Error: {http_err} with response: {response.content}\")\n","steps":[],"attachments":[],"parameters":[{"name":"subscription","value":"{'requestId': '1', 'contentFilters': [{'description': 'Empty string', 'value': ''}], 'pubsubTopic': '/waku/2/rs/0/1'}"},{"name":"node","value":"None"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"create_filter_subscription","time":{"start":1707211774044,"stop":1707211774047,"duration":3},"status":"broken","statusMessage":"Exception: Error: 400 Client Error: Bad Request for url: http://127.0.0.1:45581/filter/v2/subscriptions with response: b'{\"requestId\":\"unknown\",\"statusCode\":400,\"statusDesc\":\"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\\\\"Invalid content body, could not decode. Unable to deserialize data\\\\\", contentType: \\\\\"text/plain\\\\\"))\"}'\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/steps/filter.py\", line 140, in create_filter_subscription\n    return node.set_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/waku_node.py\", line 147, in set_filter_subscriptions\n    return self._api.set_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 36, in set_filter_subscriptions\n    set_subscriptions_response = self.rest_call(\"post\", \"filter/v2/subscriptions\", json.dumps(subscription))\n                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 16, in rest_call\n    return self.make_request(method, url, headers=headers, data=payload)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/base_client.py\", line 17, in make_request\n    raise Exception(f\"Error: {http_err} with response: {response.content}\")\n","steps":[],"attachments":[],"parameters":[{"name":"subscription","value":"{'requestId': '1', 'contentFilters': [{'description': 'A dictionary', 'value': {'key': 'YWFh'}}], 'pubsubTopic': '/waku/2/rs/0/1'}"},{"name":"node","value":"None"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"create_filter_subscription","time":{"start":1707211774048,"stop":1707211774051,"duration":3},"status":"broken","statusMessage":"Exception: Error: 400 Client Error: Bad Request for url: http://127.0.0.1:45581/filter/v2/subscriptions with response: b'{\"requestId\":\"unknown\",\"statusCode\":400,\"statusDesc\":\"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\\\\"Invalid content body, could not decode. Unable to deserialize data\\\\\", contentType: \\\\\"text/plain\\\\\"))\"}'\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/steps/filter.py\", line 140, in create_filter_subscription\n    return node.set_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/waku_node.py\", line 147, in set_filter_subscriptions\n    return self._api.set_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 36, in set_filter_subscriptions\n    set_subscriptions_response = self.rest_call(\"post\", \"filter/v2/subscriptions\", json.dumps(subscription))\n                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 16, in rest_call\n    return self.make_request(method, url, headers=headers, data=payload)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/base_client.py\", line 17, in make_request\n    raise Exception(f\"Error: {http_err} with response: {response.content}\")\n","steps":[],"attachments":[],"parameters":[{"name":"subscription","value":"{'requestId': '1', 'contentFilters': [{'description': 'An integer', 'value': 1234567890}], 'pubsubTopic': '/waku/2/rs/0/1'}"},{"name":"node","value":"None"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"create_filter_subscription","time":{"start":1707211774053,"stop":1707211774056,"duration":3},"status":"broken","statusMessage":"Exception: Error: 400 Client Error: Bad Request for url: http://127.0.0.1:45581/filter/v2/subscriptions with response: b'{\"requestId\":\"unknown\",\"statusCode\":400,\"statusDesc\":\"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\\\\"Invalid content body, could not decode. Unable to deserialize data\\\\\", contentType: \\\\\"text/plain\\\\\"))\"}'\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/steps/filter.py\", line 140, in create_filter_subscription\n    return node.set_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/waku_node.py\", line 147, in set_filter_subscriptions\n    return self._api.set_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 36, in set_filter_subscriptions\n    set_subscriptions_response = self.rest_call(\"post\", \"filter/v2/subscriptions\", json.dumps(subscription))\n                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 16, in rest_call\n    return self.make_request(method, url, headers=headers, data=payload)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/base_client.py\", line 17, in make_request\n    raise Exception(f\"Error: {http_err} with response: {response.content}\")\n","steps":[],"attachments":[],"parameters":[{"name":"subscription","value":"{'requestId': '1', 'contentFilters': [{'description': 'A list', 'value': ['YWFh']}], 'pubsubTopic': '/waku/2/rs/0/1'}"},{"name":"node","value":"None"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"create_filter_subscription","time":{"start":1707211774057,"stop":1707211774060,"duration":3},"status":"broken","statusMessage":"Exception: Error: 400 Client Error: Bad Request for url: http://127.0.0.1:45581/filter/v2/subscriptions with response: b'{\"requestId\":\"unknown\",\"statusCode\":400,\"statusDesc\":\"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\\\\"Invalid content body, could not decode. Unable to deserialize data\\\\\", contentType: \\\\\"text/plain\\\\\"))\"}'\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/steps/filter.py\", line 140, in create_filter_subscription\n    return node.set_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/waku_node.py\", line 147, in set_filter_subscriptions\n    return self._api.set_filter_subscriptions(subscription)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 36, in set_filter_subscriptions\n    set_subscriptions_response = self.rest_call(\"post\", \"filter/v2/subscriptions\", json.dumps(subscription))\n                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/rest.py\", line 16, in rest_call\n    return self.make_request(method, url, headers=headers, data=payload)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/api_clients/base_client.py\", line 17, in make_request\n    raise Exception(f\"Error: {http_err} with response: {response.content}\")\n","steps":[],"attachments":[],"parameters":[{"name":"subscription","value":"{'requestId': '1', 'contentFilters': [{'description': 'A bool', 'value': True}], 'pubsubTopic': '/waku/2/rs/0/1'}"},{"name":"node","value":"None"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"e9e7583a6fd336c7","name":"log","source":"e9e7583a6fd336c7.txt","type":"text/plain","size":12375}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":5,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"test_setup::0","time":{"start":1707211774063,"stop":1707211774065,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"close_open_nodes::0","time":{"start":1707211774066,"stop":1707211779295,"duration":5229},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"attach_logs_on_fail::0","time":{"start":1707211779295,"stop":1707211779295,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"set_allure_env_variables::0","time":{"start":1707212441500,"stop":1707212441501,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"@pytest.mark.usefixtures('setup_main_relay_node', 'setup_main_filter_node')"},{"name":"parentSuite","value":"tests.filter"},{"name":"suite","value":"test_subscribe_create"},{"name":"subSuite","value":"TestFilterSubscribeCreate"},{"name":"host","value":"fv-az914-551"},{"name":"thread","value":"2075-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.filter.test_subscribe_create"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":23,"unknown":0,"total":23},"items":[{"uid":"b2f6b9d79ade79dd","reportUrl":"https://waku-org.github.io/waku-interop-tests/53//#testresult/b2f6b9d79ade79dd","status":"passed","time":{"start":1707210693619,"stop":1707210693643,"duration":24}},{"uid":"5cf9a40bb3c34080","reportUrl":"https://waku-org.github.io/waku-interop-tests/52//#testresult/5cf9a40bb3c34080","status":"passed","time":{"start":1707206178677,"stop":1707206178714,"duration":37}},{"uid":"8d6b3523b0e15bde","reportUrl":"https://waku-org.github.io/waku-interop-tests/51//#testresult/8d6b3523b0e15bde","status":"passed","time":{"start":1707192716771,"stop":1707192716789,"duration":18}},{"uid":"9de26102d12f999c","reportUrl":"https://waku-org.github.io/waku-interop-tests/50//#testresult/9de26102d12f999c","status":"passed","time":{"start":1707106404812,"stop":1707106404833,"duration":21}},{"uid":"fa132d9659e5446c","reportUrl":"https://waku-org.github.io/waku-interop-tests/49//#testresult/fa132d9659e5446c","status":"passed","time":{"start":1707019896364,"stop":1707019896403,"duration":39}},{"uid":"8ba49ca13ef11ff4","reportUrl":"https://waku-org.github.io/waku-interop-tests/48//#testresult/8ba49ca13ef11ff4","status":"passed","time":{"start":1706933500843,"stop":1706933500866,"duration":23}},{"uid":"b70bd73d6dc97039","reportUrl":"https://waku-org.github.io/waku-interop-tests/47//#testresult/b70bd73d6dc97039","status":"passed","time":{"start":1706847182171,"stop":1706847182197,"duration":26}},{"uid":"1495447511d685b2","reportUrl":"https://waku-org.github.io/waku-interop-tests/46//#testresult/1495447511d685b2","status":"passed","time":{"start":1706760858434,"stop":1706760858455,"duration":21}},{"uid":"3b1d47aeb8308068","reportUrl":"https://waku-org.github.io/waku-interop-tests/45//#testresult/3b1d47aeb8308068","status":"passed","time":{"start":1706693844817,"stop":1706693844841,"duration":24}},{"uid":"e2411f6a9ec511b0","reportUrl":"https://waku-org.github.io/waku-interop-tests/44//#testresult/e2411f6a9ec511b0","status":"passed","time":{"start":1706674371097,"stop":1706674371127,"duration":30}},{"uid":"ee8194b9d81ad5af","reportUrl":"https://waku-org.github.io/waku-interop-tests/43//#testresult/ee8194b9d81ad5af","status":"passed","time":{"start":1706587912108,"stop":1706587912129,"duration":21}},{"uid":"7126fd4b54abf249","reportUrl":"https://waku-org.github.io/waku-interop-tests/42//#testresult/7126fd4b54abf249","status":"passed","time":{"start":1706501528197,"stop":1706501528221,"duration":24}},{"uid":"9e8800e87bd294b8","reportUrl":"https://waku-org.github.io/waku-interop-tests/41//#testresult/9e8800e87bd294b8","status":"passed","time":{"start":1706415178225,"stop":1706415178249,"duration":24}},{"uid":"30fad2232fcb20ac","reportUrl":"https://waku-org.github.io/waku-interop-tests/40//#testresult/30fad2232fcb20ac","status":"passed","time":{"start":1706328698139,"stop":1706328698164,"duration":25}},{"uid":"f5809901c2e9f894","reportUrl":"https://waku-org.github.io/waku-interop-tests/39//#testresult/f5809901c2e9f894","status":"passed","time":{"start":1706242389463,"stop":1706242389486,"duration":23}},{"uid":"8c8fe32416ba8f07","reportUrl":"https://waku-org.github.io/waku-interop-tests/38//#testresult/8c8fe32416ba8f07","status":"passed","time":{"start":1706156010976,"stop":1706156010997,"duration":21}},{"uid":"feb2ebfbca8b9994","reportUrl":"https://waku-org.github.io/waku-interop-tests/37//#testresult/feb2ebfbca8b9994","status":"passed","time":{"start":1706069598021,"stop":1706069598043,"duration":22}},{"uid":"8c502a7b0e5e78a7","reportUrl":"https://waku-org.github.io/waku-interop-tests/36//#testresult/8c502a7b0e5e78a7","status":"passed","time":{"start":1705983185755,"stop":1705983185786,"duration":31}},{"uid":"7ff1d3c5fd4d6583","reportUrl":"https://waku-org.github.io/waku-interop-tests/35//#testresult/7ff1d3c5fd4d6583","status":"passed","time":{"start":1705896824463,"stop":1705896824491,"duration":28}},{"uid":"91fb9b3e71fdb5ed","reportUrl":"https://waku-org.github.io/waku-interop-tests/34//#testresult/91fb9b3e71fdb5ed","status":"passed","time":{"start":1705810357212,"stop":1705810357228,"duration":16}}]},"tags":["@pytest.mark.usefixtures('setup_main_relay_node', 'setup_main_filter_node')"]},"source":"4e71487776a649cb.json","parameterValues":[]}