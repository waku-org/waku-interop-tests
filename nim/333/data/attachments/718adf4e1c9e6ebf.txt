[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_extra_field with id: 2024-08-26_15-47-41__fa795d74-0ded-45cc-9e0c-702a49d0d5cb
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-08-26_15-47-41__fa795d74-0ded-45cc-9e0c-702a49d0d5cb__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.160.189
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['8016', '8017', '8018', '8019', '8020']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:431 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 8016:8016 -p 8017:8017 -p 8018:8018 -p 8019:8019 -p 8020:8020 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=8018 --rest-port=8016 --tcp-port=8017 --discv5-udp-port=8019 --rest-address=0.0.0.0 --nat=extip:172.18.160.189 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=df2e825beefe6d1dc9b1d215b9c90eacaffaadec705cab0485c8fabf5ba0cbe6 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=8020 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.160.189 waku 0824d0e2135b616a083d984c4a9ecbe2a80c19b61bdac6f6252ba6aa1faa3eff
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 0824d0e2135b. Setting up logs at ./log/docker/node1_2024-08-26_15-47-41__fa795d74-0ded-45cc-9e0c-702a49d0d5cb__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 8016
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8016/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8016/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.160.189/tcp/8017/p2p/16Uiu2HAmBFcvDfF3HgnbYAxN1w5vdaRuFgsxdKjh7P1UkhPWf8FD","/ip4/172.18.160.189/tcp/8018/ws/p2p/16Uiu2HAmBFcvDfF3HgnbYAxN1w5vdaRuFgsxdKjh7P1UkhPWf8FD"],"enrUri":"enr:-LO4QLOMDCzCkzmS65MM-ypYZPPlyGj0wOXTXpOiJV1gF6u_NlIZfpKGOJsuBChdtpQtp46z0p1M6Aa5Hbjf0aJ90aIBgmlkgnY0gmlwhKwSoL2KbXVsdGlhZGRyc4wACgSsEqC9Bh9S3QOCcnOFAAMBAACJc2VjcDI1NmsxoQLrJ7iPUQipS98cY9nnPzaabw-0UaC96_zPsMC2MKSYNIN0Y3CCH1GDdWRwgh9ThXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-08-26_15-47-41__fa795d74-0ded-45cc-9e0c-702a49d0d5cb__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.245.59
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['46870', '46871', '46872', '46873', '46874']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:431 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 46870:46870 -p 46871:46871 -p 46872:46872 -p 46873:46873 -p 46874:46874 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=46872 --rest-port=46870 --tcp-port=46871 --discv5-udp-port=46873 --rest-address=0.0.0.0 --nat=extip:172.18.245.59 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=0c78bdebb5c2d0ec6acd0ccfe9e55a210edb54e85196bbf9bd0cb8dc750f5504 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=46874 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QLOMDCzCkzmS65MM-ypYZPPlyGj0wOXTXpOiJV1gF6u_NlIZfpKGOJsuBChdtpQtp46z0p1M6Aa5Hbjf0aJ90aIBgmlkgnY0gmlwhKwSoL2KbXVsdGlhZGRyc4wACgSsEqC9Bh9S3QOCcnOFAAMBAACJc2VjcDI1NmsxoQLrJ7iPUQipS98cY9nnPzaabw-0UaC96_zPsMC2MKSYNIN0Y3CCH1GDdWRwgh9ThXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.245.59 waku 8fbb2252878e21094d3c2b2b02e82dc5185f05d7d2aa271989d43719bc547d69
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 8fbb2252878e. Setting up logs at ./log/docker/node2_2024-08-26_15-47-41__fa795d74-0ded-45cc-9e0c-702a49d0d5cb__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 46870
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:46870/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:46870/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.245.59/tcp/46871/p2p/16Uiu2HAkyTyZkUZ96mdEbjokAXJFEPE8P34c7GgHSUsgKsxnZhLU","/ip4/172.18.245.59/tcp/46872/ws/p2p/16Uiu2HAkyTyZkUZ96mdEbjokAXJFEPE8P34c7GgHSUsgKsxnZhLU"],"enrUri":"enr:-LO4QFKjgYQS7tLIB8vMppIhuNqgznKPFoofObnKTk0YvpjLNICrO7Bjj7K2RP6JgYiJf28E-2H2XnKtdZsFpy1_Q0wBgmlkgnY0gmlwhKwS9TuKbXVsdGlhZGRyc4wACgSsEvU7BrcY3QOCcnOFAAMBAACJc2VjcDI1NmsxoQI8BcsTwqLSmoR-y_I4RIF--TfIGYD-6IRzS_38NqFsuYN0Y3CCtxeDdWRwgrcZhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:46870/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.160.189/tcp/8017/p2p/16Uiu2HAmBFcvDfF3HgnbYAxN1w5vdaRuFgsxdKjh7P1UkhPWf8FD"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8016/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:46870/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8016/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8016/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1724687264658799872,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:46870/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1724687264658799872,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8016/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)', "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:8016/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 0824d0e2135b
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 8fbb2252878e
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.