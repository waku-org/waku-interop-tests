[35mDEBUG   [0m src.postgres_setup:postgres_setup.py:36 Postgres container started
[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_on_empty_postgress_db with id: 2024-08-26_15-55-17__f460aeba-f6c3-4749-839e-d1daa56a7eb9
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.store:store.py:28 Running fixture setup: store_setup
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/publishing_node1_2024-08-26_15-55-17__f460aeba-f6c3-4749-839e-d1daa56a7eb9__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.163.189
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['33631', '33632', '33633', '33634', '33635']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:431 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 33631:33631 -p 33632:33632 -p 33633:33633 -p 33634:33634 -p 33635:33635 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=33633 --rest-port=33631 --tcp-port=33632 --discv5-udp-port=33634 --rest-address=0.0.0.0 --nat=extip:172.18.163.189 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=7df41da8c54eb70add660bbfdb1eeadf0b8229c8add4d9acbdc1aa2758e2eb7c --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=33635 --metrics-logging=true --store=true --relay=true --store-message-db-url=postgres://postgres:test123@postgres:5432/postgres
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.163.189 waku 6646184cb110a397f051d5a6b671687c57fe9a0b494becee16cf41d91fa809a7
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 6646184cb110. Setting up logs at ./log/docker/publishing_node1_2024-08-26_15-55-17__f460aeba-f6c3-4749-839e-d1daa56a7eb9__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 33631
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33631/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Initializing","protocolsHealth":[]}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33631/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Initializing","protocolsHealth":[]}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33631/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33631/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.163.189/tcp/33632/p2p/16Uiu2HAmTwGjQF1G9TNZmyb37zejn3U3uayNXwYzcs1xoGD2o8EG","/ip4/172.18.163.189/tcp/33633/ws/p2p/16Uiu2HAmTwGjQF1G9TNZmyb37zejn3U3uayNXwYzcs1xoGD2o8EG"],"enrUri":"enr:-LO4QHe2UAC2ZSO51bmbNkBz0mvHPg_zgVrjkg9dOE_fXQ1IV6zXla33-vhYfWuUcigRKChEyHKTwgZMlTcjCmgn4CEBgmlkgnY0gmlwhKwSo72KbXVsdGlhZGRyc4wACgSsEqO9BoNh3QOCcnOFAAMBAACJc2VjcDI1NmsxoQPjCx6BbgKL37vyU_8c3XoDHEXX9lM_DRfIT-LH0c7qfYN0Y3CCg2CDdWRwgoNihXdha3UyAw"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/store_node1_2024-08-26_15-55-17__f460aeba-f6c3-4749-839e-d1daa56a7eb9__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.34.62
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['40340', '40341', '40342', '40343', '40344']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:431 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 40340:40340 -p 40341:40341 -p 40342:40342 -p 40343:40343 -p 40344:40344 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=40342 --rest-port=40340 --tcp-port=40341 --discv5-udp-port=40343 --rest-address=0.0.0.0 --nat=extip:172.18.34.62 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=f7b2f9ec45da76413db6df516dc7fcccffb9dcd6ae82bcf9b0793ef5b49f2452 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=40344 --metrics-logging=true --discv5-bootstrap-node=enr:-LO4QHe2UAC2ZSO51bmbNkBz0mvHPg_zgVrjkg9dOE_fXQ1IV6zXla33-vhYfWuUcigRKChEyHKTwgZMlTcjCmgn4CEBgmlkgnY0gmlwhKwSo72KbXVsdGlhZGRyc4wACgSsEqO9BoNh3QOCcnOFAAMBAACJc2VjcDI1NmsxoQPjCx6BbgKL37vyU_8c3XoDHEXX9lM_DRfIT-LH0c7qfYN0Y3CCg2CDdWRwgoNihXdha3UyAw --storenode=/ip4/172.18.163.189/tcp/33632/p2p/16Uiu2HAmTwGjQF1G9TNZmyb37zejn3U3uayNXwYzcs1xoGD2o8EG --store=false --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.34.62 waku a632398be5d9ae5be49f89b87b8696eef6cc4e6ec82d2acb41a1d4ec3feb5c27
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID a632398be5d9. Setting up logs at ./log/docker/store_node1_2024-08-26_15-55-17__f460aeba-f6c3-4749-839e-d1daa56a7eb9__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 40340
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:40340/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:40340/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.34.62/tcp/40341/p2p/16Uiu2HAmMaeZEvM5u3o25Nqy9rfim1kHmaEdffeYHFpERPMSsGVg","/ip4/172.18.34.62/tcp/40342/ws/p2p/16Uiu2HAmMaeZEvM5u3o25Nqy9rfim1kHmaEdffeYHFpERPMSsGVg"],"enrUri":"enr:-LO4QDLbCdvHnN37fX7FBQbTtO_dbOe37BVIk_QE61DoeAIrTzRJTMkohr64iOyMvQhUBRiUNjwHarZ31Fuf5McDLN4BgmlkgnY0gmlwhKwSIj6KbXVsdGlhZGRyc4wACgSsEiI-Bp2W3QOCcnOFAAMBAACJc2VjcDI1NmsxoQOEnHpe7SZ5abi7G8il4TrSPVP2iOGWTDLpPDCMi3Ge-4N0Y3CCnZWDdWRwgp2XhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:40340/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.163.189/tcp/33632/p2p/16Uiu2HAmTwGjQF1G9TNZmyb37zejn3U3uayNXwYzcs1xoGD2o8EG"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:33631/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/0"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:40340/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/0"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.store:store.py:128 Relaying message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:33631/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F0" -H "Content-Type: application/json" -d '{"payload": "U3RvcmUgd29ya3MhIQ==", "contentTopic": "/myapp/1/latest/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.2 seconds
[35mDEBUG   [0m src.steps.store:store.py:216 Checking that peer wakuorg/nwaku:latest can find the stored message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33631/store/v3/messages?pubsubTopic=%2Fwaku%2F2%2Frs%2F3%2F0&pageSize=5&ascending=true" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"","statusCode":200,"statusDesc":"OK","messages":[{"messageHash":"DKfowI8lvueH8f0SVZ5EXUxMVCx82KHIyycgXjJnCrA="}]}'
[35mDEBUG   [0m src.steps.store:store.py:216 Checking that peer wakuorg/nwaku:latest can find the stored message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:40340/store/v3/messages?pubsubTopic=%2Fwaku%2F2%2Frs%2F3%2F0&pageSize=5&ascending=true" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"e9b73b976f8f84d1b9f0","statusCode":200,"statusDesc":"OK","messages":[{"messageHash":"DKfowI8lvueH8f0SVZ5EXUxMVCx82KHIyycgXjJnCrA="}]}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 6646184cb110
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id a632398be5d9
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:114 Found matches for keyword 'fault': ['DBG 2024-08-26 15:55:20.963+00:00 executing migration statement              topics="waku archive migration" tid=1 file=migrations.nim:88 statement="ALTER TABLE messages ADD meta VARCHAR default null;"', 'DBG 2024-08-26 15:55:20.963+00:00 migration statement executed succesfully   topics="waku archive migration" tid=1 file=migrations.nim:95 statement="ALTER TABLE messages ADD meta VARCHAR default null;"', 'DBG 2024-08-26 15:55:20.989+00:00 performWriteQueryWithLock                  tid=1 file=postgres_driver.nim:1101 queryToProtect="CREATE TABLE IF NOT EXISTS messages_1724687720_1724688000 (LIKE messages INCLUDING DEFAULTS INCLUDING CONSTRAINTS);"', 'DBG 2024-08-26 15:55:21.008+00:00 new partition added                        tid=1 file=postgres_driver.nim:1212 query="CREATE TABLE IF NOT EXISTS messages_1724687720_1724688000 (LIKE messages INCLUDING DEFAULTS INCLUDING CONSTRAINTS);"']
[35mDEBUG   [0m src.postgres_setup:postgres_setup.py:44 Postgres container stopped and removed.