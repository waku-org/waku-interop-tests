[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_no_content_topic with id: 2024-08-26_15-41-03__ca54b374-068f-451b-82c8-839a880cdaac
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-08-26_15-41-03__ca54b374-068f-451b-82c8-839a880cdaac__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.239.245
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['30171', '30172', '30173', '30174', '30175']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:431 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 30171:30171 -p 30172:30172 -p 30173:30173 -p 30174:30174 -p 30175:30175 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=30173 --rest-port=30171 --tcp-port=30172 --discv5-udp-port=30174 --rest-address=0.0.0.0 --nat=extip:172.18.239.245 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=22e7aeac872cb3af0cc34f081f802252caddeaf6ac79fdefd01d2e5b1788ecd7 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=30175 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.239.245 waku 58fbe03c850f5a24a03ea4a3708642cc5c0fb3f03dd0a96304d933619b65bd6f
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 58fbe03c850f. Setting up logs at ./log/docker/node1_2024-08-26_15-41-03__ca54b374-068f-451b-82c8-839a880cdaac__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 30171
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30171/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30171/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.239.245/tcp/30172/p2p/16Uiu2HAm6cwKGdzAKxe1JuuiFFnxYTnxEdoSwUbyi1xpvY89ggYm","/ip4/172.18.239.245/tcp/30173/ws/p2p/16Uiu2HAm6cwKGdzAKxe1JuuiFFnxYTnxEdoSwUbyi1xpvY89ggYm"],"enrUri":"enr:-LO4QOfNdWVJrgGMgoCuTNM9TZJETKg2DMjCY3TK1C1YJ6n4SFIf8RxzQT4DPmG0uTse36qyG2GUmshb2_7Lkz8K2wwBgmlkgnY0gmlwhKwS7_WKbXVsdGlhZGRyc4wACgSsEu_1BnXd3QOCcnOFAAMBAACJc2VjcDI1NmsxoQKmU0kMTyz9i07CBXtP7vGDzygGZr6PY8Bls-RsgHqe5oN0Y3CCddyDdWRwgnXehXdha3UyBQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-08-26_15-41-03__ca54b374-068f-451b-82c8-839a880cdaac__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.233.247
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['20073', '20074', '20075', '20076', '20077']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:431 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 20073:20073 -p 20074:20074 -p 20075:20075 -p 20076:20076 -p 20077:20077 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=20075 --rest-port=20073 --tcp-port=20074 --discv5-udp-port=20076 --rest-address=0.0.0.0 --nat=extip:172.18.233.247 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=2c0eefa4773cac64f2dbcaa911b1c04bccaddb06bb730a00e498b94ebb7aa6e8 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=20077 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-LO4QOfNdWVJrgGMgoCuTNM9TZJETKg2DMjCY3TK1C1YJ6n4SFIf8RxzQT4DPmG0uTse36qyG2GUmshb2_7Lkz8K2wwBgmlkgnY0gmlwhKwS7_WKbXVsdGlhZGRyc4wACgSsEu_1BnXd3QOCcnOFAAMBAACJc2VjcDI1NmsxoQKmU0kMTyz9i07CBXtP7vGDzygGZr6PY8Bls-RsgHqe5oN0Y3CCddyDdWRwgnXehXdha3UyBQ --filternode=/ip4/172.18.239.245/tcp/30172/p2p/16Uiu2HAm6cwKGdzAKxe1JuuiFFnxYTnxEdoSwUbyi1xpvY89ggYm
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.233.247 waku b97777bce574ce561abbcd2a9e8e8cdeac47194188370c761bbf93d22458ba13
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID b97777bce574. Setting up logs at ./log/docker/node2_2024-08-26_15-41-03__ca54b374-068f-451b-82c8-839a880cdaac__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 20073
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:20073/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:20073/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.233.247/tcp/20074/p2p/16Uiu2HAmMdAsbsdz3D3FzaHQ1DQRcGM17tY7saQP7NUYJjuAFvkJ","/ip4/172.18.233.247/tcp/20075/ws/p2p/16Uiu2HAmMdAsbsdz3D3FzaHQ1DQRcGM17tY7saQP7NUYJjuAFvkJ"],"enrUri":"enr:-LO4QJMdxlwoID2PKWH1ecT0fFXKNpTI5QLNPJmzBMJMS_KWdqfOYF8wQtDez5ya7qxLIZcRPpJcKUxu71DecUfYaXkBgmlkgnY0gmlwhKwS6feKbXVsdGlhZGRyc4wACgSsEun3Bk5r3QOCcnOFAAMBAACJc2VjcDI1NmsxoQOFQesvJCFnI1aNc1Z6DKqH1uVMnLGerL9fZili53TEg4N0Y3CCTmqDdWRwgk5shXdha3UyAA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:20073/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.239.245/tcp/30172/p2p/16Uiu2HAm6cwKGdzAKxe1JuuiFFnxYTnxEdoSwUbyi1xpvY89ggYm"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:30171/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:20073/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "d68245eb-1874-4ba0-bd77-593019ead360", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"d68245eb-1874-4ba0-bd77-593019ead360","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:20073/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:20073/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 58fbe03c850f
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id b97777bce574
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.