[35mDEBUG   [0m src.postgres_setup:postgres_setup.py:36 Postgres container started
[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_on_empty_postgress_db with id: 2024-09-06_09-51-08__2dff9983-faf6-4e7e-abd2-8e5153fb037e
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.store:store.py:28 Running fixture setup: store_setup
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/publishing_node1_2024-09-06_09-51-08__2dff9983-faf6-4e7e-abd2-8e5153fb037e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.231.63
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['50420', '50421', '50422', '50423', '50424']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 50420:50420 -p 50421:50421 -p 50422:50422 -p 50423:50423 -p 50424:50424 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=50422 --rest-port=50420 --tcp-port=50421 --discv5-udp-port=50423 --rest-address=0.0.0.0 --nat=extip:172.18.231.63 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=572ae9faa1a1a20dcfdeb335d03bd2cdff772d3dca9d5b53db81b5d0da5a3a2b --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=50424 --metrics-logging=true --store=true --relay=true --store-message-db-url=postgres://postgres:test123@postgres:5432/postgres
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.231.63 waku ed5c96a7e2fd575098b6f677e4c4e161f3fe234a3e2b8190571bc024eac90441
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID ed5c96a7e2fd. Setting up logs at ./log/docker/publishing_node1_2024-09-06_09-51-08__2dff9983-faf6-4e7e-abd2-8e5153fb037e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 50420
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:50420/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Initializing","protocolsHealth":[]}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:50420/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Initializing","protocolsHealth":[]}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:50420/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:50420/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.231.63/tcp/50421/p2p/16Uiu2HAm8NikTk1itFmpibMnf4FwacwSx8K1KwfiFKvu7P6nG5BZ","/ip4/172.18.231.63/tcp/50422/ws/p2p/16Uiu2HAm8NikTk1itFmpibMnf4FwacwSx8K1KwfiFKvu7P6nG5BZ"],"enrUri":"enr:-LO4QKuQVaruNa6lNHnLGrNkZjnDf6aKgg2niNfYX2BIQ2ysYoEHCaOUG4F26QFxjBokG0Su4G_mYmQVBDW7cerTR_IBgmlkgnY0gmlwhKwS5z-KbXVsdGlhZGRyc4wACgSsEuc_BsT23QOCcnOFAAMBAACJc2VjcDI1NmsxoQLAZlHgNG_sZ2bln0AsL47VnzY6mUm8gNg7jBpZJDQdvIN0Y3CCxPWDdWRwgsT3hXdha3UyAw"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/store_node1_2024-09-06_09-51-08__2dff9983-faf6-4e7e-abd2-8e5153fb037e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.140.245
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['22041', '22042', '22043', '22044', '22045']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 22041:22041 -p 22042:22042 -p 22043:22043 -p 22044:22044 -p 22045:22045 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=22043 --rest-port=22041 --tcp-port=22042 --discv5-udp-port=22044 --rest-address=0.0.0.0 --nat=extip:172.18.140.245 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=829bb9d9eb75bc62219fdc71feba21aa405c2611f7d3b899dea83b39bcc26bf0 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=22045 --metrics-logging=true --discv5-bootstrap-node=enr:-LO4QKuQVaruNa6lNHnLGrNkZjnDf6aKgg2niNfYX2BIQ2ysYoEHCaOUG4F26QFxjBokG0Su4G_mYmQVBDW7cerTR_IBgmlkgnY0gmlwhKwS5z-KbXVsdGlhZGRyc4wACgSsEuc_BsT23QOCcnOFAAMBAACJc2VjcDI1NmsxoQLAZlHgNG_sZ2bln0AsL47VnzY6mUm8gNg7jBpZJDQdvIN0Y3CCxPWDdWRwgsT3hXdha3UyAw --storenode=/ip4/172.18.231.63/tcp/50421/p2p/16Uiu2HAm8NikTk1itFmpibMnf4FwacwSx8K1KwfiFKvu7P6nG5BZ --store=false --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.140.245 waku 7063ff010ca200497bf848c4b07d9b3bd7dc3c1c62c357c8ea328c252e8e1fc8
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 7063ff010ca2. Setting up logs at ./log/docker/store_node1_2024-09-06_09-51-08__2dff9983-faf6-4e7e-abd2-8e5153fb037e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 22041
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:22041/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:22041/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.140.245/tcp/22042/p2p/16Uiu2HAm4VSCvFJKAa54Fsbn5YbjX4Hy6BSh7hSpyy2HPP6r1fsM","/ip4/172.18.140.245/tcp/22043/ws/p2p/16Uiu2HAm4VSCvFJKAa54Fsbn5YbjX4Hy6BSh7hSpyy2HPP6r1fsM"],"enrUri":"enr:-LO4QFFTPP3Cx2ZYjYjrUn8jddzMLON80qpQDtyYtXHPQ5yaNOvMASOk31fEZhPp_wyQJL0dZLIQWh7ern5nCZfMdWABgmlkgnY0gmlwhKwSjPWKbXVsdGlhZGRyc4wACgSsEoz1BlYb3QOCcnOFAAMBAACJc2VjcDI1NmsxoQKGr-59WGiYL_vT2ErJIIluezBBMEu21RyyAfQZBt_VcIN0Y3CCVhqDdWRwglYchXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:22041/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.231.63/tcp/50421/p2p/16Uiu2HAm8NikTk1itFmpibMnf4FwacwSx8K1KwfiFKvu7P6nG5BZ"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:50420/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/0"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:22041/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/0"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.store:store.py:129 Relaying message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:50420/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F0" -H "Content-Type: application/json" -d '{"payload": "U3RvcmUgd29ya3MhIQ==", "contentTopic": "/myapp/1/latest/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.2 seconds
[35mDEBUG   [0m src.steps.store:store.py:217 Checking that peer wakuorg/nwaku:latest can find the stored messages
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:50420/store/v3/messages?pubsubTopic=%2Fwaku%2F2%2Frs%2F3%2F0&pageSize=5&ascending=true" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"","statusCode":200,"statusDesc":"OK","messages":[{"messageHash":"n2W682b7MlEgF96VvWmaRBy7ZGuv1r37EvpEniHylOU="}]}'
[35mDEBUG   [0m src.steps.store:store.py:217 Checking that peer wakuorg/nwaku:latest can find the stored messages
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:22041/store/v3/messages?pubsubTopic=%2Fwaku%2F2%2Frs%2F3%2F0&pageSize=5&ascending=true" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"c1017262bf415a4d8464","statusCode":200,"statusDesc":"OK","messages":[{"messageHash":"n2W682b7MlEgF96VvWmaRBy7ZGuv1r37EvpEniHylOU="}]}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id ed5c96a7e2fd
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 7063ff010ca2
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.postgres_setup:postgres_setup.py:44 Postgres container stopped and removed.