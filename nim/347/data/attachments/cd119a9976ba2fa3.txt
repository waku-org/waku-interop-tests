[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_invalid_version with id: 2024-09-06_09-43-20__d34b575c-dd63-4d36-9774-9d7a042a34d0
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-09-06_09-43-20__d34b575c-dd63-4d36-9774-9d7a042a34d0__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.38.29
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['19641', '19642', '19643', '19644', '19645']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 19641:19641 -p 19642:19642 -p 19643:19643 -p 19644:19644 -p 19645:19645 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=19643 --rest-port=19641 --tcp-port=19642 --discv5-udp-port=19644 --rest-address=0.0.0.0 --nat=extip:172.18.38.29 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ab7b05dad7f72f2517bfaa5ee3cdfd5fdf0ab80ade4d517a52da1f9dfeeddf72 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=19645 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.38.29 waku c9d5387963446f96521e33a22b4cd7ad6d966553470b19eef3026168bb88e681
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID c9d538796344. Setting up logs at ./log/docker/node1_2024-09-06_09-43-20__d34b575c-dd63-4d36-9774-9d7a042a34d0__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 19641
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:19641/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:19641/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.38.29/tcp/19642/p2p/16Uiu2HAmCzyMNm5M6Ekvbn3gLnJazVD42t7JUvTUovWobaC2iEmg","/ip4/172.18.38.29/tcp/19643/ws/p2p/16Uiu2HAmCzyMNm5M6Ekvbn3gLnJazVD42t7JUvTUovWobaC2iEmg"],"enrUri":"enr:-LO4QInBW8Hx2TUnRA-wAypmx_sb9BieTmvZ2jssmdq_QbIpXCgBgaPKltN9kNKUW45epOXoWw62PLGci4UAs7nzxxcBgmlkgnY0gmlwhKwSJh2KbXVsdGlhZGRyc4wACgSsEiYdBky73QOCcnOFAAMBAACJc2VjcDI1NmsxoQMFHny2S--XXXAgyKuompr7b9lypmxW8weUMx0sq4Xni4N0Y3CCTLqDdWRwgky8hXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-09-06_09-43-20__d34b575c-dd63-4d36-9774-9d7a042a34d0__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.95.192
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['56374', '56375', '56376', '56377', '56378']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 56374:56374 -p 56375:56375 -p 56376:56376 -p 56377:56377 -p 56378:56378 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=56376 --rest-port=56374 --tcp-port=56375 --discv5-udp-port=56377 --rest-address=0.0.0.0 --nat=extip:172.18.95.192 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=916abefe96fa42d71bccb3d3cbea26337ce4d994eb5012a4adb63e7ba49136a0 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=56378 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QInBW8Hx2TUnRA-wAypmx_sb9BieTmvZ2jssmdq_QbIpXCgBgaPKltN9kNKUW45epOXoWw62PLGci4UAs7nzxxcBgmlkgnY0gmlwhKwSJh2KbXVsdGlhZGRyc4wACgSsEiYdBky73QOCcnOFAAMBAACJc2VjcDI1NmsxoQMFHny2S--XXXAgyKuompr7b9lypmxW8weUMx0sq4Xni4N0Y3CCTLqDdWRwgky8hXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.95.192 waku 4e5be33f5ea0ff7c3e8e227538430b7a370af4d60536f9450c8a4bae84f58823
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 4e5be33f5ea0. Setting up logs at ./log/docker/node2_2024-09-06_09-43-20__d34b575c-dd63-4d36-9774-9d7a042a34d0__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 56374
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:56374/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:56374/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.95.192/tcp/56375/p2p/16Uiu2HAmFvSfBeo7wZ2xiCAgcjWEpCvGVCaash8dzkY2DgaMQUov","/ip4/172.18.95.192/tcp/56376/ws/p2p/16Uiu2HAmFvSfBeo7wZ2xiCAgcjWEpCvGVCaash8dzkY2DgaMQUov"],"enrUri":"enr:-LO4QBjpb-G7wsmOcAMIYYnMOhQTI0xpKDsk6aODLxvAP8ksMfc1r63iiNJlzRdJWPV0H91kAGftyBd05xE-atn_2o0BgmlkgnY0gmlwhKwSX8CKbXVsdGlhZGRyc4wACgSsEl_ABtw43QOCcnOFAAMBAACJc2VjcDI1NmsxoQMwiIUix7QFp_irNoCr-wMINW9bZQL8XMKACGbhjQqipYN0Y3CC3DeDdWRwgtw5hXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:56374/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.38.29/tcp/19642/p2p/16Uiu2HAmCzyMNm5M6Ekvbn3gLnJazVD42t7JUvTUovWobaC2iEmg"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:19641/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:56374/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:19641/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:19641/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1725615803679574784,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:56374/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1725615803679574784,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:19641/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)', "version": 2.1}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:19641/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id c9d538796344
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 4e5be33f5ea0
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.