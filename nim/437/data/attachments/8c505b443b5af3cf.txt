[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_all_with_invalid_request_id with id: 2024-11-07_08-52-05__fee58f17-e70e-43ea-8947-0bb9f469edb9
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-07_08-52-05__fee58f17-e70e-43ea-8947-0bb9f469edb9__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.218.233
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['46678', '46679', '46680', '46681', '46682']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 46678:46678 -p 46679:46679 -p 46680:46680 -p 46681:46681 -p 46682:46682 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=46680 --rest-port=46678 --tcp-port=46679 --discv5-udp-port=46681 --rest-address=0.0.0.0 --nat=extip:172.18.218.233 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=fe52eeeeaadef160a5b09d12a99b7c4e9b6a934a1869aa0e3ced17e884d3b673 --max-connections=1000 --filter-subscription-timeout=600 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=46682 --metrics-logging=true --relay=true --filter=true
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 435beab9cdf4. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.218.233 waku 8b6bc3c2a29e35f9d09588306d34a2f5f71cb83f706b9b5ab50a7e0721078e33
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 8b6bc3c2a29e. Setting up logs at ./log/docker/node1_2024-11-07_08-52-05__fee58f17-e70e-43ea-8947-0bb9f469edb9__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 46678
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:46678/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:46678/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.218.233/tcp/46679/p2p/16Uiu2HAmKkpzBaaUSELTKtVNGoQF78GAJXn6XY9yBcRmin9DvbJX","/ip4/172.18.218.233/tcp/46680/ws/p2p/16Uiu2HAmKkpzBaaUSELTKtVNGoQF78GAJXn6XY9yBcRmin9DvbJX"],"enrUri":"enr:-L24QGZbj2JoxSbDj-kjSRm7nidpCyIuLgkAy7JDgd3FQU3RXPKw9o9qT_U1iU0rfP1VZSjSkuKg0u7v1afC9dqQslICgmlkgnY0gmlwhKwS2umKbXVsdGlhZGRyc5YACASsEtrpBrZXAAoErBLa6Qa2WN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDaYC0neagTi8UnaDm2NFaMYk8_rHRnxGQMjlN3wHDtoiDdGNwgrZXg3VkcIK2WYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-07_08-52-05__fee58f17-e70e-43ea-8947-0bb9f469edb9__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.211.49
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['18062', '18063', '18064', '18065', '18066']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 18062:18062 -p 18063:18063 -p 18064:18064 -p 18065:18065 -p 18066:18066 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=18064 --rest-port=18062 --tcp-port=18063 --discv5-udp-port=18065 --rest-address=0.0.0.0 --nat=extip:172.18.211.49 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=259b11debfe9bfaacc5ba299bf52bd176fb0da4a6f3cab3bcf988bffbeea2048 --max-connections=1000 --filter-subscription-timeout=600 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=18066 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QGZbj2JoxSbDj-kjSRm7nidpCyIuLgkAy7JDgd3FQU3RXPKw9o9qT_U1iU0rfP1VZSjSkuKg0u7v1afC9dqQslICgmlkgnY0gmlwhKwS2umKbXVsdGlhZGRyc5YACASsEtrpBrZXAAoErBLa6Qa2WN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDaYC0neagTi8UnaDm2NFaMYk8_rHRnxGQMjlN3wHDtoiDdGNwgrZXg3VkcIK2WYV3YWt1MgU --filternode=/ip4/172.18.218.233/tcp/46679/p2p/16Uiu2HAmKkpzBaaUSELTKtVNGoQF78GAJXn6XY9yBcRmin9DvbJX
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.211.49 waku 3a44dab1f8c2dffd8cd19750e8c96778a69157a4e00019832f9c3c08a4cfd5a3
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 3a44dab1f8c2. Setting up logs at ./log/docker/node2_2024-11-07_08-52-05__fee58f17-e70e-43ea-8947-0bb9f469edb9__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 18062
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:18062/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:18062/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.211.49/tcp/18063/p2p/16Uiu2HAmKrGvhn9xRZqPPpZv1XfQjKjLz8P7JPtZtrDcXMRg2vBZ","/ip4/172.18.211.49/tcp/18064/ws/p2p/16Uiu2HAmKrGvhn9xRZqPPpZv1XfQjKjLz8P7JPtZtrDcXMRg2vBZ"],"enrUri":"enr:-L24QPwDg8XB_ajqT5Ykyb1M6jhfnrd8no9JsOzvmo_ZCJP5Y9CPL41bDkuwhpLC2YdukSWaMV-Zm9gwrLqFBFDJ9cUCgmlkgnY0gmlwhKwS0zGKbXVsdGlhZGRyc5YACASsEtMxBkaPAAoErBLTMQZGkN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDauXwpsLT1hiVIsdLB_wgenZNwM8ZLFMVdLsfBlz4CHCDdGNwgkaPg3VkcIJGkYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:18062/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.218.233/tcp/46679/p2p/16Uiu2HAmKkpzBaaUSELTKtVNGoQF78GAJXn6XY9yBcRmin9DvbJX"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:46678/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:18062/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "b3c221af-c124-4037-934b-6a7db474ddbd", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"b3c221af-c124-4037-934b-6a7db474ddbd","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:18062/filter/v2/subscriptions/all" -H "Content-Type: application/json" -d '{"requestId": 1}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:18062/filter/v2/subscriptions/all. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 8b6bc3c2a29e
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 3a44dab1f8c2
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 8b6bc3c2a29e. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.