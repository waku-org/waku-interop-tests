[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2025-01-07_04-03-00__2a56dc4b-231c-41ca-b42c-affc594090a3
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-07_04-03-00__2a56dc4b-231c-41ca-b42c-affc594090a3__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.235.43
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['48679', '48680', '48681', '48682', '48683']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 48679:48679 -p 48680:48680 -p 48681:48681 -p 48682:48682 -p 48683:48683 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=48681 --rest-port=48679 --tcp-port=48680 --discv5-udp-port=48682 --rest-address=0.0.0.0 --nat=extip:172.18.235.43 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=1c6cb2fefafb39dca31bb2c6fc7dac8ba7a75d2e7b4ab4e6c5fbb0a2ef29eb84 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=48683 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.235.43 waku d9dd89f8442ecc3d0c146c310bbda263d9466b4249468cb50aa917776c58e7ac
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID d9dd89f8442e. Setting up logs at ./log/docker/node1_2025-01-07_04-03-00__2a56dc4b-231c-41ca-b42c-affc594090a3__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 48679
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container cdc8f8168b20. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:48679/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:48679/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.235.43/tcp/48680/p2p/16Uiu2HAkzB9mxTkf6rSyf4Jv7k1e7Sv5JWyThYar9rs3iY133bMB","/ip4/172.18.235.43/tcp/48681/ws/p2p/16Uiu2HAkzB9mxTkf6rSyf4Jv7k1e7Sv5JWyThYar9rs3iY133bMB"],"enrUri":"enr:-L24QGMVydWTaFpWJbnZy_ForX_fLPbUEVFGlR9YjbgMfBTiXwRV-T6qjMPxohdVHlHggGtGBJsV1Y4WoNjDxk1WdgYCgmlkgnY0gmlwhKwS6yuKbXVsdGlhZGRyc5YACASsEusrBr4oAAoErBLrKwa-Kd0DgnJzhQADAQAAiXNlY3AyNTZrMaECRpImxSe90Zs8N3ZGEFR4UpnfCgE-xoAcqnXcNxOfLAqDdGNwgr4og3VkcIK-KoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-07_04-03-00__2a56dc4b-231c-41ca-b42c-affc594090a3__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.60.247
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['44524', '44525', '44526', '44527', '44528']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 44524:44524 -p 44525:44525 -p 44526:44526 -p 44527:44527 -p 44528:44528 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=44526 --rest-port=44524 --tcp-port=44525 --discv5-udp-port=44527 --rest-address=0.0.0.0 --nat=extip:172.18.60.247 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=1c4baa4fb177ec0664e6baf3a7ad4ac9e2ecfabd4a5b5776adfaaa73ab9cc1ef --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=44528 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QGMVydWTaFpWJbnZy_ForX_fLPbUEVFGlR9YjbgMfBTiXwRV-T6qjMPxohdVHlHggGtGBJsV1Y4WoNjDxk1WdgYCgmlkgnY0gmlwhKwS6yuKbXVsdGlhZGRyc5YACASsEusrBr4oAAoErBLrKwa-Kd0DgnJzhQADAQAAiXNlY3AyNTZrMaECRpImxSe90Zs8N3ZGEFR4UpnfCgE-xoAcqnXcNxOfLAqDdGNwgr4og3VkcIK-KoV3YWt1MgU --filternode=/ip4/172.18.235.43/tcp/48680/p2p/16Uiu2HAkzB9mxTkf6rSyf4Jv7k1e7Sv5JWyThYar9rs3iY133bMB
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.60.247 waku 443adc1e0f59bb80a994df380c1d36364d3a9a8b9961cb7ef4c269daa85cfe19
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 443adc1e0f59. Setting up logs at ./log/docker/node2_2025-01-07_04-03-00__2a56dc4b-231c-41ca-b42c-affc594090a3__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 44524
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:44524/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:44524/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.60.247/tcp/44525/p2p/16Uiu2HAkzBYrBBAzwkS6nKDkx2GnFFyfEB3uL3CGuAVju5QECP25","/ip4/172.18.60.247/tcp/44526/ws/p2p/16Uiu2HAkzBYrBBAzwkS6nKDkx2GnFFyfEB3uL3CGuAVju5QECP25"],"enrUri":"enr:-L24QK7DTzZo7JewcHhOaYM0PJV5a93Q0v5ykP4czTF_LDw3J86jUAYGo5QdP6KXJlAzwtc4RhbVcz3rY-Ql1qJuorECgmlkgnY0gmlwhKwSPPeKbXVsdGlhZGRyc5YACASsEjz3Bq3tAAoErBI89wat7t0DgnJzhQADAQAAiXNlY3AyNTZrMaECRqw9aORjgo2W_-jili_5Fj8YOWB359zVF--sMOjALT6DdGNwgq3tg3VkcIKt74V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:44524/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.235.43/tcp/48680/p2p/16Uiu2HAkzB9mxTkf6rSyf4Jv7k1e7Sv5JWyThYar9rs3iY133bMB"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:48679/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:44524/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "b3d22c8a-aff1-47ad-9a0e-db5877cfd6c9", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"b3d22c8a-aff1-47ad-9a0e-db5877cfd6c9","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:44524/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:44524/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id d9dd89f8442e
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 443adc1e0f59
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container d9dd89f8442e. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.