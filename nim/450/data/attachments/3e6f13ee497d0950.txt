[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_extra_field with id: 2024-11-15_04-14-11__20c274b6-ad5e-4969-a331-798bb2d82fbb
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-15_04-14-11__20c274b6-ad5e-4969-a331-798bb2d82fbb__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.141.159
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['28681', '28682', '28683', '28684', '28685']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 28681:28681 -p 28682:28682 -p 28683:28683 -p 28684:28684 -p 28685:28685 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=28683 --rest-port=28681 --tcp-port=28682 --discv5-udp-port=28684 --rest-address=0.0.0.0 --nat=extip:172.18.141.159 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=8c6ebc193bef90e3cc14d09f7e6f06eef4e20b8cf1a5afb18f6e6d4f4ec97ae1 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=28685 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.141.159 waku df3e8a361089264b340b508bf7c160875789c16ab09991468f68125ab80d4712
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID df3e8a361089. Setting up logs at ./log/docker/node1_2024-11-15_04-14-11__20c274b6-ad5e-4969-a331-798bb2d82fbb__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 28681
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 4ef166539f4c. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:28681/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:28681/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.141.159/tcp/28682/p2p/16Uiu2HAm9AZLgqBbAiyizrbm9HZzDqpf2u1vFYxgHgvrkYysjx7B","/ip4/172.18.141.159/tcp/28683/ws/p2p/16Uiu2HAm9AZLgqBbAiyizrbm9HZzDqpf2u1vFYxgHgvrkYysjx7B"],"enrUri":"enr:-L24QM7CIoK35JTlgBRrpYwyD9MxxPJGam-7dauZ2glPyiQkWeu9OMKBiBwpTIyt_UeeOxeFrpDnMplqItSUV6S7-EsCgmlkgnY0gmlwhKwSjZ-KbXVsdGlhZGRyc5YACASsEo2fBnAKAAoErBKNnwZwC90DgnJzhQADAQAAiXNlY3AyNTZrMaECzCRlsSkanLIKGKKakqh4-IZJKODF5zLFeGsyeSN9yxKDdGNwgnAKg3VkcIJwDIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-15_04-14-11__20c274b6-ad5e-4969-a331-798bb2d82fbb__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.163.165
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['35711', '35712', '35713', '35714', '35715']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 35711:35711 -p 35712:35712 -p 35713:35713 -p 35714:35714 -p 35715:35715 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=35713 --rest-port=35711 --tcp-port=35712 --discv5-udp-port=35714 --rest-address=0.0.0.0 --nat=extip:172.18.163.165 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=72ff83b4cc8fbddac80fabc4ab2aebde8759d2307ca6634101120feac34eebeb --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=35715 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QM7CIoK35JTlgBRrpYwyD9MxxPJGam-7dauZ2glPyiQkWeu9OMKBiBwpTIyt_UeeOxeFrpDnMplqItSUV6S7-EsCgmlkgnY0gmlwhKwSjZ-KbXVsdGlhZGRyc5YACASsEo2fBnAKAAoErBKNnwZwC90DgnJzhQADAQAAiXNlY3AyNTZrMaECzCRlsSkanLIKGKKakqh4-IZJKODF5zLFeGsyeSN9yxKDdGNwgnAKg3VkcIJwDIV3YWt1MgU --filternode=/ip4/172.18.141.159/tcp/28682/p2p/16Uiu2HAm9AZLgqBbAiyizrbm9HZzDqpf2u1vFYxgHgvrkYysjx7B
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.163.165 waku 2010c9cbaa4b3a1c63a5234f5f76635fe5793b54ed896431bbd57352f5874374
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 2010c9cbaa4b. Setting up logs at ./log/docker/node2_2024-11-15_04-14-11__20c274b6-ad5e-4969-a331-798bb2d82fbb__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 35711
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:35711/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:35711/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.163.165/tcp/35712/p2p/16Uiu2HAmCeawwZVXYAEWFsjfDLvpjdSBg2jo7vykyeNEPvoppV7Y","/ip4/172.18.163.165/tcp/35713/ws/p2p/16Uiu2HAmCeawwZVXYAEWFsjfDLvpjdSBg2jo7vykyeNEPvoppV7Y"],"enrUri":"enr:-L24QMnMtvJWkVsIGC9i19uRgWUi_AihUT4Sl1ZmnX0QtkCAECrOCF-mL6ybXAp0U7i6U3ZeS1eSdcDoB3oG6MZ42bMCgmlkgnY0gmlwhKwSo6WKbXVsdGlhZGRyc5YACASsEqOlBouAAAoErBKjpQaLgd0DgnJzhQADAQAAiXNlY3AyNTZrMaEC_-WJ5IZWqJWzrTasWv02WIOFwkQCIhWaQfoDpiPn7LODdGNwgouAg3VkcIKLgoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:35711/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.141.159/tcp/28682/p2p/16Uiu2HAm9AZLgqBbAiyizrbm9HZzDqpf2u1vFYxgHgvrkYysjx7B"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:28681/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:35711/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "c8ed764e-b828-4db2-b1dc-b197519dc442", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"c8ed764e-b828-4db2-b1dc-b197519dc442","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:35711/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:35711/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id df3e8a361089
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 2010c9cbaa4b
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container df3e8a361089. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.