[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_invalid_pubsub_topic_format with id: 2024-11-15_04-13-57__e37c3aeb-5bdd-426c-b8ef-539f73aaab35
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-15_04-13-57__e37c3aeb-5bdd-426c-b8ef-539f73aaab35__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.3.235
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['13891', '13892', '13893', '13894', '13895']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 13891:13891 -p 13892:13892 -p 13893:13893 -p 13894:13894 -p 13895:13895 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=13893 --rest-port=13891 --tcp-port=13892 --discv5-udp-port=13894 --rest-address=0.0.0.0 --nat=extip:172.18.3.235 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=a301713dabdc5ce7edbc6613ac65a25abeeb2ae8fa0f18abc82d2b3905aa89db --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=13895 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.3.235 waku c5f1057600f5d096f9984b2fff6c669c3813938d949305d27b36e0a727050131
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID c5f1057600f5. Setting up logs at ./log/docker/node1_2024-11-15_04-13-57__e37c3aeb-5bdd-426c-b8ef-539f73aaab35__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 13891
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container f817061a04d0. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:13891/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:13891/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.3.235/tcp/13892/p2p/16Uiu2HAkzkSZQMP6E1D35dtm49xx8USRNWxfrPFRFQ7eqSma19vz","/ip4/172.18.3.235/tcp/13893/ws/p2p/16Uiu2HAkzkSZQMP6E1D35dtm49xx8USRNWxfrPFRFQ7eqSma19vz"],"enrUri":"enr:-L24QKDaQHprupcfFV_ypPjvKzdLOieJJEXixrnmNbfWa6WVP94S_hrpN_tRxZxBkkn4Tsmpp-MYmBRTkzIf9jWfJBsCgmlkgnY0gmlwhKwSA-uKbXVsdGlhZGRyc5YACASsEgPrBjZEAAoErBID6wY2Rd0DgnJzhQADAQAAiXNlY3AyNTZrMaECTxlLnbWWUPKauZZE2BeWXZPNFrJvEpcoqaPTn1WR_SuDdGNwgjZEg3VkcII2RoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-15_04-13-57__e37c3aeb-5bdd-426c-b8ef-539f73aaab35__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.5.153
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['45443', '45444', '45445', '45446', '45447']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 45443:45443 -p 45444:45444 -p 45445:45445 -p 45446:45446 -p 45447:45447 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=45445 --rest-port=45443 --tcp-port=45444 --discv5-udp-port=45446 --rest-address=0.0.0.0 --nat=extip:172.18.5.153 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=cfffa0eeccd702a8f9af3cf5e3344af7c798bab5df8e89522c0de21e505eab8c --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=45447 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QKDaQHprupcfFV_ypPjvKzdLOieJJEXixrnmNbfWa6WVP94S_hrpN_tRxZxBkkn4Tsmpp-MYmBRTkzIf9jWfJBsCgmlkgnY0gmlwhKwSA-uKbXVsdGlhZGRyc5YACASsEgPrBjZEAAoErBID6wY2Rd0DgnJzhQADAQAAiXNlY3AyNTZrMaECTxlLnbWWUPKauZZE2BeWXZPNFrJvEpcoqaPTn1WR_SuDdGNwgjZEg3VkcII2RoV3YWt1MgU --filternode=/ip4/172.18.3.235/tcp/13892/p2p/16Uiu2HAkzkSZQMP6E1D35dtm49xx8USRNWxfrPFRFQ7eqSma19vz
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.5.153 waku 21977946ff0ec1e391aac1808835d1ef826adfc730e6d0fd4d35ca6776b34eb9
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 21977946ff0e. Setting up logs at ./log/docker/node2_2024-11-15_04-13-57__e37c3aeb-5bdd-426c-b8ef-539f73aaab35__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 45443
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:45443/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:45443/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.5.153/tcp/45444/p2p/16Uiu2HAmHShBcBi5GYYtK5zFTfynFRkqD4Q2jCe6ywqWfYUZeZsQ","/ip4/172.18.5.153/tcp/45445/ws/p2p/16Uiu2HAmHShBcBi5GYYtK5zFTfynFRkqD4Q2jCe6ywqWfYUZeZsQ"],"enrUri":"enr:-L24QFwvuKASxTX5tmAHNC3ZM6UsTqVkm158Lnrth8LYBHfWZvqoA-NLsmr3lgK8wuGCxkQNnDwJ4aGVwGwVYGMEpjYCgmlkgnY0gmlwhKwSBZmKbXVsdGlhZGRyc5YACASsEgWZBrGEAAoErBIFmQaxhd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDRyQN4EtcX_pVlH92_QJlIAeGPDT92vI0MeYpohj4t1ODdGNwgrGEg3VkcIKxhoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:45443/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.3.235/tcp/13892/p2p/16Uiu2HAkzkSZQMP6E1D35dtm49xx8USRNWxfrPFRFQ7eqSma19vz"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:13891/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:45443/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "3896e77a-4b02-4820-a2fd-04cabd65fbd5", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"3896e77a-4b02-4820-a2fd-04cabd65fbd5","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:45443/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": ["/waku/2/rs/3/1"]}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:45443/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id c5f1057600f5
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 21977946ff0e
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container c5f1057600f5. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.