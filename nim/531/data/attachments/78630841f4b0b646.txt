[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2024-12-18_04-11-40__ed337da3-0eed-4424-ac86-7c4c3644b6e3
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-18_04-11-40__ed337da3-0eed-4424-ac86-7c4c3644b6e3__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.114.250
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['2729', '2730', '2731', '2732', '2733']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 2729:2729 -p 2730:2730 -p 2731:2731 -p 2732:2732 -p 2733:2733 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=2731 --rest-port=2729 --tcp-port=2730 --discv5-udp-port=2732 --rest-address=0.0.0.0 --nat=extip:172.18.114.250 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=57bdb4eb5404aab642ddc93e0f3875cd8b4b7a909b5c8a2c0feddadfda09d2c1 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=2733 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.114.250 waku 4caae0b9ff7112e5678b19329fe5bd2d7f6b76e3bbb10a78255c42213fc34d66
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 4caae0b9ff71. Setting up logs at ./log/docker/node1_2024-12-18_04-11-40__ed337da3-0eed-4424-ac86-7c4c3644b6e3__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 2729
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container c5c75f3b98ed. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:2729/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:2729/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.114.250/tcp/2730/p2p/16Uiu2HAmV5BtmmCCY63LmiQcnRXVaXw6131AtE9hRzfEYGCdfFhd","/ip4/172.18.114.250/tcp/2731/ws/p2p/16Uiu2HAmV5BtmmCCY63LmiQcnRXVaXw6131AtE9hRzfEYGCdfFhd"],"enrUri":"enr:-L24QLprXKCRwzO_fGYyZ7jZH2N7OUpTiQ_i2jtZukWCrYSjLsZXA5fqUV3ez6lzM_Y40K5xo40Xm1pJFn1AjBbggIoCgmlkgnY0gmlwhKwScvqKbXVsdGlhZGRyc5YACASsEnL6BgqqAAoErBJy-gYKq90DgnJzhQADAQAAiXNlY3AyNTZrMaED8-37UrYDKwiPd_scsdHfAuzVClCtc2sucPR9PAd3N3yDdGNwggqqg3VkcIIKrIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-18_04-11-40__ed337da3-0eed-4424-ac86-7c4c3644b6e3__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.80.109
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['28046', '28047', '28048', '28049', '28050']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 28046:28046 -p 28047:28047 -p 28048:28048 -p 28049:28049 -p 28050:28050 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=28048 --rest-port=28046 --tcp-port=28047 --discv5-udp-port=28049 --rest-address=0.0.0.0 --nat=extip:172.18.80.109 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=0e63a5925bdae1ea7bb3bb0fbcf5daac37e95c32fa17ecbfd1a2b25b89e21acd --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=28050 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QLprXKCRwzO_fGYyZ7jZH2N7OUpTiQ_i2jtZukWCrYSjLsZXA5fqUV3ez6lzM_Y40K5xo40Xm1pJFn1AjBbggIoCgmlkgnY0gmlwhKwScvqKbXVsdGlhZGRyc5YACASsEnL6BgqqAAoErBJy-gYKq90DgnJzhQADAQAAiXNlY3AyNTZrMaED8-37UrYDKwiPd_scsdHfAuzVClCtc2sucPR9PAd3N3yDdGNwggqqg3VkcIIKrIV3YWt1MgU --filternode=/ip4/172.18.114.250/tcp/2730/p2p/16Uiu2HAmV5BtmmCCY63LmiQcnRXVaXw6131AtE9hRzfEYGCdfFhd
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.80.109 waku d47df54789f2046504a22a07970e50cba81243d3826cbec609c828ad1c9fba85
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID d47df54789f2. Setting up logs at ./log/docker/node2_2024-12-18_04-11-40__ed337da3-0eed-4424-ac86-7c4c3644b6e3__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 28046
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:28046/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:28046/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.80.109/tcp/28047/p2p/16Uiu2HAkz13adVSGtPcMbcH4xgKxq7FzbgQ14M2ZNbpcDTo1Rdbq","/ip4/172.18.80.109/tcp/28048/ws/p2p/16Uiu2HAkz13adVSGtPcMbcH4xgKxq7FzbgQ14M2ZNbpcDTo1Rdbq"],"enrUri":"enr:-L24QPr3rgFw9u_vclu_gRTu1a9WD5IX3mNtDEfnpz60F3dyPtY8viriaapwPeZCDzdjLYwDhwzrUZ3S1liO5fDZJckCgmlkgnY0gmlwhKwSUG2KbXVsdGlhZGRyc5YACASsElBtBm2PAAoErBJQbQZtkN0DgnJzhQADAQAAiXNlY3AyNTZrMaECQ_tWm7FPYYoVciNd5c3nVfJNLu-e0iTTdLASpcLzcPSDdGNwgm2Pg3VkcIJtkYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:28046/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.114.250/tcp/2730/p2p/16Uiu2HAmV5BtmmCCY63LmiQcnRXVaXw6131AtE9hRzfEYGCdfFhd"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:2729/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:28046/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "2f404a15-0599-495d-940f-17e4c2d1a6da", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"2f404a15-0599-495d-940f-17e4c2d1a6da","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:28046/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:28046/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 4caae0b9ff71
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id d47df54789f2
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 4caae0b9ff71. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.