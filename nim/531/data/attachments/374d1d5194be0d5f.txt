[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_extra_field with id: 2024-12-18_04-12-09__955a6f63-e181-4fdd-acbd-a4ee5a1b352f
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-18_04-12-09__955a6f63-e181-4fdd-acbd-a4ee5a1b352f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.242.70
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['16039', '16040', '16041', '16042', '16043']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 16039:16039 -p 16040:16040 -p 16041:16041 -p 16042:16042 -p 16043:16043 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=16041 --rest-port=16039 --tcp-port=16040 --discv5-udp-port=16042 --rest-address=0.0.0.0 --nat=extip:172.18.242.70 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=4fac0648fd5d32baaa66c8da5b7df1c6f416ccf28fcc1df6a2bdee3b7ba22ffb --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=16043 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.242.70 waku 04414cf38ac21207ac517127cc55c311cdb766597013926f36378caa7d0b3bf9
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 04414cf38ac2. Setting up logs at ./log/docker/node1_2024-12-18_04-12-09__955a6f63-e181-4fdd-acbd-a4ee5a1b352f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 16039
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 42ae6e735715. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:16039/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:16039/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.242.70/tcp/16040/p2p/16Uiu2HAm9o8VbfrHWHZdzywCpDxnBcj9cF6fUwCAUzHSyTvFb4p8","/ip4/172.18.242.70/tcp/16041/ws/p2p/16Uiu2HAm9o8VbfrHWHZdzywCpDxnBcj9cF6fUwCAUzHSyTvFb4p8"],"enrUri":"enr:-L24QM49bkv8hGfz4UuHWRD8Xa1OHqDakMaN1IKpevYlFWnbdqobDH7GjaZ-d0WdREF3SWoerM09UWgak_oVtCFOyuoCgmlkgnY0gmlwhKwS8kaKbXVsdGlhZGRyc5YACASsEvJGBj6oAAoErBLyRgY-qd0DgnJzhQADAQAAiXNlY3AyNTZrMaEC1YLLFazugY1d705jqzUS3ADQsSlGIgyz0IhpL_o6r-mDdGNwgj6og3VkcII-qoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-18_04-12-09__955a6f63-e181-4fdd-acbd-a4ee5a1b352f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.169.212
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['57241', '57242', '57243', '57244', '57245']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 57241:57241 -p 57242:57242 -p 57243:57243 -p 57244:57244 -p 57245:57245 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=57243 --rest-port=57241 --tcp-port=57242 --discv5-udp-port=57244 --rest-address=0.0.0.0 --nat=extip:172.18.169.212 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=64c2d7aaf069db8cf55deab2a9ab7adf38ee5a66f8541b6ec16cacfa4fcde3ea --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=57245 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QM49bkv8hGfz4UuHWRD8Xa1OHqDakMaN1IKpevYlFWnbdqobDH7GjaZ-d0WdREF3SWoerM09UWgak_oVtCFOyuoCgmlkgnY0gmlwhKwS8kaKbXVsdGlhZGRyc5YACASsEvJGBj6oAAoErBLyRgY-qd0DgnJzhQADAQAAiXNlY3AyNTZrMaEC1YLLFazugY1d705jqzUS3ADQsSlGIgyz0IhpL_o6r-mDdGNwgj6og3VkcII-qoV3YWt1MgU --filternode=/ip4/172.18.242.70/tcp/16040/p2p/16Uiu2HAm9o8VbfrHWHZdzywCpDxnBcj9cF6fUwCAUzHSyTvFb4p8
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.169.212 waku 6f6ef5333e9dc08de31864ae0fed89ac5ae9b884036cc640ea9aa7375d235e36
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 6f6ef5333e9d. Setting up logs at ./log/docker/node2_2024-12-18_04-12-09__955a6f63-e181-4fdd-acbd-a4ee5a1b352f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 57241
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:57241/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:57241/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.169.212/tcp/57242/p2p/16Uiu2HAmEvvhYLqjEnByW1Fbrwok8mdrMPTPzEHrM7etVf1PMhRn","/ip4/172.18.169.212/tcp/57243/ws/p2p/16Uiu2HAmEvvhYLqjEnByW1Fbrwok8mdrMPTPzEHrM7etVf1PMhRn"],"enrUri":"enr:-L24QEt6j3w6bRQp_YVMB_fI18pFQF5YukTLIUw9fo_Sj5r0XITGe42Oxl5G9Hn9fxMSaZONuVnjvYjtDGKIkXpqWyECgmlkgnY0gmlwhKwSqdSKbXVsdGlhZGRyc5YACASsEqnUBt-aAAoErBKp1Abfm90DgnJzhQADAQAAiXNlY3AyNTZrMaEDIcyJ7YkX7OgvAASAETtsvzla_y7AhRHbZXYIFuJvTj2DdGNwgt-ag3VkcILfnIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:57241/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.242.70/tcp/16040/p2p/16Uiu2HAm9o8VbfrHWHZdzywCpDxnBcj9cF6fUwCAUzHSyTvFb4p8"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:16039/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:57241/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "4b2b1e57-e9d7-4385-a23d-2be39469f8be", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"4b2b1e57-e9d7-4385-a23d-2be39469f8be","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:57241/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:57241/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 04414cf38ac2
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 6f6ef5333e9d
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 04414cf38ac2. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.