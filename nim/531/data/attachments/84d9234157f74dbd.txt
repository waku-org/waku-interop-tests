[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_invalid_request_id with id: 2024-12-18_04-11-40__9e085db2-b19a-42a1-b0db-c9d5e105ee68
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-18_04-11-40__9e085db2-b19a-42a1-b0db-c9d5e105ee68__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.172.42
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['64518', '64519', '64520', '64521', '64522']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 64518:64518 -p 64519:64519 -p 64520:64520 -p 64521:64521 -p 64522:64522 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=64520 --rest-port=64518 --tcp-port=64519 --discv5-udp-port=64521 --rest-address=0.0.0.0 --nat=extip:172.18.172.42 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=eabaa0c0ad2ff9f3cca5a5bb3b60b0ed80adf914cba9e2bb723617b1ec0951f4 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=64522 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.172.42 waku 3f56ff5ac2f8d866be734d5964624cd418d4e2da97dc7b529717b1598a65fab6
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 3f56ff5ac2f8. Setting up logs at ./log/docker/node1_2024-12-18_04-11-40__9e085db2-b19a-42a1-b0db-c9d5e105ee68__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 64518
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 866ed5000613. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:64518/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:64518/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.172.42/tcp/64519/p2p/16Uiu2HAm2YJbqEL3dtQTVMrZ8tGLZANFjhY86r4ZMrCaiu8AkyfJ","/ip4/172.18.172.42/tcp/64520/ws/p2p/16Uiu2HAm2YJbqEL3dtQTVMrZ8tGLZANFjhY86r4ZMrCaiu8AkyfJ"],"enrUri":"enr:-L24QHaSOR7wqlnppWUQ19NWDUZutV-85bCH9AD3tRIyCpaPe6pf75gL0thkcSs4rNGyn6gcoWjtH9YOBZ1uqOOZwH0CgmlkgnY0gmlwhKwSrCqKbXVsdGlhZGRyc5YACASsEqwqBvwHAAoErBKsKgb8CN0DgnJzhQADAQAAiXNlY3AyNTZrMaECabSzhJlRKm1Mmn_xI4OEqokszz_JdxfIAHE5OJBysLWDdGNwgvwHg3VkcIL8CYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-18_04-11-40__9e085db2-b19a-42a1-b0db-c9d5e105ee68__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.232.161
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['15245', '15246', '15247', '15248', '15249']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 15245:15245 -p 15246:15246 -p 15247:15247 -p 15248:15248 -p 15249:15249 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=15247 --rest-port=15245 --tcp-port=15246 --discv5-udp-port=15248 --rest-address=0.0.0.0 --nat=extip:172.18.232.161 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=899f9dbeeba33d70f3dcfebaca46e659fa9ccd9530cb54be9cf91388e45aaeae --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=15249 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QHaSOR7wqlnppWUQ19NWDUZutV-85bCH9AD3tRIyCpaPe6pf75gL0thkcSs4rNGyn6gcoWjtH9YOBZ1uqOOZwH0CgmlkgnY0gmlwhKwSrCqKbXVsdGlhZGRyc5YACASsEqwqBvwHAAoErBKsKgb8CN0DgnJzhQADAQAAiXNlY3AyNTZrMaECabSzhJlRKm1Mmn_xI4OEqokszz_JdxfIAHE5OJBysLWDdGNwgvwHg3VkcIL8CYV3YWt1MgU --filternode=/ip4/172.18.172.42/tcp/64519/p2p/16Uiu2HAm2YJbqEL3dtQTVMrZ8tGLZANFjhY86r4ZMrCaiu8AkyfJ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.232.161 waku a1ae2ea7a9d84c071ece8d725146a9cd2c3d997ccee65d7cf299b828dae9d2fd
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID a1ae2ea7a9d8. Setting up logs at ./log/docker/node2_2024-12-18_04-11-40__9e085db2-b19a-42a1-b0db-c9d5e105ee68__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 15245
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:15245/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:15245/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.232.161/tcp/15246/p2p/16Uiu2HAkyzxtdsLSUX8FzuaRQZaYe9HnsJPxBgmcDy9vKRg4KQst","/ip4/172.18.232.161/tcp/15247/ws/p2p/16Uiu2HAkyzxtdsLSUX8FzuaRQZaYe9HnsJPxBgmcDy9vKRg4KQst"],"enrUri":"enr:-L24QCDdJ4w9aoURREPAmRLE-obSnA_DNX6t3rACD_k3pbs5PkvG38VTcipoFXz59L4OiBcuu95vjge0Xr2iX1GOoT4CgmlkgnY0gmlwhKwS6KGKbXVsdGlhZGRyc5YACASsEuihBjuOAAoErBLooQY7j90DgnJzhQADAQAAiXNlY3AyNTZrMaECQ_YJLCkJex6t6YvCK32X6WjFzi3FHHKZGSx6EyH86yODdGNwgjuOg3VkcII7kIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:15245/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.172.42/tcp/64519/p2p/16Uiu2HAm2YJbqEL3dtQTVMrZ8tGLZANFjhY86r4ZMrCaiu8AkyfJ"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:64518/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:15245/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "ede81688-2b96-4fd3-9b41-0c7f3a5a812e", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"ede81688-2b96-4fd3-9b41-0c7f3a5a812e","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:15245/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:15245/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 3f56ff5ac2f8
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id a1ae2ea7a9d8
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 3f56ff5ac2f8. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.