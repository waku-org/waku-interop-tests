[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_content_topic_string_instead_of_list with id: 2024-11-01_04-07-40__f54d5430-358d-4a89-99ee-dc4cca63c50d
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-01_04-07-40__f54d5430-358d-4a89-99ee-dc4cca63c50d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.4.146
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['10024', '10025', '10026', '10027', '10028']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 10024:10024 -p 10025:10025 -p 10026:10026 -p 10027:10027 -p 10028:10028 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=10026 --rest-port=10024 --tcp-port=10025 --discv5-udp-port=10027 --rest-address=0.0.0.0 --nat=extip:172.18.4.146 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=659a1e576924b3fad27cf49ef017cbe8ef004eca21a98c34bf6df8df6f4f26ea --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=10028 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.4.146 waku aa7bc9e72f8869e80a37e20cdbb5161f42d0b86ed94c173821f717dfa96c5300
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID aa7bc9e72f88. Setting up logs at ./log/docker/node1_2024-11-01_04-07-40__f54d5430-358d-4a89-99ee-dc4cca63c50d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 10024
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 57779bbeff4a. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10024/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10024/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.4.146/tcp/10025/p2p/16Uiu2HAm2A8GHmycxRP2Ycb8yoMjd4LXq6aX11TAZwv3auXHpZPT","/ip4/172.18.4.146/tcp/10026/ws/p2p/16Uiu2HAm2A8GHmycxRP2Ycb8yoMjd4LXq6aX11TAZwv3auXHpZPT"],"enrUri":"enr:-L24QOe6dqOH_YFb51C6_RUiNRrX2Lp5nYvyU7vP41YlEFYvXhEo0HA9r4Bg-Cya4yRBB7wV6rKNCi5TpbS6z4bJ6cACgmlkgnY0gmlwhKwSBJKKbXVsdGlhZGRyc5YACASsEgSSBicpAAoErBIEkgYnKt0DgnJzhQADAQAAiXNlY3AyNTZrMaECZAY8RTWLqy-X6F-LF7Az_5VyIvKcjy1XMoQ2Hu94XC6DdGNwgicpg3VkcIInK4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-01_04-07-40__f54d5430-358d-4a89-99ee-dc4cca63c50d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.9.190
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['36798', '36799', '36800', '36801', '36802']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 36798:36798 -p 36799:36799 -p 36800:36800 -p 36801:36801 -p 36802:36802 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=36800 --rest-port=36798 --tcp-port=36799 --discv5-udp-port=36801 --rest-address=0.0.0.0 --nat=extip:172.18.9.190 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=cafddbd98adc8d4fd0e0d6eb282b24474df1eba5df03ecfadfd7ad8ff3516fda --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=36802 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QOe6dqOH_YFb51C6_RUiNRrX2Lp5nYvyU7vP41YlEFYvXhEo0HA9r4Bg-Cya4yRBB7wV6rKNCi5TpbS6z4bJ6cACgmlkgnY0gmlwhKwSBJKKbXVsdGlhZGRyc5YACASsEgSSBicpAAoErBIEkgYnKt0DgnJzhQADAQAAiXNlY3AyNTZrMaECZAY8RTWLqy-X6F-LF7Az_5VyIvKcjy1XMoQ2Hu94XC6DdGNwgicpg3VkcIInK4V3YWt1MgU --filternode=/ip4/172.18.4.146/tcp/10025/p2p/16Uiu2HAm2A8GHmycxRP2Ycb8yoMjd4LXq6aX11TAZwv3auXHpZPT
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.9.190 waku c64a911a932e6cdbd5f637875e2dc7656dc9fb439068213e1115179bd1ea0422
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID c64a911a932e. Setting up logs at ./log/docker/node2_2024-11-01_04-07-40__f54d5430-358d-4a89-99ee-dc4cca63c50d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 36798
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:36798/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:36798/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.9.190/tcp/36799/p2p/16Uiu2HAmUe2ECdX9dVbGSFhBYm9nBuMx4RN4FUa6g7KiBHczuUsj","/ip4/172.18.9.190/tcp/36800/ws/p2p/16Uiu2HAmUe2ECdX9dVbGSFhBYm9nBuMx4RN4FUa6g7KiBHczuUsj"],"enrUri":"enr:-L24QMm5iSOJ3MnXS4qhP8KZYduiKJD58Kviqz1fBn1KlSqMHlsV2_qSaV4z5oQ8Q4RGmbvfgML8LotOvFOsurlQIPQCgmlkgnY0gmlwhKwSCb6KbXVsdGlhZGRyc5YACASsEgm-Bo-_AAoErBIJvgaPwN0DgnJzhQADAQAAiXNlY3AyNTZrMaED7XuIgbcxb1bdkvMm3D1TioGzjLOoT1Ygb5d_MP7nJdqDdGNwgo-_g3VkcIKPwYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:36798/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.4.146/tcp/10025/p2p/16Uiu2HAm2A8GHmycxRP2Ycb8yoMjd4LXq6aX11TAZwv3auXHpZPT"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:10024/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:36798/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "bc4ea153-5cc1-4038-8328-79c65ff2bd69", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"bc4ea153-5cc1-4038-8328-79c65ff2bd69","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:36798/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": "/test/1/waku-filter/proto", "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:36798/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id aa7bc9e72f88
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id c64a911a932e
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container aa7bc9e72f88. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.