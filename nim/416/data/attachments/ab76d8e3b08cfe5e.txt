[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_no_request_id with id: 2024-11-01_04-07-09__728ba9a2-f12c-4cca-a541-c2637e68725b
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-01_04-07-09__728ba9a2-f12c-4cca-a541-c2637e68725b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.140.170
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['14419', '14420', '14421', '14422', '14423']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 14419:14419 -p 14420:14420 -p 14421:14421 -p 14422:14422 -p 14423:14423 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=14421 --rest-port=14419 --tcp-port=14420 --discv5-udp-port=14422 --rest-address=0.0.0.0 --nat=extip:172.18.140.170 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=69be4524eddadeef3ee3ef7f4379e99d8e8c249e0f4af3c35a10bcfd6d2966fa --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=14423 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.140.170 waku 813d5acce57eb34544e8be7ec96be06424852706b61c0780fab6088df23a8852
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 813d5acce57e. Setting up logs at ./log/docker/node1_2024-11-01_04-07-09__728ba9a2-f12c-4cca-a541-c2637e68725b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 14419
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 352547bdcfa8. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:14419/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:14419/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.140.170/tcp/14420/p2p/16Uiu2HAmVrPS16TgDkjDw1fJbBc4Q5gWSQU7Lebfc7Hpn7JgjP4R","/ip4/172.18.140.170/tcp/14421/ws/p2p/16Uiu2HAmVrPS16TgDkjDw1fJbBc4Q5gWSQU7Lebfc7Hpn7JgjP4R"],"enrUri":"enr:-L24QFfWh6BYxGEaePD7YHmTCeK9twWAahVW3QDwqsJwCCSrCj_Nauoqa7V6mtwjA7x493JuJ9AHMkKUIwbeWqA9OgACgmlkgnY0gmlwhKwSjKqKbXVsdGlhZGRyc5YACASsEoyqBjhUAAoErBKMqgY4Vd0DgnJzhQADAQAAiXNlY3AyNTZrMaED_4IqKeLNvn8A_PQ6VHtfDImGJ9L2K6NQIbQhP_4j1n6DdGNwgjhUg3VkcII4VoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-01_04-07-09__728ba9a2-f12c-4cca-a541-c2637e68725b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.52.160
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['48348', '48349', '48350', '48351', '48352']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 48348:48348 -p 48349:48349 -p 48350:48350 -p 48351:48351 -p 48352:48352 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=48350 --rest-port=48348 --tcp-port=48349 --discv5-udp-port=48351 --rest-address=0.0.0.0 --nat=extip:172.18.52.160 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=a96dbaf8ac0cb4f1c8effcbd9b2e74bacdf6e7be0fb2aa12ffc3db7ba48aeb4b --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=48352 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QFfWh6BYxGEaePD7YHmTCeK9twWAahVW3QDwqsJwCCSrCj_Nauoqa7V6mtwjA7x493JuJ9AHMkKUIwbeWqA9OgACgmlkgnY0gmlwhKwSjKqKbXVsdGlhZGRyc5YACASsEoyqBjhUAAoErBKMqgY4Vd0DgnJzhQADAQAAiXNlY3AyNTZrMaED_4IqKeLNvn8A_PQ6VHtfDImGJ9L2K6NQIbQhP_4j1n6DdGNwgjhUg3VkcII4VoV3YWt1MgU --filternode=/ip4/172.18.140.170/tcp/14420/p2p/16Uiu2HAmVrPS16TgDkjDw1fJbBc4Q5gWSQU7Lebfc7Hpn7JgjP4R
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.52.160 waku dc8da66fc6c089e582534c29f45a5b7b2564440e403402262f4204e6933cdc69
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID dc8da66fc6c0. Setting up logs at ./log/docker/node2_2024-11-01_04-07-09__728ba9a2-f12c-4cca-a541-c2637e68725b__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 48348
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:48348/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:48348/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.52.160/tcp/48349/p2p/16Uiu2HAkujwDZ1cwgF4s6wLzGr6WivGLQxffRdG1xDb3KQFDQ4fw","/ip4/172.18.52.160/tcp/48350/ws/p2p/16Uiu2HAkujwDZ1cwgF4s6wLzGr6WivGLQxffRdG1xDb3KQFDQ4fw"],"enrUri":"enr:-L24QCDnIa45d1QvwM8bFd45jjyATaYxMCigS1hOucQ93fqJao9LRuPoAJQDWpRxBhudUNV1UM3nIMaS9O4qJxNhWPkCgmlkgnY0gmlwhKwSNKCKbXVsdGlhZGRyc5YACASsEjSgBrzdAAoErBI0oAa83t0DgnJzhQADAQAAiXNlY3AyNTZrMaECBK2u8CJkmALfVjwZ3y_IgMekf6ft-e7eujjtDDIhQBaDdGNwgrzdg3VkcIK834V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:48348/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.140.170/tcp/14420/p2p/16Uiu2HAmVrPS16TgDkjDw1fJbBc4Q5gWSQU7Lebfc7Hpn7JgjP4R"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:14419/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:48348/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "9104bb8d-d954-47a0-a15f-264d8302766a", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"9104bb8d-d954-47a0-a15f-264d8302766a","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:48348/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:48348/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 813d5acce57e
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id dc8da66fc6c0
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 813d5acce57e. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.