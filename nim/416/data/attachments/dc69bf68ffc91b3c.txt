[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_no_request_id with id: 2024-11-01_04-07-50__10e1b754-d5bd-4053-b4f4-cbb1870e537f
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-01_04-07-50__10e1b754-d5bd-4053-b4f4-cbb1870e537f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.55.212
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['17849', '17850', '17851', '17852', '17853']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 17849:17849 -p 17850:17850 -p 17851:17851 -p 17852:17852 -p 17853:17853 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=17851 --rest-port=17849 --tcp-port=17850 --discv5-udp-port=17852 --rest-address=0.0.0.0 --nat=extip:172.18.55.212 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ebd0fe1cffdefd40583aacc47d1593bcb77f8f4c3d4423cbdf5ad01d0e7222c2 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=17853 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.55.212 waku d50f0267b49743e9bc107b96f2ec5cd51f51277dd3fcee77bb0c6e392e870604
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID d50f0267b497. Setting up logs at ./log/docker/node1_2024-11-01_04-07-50__10e1b754-d5bd-4053-b4f4-cbb1870e537f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 17849
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 2427fe3148ac. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17849/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17849/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.55.212/tcp/17850/p2p/16Uiu2HAkw529xoPN4FxjxyanXqXJoQZAbAVxxrF6M8yX6MEp8wNt","/ip4/172.18.55.212/tcp/17851/ws/p2p/16Uiu2HAkw529xoPN4FxjxyanXqXJoQZAbAVxxrF6M8yX6MEp8wNt"],"enrUri":"enr:-L24QMFj7_7IcZP_FKHzVGFzzuIf16L4qK6zWHYalzqh8SC_M_ijIJEBsbUUutxPR__fXII7fK9OkyoqToWMIrhNQN4CgmlkgnY0gmlwhKwSN9SKbXVsdGlhZGRyc5YACASsEjfUBkW6AAoErBI31AZFu90DgnJzhQADAQAAiXNlY3AyNTZrMaECGGz9Ozf3-tFXinxTU31anMrDBr0bYFa0JqyD9eYmbDWDdGNwgkW6g3VkcIJFvIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-01_04-07-50__10e1b754-d5bd-4053-b4f4-cbb1870e537f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.251.20
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['19823', '19824', '19825', '19826', '19827']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 19823:19823 -p 19824:19824 -p 19825:19825 -p 19826:19826 -p 19827:19827 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=19825 --rest-port=19823 --tcp-port=19824 --discv5-udp-port=19826 --rest-address=0.0.0.0 --nat=extip:172.18.251.20 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ae23bce7ee4f2c69e4bfde259066a5a61f2c1dfc03eb49e1434fc7cefbf8c9aa --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=19827 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QMFj7_7IcZP_FKHzVGFzzuIf16L4qK6zWHYalzqh8SC_M_ijIJEBsbUUutxPR__fXII7fK9OkyoqToWMIrhNQN4CgmlkgnY0gmlwhKwSN9SKbXVsdGlhZGRyc5YACASsEjfUBkW6AAoErBI31AZFu90DgnJzhQADAQAAiXNlY3AyNTZrMaECGGz9Ozf3-tFXinxTU31anMrDBr0bYFa0JqyD9eYmbDWDdGNwgkW6g3VkcIJFvIV3YWt1MgU --filternode=/ip4/172.18.55.212/tcp/17850/p2p/16Uiu2HAkw529xoPN4FxjxyanXqXJoQZAbAVxxrF6M8yX6MEp8wNt
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.251.20 waku 7bfefe88021d715952aa39d9cad6770bb19ce80716929270d40dca7acbb8fda2
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 7bfefe88021d. Setting up logs at ./log/docker/node2_2024-11-01_04-07-50__10e1b754-d5bd-4053-b4f4-cbb1870e537f__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 19823
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:19823/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:19823/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.251.20/tcp/19824/p2p/16Uiu2HAmMuTEjLBxnPWcm6B7anXM15ztvYSnxyKuhg1tcaa9BgtE","/ip4/172.18.251.20/tcp/19825/ws/p2p/16Uiu2HAmMuTEjLBxnPWcm6B7anXM15ztvYSnxyKuhg1tcaa9BgtE"],"enrUri":"enr:-L24QJD4EYLRll9knLLfMBZR3qzQOe21EbECv33Yr5AhNWOtGdBqn6mAVagweB_ADQN4Yf9_Je0U7OStJZB4hGQfzXQCgmlkgnY0gmlwhKwS-xSKbXVsdGlhZGRyc5YACASsEvsUBk1wAAoErBL7FAZNcd0DgnJzhQADAQAAiXNlY3AyNTZrMaEDiW22_H-7W-VjhBik1-mVN1fY1pIcjTHTymrc8AtSsIeDdGNwgk1wg3VkcIJNcoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:19823/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.55.212/tcp/17850/p2p/16Uiu2HAkw529xoPN4FxjxyanXqXJoQZAbAVxxrF6M8yX6MEp8wNt"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17849/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:19823/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "3bc32152-b05c-499a-b865-ca3222dccd90", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"3bc32152-b05c-499a-b865-ca3222dccd90","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:19823/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:19823/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id d50f0267b497
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 7bfefe88021d
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container d50f0267b497. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.