[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_invalid_request_id with id: 2024-11-01_04-06-42__6f2b17bb-1dae-47c0-b951-beb817eb80c3
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-01_04-06-42__6f2b17bb-1dae-47c0-b951-beb817eb80c3__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.205.233
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['31936', '31937', '31938', '31939', '31940']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 31936:31936 -p 31937:31937 -p 31938:31938 -p 31939:31939 -p 31940:31940 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=31938 --rest-port=31936 --tcp-port=31937 --discv5-udp-port=31939 --rest-address=0.0.0.0 --nat=extip:172.18.205.233 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=dfe3d68e1bbceef83f1db0e3cbfdf3b81770ccfbc9dece7fffe7b70eaa67141a --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=31940 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.205.233 waku 9f3175f343466d29b663fa23d92e9ae6514c1876044fd9c9474fb26ef2b94793
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 9f3175f34346. Setting up logs at ./log/docker/node1_2024-11-01_04-06-42__6f2b17bb-1dae-47c0-b951-beb817eb80c3__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 31936
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 0f1b8a1294e3. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:31936/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:31936/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.205.233/tcp/31937/p2p/16Uiu2HAm1bHTg34UhcidrwWpwGbnMn43WG6dY9hJEfMeUkqk37Xd","/ip4/172.18.205.233/tcp/31938/ws/p2p/16Uiu2HAm1bHTg34UhcidrwWpwGbnMn43WG6dY9hJEfMeUkqk37Xd"],"enrUri":"enr:-L24QP2F_-1D93sjjg1O0woAPzIUWLoR4hvzZdH6QnxLzvfVczwkZf5Hk35--0UUW72TjtjLzR-g3M7GlQI7-nkysa8CgmlkgnY0gmlwhKwSzemKbXVsdGlhZGRyc5YACASsEs3pBnzBAAoErBLN6QZ8wt0DgnJzhQADAQAAiXNlY3AyNTZrMaECW5x3jKU0W_cRAN_h2mci47iowyA38Vf1Oi9Z0mnojwiDdGNwgnzBg3VkcIJ8w4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-01_04-06-42__6f2b17bb-1dae-47c0-b951-beb817eb80c3__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.42.161
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['7384', '7385', '7386', '7387', '7388']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 7384:7384 -p 7385:7385 -p 7386:7386 -p 7387:7387 -p 7388:7388 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=7386 --rest-port=7384 --tcp-port=7385 --discv5-udp-port=7387 --rest-address=0.0.0.0 --nat=extip:172.18.42.161 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=a179bd5b9fc43366a9acf6fb638efa2faaa71a6481e2bcecce1f6164feb0d46c --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=7388 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QP2F_-1D93sjjg1O0woAPzIUWLoR4hvzZdH6QnxLzvfVczwkZf5Hk35--0UUW72TjtjLzR-g3M7GlQI7-nkysa8CgmlkgnY0gmlwhKwSzemKbXVsdGlhZGRyc5YACASsEs3pBnzBAAoErBLN6QZ8wt0DgnJzhQADAQAAiXNlY3AyNTZrMaECW5x3jKU0W_cRAN_h2mci47iowyA38Vf1Oi9Z0mnojwiDdGNwgnzBg3VkcIJ8w4V3YWt1MgU --filternode=/ip4/172.18.205.233/tcp/31937/p2p/16Uiu2HAm1bHTg34UhcidrwWpwGbnMn43WG6dY9hJEfMeUkqk37Xd
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.42.161 waku b0d3447c5ada767572793d3957bc7831c929e6cc792e73a596b6efb7aa734d0d
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID b0d3447c5ada. Setting up logs at ./log/docker/node2_2024-11-01_04-06-42__6f2b17bb-1dae-47c0-b951-beb817eb80c3__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 7384
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7384/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7384/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.42.161/tcp/7385/p2p/16Uiu2HAm75kWya5Eii2GBKBaJs3X3yXypMVbYT72vo83ZcibsRCc","/ip4/172.18.42.161/tcp/7386/ws/p2p/16Uiu2HAm75kWya5Eii2GBKBaJs3X3yXypMVbYT72vo83ZcibsRCc"],"enrUri":"enr:-L24QBcQMY2PR77lAb-BlDbozYN4Rx7vm6SOihPHaGwv7hjZaV0RNVn0GlTfNM6fv-Z2M8B6jTaAw5gMJus90LU3ocACgmlkgnY0gmlwhKwSKqGKbXVsdGlhZGRyc5YACASsEiqhBhzZAAoErBIqoQYc2t0DgnJzhQADAQAAiXNlY3AyNTZrMaECrTHB9XG87gnhhyk_NsdUDLp5LLD81hxLdSjOb3i_X1GDdGNwghzZg3VkcIIc24V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:7384/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.205.233/tcp/31937/p2p/16Uiu2HAm1bHTg34UhcidrwWpwGbnMn43WG6dY9hJEfMeUkqk37Xd"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:31936/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:7384/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "a24ecdbc-e881-467e-9604-6d7700d2fe0b", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"a24ecdbc-e881-467e-9604-6d7700d2fe0b","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:7384/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:7384/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 9f3175f34346
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id b0d3447c5ada
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 9f3175f34346. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.