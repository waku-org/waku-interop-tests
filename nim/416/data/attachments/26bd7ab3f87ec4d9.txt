[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_invalid_request_id with id: 2024-11-01_04-07-14__b6e25ae4-9cea-45ff-ad3f-2ffc8008e718
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-01_04-07-14__b6e25ae4-9cea-45ff-ad3f-2ffc8008e718__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.83.158
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['53072', '53073', '53074', '53075', '53076']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 53072:53072 -p 53073:53073 -p 53074:53074 -p 53075:53075 -p 53076:53076 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=53074 --rest-port=53072 --tcp-port=53073 --discv5-udp-port=53075 --rest-address=0.0.0.0 --nat=extip:172.18.83.158 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=94f696aa95a703710c3fe83691c76cbb23fa6f227a4cfb29aa3c3fcac42ce7c1 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=53076 --metrics-logging=true --relay=true --filter=true
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container ef89fb60f03a. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.83.158 waku 8e56f2abf728dbd26f351d6dd9b0ea7d4a7556795a65b41f1421feed422aaf0f
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 8e56f2abf728. Setting up logs at ./log/docker/node1_2024-11-01_04-07-14__b6e25ae4-9cea-45ff-ad3f-2ffc8008e718__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 53072
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:53072/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:53072/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.83.158/tcp/53073/p2p/16Uiu2HAkyWcfTaZaiR1CGVKGGDvoiFfCzCrAHE19dPFqQf4uH3jQ","/ip4/172.18.83.158/tcp/53074/ws/p2p/16Uiu2HAkyWcfTaZaiR1CGVKGGDvoiFfCzCrAHE19dPFqQf4uH3jQ"],"enrUri":"enr:-L24QBaURSNU0PPHz12STUSOC5OvUiR8s3wwuZ2A2htNTMoqHKT0ogdSQX3gEBWBspH0hFRwLC9CmXWlGVDEOB6LGcQCgmlkgnY0gmlwhKwSU56KbXVsdGlhZGRyc5YACASsElOeBs9RAAoErBJTngbPUt0DgnJzhQADAQAAiXNlY3AyNTZrMaECPLLm91xj718OpkkERkJxODj_XxgGENBDzV8z2Le84YODdGNwgs9Rg3VkcILPU4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-01_04-07-14__b6e25ae4-9cea-45ff-ad3f-2ffc8008e718__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.1.205
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['30009', '30010', '30011', '30012', '30013']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 30009:30009 -p 30010:30010 -p 30011:30011 -p 30012:30012 -p 30013:30013 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=30011 --rest-port=30009 --tcp-port=30010 --discv5-udp-port=30012 --rest-address=0.0.0.0 --nat=extip:172.18.1.205 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=e3fe85fafe8485cbabee0bee515bb29fd5462dab4f2e3b0deb9d9c8fce858e3b --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=30013 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QBaURSNU0PPHz12STUSOC5OvUiR8s3wwuZ2A2htNTMoqHKT0ogdSQX3gEBWBspH0hFRwLC9CmXWlGVDEOB6LGcQCgmlkgnY0gmlwhKwSU56KbXVsdGlhZGRyc5YACASsElOeBs9RAAoErBJTngbPUt0DgnJzhQADAQAAiXNlY3AyNTZrMaECPLLm91xj718OpkkERkJxODj_XxgGENBDzV8z2Le84YODdGNwgs9Rg3VkcILPU4V3YWt1MgU --filternode=/ip4/172.18.83.158/tcp/53073/p2p/16Uiu2HAkyWcfTaZaiR1CGVKGGDvoiFfCzCrAHE19dPFqQf4uH3jQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.1.205 waku afc12ef9fb117d240b44096e757553c0189756a25db600ce93b43840bba568e6
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID afc12ef9fb11. Setting up logs at ./log/docker/node2_2024-11-01_04-07-14__b6e25ae4-9cea-45ff-ad3f-2ffc8008e718__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 30009
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30009/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30009/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.1.205/tcp/30010/p2p/16Uiu2HAmNwJ2q3uvaYcXwxCuzwbZiH9FfjLRtGeaNtZWUAiRK8pA","/ip4/172.18.1.205/tcp/30011/ws/p2p/16Uiu2HAmNwJ2q3uvaYcXwxCuzwbZiH9FfjLRtGeaNtZWUAiRK8pA"],"enrUri":"enr:-L24QLJbvcIvV2uDbU56OZ8yKy_ebbJTsRglOe571Wqn01SKeemrrEuhGuf9p_ouMTto6BCQU_xd1ZFOi9QcWhRnaRwCgmlkgnY0gmlwhKwSAc2KbXVsdGlhZGRyc5YACASsEgHNBnU6AAoErBIBzQZ1O90DgnJzhQADAQAAiXNlY3AyNTZrMaEDmMInrStCteIuhiCswL-i0gqNJCWVsXb8_q4w4CMjAluDdGNwgnU6g3VkcIJ1PIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:30009/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.83.158/tcp/53073/p2p/16Uiu2HAkyWcfTaZaiR1CGVKGGDvoiFfCzCrAHE19dPFqQf4uH3jQ"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:53072/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:30009/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "be240277-d7f8-40f6-9557-f3bae1e2d6be", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"be240277-d7f8-40f6-9557-f3bae1e2d6be","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:30009/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:30009/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 8e56f2abf728
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id afc12ef9fb11
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 8e56f2abf728. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.