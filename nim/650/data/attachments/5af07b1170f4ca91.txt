[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_invalid_request_id with id: 2025-02-13_04-05-03__c21d237a-1c41-4860-8792-2ce71248d7b8
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-02-13_04-05-03__c21d237a-1c41-4860-8792-2ce71248d7b8__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.176.165
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['47056', '47057', '47058', '47059', '47060']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 47056:47056 -p 47057:47057 -p 47058:47058 -p 47059:47059 -p 47060:47060 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=47058 --rest-port=47056 --tcp-port=47057 --discv5-udp-port=47059 --rest-address=0.0.0.0 --nat=extip:172.18.176.165 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ff3af50cfa04de7c3ec8d0fbafb8832b3ed2e125b5bb5babb6a66fc4c70e8fcf --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=47060 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.176.165 waku f5ee27d6120efc4a4a1cdb24d9a72af562326acbf43534ce845328c9a5f038a5
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID f5ee27d6120e. Setting up logs at ./log/docker/node1_2025-02-13_04-05-03__c21d237a-1c41-4860-8792-2ce71248d7b8__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 47056
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 41ba6e3298e0. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:47056/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:47056/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.176.165/tcp/47057/p2p/16Uiu2HAmLLTouv8PwqseE1P5Ma8hdSMT8koTDVKdJmTdCAF5QGeu","/ip4/172.18.176.165/tcp/47058/ws/p2p/16Uiu2HAmLLTouv8PwqseE1P5Ma8hdSMT8koTDVKdJmTdCAF5QGeu"],"enrUri":"enr:-L24QAjiz4AM5KmiRJHz06wXqrcOki02JjVyoNWXXFxbHczVW_NQ7t29S5B-UDvDVNkIz2AbVv0TGyxQ09kTPd0Nye0CgmlkgnY0gmlwhKwSsKWKbXVsdGlhZGRyc5YACASsErClBrfRAAoErBKwpQa30t0DgnJzhQADAQAAiXNlY3AyNTZrMaEDch6CD88gg7HlKZfgL6nRB5hceAVJtc_U-JTPDlPe9gqDdGNwgrfRg3VkcIK304V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-02-13_04-05-03__c21d237a-1c41-4860-8792-2ce71248d7b8__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.26.79
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['39332', '39333', '39334', '39335', '39336']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 39332:39332 -p 39333:39333 -p 39334:39334 -p 39335:39335 -p 39336:39336 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=39334 --rest-port=39332 --tcp-port=39333 --discv5-udp-port=39335 --rest-address=0.0.0.0 --nat=extip:172.18.26.79 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=22ca4b8fbcdcbfccb06b14d2effcfcff4b70b0fcfdab70e7ec6cdeadd77fbea1 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=39336 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QAjiz4AM5KmiRJHz06wXqrcOki02JjVyoNWXXFxbHczVW_NQ7t29S5B-UDvDVNkIz2AbVv0TGyxQ09kTPd0Nye0CgmlkgnY0gmlwhKwSsKWKbXVsdGlhZGRyc5YACASsErClBrfRAAoErBKwpQa30t0DgnJzhQADAQAAiXNlY3AyNTZrMaEDch6CD88gg7HlKZfgL6nRB5hceAVJtc_U-JTPDlPe9gqDdGNwgrfRg3VkcIK304V3YWt1MgU --filternode=/ip4/172.18.176.165/tcp/47057/p2p/16Uiu2HAmLLTouv8PwqseE1P5Ma8hdSMT8koTDVKdJmTdCAF5QGeu
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.26.79 waku 34d66c0ef88d54a4db12d2a5229439b840e0bbf490216cbb9996bb8672dd0c85
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 34d66c0ef88d. Setting up logs at ./log/docker/node2_2025-02-13_04-05-03__c21d237a-1c41-4860-8792-2ce71248d7b8__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 39332
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:39332/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:39332/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.26.79/tcp/39333/p2p/16Uiu2HAmKtvjpN4xDoQbLk3KVb6FEcLTSMf34BzFd4tCDHzAA2Ev","/ip4/172.18.26.79/tcp/39334/ws/p2p/16Uiu2HAmKtvjpN4xDoQbLk3KVb6FEcLTSMf34BzFd4tCDHzAA2Ev"],"enrUri":"enr:-L24QGZgF9lPsMr-v278G0d-wfr-eSx6HaMHSu6XIrZ-HQ69cPJWFVFD5ykTefEgfqNzfsMMAHn-INiWmMPecZaBPd0CgmlkgnY0gmlwhKwSGk-KbXVsdGlhZGRyc5YACASsEhpPBpmlAAoErBIaTwaZpt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDa5PbLeb5yX5TqoX-9IIK3QV2KlJuVU45aeLls1CDiOODdGNwgpmlg3VkcIKZp4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:39332/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.176.165/tcp/47057/p2p/16Uiu2HAmLLTouv8PwqseE1P5Ma8hdSMT8koTDVKdJmTdCAF5QGeu"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:47056/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:39332/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "612e2abc-2f22-4c44-b8af-4d509d7d8e20", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"612e2abc-2f22-4c44-b8af-4d509d7d8e20","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:39332/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:39332/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id f5ee27d6120e
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 34d66c0ef88d
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container f5ee27d6120e. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.