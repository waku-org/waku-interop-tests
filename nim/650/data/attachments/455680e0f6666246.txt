2025-02-13 04:05:31.496 DEBUG [tests.conftest] Running fixture setup: test_id
2025-02-13 04:05:31.497 DEBUG [tests.conftest] Running test: test_valid_payloads_n1_with_rln_n2_without_rln_at_spam_rate with id: 2025-02-13_04-05-31__a408f723-8662-4adc-9c66-b5b13ee50db2
2025-02-13 04:05:31.498 DEBUG [src.steps.common] Running fixture setup: common_setup
2025-02-13 04:05:31.498 DEBUG [src.steps.relay] Running fixture setup: relay_setup
2025-02-13 04:05:31.507 DEBUG [src.node.docker_mananger] Docker client initialized with image wakuorg/nwaku:latest
2025-02-13 04:05:31.508 DEBUG [src.node.waku_node] WakuNode instance initialized with log path ./log/docker/node1_2025-02-13_04-05-31__a408f723-8662-4adc-9c66-b5b13ee50db2__wakuorg_nwaku:latest.log
2025-02-13 04:05:31.508 DEBUG [src.node.waku_node] Starting Node...
2025-02-13 04:05:31.509 DEBUG [src.node.docker_mananger] Attempting to create or retrieve network waku
2025-02-13 04:05:31.510 DEBUG [src.node.docker_mananger] Network waku already exists
2025-02-13 04:05:31.511 DEBUG [src.node.docker_mananger] Generated random external IP 172.18.189.87
2025-02-13 04:05:31.511 DEBUG [src.node.docker_mananger] Generated ports ['30343', '30344', '30345', '30346', '30347']
2025-02-13 04:05:31.511 DEBUG [src.node.waku_node] Using volumes ['/home/runner/work/waku-interop-tests/waku-interop-tests/rln_tree_sjys_1:/etc/rln_tree', '/home/runner/work/waku-interop-tests/waku-interop-tests/keystore_sjys_1:/keystore']
2025-02-13 04:05:31.511 DEBUG [src.node.docker_mananger] docker run -i -t -p 30343:30343 -p 30344:30344 -p 30345:30345 -p 30346:30346 -p 30347:30347 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=30345 --rest-port=30343 --tcp-port=30344 --discv5-udp-port=30346 --rest-address=0.0.0.0 --nat=extip:172.18.189.87 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=d6a5ee8b3cee03b74ea5ccb4fd8f6ecdfd9f83f5bd602ee423b1bd254ef45edd --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=30347 --metrics-logging=true --relay=true --rln-relay-membership-index=1 --rln-relay-user-message-limit=1 --rln-relay-epoch-sec=1 --rln-relay=true --rln-relay-cred-path=/keystore/keystore.json --rln-relay-cred-password=password
2025-02-13 04:05:31.741 DEBUG [src.node.docker_mananger] docker network connect --ip 172.18.189.87 waku ff17ec3b8e2654eeda073c12909b759f9fe938b75ac8bcc972a63791829b0190
2025-02-13 04:05:31.794 DEBUG [src.node.docker_mananger] Container started with ID ff17ec3b8e26. Setting up logs at ./log/docker/node1_2025-02-13_04-05-31__a408f723-8662-4adc-9c66-b5b13ee50db2__wakuorg_nwaku:latest.log
2025-02-13 04:05:31.794 DEBUG [src.node.waku_node] Started container from image wakuorg/nwaku:latest. REST: 30343
2025-02-13 04:05:31.795 DEBUG [src.libs.common] Sleeping for 1 seconds
2025-02-13 04:05:32.323 ERROR [src.node.docker_mananger] Max retries reached for container f907bdb0fae7. Exiting log stream.
2025-02-13 04:05:32.795 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30343/health" -H "Content-Type: application/json" -d 'None'
2025-02-13 04:05:38.251 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"nodeHealth":"Initializing","protocolsHealth":[{"Rln Relay":"Ready"}]}'
2025-02-13 04:05:38.352 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30343/health" -H "Content-Type: application/json" -d 'None'
2025-02-13 04:05:38.355 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[{"Rln Relay":"Ready"}]}'
2025-02-13 04:05:38.355 INFO [src.node.waku_node] Node protocols are initialized !!
2025-02-13 04:05:38.355 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:30343/debug/v1/info" -H "Content-Type: application/json" -d 'None'
2025-02-13 04:05:38.357 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.189.87/tcp/30344/p2p/16Uiu2HAm859u9CaWPhyfwKBRkB37VfShVGEXRXuNESJLHwiC8wYE","/ip4/172.18.189.87/tcp/30345/ws/p2p/16Uiu2HAm859u9CaWPhyfwKBRkB37VfShVGEXRXuNESJLHwiC8wYE"],"enrUri":"enr:-L24QMSVtw32awoKnriqBOFXgbC5935rk6MBs8xutuGeSjU3PCrZuCdAS_hzedO4m5BQ0aIe4hGg8cHikiEmL_FGOG8CgmlkgnY0gmlwhKwSvVeKbXVsdGlhZGRyc5YACASsEr1XBnaIAAoErBK9VwZ2id0DgnJzhQADAQAAiXNlY3AyNTZrMaECu-ZNVNcnETVCmSA23umT6OHOAcfriCdNP_PIOmsHzJODdGNwgnaIg3VkcIJ2ioV3YWt1MgE"}'
2025-02-13 04:05:38.357 INFO [src.node.waku_node] REST service is ready !!
2025-02-13 04:05:38.364 DEBUG [src.node.docker_mananger] Docker client initialized with image wakuorg/nwaku:latest
2025-02-13 04:05:38.364 DEBUG [src.node.waku_node] WakuNode instance initialized with log path ./log/docker/node2_2025-02-13_04-05-31__a408f723-8662-4adc-9c66-b5b13ee50db2__wakuorg_nwaku:latest.log
2025-02-13 04:05:38.364 DEBUG [src.node.waku_node] Starting Node...
2025-02-13 04:05:38.364 DEBUG [src.node.docker_mananger] Attempting to create or retrieve network waku
2025-02-13 04:05:38.365 DEBUG [src.node.docker_mananger] Network waku already exists
2025-02-13 04:05:38.365 DEBUG [src.node.docker_mananger] Generated random external IP 172.18.186.80
2025-02-13 04:05:38.365 DEBUG [src.node.docker_mananger] Generated ports ['8077', '8078', '8079', '8080', '8081']
2025-02-13 04:05:38.366 DEBUG [src.node.waku_node] RLN credentials were not set
2025-02-13 04:05:38.366 INFO [src.node.waku_node] RLN credentials not set or credential store not available, starting without RLN
2025-02-13 04:05:38.366 DEBUG [src.node.waku_node] Using volumes []
2025-02-13 04:05:38.366 DEBUG [src.node.docker_mananger] docker run -i -t -p 8077:8077 -p 8078:8078 -p 8079:8079 -p 8080:8080 -p 8081:8081 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=8079 --rest-port=8077 --tcp-port=8078 --discv5-udp-port=8080 --rest-address=0.0.0.0 --nat=extip:172.18.186.80 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=dde2f5fb6b8b7ff0ab802cb32bc61ed7bb3e651d479e0f29f180bdd8ef2d1eae --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=8081 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-L24QMSVtw32awoKnriqBOFXgbC5935rk6MBs8xutuGeSjU3PCrZuCdAS_hzedO4m5BQ0aIe4hGg8cHikiEmL_FGOG8CgmlkgnY0gmlwhKwSvVeKbXVsdGlhZGRyc5YACASsEr1XBnaIAAoErBK9VwZ2id0DgnJzhQADAQAAiXNlY3AyNTZrMaECu-ZNVNcnETVCmSA23umT6OHOAcfriCdNP_PIOmsHzJODdGNwgnaIg3VkcIJ2ioV3YWt1MgE
2025-02-13 04:05:38.603 DEBUG [src.node.docker_mananger] docker network connect --ip 172.18.186.80 waku 6ffb308ec319a88137faf89cce93a75658961ec5a514f9288dbe08e383ff6d2d
2025-02-13 04:05:38.653 DEBUG [src.node.docker_mananger] Container started with ID 6ffb308ec319. Setting up logs at ./log/docker/node2_2025-02-13_04-05-31__a408f723-8662-4adc-9c66-b5b13ee50db2__wakuorg_nwaku:latest.log
2025-02-13 04:05:38.653 DEBUG [src.node.waku_node] Started container from image wakuorg/nwaku:latest. REST: 8077
2025-02-13 04:05:38.654 DEBUG [src.libs.common] Sleeping for 1 seconds
2025-02-13 04:05:39.654 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:8077/health" -H "Content-Type: application/json" -d 'None'
2025-02-13 04:05:39.665 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
2025-02-13 04:05:39.665 INFO [src.node.waku_node] Node protocols are initialized !!
2025-02-13 04:05:39.665 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:8077/debug/v1/info" -H "Content-Type: application/json" -d 'None'
2025-02-13 04:05:39.671 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.186.80/tcp/8078/p2p/16Uiu2HAmNSzzQj5bgvG9b9RwU9cSFi6VA11stDR7g2UuqAtJ7mSW","/ip4/172.18.186.80/tcp/8079/ws/p2p/16Uiu2HAmNSzzQj5bgvG9b9RwU9cSFi6VA11stDR7g2UuqAtJ7mSW"],"enrUri":"enr:-L24QCteBkGxl3Ze54QeYNYTOw_Qwscq4nl7bIrFT5OfzYrfVgP0Sa_FrFSoWGxkQvpfc3uWuXXTeTrVrTmvbqZqUngCgmlkgnY0gmlwhKwSulCKbXVsdGlhZGRyc5YACASsErpQBh-OAAoErBK6UAYfj90DgnJzhQADAQAAiXNlY3AyNTZrMaEDkYKfilv8JboGDkUkSmeO5rr8TWKvkhF6s2KFaifQ0BeDdGNwgh-Og3VkcIIfkIV3YWt1MgE"}'
2025-02-13 04:05:39.671 INFO [src.node.waku_node] REST service is ready !!
2025-02-13 04:05:39.672 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:8077/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.189.87/tcp/30344/p2p/16Uiu2HAm859u9CaWPhyfwKBRkB37VfShVGEXRXuNESJLHwiC8wYE"]'
2025-02-13 04:05:39.678 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-13 04:05:39.678 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:30343/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/1/0"]'
2025-02-13 04:05:39.682 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-13 04:05:39.683 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:8077/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/1/0"]'
2025-02-13 04:05:39.688 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-13 04:05:39.689 DEBUG [tests.relay.test_rln] Running test with payload A simple string
2025-02-13 04:05:39.689 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:30343/relay/v1/messages/%2Fwaku%2F2%2Frs%2F1%2F0" -H "Content-Type: application/json" -d '{"payload": "SGVsbG8gV29ybGQh", "contentTopic": "/test/1/waku-rln-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-13 04:05:39.973 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-13 04:05:39.973 DEBUG [tests.relay.test_rln] Running test with payload An integer
2025-02-13 04:05:39.974 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:30343/relay/v1/messages/%2Fwaku%2F2%2Frs%2F1%2F0" -H "Content-Type: application/json" -d '{"payload": "MTIzNDU2Nzg5MA==", "contentTopic": "/test/1/waku-rln-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-13 04:05:39.977 ERROR [src.node.api_clients.base_client] HTTP error occurred: 500 Server Error: Internal Server Error for url: http://127.0.0.1:30343/relay/v1/messages/%2Fwaku%2F2%2Frs%2F1%2F0. Response content: b'Failed to publish: error appending RLN proof to message: could not get new message id to generate an rln proof: NonceLimitReached: Nonce limit reached. Please wait for the next epoch. requested nonce: 1 & nonceLimit: 1'
2025-02-13 04:05:39.978 DEBUG [tests.relay.test_rln] Running test with payload A dictionary
2025-02-13 04:05:39.978 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:30343/relay/v1/messages/%2Fwaku%2F2%2Frs%2F1%2F0" -H "Content-Type: application/json" -d '{"payload": "eyJrZXkiOiAidmFsdWUifQ==", "contentTopic": "/test/1/waku-rln-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-13 04:05:39.980 ERROR [src.node.api_clients.base_client] HTTP error occurred: 500 Server Error: Internal Server Error for url: http://127.0.0.1:30343/relay/v1/messages/%2Fwaku%2F2%2Frs%2F1%2F0. Response content: b'Failed to publish: error appending RLN proof to message: could not get new message id to generate an rln proof: NonceLimitReached: Nonce limit reached. Please wait for the next epoch. requested nonce: 2 & nonceLimit: 1'
2025-02-13 04:05:39.981 DEBUG [tests.relay.test_rln] Running test with payload Chinese characters
2025-02-13 04:05:39.981 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:30343/relay/v1/messages/%2Fwaku%2F2%2Frs%2F1%2F0" -H "Content-Type: application/json" -d '{"payload": "6L+Z5piv5LiA5Lqb5Lit5paH", "contentTopic": "/test/1/waku-rln-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-13 04:05:39.983 ERROR [src.node.api_clients.base_client] HTTP error occurred: 500 Server Error: Internal Server Error for url: http://127.0.0.1:30343/relay/v1/messages/%2Fwaku%2F2%2Frs%2F1%2F0. Response content: b'Failed to publish: error appending RLN proof to message: could not get new message id to generate an rln proof: NonceLimitReached: Nonce limit reached. Please wait for the next epoch. requested nonce: 3 & nonceLimit: 1'
2025-02-13 04:05:39.984 DEBUG [tests.relay.test_rln] Running test with payload Emojis
2025-02-13 04:05:39.984 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:30343/relay/v1/messages/%2Fwaku%2F2%2Frs%2F1%2F0" -H "Content-Type: application/json" -d '{"payload": "8J+agPCfjJ/inKg=", "contentTopic": "/test/1/waku-rln-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-13 04:05:39.986 ERROR [src.node.api_clients.base_client] HTTP error occurred: 500 Server Error: Internal Server Error for url: http://127.0.0.1:30343/relay/v1/messages/%2Fwaku%2F2%2Frs%2F1%2F0. Response content: b'Failed to publish: error appending RLN proof to message: could not get new message id to generate an rln proof: NonceLimitReached: Nonce limit reached. Please wait for the next epoch. requested nonce: 4 & nonceLimit: 1'
2025-02-13 04:05:39.988 DEBUG [tests.conftest] Running fixture teardown: test_setup
2025-02-13 04:05:39.989 DEBUG [tests.conftest] Running fixture teardown: close_open_nodes
2025-02-13 04:05:39.989 DEBUG [src.node.waku_node] Stopping container with id ff17ec3b8e26
2025-02-13 04:05:40.779 DEBUG [src.node.waku_node] Container stopped.
2025-02-13 04:05:40.779 DEBUG [src.node.waku_node] Stopping container with id 6ffb308ec319
2025-02-13 04:05:41.608 ERROR [src.node.docker_mananger] Max retries reached for container ff17ec3b8e26. Exiting log stream.
2025-02-13 04:05:42.314 DEBUG [src.node.waku_node] Container stopped.
2025-02-13 04:05:42.316 DEBUG [tests.conftest] Running fixture teardown: check_waku_log_errors
2025-02-13 04:05:42.327 DEBUG [src.node.docker_mananger] No errors found in the waku logs.
2025-02-13 04:05:42.332 DEBUG [src.node.docker_mananger] No errors found in the waku logs.
