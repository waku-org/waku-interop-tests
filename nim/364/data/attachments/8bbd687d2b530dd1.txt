[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_extra_field with id: 2024-09-18_04-26-08__fea713e2-7ee7-4025-adb9-66065b646e66
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-09-18_04-26-08__fea713e2-7ee7-4025-adb9-66065b646e66__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.160.200
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['1796', '1797', '1798', '1799', '1800']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 1796:1796 -p 1797:1797 -p 1798:1798 -p 1799:1799 -p 1800:1800 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=1798 --rest-port=1796 --tcp-port=1797 --discv5-udp-port=1799 --rest-address=0.0.0.0 --nat=extip:172.18.160.200 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ab7a2ea1eb0dfcc9e38e21c69c272daad6b4dec10bac3f7e1abaed76ca0cfb1e --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=1800 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.160.200 waku decb8ba14a202b71f7eb276bf01af8542ca967f9b8301cb4f5a079f855769a83
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID decb8ba14a20. Setting up logs at ./log/docker/node1_2024-09-18_04-26-08__fea713e2-7ee7-4025-adb9-66065b646e66__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 1796
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:1796/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:1796/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.160.200/tcp/1797/p2p/16Uiu2HAmHeLGzMRCYwnLvn7ZQSq4Ke2HLhT6o4Kds7uR6gsn7A1P","/ip4/172.18.160.200/tcp/1798/ws/p2p/16Uiu2HAmHeLGzMRCYwnLvn7ZQSq4Ke2HLhT6o4Kds7uR6gsn7A1P"],"enrUri":"enr:-LO4QN2T1mmJUlJ_VX91ijmlSs6NR3gz8L6362bRHJCQLMtXYzmqdbvfCAYpGMy2i3-VusqPg67nh3u8BrLihLksBgsBgmlkgnY0gmlwhKwSoMiKbXVsdGlhZGRyc4wACgSsEqDIBgcG3QOCcnOFAAMBAACJc2VjcDI1NmsxoQNKH2JR5yRCezqiTiqp36nFhg2GyQQcIlevnDHtmC4omoN0Y3CCBwWDdWRwggcHhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-09-18_04-26-08__fea713e2-7ee7-4025-adb9-66065b646e66__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.21.247
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['52179', '52180', '52181', '52182', '52183']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 52179:52179 -p 52180:52180 -p 52181:52181 -p 52182:52182 -p 52183:52183 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=52181 --rest-port=52179 --tcp-port=52180 --discv5-udp-port=52182 --rest-address=0.0.0.0 --nat=extip:172.18.21.247 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=1f45e935b9303baee2bfd7c7d59fc2e3b6f0f2478cce7bc6ed96963d9f43f93f --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=52183 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-LO4QN2T1mmJUlJ_VX91ijmlSs6NR3gz8L6362bRHJCQLMtXYzmqdbvfCAYpGMy2i3-VusqPg67nh3u8BrLihLksBgsBgmlkgnY0gmlwhKwSoMiKbXVsdGlhZGRyc4wACgSsEqDIBgcG3QOCcnOFAAMBAACJc2VjcDI1NmsxoQNKH2JR5yRCezqiTiqp36nFhg2GyQQcIlevnDHtmC4omoN0Y3CCBwWDdWRwggcHhXdha3UyAQ
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.21.247 waku 00c6589e84f6327ae050a5de16a6d37c58e7b132db37b06396511a5f95faf1b7
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 00c6589e84f6. Setting up logs at ./log/docker/node2_2024-09-18_04-26-08__fea713e2-7ee7-4025-adb9-66065b646e66__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 52179
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:52179/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:52179/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.21.247/tcp/52180/p2p/16Uiu2HAmM4d2BoUB4ugRXpewsz8iHt8r1VomX8tQgSmYEy8WnavF","/ip4/172.18.21.247/tcp/52181/ws/p2p/16Uiu2HAmM4d2BoUB4ugRXpewsz8iHt8r1VomX8tQgSmYEy8WnavF"],"enrUri":"enr:-LO4QHYxEUpXU2htw35zrtw1el4aLfOJpHhGQyftlVflekK3LVk_8D09Dq26KcR7Nd1zSFVvKtw70gx9CbFMnioylzoBgmlkgnY0gmlwhKwSFfeKbXVsdGlhZGRyc4wACgSsEhX3BsvV3QOCcnOFAAMBAACJc2VjcDI1NmsxoQN861FRM_gSP0rnyL8QYj61M0xtcrkJNQJ1sfoxMztybIN0Y3CCy9SDdWRwgsvWhXdha3UyAQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:52179/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.160.200/tcp/1797/p2p/16Uiu2HAmHeLGzMRCYwnLvn7ZQSq4Ke2HLhT6o4Kds7uR6gsn7A1P"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:1796/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:52179/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:1796/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:1796/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1726633573307138048,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:wakuorg/nwaku:latest can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:52179/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1726633573307138048,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:1796/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)', "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:1796/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id decb8ba14a20
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 00c6589e84f6
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.