{"uid":"39fdb2fb17fb690d","name":"test_main_node_full__peer_full","fullName":"tests.light_push.test_running_nodes.TestRunningNodes#test_main_node_full__peer_full","historyId":"c750477543da37eeb22ad92454dbe7f1","time":{"start":1723793480063,"stop":1723793480064,"duration":1},"status":"broken","statusMessage":"TypeError: StepsLightPush.start_receiving_node() got multiple values for argument 'node_index'","statusTrace":"tests/light_push/test_running_nodes.py:42: in test_main_node_full__peer_full\n    self.setup_first_receiving_node(lightpush=\"true\", relay=\"true\", filter=\"true\")\nsrc/steps/light_push.py:53: in setup_first_receiving_node\n    self.receiving_node1 = self.start_receiving_node(NODE_1, node_index=1, lightpush=lightpush, relay=relay, *kwargs)\nE   TypeError: StepsLightPush.start_receiving_node() got multiple values for argument 'node_index'","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"set_allure_env_variables","time":{"start":1723792874001,"stop":1723792874001,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"close_open_nodes","time":{"start":1723793480061,"stop":1723793480061,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"test_id","time":{"start":1723793480061,"stop":1723793480062,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"attach_logs_on_fail","time":{"start":1723793480061,"stop":1723793480061,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"test_setup","time":{"start":1723793480062,"stop":1723793480062,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"common_setup","time":{"start":1723793480062,"stop":1723793480062,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"light_push_setup","time":{"start":1723793480062,"stop":1723793480062,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"TypeError: StepsLightPush.start_receiving_node() got multiple values for argument 'node_index'","statusTrace":"tests/light_push/test_running_nodes.py:42: in test_main_node_full__peer_full\n    self.setup_first_receiving_node(lightpush=\"true\", relay=\"true\", filter=\"true\")\nsrc/steps/light_push.py:53: in setup_first_receiving_node\n    self.receiving_node1 = self.start_receiving_node(NODE_1, node_index=1, lightpush=lightpush, relay=relay, *kwargs)\nE   TypeError: StepsLightPush.start_receiving_node() got multiple values for argument 'node_index'","steps":[{"name":"setup_first_receiving_node","time":{"start":1723793480063,"stop":1723793480064,"duration":1},"status":"broken","statusMessage":"TypeError: StepsLightPush.start_receiving_node() got multiple values for argument 'node_index'\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/steps/light_push.py\", line 53, in setup_first_receiving_node\n    self.receiving_node1 = self.start_receiving_node(NODE_1, node_index=1, lightpush=lightpush, relay=relay, *kwargs)\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n","steps":[{"name":"start_receiving_node","time":{"start":1723793480063,"stop":1723793480063,"duration":0},"status":"broken","statusMessage":"TypeError: StepsLightPush.start_receiving_node() got multiple values for argument 'node_index'\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n","steps":[],"attachments":[],"parameters":[{"name":"image","value":"'wakuorg/nwaku:latest'"},{"name":"node_index","value":"'filter'"},{"name":"lightpush","value":"'true'"},{"name":"relay","value":"'true'"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"lightpush","value":"'true'"},{"name":"relay","value":"'true'"},{"name":"filter","value":"'true'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"24520f3baca77157","name":"log","source":"24520f3baca77157.txt","type":"text/plain","size":2393}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"test_setup::0","time":{"start":1723793480071,"stop":1723793480073,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"close_open_nodes::0","time":{"start":1723793480074,"stop":1723793480074,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"attach_logs_on_fail::0","time":{"start":1723793480075,"stop":1723793480077,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"set_allure_env_variables::0","time":{"start":1723794402388,"stop":1723794402389,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.light_push"},{"name":"suite","value":"test_running_nodes"},{"name":"subSuite","value":"TestRunningNodes"},{"name":"host","value":"fv-az658-314"},{"name":"thread","value":"2091-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.light_push.test_running_nodes"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"cb705d013e8556d6","status":"broken","statusDetails":"TypeError: StepsLightPush.start_receiving_node() got multiple values for argument 'node_index'","time":{"start":1723793480033,"stop":1723793480034,"duration":1}},{"uid":"6405b651222b1f6f","status":"broken","statusDetails":"TypeError: StepsLightPush.start_receiving_node() got multiple values for argument 'node_index'","time":{"start":1723793479999,"stop":1723793480000,"duration":1}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":11,"unknown":0,"total":12},"items":[{"uid":"37ca0471c9795e4c","reportUrl":"https://waku-org.github.io/waku-interop-tests/nim/318//#testresult/37ca0471c9795e4c","status":"passed","time":{"start":1723781918433,"stop":1723781931091,"duration":12658}},{"uid":"aa1a028ba5af7507","reportUrl":"https://waku-org.github.io/waku-interop-tests/nim/317//#testresult/aa1a028ba5af7507","status":"passed","time":{"start":1723695529518,"stop":1723695542278,"duration":12760}},{"uid":"56bf10c28697c82f","reportUrl":"https://waku-org.github.io/waku-interop-tests/nim/316//#testresult/56bf10c28697c82f","status":"passed","time":{"start":1723609156679,"stop":1723609169344,"duration":12665}},{"uid":"f409fa52dee0f32f","reportUrl":"https://waku-org.github.io/waku-interop-tests/nim/315//#testresult/f409fa52dee0f32f","status":"passed","time":{"start":1723522747726,"stop":1723522760285,"duration":12559}},{"uid":"ae1fa9483be578cf","reportUrl":"https://waku-org.github.io/waku-interop-tests/nim/314//#testresult/ae1fa9483be578cf","status":"passed","time":{"start":1723436338549,"stop":1723436351138,"duration":12589}},{"uid":"bb6a5b9bd9a23f05","reportUrl":"https://waku-org.github.io/waku-interop-tests/nim/313//#testresult/bb6a5b9bd9a23f05","status":"passed","time":{"start":1723349944729,"stop":1723349957063,"duration":12334}},{"uid":"dbf1df21bd0a45d4","reportUrl":"https://waku-org.github.io/waku-interop-tests/nim/312//#testresult/dbf1df21bd0a45d4","status":"passed","time":{"start":1723263598108,"stop":1723263610837,"duration":12729}},{"uid":"2b7aafd59a389782","reportUrl":"https://waku-org.github.io/waku-interop-tests/nim/311//#testresult/2b7aafd59a389782","status":"passed","time":{"start":1723187701007,"stop":1723187713847,"duration":12840}},{"uid":"4f6034f57d66276b","reportUrl":"https://waku-org.github.io/waku-interop-tests/nim/310//#testresult/4f6034f57d66276b","status":"passed","time":{"start":1723185698602,"stop":1723185711067,"duration":12465}},{"uid":"6c0e351cb9dda5c3","reportUrl":"https://waku-org.github.io/waku-interop-tests/nim/309//#testresult/6c0e351cb9dda5c3","status":"passed","time":{"start":1723177070370,"stop":1723177082844,"duration":12474}},{"uid":"b7fe9c37716a62e8","reportUrl":"https://waku-org.github.io/waku-interop-tests/nim/308//#testresult/b7fe9c37716a62e8","status":"passed","time":{"start":1723090722315,"stop":1723090735158,"duration":12843}}]},"tags":[]},"source":"39fdb2fb17fb690d.json","parameterValues":[]}