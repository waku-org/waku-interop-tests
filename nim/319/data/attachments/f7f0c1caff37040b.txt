[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_invalid_request_id with id: 2024-08-16_07-26-49__d0bb88c1-798b-4226-9645-f0084a6214aa
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:17 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:84 WakuNode instance initialized with log path ./log/docker/node1_2024-08-16_07-26-49__d0bb88c1-798b-4226-9645-f0084a6214aa__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:88 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:20 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:23 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:80 Generated random external IP 172.18.210.141
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:73 Generated ports ['19084', '19085', '19086', '19087', '19088']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:430 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:162 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:164 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:47 docker run -i -t -p 19084:19084 -p 19085:19085 -p 19086:19086 -p 19087:19087 -p 19088:19088 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=19086 --rest-port=19084 --tcp-port=19085 --discv5-udp-port=19087 --rest-address=0.0.0.0 --nat=extip:172.18.210.141 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=49b93f703ced2d973d357c3d6abd9bceaa0da7cb12c241bfdfa2e6dcc7fae453 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=19088 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:53 docker network connect --ip 172.18.210.141 waku 929c108556def2c7c9180b73494de4976bcfa164df0edc9495ded0d871235785
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:56 Container started with ID 929c108556de. Setting up logs at ./log/docker/node1_2024-08-16_07-26-49__d0bb88c1-798b-4226-9645-f0084a6214aa__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:176 Started container from image wakuorg/nwaku:latest. REST: 19084
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:19084/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:276 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:19084/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.210.141/tcp/19085/p2p/16Uiu2HAkxZvFVesDBiMcZ1kihLsbVZUcd7bV9QGqJVhL69uFgoC9","/ip4/172.18.210.141/tcp/19086/ws/p2p/16Uiu2HAkxZvFVesDBiMcZ1kihLsbVZUcd7bV9QGqJVhL69uFgoC9"],"enrUri":"enr:-LO4QOz1ypUkP31pF15j2WBZljk-zG38Pz8alyqIFaHn1FjZereZNiuXPWx7cMNb-687qCpRf73Q7mZ7ikjXFJc3TaIBgmlkgnY0gmlwhKwS0o2KbXVsdGlhZGRyc4wACgSsEtKNBkqO3QOCcnOFAAMBAACJc2VjcDI1NmsxoQIur9fbyslB8Pi4SPp0hwDu10KNDGLryhWj20iKLnsX9oN0Y3CCSo2DdWRwgkqPhXdha3UyBQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:281 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:17 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:84 WakuNode instance initialized with log path ./log/docker/node2_2024-08-16_07-26-49__d0bb88c1-798b-4226-9645-f0084a6214aa__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:88 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:20 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:23 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:80 Generated random external IP 172.18.50.75
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:73 Generated ports ['3955', '3956', '3957', '3958', '3959']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:430 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:162 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:164 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:47 docker run -i -t -p 3955:3955 -p 3956:3956 -p 3957:3957 -p 3958:3958 -p 3959:3959 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=3957 --rest-port=3955 --tcp-port=3956 --discv5-udp-port=3958 --rest-address=0.0.0.0 --nat=extip:172.18.50.75 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=db121c0a0e2ea4de665debda0ae7747a7e80e0c4dfcde8eadcd69eb64c4a96c1 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=3959 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-LO4QOz1ypUkP31pF15j2WBZljk-zG38Pz8alyqIFaHn1FjZereZNiuXPWx7cMNb-687qCpRf73Q7mZ7ikjXFJc3TaIBgmlkgnY0gmlwhKwS0o2KbXVsdGlhZGRyc4wACgSsEtKNBkqO3QOCcnOFAAMBAACJc2VjcDI1NmsxoQIur9fbyslB8Pi4SPp0hwDu10KNDGLryhWj20iKLnsX9oN0Y3CCSo2DdWRwgkqPhXdha3UyBQ --filternode=/ip4/172.18.210.141/tcp/19085/p2p/16Uiu2HAkxZvFVesDBiMcZ1kihLsbVZUcd7bV9QGqJVhL69uFgoC9
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:53 docker network connect --ip 172.18.50.75 waku 7354c2b1d829e99582d78b417962ceef3b0879349fc39884b5d2c8b931ee72e2
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:56 Container started with ID 7354c2b1d829. Setting up logs at ./log/docker/node2_2024-08-16_07-26-49__d0bb88c1-798b-4226-9645-f0084a6214aa__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:176 Started container from image wakuorg/nwaku:latest. REST: 3955
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:3955/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:276 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:3955/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.50.75/tcp/3956/p2p/16Uiu2HAm38TWn9dHFyxP35wxHXiPsGpCCeCsASuU3mmTeiCvCBVa","/ip4/172.18.50.75/tcp/3957/ws/p2p/16Uiu2HAm38TWn9dHFyxP35wxHXiPsGpCCeCsASuU3mmTeiCvCBVa"],"enrUri":"enr:-LO4QPER3rqklv0S2raWw5aBApDVemkMutmY8btp84Vm7XrGeCDRDI6uj54Xf84nJxWDiiTCAOuNbrg52QUk1PRYIY0BgmlkgnY0gmlwhKwSMkuKbXVsdGlhZGRyc4wACgSsEjJLBg913QOCcnOFAAMBAACJc2VjcDI1NmsxoQJydIbNfLCylt0o1wF9fVQRQbV9for49JwHQDBojB7yiYN0Y3CCD3SDdWRwgg92hXdha3UyAA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:281 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:3955/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.210.141/tcp/19085/p2p/16Uiu2HAkxZvFVesDBiMcZ1kihLsbVZUcd7bV9QGqJVhL69uFgoC9"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:19084/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:3955/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "f51ffe51-7876-4329-b142-53ed9dd5ad4a", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"f51ffe51-7876-4329-b142-53ed9dd5ad4a","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:3955/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:3955/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:220 Stopping container with id 929c108556de
[35mDEBUG   [0m src.node.waku_node:waku_node.py:227 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:220 Stopping container with id 7354c2b1d829
[35mDEBUG   [0m src.node.waku_node:waku_node.py:227 Container stopped.