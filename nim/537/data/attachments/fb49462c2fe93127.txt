[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_with_extra_field with id: 2024-12-24_04-10-50__70baf6af-9c85-48a5-9c29-17bff4a33863
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-24_04-10-50__70baf6af-9c85-48a5-9c29-17bff4a33863__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.11.179
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['44479', '44480', '44481', '44482', '44483']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 44479:44479 -p 44480:44480 -p 44481:44481 -p 44482:44482 -p 44483:44483 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=44481 --rest-port=44479 --tcp-port=44480 --discv5-udp-port=44482 --rest-address=0.0.0.0 --nat=extip:172.18.11.179 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=d46ccacd0a76b9490a4d52cbbed6eaf27ba48ba3bb11cf249cbebff5e7dbea7a --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=44483 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.11.179 waku 1655eebd74b7d74e4f63607ef462900b0e9200639fd035e28a0bd757a1e434f8
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 1655eebd74b7. Setting up logs at ./log/docker/node1_2024-12-24_04-10-50__70baf6af-9c85-48a5-9c29-17bff4a33863__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 44479
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container c7091af56db2. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:44479/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:44479/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.11.179/tcp/44480/p2p/16Uiu2HAkxq9pf5A1JTtkjuZ56UVdietj7HDrWNupkq7Uhtio2GvH","/ip4/172.18.11.179/tcp/44481/ws/p2p/16Uiu2HAkxq9pf5A1JTtkjuZ56UVdietj7HDrWNupkq7Uhtio2GvH"],"enrUri":"enr:-L24QIwCfW0NNeF3pGCMFDYYsBIoooyR7jHGd7dIg7jdxZjhVhDIglyk542uDJ9UWGv6ZwbeNsNbhFNlXIKXtlAK9wsCgmlkgnY0gmlwhKwSC7OKbXVsdGlhZGRyc5YACASsEguzBq3AAAoErBILswatwd0DgnJzhQADAQAAiXNlY3AyNTZrMaECMpbmpnlWOntDHLJJ5WV1-tY0BBrkzPg2_Iagpr6MPJaDdGNwgq3Ag3VkcIKtwoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-24_04-10-50__70baf6af-9c85-48a5-9c29-17bff4a33863__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.239.169
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['1779', '1780', '1781', '1782', '1783']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 1779:1779 -p 1780:1780 -p 1781:1781 -p 1782:1782 -p 1783:1783 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=1781 --rest-port=1779 --tcp-port=1780 --discv5-udp-port=1782 --rest-address=0.0.0.0 --nat=extip:172.18.239.169 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b75eb16fa8dc79f1b275accc90a78ca8ba9c64d98d25efff81adf3d1bdcbe1f0 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=1783 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QIwCfW0NNeF3pGCMFDYYsBIoooyR7jHGd7dIg7jdxZjhVhDIglyk542uDJ9UWGv6ZwbeNsNbhFNlXIKXtlAK9wsCgmlkgnY0gmlwhKwSC7OKbXVsdGlhZGRyc5YACASsEguzBq3AAAoErBILswatwd0DgnJzhQADAQAAiXNlY3AyNTZrMaECMpbmpnlWOntDHLJJ5WV1-tY0BBrkzPg2_Iagpr6MPJaDdGNwgq3Ag3VkcIKtwoV3YWt1MgU --filternode=/ip4/172.18.11.179/tcp/44480/p2p/16Uiu2HAkxq9pf5A1JTtkjuZ56UVdietj7HDrWNupkq7Uhtio2GvH
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.239.169 waku 69209703c94b14a58af3b65cbd42438a435041e6ee2770e09b09df2446cff915
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 69209703c94b. Setting up logs at ./log/docker/node2_2024-12-24_04-10-50__70baf6af-9c85-48a5-9c29-17bff4a33863__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 1779
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:1779/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:1779/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.239.169/tcp/1780/p2p/16Uiu2HAmV6rapTESfJUaeFN3D57qabzbmPiEtjzW45QaCGx2dmf6","/ip4/172.18.239.169/tcp/1781/ws/p2p/16Uiu2HAmV6rapTESfJUaeFN3D57qabzbmPiEtjzW45QaCGx2dmf6"],"enrUri":"enr:-L24QAeiYeMO1nUgE4ZA-n5o1TEu7Ck1MX1BRzHch94UDzsiTi-g__OtbUtcidf-Mv60dZEBmqRNaTtWMBe__XYe6BICgmlkgnY0gmlwhKwS76mKbXVsdGlhZGRyc5YACASsEu-pBgb0AAoErBLvqQYG9d0DgnJzhQADAQAAiXNlY3AyNTZrMaED9FtPWqKWfVpa5WZ5_Fruz3xuXzj2dDCFJZZN2fjeayGDdGNwggb0g3VkcIIG9oV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:1779/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.11.179/tcp/44480/p2p/16Uiu2HAkxq9pf5A1JTtkjuZ56UVdietj7HDrWNupkq7Uhtio2GvH"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:44479/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:1779/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1d97ac16-ae64-4acf-ba69-6c0afacc2e0b", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"1d97ac16-ae64-4acf-ba69-6c0afacc2e0b","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:1779/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:1779/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 1655eebd74b7
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 69209703c94b
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 1655eebd74b7. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.