[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_invalid_request_id with id: 2024-12-24_04-10-06__0d1d4d1c-5d6b-48b5-9dec-7e4ea1aa6480
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-12-24_04-10-06__0d1d4d1c-5d6b-48b5-9dec-7e4ea1aa6480__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.71.210
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['38422', '38423', '38424', '38425', '38426']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 38422:38422 -p 38423:38423 -p 38424:38424 -p 38425:38425 -p 38426:38426 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=38424 --rest-port=38422 --tcp-port=38423 --discv5-udp-port=38425 --rest-address=0.0.0.0 --nat=extip:172.18.71.210 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=c7b43fda48dde92ac0aabc39ab30d0cc329dac47eed32ff3fca7a6de26dcd6c4 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=38426 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.71.210 waku eb1e7c447f7a451e2a45727f8c107d5526a969fabb7136e754c02e0e9db5cecc
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID eb1e7c447f7a. Setting up logs at ./log/docker/node1_2024-12-24_04-10-06__0d1d4d1c-5d6b-48b5-9dec-7e4ea1aa6480__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 38422
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container b9b4e653c9a8. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38422/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38422/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.71.210/tcp/38423/p2p/16Uiu2HAm9pNcsUSAc8eMkpXLD7TzB5szDyS7r3iXdkKD39d1HtPS","/ip4/172.18.71.210/tcp/38424/ws/p2p/16Uiu2HAm9pNcsUSAc8eMkpXLD7TzB5szDyS7r3iXdkKD39d1HtPS"],"enrUri":"enr:-L24QHEwjskkibLlEFso_O2XaB4eRLx0_dhqYknnIBX0toKcV6IxV1Ytc4neOh_DTkDUvWIFCQaj3D7ToFqRDtEVf50CgmlkgnY0gmlwhKwSR9KKbXVsdGlhZGRyc5YACASsEkfSBpYXAAoErBJH0gaWGN0DgnJzhQADAQAAiXNlY3AyNTZrMaEC1dRYghbe0yOatMroPnhgDto6vA5If4C4qpjpzu3sI0GDdGNwgpYXg3VkcIKWGYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-12-24_04-10-06__0d1d4d1c-5d6b-48b5-9dec-7e4ea1aa6480__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.120.237
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['42676', '42677', '42678', '42679', '42680']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 42676:42676 -p 42677:42677 -p 42678:42678 -p 42679:42679 -p 42680:42680 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=42678 --rest-port=42676 --tcp-port=42677 --discv5-udp-port=42679 --rest-address=0.0.0.0 --nat=extip:172.18.120.237 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b02bd3e6c448573546ece9a6ab28c2fed512bad5dffcfb8b7632ef7cde5b8cbc --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=42680 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QHEwjskkibLlEFso_O2XaB4eRLx0_dhqYknnIBX0toKcV6IxV1Ytc4neOh_DTkDUvWIFCQaj3D7ToFqRDtEVf50CgmlkgnY0gmlwhKwSR9KKbXVsdGlhZGRyc5YACASsEkfSBpYXAAoErBJH0gaWGN0DgnJzhQADAQAAiXNlY3AyNTZrMaEC1dRYghbe0yOatMroPnhgDto6vA5If4C4qpjpzu3sI0GDdGNwgpYXg3VkcIKWGYV3YWt1MgU --filternode=/ip4/172.18.71.210/tcp/38423/p2p/16Uiu2HAm9pNcsUSAc8eMkpXLD7TzB5szDyS7r3iXdkKD39d1HtPS
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.120.237 waku 233006ced747886b604457a37bad7b50348f243924c31a1f13ead751d26bfead
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 233006ced747. Setting up logs at ./log/docker/node2_2024-12-24_04-10-06__0d1d4d1c-5d6b-48b5-9dec-7e4ea1aa6480__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 42676
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:42676/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:42676/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.120.237/tcp/42677/p2p/16Uiu2HAm9cJnUt3BupE8LBFsN86sXxD2MkkE1kgjM1MaCFxuoDhn","/ip4/172.18.120.237/tcp/42678/ws/p2p/16Uiu2HAm9cJnUt3BupE8LBFsN86sXxD2MkkE1kgjM1MaCFxuoDhn"],"enrUri":"enr:-L24QMEwZI3FvPmDz1cohYJyGBhAhM8XES4pkjvH2P4DpU9OPYGUKQT_aiFCRXzr3c0ATTp3Z3JefojPacZdtdmtS-ICgmlkgnY0gmlwhKwSeO2KbXVsdGlhZGRyc5YACASsEnjtBqa1AAoErBJ47Qamtt0DgnJzhQADAQAAiXNlY3AyNTZrMaEC0r0KYpNFRnaEKbD34z85S0xKaaJ2RZIoaJOAfgZh2r2DdGNwgqa1g3VkcIKmt4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:42676/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.71.210/tcp/38423/p2p/16Uiu2HAm9pNcsUSAc8eMkpXLD7TzB5szDyS7r3iXdkKD39d1HtPS"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38422/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:42676/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "2fce132e-24af-4dca-aa82-386865ef0329", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"2fce132e-24af-4dca-aa82-386865ef0329","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:42676/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:42676/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id eb1e7c447f7a
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 233006ced747
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container eb1e7c447f7a. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.