[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_no_request_id with id: 2024-09-09_04-17-40__c47e9a09-050e-4e09-ac04-b355b302c77d
[35mDEBUG   [0m src.steps.common:common.py:17 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-09-09_04-17-40__c47e9a09-050e-4e09-ac04-b355b302c77d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.10.121
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['17558', '17559', '17560', '17561', '17562']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 17558:17558 -p 17559:17559 -p 17560:17560 -p 17561:17561 -p 17562:17562 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=17560 --rest-port=17558 --tcp-port=17559 --discv5-udp-port=17561 --rest-address=0.0.0.0 --nat=extip:172.18.10.121 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=f0d6afcc2fd27d686d605db20edd2a8efdde9075cf5da0cba2bcef5ba6dabaab --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=17562 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.10.121 waku 21b104f8587fedd1f89064689e6aa77e2935997970536c735834caac16adf88e
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID 21b104f8587f. Setting up logs at ./log/docker/node1_2024-09-09_04-17-40__c47e9a09-050e-4e09-ac04-b355b302c77d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 17558
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17558/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17558/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.10.121/tcp/17559/p2p/16Uiu2HAmBZZpjfRzgSjeQooYmPGBuyA3DjReSPGaLtFToLBfVpD7","/ip4/172.18.10.121/tcp/17560/ws/p2p/16Uiu2HAmBZZpjfRzgSjeQooYmPGBuyA3DjReSPGaLtFToLBfVpD7"],"enrUri":"enr:-LO4QN8i6-wkTm47JmL5DioK9Bej5rGfThpHm1PodlmCev4xF9lafTtA0QZ2hkLHqaJyC5HxL_SfgJqFHzpKeIWHcf0BgmlkgnY0gmlwhKwSCnmKbXVsdGlhZGRyc4wACgSsEgp5BkSY3QOCcnOFAAMBAACJc2VjcDI1NmsxoQLvwK0vaVy6dScAlAAFqVMnSDNf9wXIGf9z2rp7Y5YlGoN0Y3CCRJeDdWRwgkSZhXdha3UyBQ"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:18 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-09-09_04-17-40__c47e9a09-050e-4e09-ac04-b355b302c77d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:21 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:24 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:81 Generated random external IP 172.18.19.11
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:74 Generated ports ['42250', '42251', '42252', '42253', '42254']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:434 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:163 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:165 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:48 docker run -i -t -p 42250:42250 -p 42251:42251 -p 42252:42252 -p 42253:42253 -p 42254:42254 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=42252 --rest-port=42250 --tcp-port=42251 --discv5-udp-port=42253 --rest-address=0.0.0.0 --nat=extip:172.18.19.11 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=dc1acbf418222f1ccacc28e6bcdec06391034be9a19e45a46273f1cef67dcdd5 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=42254 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-LO4QN8i6-wkTm47JmL5DioK9Bej5rGfThpHm1PodlmCev4xF9lafTtA0QZ2hkLHqaJyC5HxL_SfgJqFHzpKeIWHcf0BgmlkgnY0gmlwhKwSCnmKbXVsdGlhZGRyc4wACgSsEgp5BkSY3QOCcnOFAAMBAACJc2VjcDI1NmsxoQLvwK0vaVy6dScAlAAFqVMnSDNf9wXIGf9z2rp7Y5YlGoN0Y3CCRJeDdWRwgkSZhXdha3UyBQ --filternode=/ip4/172.18.10.121/tcp/17559/p2p/16Uiu2HAmBZZpjfRzgSjeQooYmPGBuyA3DjReSPGaLtFToLBfVpD7
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:54 docker network connect --ip 172.18.19.11 waku a7bd9682a10f97a3415ae57404a676da5b5e94996504bb81d22f003785724adc
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:57 Container started with ID a7bd9682a10f. Setting up logs at ./log/docker/node2_2024-09-09_04-17-40__c47e9a09-050e-4e09-ac04-b355b302c77d__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:177 Started container from image wakuorg/nwaku:latest. REST: 42250
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:42250/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:277 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:42250/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.19.11/tcp/42251/p2p/16Uiu2HAm5Xrar56GNuTE6jKQ6Z5jnAbBVHVh8NffuXafYRdBXF1G","/ip4/172.18.19.11/tcp/42252/ws/p2p/16Uiu2HAm5Xrar56GNuTE6jKQ6Z5jnAbBVHVh8NffuXafYRdBXF1G"],"enrUri":"enr:-LO4QGGjL1aXHUbFAppJTPmBzvz3T4wQU06kZJDN3j-R44NHYdsng9cLIVgoSRxT4e7hnSODcq8eWB5IZtLobsFOx3ABgmlkgnY0gmlwhKwSEwuKbXVsdGlhZGRyc4wACgSsEhMLBqUM3QOCcnOFAAMBAACJc2VjcDI1NmsxoQKWKlgyI-HgWkGXbfOtmMCt-eO28VeJUsmaO9TlDZRpV4N0Y3CCpQuDdWRwgqUNhXdha3UyAA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:42250/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.10.121/tcp/17559/p2p/16Uiu2HAmBZZpjfRzgSjeQooYmPGBuyA3DjReSPGaLtFToLBfVpD7"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17558/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:42250/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "0985f6ca-c34f-491f-b4e1-eb6ccbf422e1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"0985f6ca-c34f-491f-b4e1-eb6ccbf422e1","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:42250/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:42250/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id 21b104f8587f
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:221 Stopping container with id a7bd9682a10f
[35mDEBUG   [0m src.node.waku_node:waku_node.py:228 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:117 No errors found in the waku logs.