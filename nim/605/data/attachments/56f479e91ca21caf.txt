[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_no_request_id with id: 2025-01-05_18-39-58__5145af96-881c-4180-8518-f99f2fabb189
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-05_18-39-58__5145af96-881c-4180-8518-f99f2fabb189__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.146.91
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['43228', '43229', '43230', '43231', '43232']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 43228:43228 -p 43229:43229 -p 43230:43230 -p 43231:43231 -p 43232:43232 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=43230 --rest-port=43228 --tcp-port=43229 --discv5-udp-port=43231 --rest-address=0.0.0.0 --nat=extip:172.18.146.91 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=a40cdfd29affdd0240b85e9fd72020a2f41e3e2c7dc7775c3fd51f08fac66b4a --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=43232 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.146.91 waku 652d865119cacc92d3211f5ef3a186b3e7558018fda3ea3d9afcd23e6fc6e509
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 652d865119ca. Setting up logs at ./log/docker/node1_2025-01-05_18-39-58__5145af96-881c-4180-8518-f99f2fabb189__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 43228
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container d1f9c4f57066. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:43228/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:43228/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.146.91/tcp/43229/p2p/16Uiu2HAkvwL41nRJFPvEYFywKBtpXJVMQPbyUTkQJyEijHCSkxRy","/ip4/172.18.146.91/tcp/43230/ws/p2p/16Uiu2HAkvwL41nRJFPvEYFywKBtpXJVMQPbyUTkQJyEijHCSkxRy"],"enrUri":"enr:-L24QG78r9gzIo-QJgN_GXGfrDFTsBUnzooEhNSYSB0R9268ZvErwjCeo5dM6ekb1vkJuBXocOE6djY3RYrI7z2LFi0CgmlkgnY0gmlwhKwSkluKbXVsdGlhZGRyc5YACASsEpJbBqjdAAoErBKSWwao3t0DgnJzhQADAQAAiXNlY3AyNTZrMaECFnSUVEALcUI11QZG6LFQmQWI_Bu1jAxz8g3Z1SQnQYyDdGNwgqjdg3VkcIKo34V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-05_18-39-58__5145af96-881c-4180-8518-f99f2fabb189__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.12.120
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['17652', '17653', '17654', '17655', '17656']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 17652:17652 -p 17653:17653 -p 17654:17654 -p 17655:17655 -p 17656:17656 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=17654 --rest-port=17652 --tcp-port=17653 --discv5-udp-port=17655 --rest-address=0.0.0.0 --nat=extip:172.18.12.120 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=6cc539138011e6110768348cd589ae28b62f2d7f73e047616afc184db6ba2f87 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=17656 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QG78r9gzIo-QJgN_GXGfrDFTsBUnzooEhNSYSB0R9268ZvErwjCeo5dM6ekb1vkJuBXocOE6djY3RYrI7z2LFi0CgmlkgnY0gmlwhKwSkluKbXVsdGlhZGRyc5YACASsEpJbBqjdAAoErBKSWwao3t0DgnJzhQADAQAAiXNlY3AyNTZrMaECFnSUVEALcUI11QZG6LFQmQWI_Bu1jAxz8g3Z1SQnQYyDdGNwgqjdg3VkcIKo34V3YWt1MgU --filternode=/ip4/172.18.146.91/tcp/43229/p2p/16Uiu2HAkvwL41nRJFPvEYFywKBtpXJVMQPbyUTkQJyEijHCSkxRy
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.12.120 waku 1d29d1f7b8fdbaed9f4bd98aea03703ebd4d41e89d9443eab4eac0cc33202e95
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 1d29d1f7b8fd. Setting up logs at ./log/docker/node2_2025-01-05_18-39-58__5145af96-881c-4180-8518-f99f2fabb189__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 17652
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17652/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:17652/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.12.120/tcp/17653/p2p/16Uiu2HAmDEubeq4C56neR3coHqpubVAFgNddwkeTBtFLGzggBGrN","/ip4/172.18.12.120/tcp/17654/ws/p2p/16Uiu2HAmDEubeq4C56neR3coHqpubVAFgNddwkeTBtFLGzggBGrN"],"enrUri":"enr:-L24QLm3xgBM8CGw-jSyCmECUKrqobF-oKKdwa-qr9K-MDAKSv3FWul7zDX7h-G2wsikC7Cz5cKIIulpY8bhWoeaAj4CgmlkgnY0gmlwhKwSDHiKbXVsdGlhZGRyc5YACASsEgx4BkT1AAoErBIMeAZE9t0DgnJzhQADAQAAiXNlY3AyNTZrMaEDCLBfvmCg6U-bQ3CnRtxKOg7QQe3x216Htlr4JNFz-2uDdGNwgkT1g3VkcIJE94V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17652/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.146.91/tcp/43229/p2p/16Uiu2HAkvwL41nRJFPvEYFywKBtpXJVMQPbyUTkQJyEijHCSkxRy"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:43228/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17652/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "cc9475cd-bc1d-4c9d-837e-57afd6793d6e", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"cc9475cd-bc1d-4c9d-837e-57afd6793d6e","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:17652/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:17652/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 652d865119ca
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 1d29d1f7b8fd
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 652d865119ca. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.