[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_extra_field with id: 2025-01-05_18-39-42__21cc3c0b-d4a6-4685-a634-cfa510c37920
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-05_18-39-42__21cc3c0b-d4a6-4685-a634-cfa510c37920__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.152.86
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['18187', '18188', '18189', '18190', '18191']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 18187:18187 -p 18188:18188 -p 18189:18189 -p 18190:18190 -p 18191:18191 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=18189 --rest-port=18187 --tcp-port=18188 --discv5-udp-port=18190 --rest-address=0.0.0.0 --nat=extip:172.18.152.86 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=1b3dc933ffffc12a3bceedef1c70bb32ca5d78e2bf6ebffbecef046a0ead46bb --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=18191 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.152.86 waku ade4b650d4bc5c0c2dc63d6e02974da2bd680b1fd5fa9f316638b32de6a8cc2e
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID ade4b650d4bc. Setting up logs at ./log/docker/node1_2025-01-05_18-39-42__21cc3c0b-d4a6-4685-a634-cfa510c37920__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 18187
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 895f0bff22d7. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:18187/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:18187/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.152.86/tcp/18188/p2p/16Uiu2HAm7ff6QpQcu6qKpZe2nrf3gxGCEub2Bgm871LezrHSMwYd","/ip4/172.18.152.86/tcp/18189/ws/p2p/16Uiu2HAm7ff6QpQcu6qKpZe2nrf3gxGCEub2Bgm871LezrHSMwYd"],"enrUri":"enr:-L24QCWrCuT_hBN3Xsd1IpghrtGdzHCxKhqTGg7tsvg7-Lj1b21jD39W1in73175JKURrLIAm3wNT5EVtXMoWzqiVPgCgmlkgnY0gmlwhKwSmFaKbXVsdGlhZGRyc5YACASsEphWBkcMAAoErBKYVgZHDd0DgnJzhQADAQAAiXNlY3AyNTZrMaECteFfbOvSncC4XnISUUh7nKKwR7Cq6dFyYiCSN0Td1DKDdGNwgkcMg3VkcIJHDoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-05_18-39-42__21cc3c0b-d4a6-4685-a634-cfa510c37920__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.140.42
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['53630', '53631', '53632', '53633', '53634']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 53630:53630 -p 53631:53631 -p 53632:53632 -p 53633:53633 -p 53634:53634 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=53632 --rest-port=53630 --tcp-port=53631 --discv5-udp-port=53633 --rest-address=0.0.0.0 --nat=extip:172.18.140.42 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=db8b5afc8a3f40b48ed0cd6cf5b8adacb90338cfec2241f88cc4e0195bcdadb7 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=53634 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QCWrCuT_hBN3Xsd1IpghrtGdzHCxKhqTGg7tsvg7-Lj1b21jD39W1in73175JKURrLIAm3wNT5EVtXMoWzqiVPgCgmlkgnY0gmlwhKwSmFaKbXVsdGlhZGRyc5YACASsEphWBkcMAAoErBKYVgZHDd0DgnJzhQADAQAAiXNlY3AyNTZrMaECteFfbOvSncC4XnISUUh7nKKwR7Cq6dFyYiCSN0Td1DKDdGNwgkcMg3VkcIJHDoV3YWt1MgU --filternode=/ip4/172.18.152.86/tcp/18188/p2p/16Uiu2HAm7ff6QpQcu6qKpZe2nrf3gxGCEub2Bgm871LezrHSMwYd
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.140.42 waku 3f23a7a8556e8f65ebe21034a4323fee38a4e3807800af67a35ec39a7979963c
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 3f23a7a8556e. Setting up logs at ./log/docker/node2_2025-01-05_18-39-42__21cc3c0b-d4a6-4685-a634-cfa510c37920__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 53630
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:53630/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:53630/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.140.42/tcp/53631/p2p/16Uiu2HAm5gmytViKYhMp5oMxgbvGttRaEN74E2tXGkysyxbht4NQ","/ip4/172.18.140.42/tcp/53632/ws/p2p/16Uiu2HAm5gmytViKYhMp5oMxgbvGttRaEN74E2tXGkysyxbht4NQ"],"enrUri":"enr:-L24QAVIucSLLCSZqEI3KHdhrvgrdiVj37_1UVH95MOz0f93Mp9vAKbEEqp31Kmy9n5TXw4y0aLFh6RCi-oa7LCW4ngCgmlkgnY0gmlwhKwSjCqKbXVsdGlhZGRyc5YACASsEowqBtF_AAoErBKMKgbRgN0DgnJzhQADAQAAiXNlY3AyNTZrMaECmHNeEuoyoKOVNNOv_t6l-goDn1d6tPpsqzN5MZZONb2DdGNwgtF_g3VkcILRgYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:53630/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.152.86/tcp/18188/p2p/16Uiu2HAm7ff6QpQcu6qKpZe2nrf3gxGCEub2Bgm871LezrHSMwYd"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:18187/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:53630/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1d5f0de0-ea26-4909-aa8d-f14d48c9c6a5", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"1d5f0de0-ea26-4909-aa8d-f14d48c9c6a5","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:53630/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:53630/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id ade4b650d4bc
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 3f23a7a8556e
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container ade4b650d4bc. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.