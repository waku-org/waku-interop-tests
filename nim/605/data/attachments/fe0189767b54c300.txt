[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_extra_field with id: 2025-01-05_18-39-00__6c136a0f-c4b1-4f70-bca6-8c33bd85e1a5
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-05_18-39-00__6c136a0f-c4b1-4f70-bca6-8c33bd85e1a5__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.236.21
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['24770', '24771', '24772', '24773', '24774']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 24770:24770 -p 24771:24771 -p 24772:24772 -p 24773:24773 -p 24774:24774 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=24772 --rest-port=24770 --tcp-port=24771 --discv5-udp-port=24773 --rest-address=0.0.0.0 --nat=extip:172.18.236.21 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=f8ef07f5d4aae8f56afd13cc56ecf411c6dd2ff15ba6d54eed1b72c46eea3f5e --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=24774 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.236.21 waku 70488bda015e36620eb963cda2b0734b3950688cb62e4d27d52a336fa5fff113
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 70488bda015e. Setting up logs at ./log/docker/node1_2025-01-05_18-39-00__6c136a0f-c4b1-4f70-bca6-8c33bd85e1a5__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 24770
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container c8ef686a2750. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:24770/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:24770/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.236.21/tcp/24771/p2p/16Uiu2HAmE6KZydbijyT99C8cYWXwutANMNjLjNgiMcwTCfpnxwtG","/ip4/172.18.236.21/tcp/24772/ws/p2p/16Uiu2HAmE6KZydbijyT99C8cYWXwutANMNjLjNgiMcwTCfpnxwtG"],"enrUri":"enr:-L24QMvQncR80syPSal5nTL-VDS6G9pDKPt88sVkRybGK3E8ajifu2Zrr44IHHdEIfxXnPrtOOXjZ_abfY2sjYM4-LACgmlkgnY0gmlwhKwS7BWKbXVsdGlhZGRyc5YACASsEuwVBmDDAAoErBLsFQZgxN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDFVjwF5cQCr9OVEBeE1pNFJ9qHizC8vDVIhQI0Dydpv2DdGNwgmDDg3VkcIJgxYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-05_18-39-00__6c136a0f-c4b1-4f70-bca6-8c33bd85e1a5__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.97.246
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['46947', '46948', '46949', '46950', '46951']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 46947:46947 -p 46948:46948 -p 46949:46949 -p 46950:46950 -p 46951:46951 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=46949 --rest-port=46947 --tcp-port=46948 --discv5-udp-port=46950 --rest-address=0.0.0.0 --nat=extip:172.18.97.246 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=bba09f8d5159f8a1fd0b5da1bbdae31a97e4434036a7caaf009d1af158aacc88 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=46951 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QMvQncR80syPSal5nTL-VDS6G9pDKPt88sVkRybGK3E8ajifu2Zrr44IHHdEIfxXnPrtOOXjZ_abfY2sjYM4-LACgmlkgnY0gmlwhKwS7BWKbXVsdGlhZGRyc5YACASsEuwVBmDDAAoErBLsFQZgxN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDFVjwF5cQCr9OVEBeE1pNFJ9qHizC8vDVIhQI0Dydpv2DdGNwgmDDg3VkcIJgxYV3YWt1MgU --filternode=/ip4/172.18.236.21/tcp/24771/p2p/16Uiu2HAmE6KZydbijyT99C8cYWXwutANMNjLjNgiMcwTCfpnxwtG
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.97.246 waku 3ac646204c268a270e4e9e34cf7ce3502099124df945bf7eba87381168106512
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 3ac646204c26. Setting up logs at ./log/docker/node2_2025-01-05_18-39-00__6c136a0f-c4b1-4f70-bca6-8c33bd85e1a5__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 46947
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:46947/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:46947/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.97.246/tcp/46948/p2p/16Uiu2HAm3Wa82uz1xwfmQWMR18mUH61UVR9Jmh6dNnycLZFrJVSc","/ip4/172.18.97.246/tcp/46949/ws/p2p/16Uiu2HAm3Wa82uz1xwfmQWMR18mUH61UVR9Jmh6dNnycLZFrJVSc"],"enrUri":"enr:-L24QCIntAEhFQr3TCZH6ApdXa88GBpTruOmLi52VZQ7lHZXdWxhktopiuWVmyIvYFlAzKZAThQtTOZrKsKOnmVlZT0CgmlkgnY0gmlwhKwSYfaKbXVsdGlhZGRyc5YACASsEmH2BrdkAAoErBJh9ga3Zd0DgnJzhQADAQAAiXNlY3AyNTZrMaECeB7Gn_LnPq6PBCCKFkl0s_Ltnw1bIyNFsXEtwj77v7WDdGNwgrdkg3VkcIK3ZoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:46947/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.236.21/tcp/24771/p2p/16Uiu2HAmE6KZydbijyT99C8cYWXwutANMNjLjNgiMcwTCfpnxwtG"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:24770/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:46947/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "7b07ed3d-7002-4bb9-8b1f-ecebca2186c1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"7b07ed3d-7002-4bb9-8b1f-ecebca2186c1","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:46947/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:46947/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 70488bda015e
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 3ac646204c26
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 70488bda015e. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.