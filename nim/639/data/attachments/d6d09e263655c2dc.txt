[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_no_request_id with id: 2025-02-04_04-04-13__3b364b63-df8f-49a4-839c-d5d4b55658f4
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-02-04_04-04-13__3b364b63-df8f-49a4-839c-d5d4b55658f4__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.207.111
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['22779', '22780', '22781', '22782', '22783']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 22779:22779 -p 22780:22780 -p 22781:22781 -p 22782:22782 -p 22783:22783 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=22781 --rest-port=22779 --tcp-port=22780 --discv5-udp-port=22782 --rest-address=0.0.0.0 --nat=extip:172.18.207.111 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=f53bd685354cf0ea9a8f2e4dbfca0fd269ab059d55cac0e5b1c3d9d54fc77d03 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=22783 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.207.111 waku 58a4f937a5da6f466e2b625d457a23c70961df220cfa9b940b19134ba4bf9a49
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 58a4f937a5da. Setting up logs at ./log/docker/node1_2025-02-04_04-04-13__3b364b63-df8f-49a4-839c-d5d4b55658f4__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 22779
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 93dd068fbece. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:22779/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:22779/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.207.111/tcp/22780/p2p/16Uiu2HAm2ZFcH4RnFw76mLbGZWEzVYrEoUNGKp9mETXty65TD91G","/ip4/172.18.207.111/tcp/22781/ws/p2p/16Uiu2HAm2ZFcH4RnFw76mLbGZWEzVYrEoUNGKp9mETXty65TD91G"],"enrUri":"enr:-L24QIMKdphhUIEc4nihmiZ8pOmD5UAlDaJ-O4tiH_sUdHV7Eh6GWDfOLLdC-oFD87-plv3cpSDQg4IJ9OPiKS83bJwCgmlkgnY0gmlwhKwSz2-KbXVsdGlhZGRyc5YACASsEs9vBlj8AAoErBLPbwZY_d0DgnJzhQADAQAAiXNlY3AyNTZrMaECafLmDBe4rA3WJHWEywU4roBWEDIu6z9VnEJyF6AmJ2-DdGNwglj8g3VkcIJY_oV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-02-04_04-04-13__3b364b63-df8f-49a4-839c-d5d4b55658f4__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.116.206
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['16166', '16167', '16168', '16169', '16170']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 16166:16166 -p 16167:16167 -p 16168:16168 -p 16169:16169 -p 16170:16170 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=16168 --rest-port=16166 --tcp-port=16167 --discv5-udp-port=16169 --rest-address=0.0.0.0 --nat=extip:172.18.116.206 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=357bb47b6a02a45c93e96cbac17ba201f7c0fb332f93aacb5aebba8bfb8e3540 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=16170 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QIMKdphhUIEc4nihmiZ8pOmD5UAlDaJ-O4tiH_sUdHV7Eh6GWDfOLLdC-oFD87-plv3cpSDQg4IJ9OPiKS83bJwCgmlkgnY0gmlwhKwSz2-KbXVsdGlhZGRyc5YACASsEs9vBlj8AAoErBLPbwZY_d0DgnJzhQADAQAAiXNlY3AyNTZrMaECafLmDBe4rA3WJHWEywU4roBWEDIu6z9VnEJyF6AmJ2-DdGNwglj8g3VkcIJY_oV3YWt1MgU --filternode=/ip4/172.18.207.111/tcp/22780/p2p/16Uiu2HAm2ZFcH4RnFw76mLbGZWEzVYrEoUNGKp9mETXty65TD91G
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.116.206 waku f3a12565c8ccabd3a2c394337eeef007d3bcfa05157bdc85c6ff7d305377433a
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID f3a12565c8cc. Setting up logs at ./log/docker/node2_2025-02-04_04-04-13__3b364b63-df8f-49a4-839c-d5d4b55658f4__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 16166
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:16166/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:16166/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.116.206/tcp/16167/p2p/16Uiu2HAmPo9CpoeqBMAykjH1oEhSmBJ9DL2fn1XcQT6non7X8Nvz","/ip4/172.18.116.206/tcp/16168/ws/p2p/16Uiu2HAmPo9CpoeqBMAykjH1oEhSmBJ9DL2fn1XcQT6non7X8Nvz"],"enrUri":"enr:-L24QM1qDIxOsVBs5HqYfwykZQcE_WA9ABcHSMusOIqpMXXZaownL-iI9VLb_xaWFwo6imYmerkbB9yzoOOJAqjZXFYCgmlkgnY0gmlwhKwSdM6KbXVsdGlhZGRyc5YACASsEnTOBj8nAAoErBJ0zgY_KN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDpYc2xvpn_oaPhw78rac_kmZsOLhSFCwkuLvXN_kNPCeDdGNwgj8ng3VkcII_KYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:16166/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.207.111/tcp/22780/p2p/16Uiu2HAm2ZFcH4RnFw76mLbGZWEzVYrEoUNGKp9mETXty65TD91G"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:22779/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:16166/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "89caf19a-d2eb-4b4b-b573-3ed89acd5caa", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"89caf19a-d2eb-4b4b-b573-3ed89acd5caa","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:16166/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:16166/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 58a4f937a5da
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id f3a12565c8cc
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 58a4f937a5da. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.