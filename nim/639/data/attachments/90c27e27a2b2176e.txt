[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_extra_field with id: 2025-02-04_04-04-00__f0bdeeab-be53-48b2-aead-3c353b9c7b6e
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-02-04_04-04-00__f0bdeeab-be53-48b2-aead-3c353b9c7b6e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.43.201
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['38366', '38367', '38368', '38369', '38370']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 38366:38366 -p 38367:38367 -p 38368:38368 -p 38369:38369 -p 38370:38370 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=38368 --rest-port=38366 --tcp-port=38367 --discv5-udp-port=38369 --rest-address=0.0.0.0 --nat=extip:172.18.43.201 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=bcfece4d6d5a9b710e62a8da6a61458ca434f4f986f2babf30e83cea80ed3dee --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=38370 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.43.201 waku ac43ca1dc317d4b293851f6cf5224035b392f9f8b31e5e4eabf81558ba299cea
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID ac43ca1dc317. Setting up logs at ./log/docker/node1_2025-02-04_04-04-00__f0bdeeab-be53-48b2-aead-3c353b9c7b6e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 38366
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 641d08117041. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38366/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:38366/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.43.201/tcp/38367/p2p/16Uiu2HAmMRayuH2ju4WT3jb5gb6L756V1yqwJfGMt8U4pGrxmj75","/ip4/172.18.43.201/tcp/38368/ws/p2p/16Uiu2HAmMRayuH2ju4WT3jb5gb6L756V1yqwJfGMt8U4pGrxmj75"],"enrUri":"enr:-L24QCQHk_AkRK9gpdpkrPO8bfhYek_sx3y0Ulcu2FW5QGP7U40nZ3F81gg0CGgvwJN1Ff58XJbSKe4Nr5YXBmSKwn0CgmlkgnY0gmlwhKwSK8mKbXVsdGlhZGRyc5YACASsEivJBpXfAAoErBIryQaV4N0DgnJzhQADAQAAiXNlY3AyNTZrMaEDgko1bFqcFnvk06dSMiiO98t6C4RilBPgjWuE97RJ-niDdGNwgpXfg3VkcIKV4YV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-02-04_04-04-00__f0bdeeab-be53-48b2-aead-3c353b9c7b6e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.184.7
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['1639', '1640', '1641', '1642', '1643']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 1639:1639 -p 1640:1640 -p 1641:1641 -p 1642:1642 -p 1643:1643 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=1641 --rest-port=1639 --tcp-port=1640 --discv5-udp-port=1642 --rest-address=0.0.0.0 --nat=extip:172.18.184.7 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ac6e0ff6942d64b39a5daf8c440b6dd4c053dfb13bfe8fc23119de62203c8d7d --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=1643 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QCQHk_AkRK9gpdpkrPO8bfhYek_sx3y0Ulcu2FW5QGP7U40nZ3F81gg0CGgvwJN1Ff58XJbSKe4Nr5YXBmSKwn0CgmlkgnY0gmlwhKwSK8mKbXVsdGlhZGRyc5YACASsEivJBpXfAAoErBIryQaV4N0DgnJzhQADAQAAiXNlY3AyNTZrMaEDgko1bFqcFnvk06dSMiiO98t6C4RilBPgjWuE97RJ-niDdGNwgpXfg3VkcIKV4YV3YWt1MgU --filternode=/ip4/172.18.43.201/tcp/38367/p2p/16Uiu2HAmMRayuH2ju4WT3jb5gb6L756V1yqwJfGMt8U4pGrxmj75
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.184.7 waku e5f4d418fc8367efe71ececad46efb29ff66c6375bbc0ab76da4e05f94a5c69e
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID e5f4d418fc83. Setting up logs at ./log/docker/node2_2025-02-04_04-04-00__f0bdeeab-be53-48b2-aead-3c353b9c7b6e__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 1639
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:1639/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:1639/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.184.7/tcp/1640/p2p/16Uiu2HAmR8gj2iMKiwqEcdGGMvFs2nXnpQsLPUr4et9FzgHrompL","/ip4/172.18.184.7/tcp/1641/ws/p2p/16Uiu2HAmR8gj2iMKiwqEcdGGMvFs2nXnpQsLPUr4et9FzgHrompL"],"enrUri":"enr:-L24QHfX551nS5k_2ckM9cuzTnDZK9mj_NMp7EGG3JNP6FqAYDWosz6BFhkApzfQ3GtdJ8KhBCCicyGp-F4yUiwuAQQCgmlkgnY0gmlwhKwSuAeKbXVsdGlhZGRyc5YACASsErgHBgZoAAoErBK4BwYGad0DgnJzhQADAQAAiXNlY3AyNTZrMaEDuWSTsetYECt6Ay05lAOTg_JfBYByTJaGaZiyt2c4JmmDdGNwggZog3VkcIIGaoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:1639/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.43.201/tcp/38367/p2p/16Uiu2HAmMRayuH2ju4WT3jb5gb6L756V1yqwJfGMt8U4pGrxmj75"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:38366/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:1639/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "cf5e5c2f-50cc-476d-9b80-45bcd50cd3f7", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"cf5e5c2f-50cc-476d-9b80-45bcd50cd3f7","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:1639/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:1639/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id ac43ca1dc317
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id e5f4d418fc83
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container ac43ca1dc317. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.