[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_pubsub_topic_list_instead_of_string with id: 2025-02-04_04-03-16__d7b1a0d0-2391-4119-80a6-ed3551f7d61c
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-02-04_04-03-16__d7b1a0d0-2391-4119-80a6-ed3551f7d61c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.189.36
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['15442', '15443', '15444', '15445', '15446']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 15442:15442 -p 15443:15443 -p 15444:15444 -p 15445:15445 -p 15446:15446 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=15444 --rest-port=15442 --tcp-port=15443 --discv5-udp-port=15445 --rest-address=0.0.0.0 --nat=extip:172.18.189.36 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=6cfcbab8505cf151af7f3868bb7bbcdcb9ddb79fbad40ecd6b78aa65fcc8ffbf --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=15446 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.189.36 waku 31a3fa173aaa40461151bcf69e3f05c166501b8223c655284ec750c5b31b3ba3
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 31a3fa173aaa. Setting up logs at ./log/docker/node1_2025-02-04_04-03-16__d7b1a0d0-2391-4119-80a6-ed3551f7d61c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 15442
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container b301a624789f. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:15442/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:15442/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.189.36/tcp/15443/p2p/16Uiu2HAmGtDrxXj26BQr5FFFdJk8S8ehJQNDuhem9ERsoZjegZ68","/ip4/172.18.189.36/tcp/15444/ws/p2p/16Uiu2HAmGtDrxXj26BQr5FFFdJk8S8ehJQNDuhem9ERsoZjegZ68"],"enrUri":"enr:-L24QNwa8UAnPcGhcUespb2R4Bmti4uKpZSZijILPLSgCAyhLje2UHJ8OS-2PLQH9oz_Qm8ZRylETO53d_n_Dz0ODDACgmlkgnY0gmlwhKwSvSSKbXVsdGlhZGRyc5YACASsEr0kBjxTAAoErBK9JAY8VN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDPtKTZHJuOaQQFxB74d0v44C9UD2HuLnQieFQKd1VUlGDdGNwgjxTg3VkcII8VYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-02-04_04-03-16__d7b1a0d0-2391-4119-80a6-ed3551f7d61c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.196.27
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['8183', '8184', '8185', '8186', '8187']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 8183:8183 -p 8184:8184 -p 8185:8185 -p 8186:8186 -p 8187:8187 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=8185 --rest-port=8183 --tcp-port=8184 --discv5-udp-port=8186 --rest-address=0.0.0.0 --nat=extip:172.18.196.27 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=5abef5ecc2af2aa0f6bda4a1de7cb6aa60964729e0eace6857af0e98a97647df --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=8187 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QNwa8UAnPcGhcUespb2R4Bmti4uKpZSZijILPLSgCAyhLje2UHJ8OS-2PLQH9oz_Qm8ZRylETO53d_n_Dz0ODDACgmlkgnY0gmlwhKwSvSSKbXVsdGlhZGRyc5YACASsEr0kBjxTAAoErBK9JAY8VN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDPtKTZHJuOaQQFxB74d0v44C9UD2HuLnQieFQKd1VUlGDdGNwgjxTg3VkcII8VYV3YWt1MgU --filternode=/ip4/172.18.189.36/tcp/15443/p2p/16Uiu2HAmGtDrxXj26BQr5FFFdJk8S8ehJQNDuhem9ERsoZjegZ68
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.196.27 waku 1bd08323668accb581141c8468aa49105c6e9b0053284fc19720cbec6862c574
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 1bd08323668a. Setting up logs at ./log/docker/node2_2025-02-04_04-03-16__d7b1a0d0-2391-4119-80a6-ed3551f7d61c__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image wakuorg/nwaku:latest. REST: 8183
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8183/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:8183/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.196.27/tcp/8184/p2p/16Uiu2HAkvPF3U72RErgqUk4vY2sB63Dgc8NPZdYFZN3ksyQckF5S","/ip4/172.18.196.27/tcp/8185/ws/p2p/16Uiu2HAkvPF3U72RErgqUk4vY2sB63Dgc8NPZdYFZN3ksyQckF5S"],"enrUri":"enr:-L24QI4BygTYMQxKMu43Ia-vb4FNguE6YA5lh-k4LqwdE9lNI5IkJFtEoviirs9KapZsOhPLRn01isvhtlF3YRRGmjoCgmlkgnY0gmlwhKwSxBuKbXVsdGlhZGRyc5YACASsEsQbBh_4AAoErBLEGwYf-d0DgnJzhQADAQAAiXNlY3AyNTZrMaECDjxUUI28V6AH2ACyGdw--4wxgdvYWuuRy1G2GAB1lkGDdGNwgh_4g3VkcIIf-oV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8183/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.189.36/tcp/15443/p2p/16Uiu2HAmGtDrxXj26BQr5FFFdJk8S8ehJQNDuhem9ERsoZjegZ68"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:15442/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:8183/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "8a4630bd-a7d4-49a5-9a88-c030d182aa07", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"8a4630bd-a7d4-49a5-9a88-c030d182aa07","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:8183/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": ["/waku/2/rs/3/1"]}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:8183/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 31a3fa173aaa
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 1bd08323668a
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 31a3fa173aaa. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.