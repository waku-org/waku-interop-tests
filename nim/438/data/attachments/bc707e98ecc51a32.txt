[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_all_with_invalid_request_id with id: 2024-11-07_09-03-27__7bbbd2ef-0f83-4599-896d-baf1ca72e4ca
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-07_09-03-27__7bbbd2ef-0f83-4599-896d-baf1ca72e4ca__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.60.51
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['13766', '13767', '13768', '13769', '13770']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 13766:13766 -p 13767:13767 -p 13768:13768 -p 13769:13769 -p 13770:13770 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=13768 --rest-port=13766 --tcp-port=13767 --discv5-udp-port=13769 --rest-address=0.0.0.0 --nat=extip:172.18.60.51 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=bdef5a6e2cfc847bff43be77e06f0d92ebfc43f6d8eedb74a392acc971cd3c0e --max-connections=1000 --filter-subscription-timeout=600 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=13770 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.60.51 waku d218db1f04444f137b0a77a10be969f1194a3984d277755b99027135862beb8b
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container e3e5be0c9b52. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID d218db1f0444. Setting up logs at ./log/docker/node1_2024-11-07_09-03-27__7bbbd2ef-0f83-4599-896d-baf1ca72e4ca__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 13766
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:13766/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:13766/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.60.51/tcp/13767/p2p/16Uiu2HAm4J8A7S3DFX7V8F3igU61oBDxCPgFm1CMMqccSuPvwWyN","/ip4/172.18.60.51/tcp/13768/ws/p2p/16Uiu2HAm4J8A7S3DFX7V8F3igU61oBDxCPgFm1CMMqccSuPvwWyN"],"enrUri":"enr:-L24QJlqsE28ExKrZ9Dv3y1nuXqtJYC5RzmBfuuvduenwLxERvbbJWLcZ2dN7u5xivvFQLANQ4IaT7N4YcP6OFeugwcCgmlkgnY0gmlwhKwSPDOKbXVsdGlhZGRyc5YACASsEjwzBjXHAAoErBI8MwY1yN0DgnJzhQADAQAAiXNlY3AyNTZrMaECg8oio7HWf6mOBXkr297lE8HA26M0R77NDUA1rMEk2tmDdGNwgjXHg3VkcII1yYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-07_09-03-27__7bbbd2ef-0f83-4599-896d-baf1ca72e4ca__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.75.57
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['62001', '62002', '62003', '62004', '62005']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 62001:62001 -p 62002:62002 -p 62003:62003 -p 62004:62004 -p 62005:62005 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=62003 --rest-port=62001 --tcp-port=62002 --discv5-udp-port=62004 --rest-address=0.0.0.0 --nat=extip:172.18.75.57 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=eecb604b69dbc04907ce120434fb23e5c7febe5c279badce6fa63d7a357d60ad --max-connections=1000 --filter-subscription-timeout=600 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=62005 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QJlqsE28ExKrZ9Dv3y1nuXqtJYC5RzmBfuuvduenwLxERvbbJWLcZ2dN7u5xivvFQLANQ4IaT7N4YcP6OFeugwcCgmlkgnY0gmlwhKwSPDOKbXVsdGlhZGRyc5YACASsEjwzBjXHAAoErBI8MwY1yN0DgnJzhQADAQAAiXNlY3AyNTZrMaECg8oio7HWf6mOBXkr297lE8HA26M0R77NDUA1rMEk2tmDdGNwgjXHg3VkcII1yYV3YWt1MgU --filternode=/ip4/172.18.60.51/tcp/13767/p2p/16Uiu2HAm4J8A7S3DFX7V8F3igU61oBDxCPgFm1CMMqccSuPvwWyN
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.75.57 waku 4cfea66b5f2fbb9dfe23f5bf24b03a977868bb5eb63263a5cfc891025021916d
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 4cfea66b5f2f. Setting up logs at ./log/docker/node2_2024-11-07_09-03-27__7bbbd2ef-0f83-4599-896d-baf1ca72e4ca__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 62001
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:62001/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:62001/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.75.57/tcp/62002/p2p/16Uiu2HAmRAt6FX5MfLYksCEdcLYd4xK1jJEGsX3RpjNjTr9swDn2","/ip4/172.18.75.57/tcp/62003/ws/p2p/16Uiu2HAmRAt6FX5MfLYksCEdcLYd4xK1jJEGsX3RpjNjTr9swDn2"],"enrUri":"enr:-L24QEJeEZ-Hmcaiupw6dI-D7Tvf3vjJVbCqqlb3iO49Mg1neEduDLdmd1d9R8pRTo5b262zUoCcYL4TMmE0P0dg1gMCgmlkgnY0gmlwhKwSSzmKbXVsdGlhZGRyc5YACASsEks5BvIyAAoErBJLOQbyM90DgnJzhQADAQAAiXNlY3AyNTZrMaEDufSXCXiuS4WJ1I9sDMywcwQU30PPcfjvSDxknv6_dbODdGNwgvIyg3VkcILyNIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:62001/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.60.51/tcp/13767/p2p/16Uiu2HAm4J8A7S3DFX7V8F3igU61oBDxCPgFm1CMMqccSuPvwWyN"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:13766/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:62001/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "c9b3bcb7-852c-4f0d-b43b-304923c655b4", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"c9b3bcb7-852c-4f0d-b43b-304923c655b4","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:62001/filter/v2/subscriptions/all" -H "Content-Type: application/json" -d '{"requestId": 1}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:62001/filter/v2/subscriptions/all. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id d218db1f0444
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 4cfea66b5f2f
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container d218db1f0444. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.