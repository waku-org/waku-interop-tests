[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_no_content_topic with id: 2024-11-07_09-02-12__ca0b6d29-690d-416d-949e-6f6ca5fc57f7
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2024-11-07_09-02-12__ca0b6d29-690d-416d-949e-6f6ca5fc57f7__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.80.178
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['4831', '4832', '4833', '4834', '4835']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 4831:4831 -p 4832:4832 -p 4833:4833 -p 4834:4834 -p 4835:4835 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=4833 --rest-port=4831 --tcp-port=4832 --discv5-udp-port=4834 --rest-address=0.0.0.0 --nat=extip:172.18.80.178 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=17439e562be19d460bcdbb0ba0c4e7b5f8cb4ef18adfbab39b981dac2f3bfea1 --max-connections=1000 --filter-subscription-timeout=600 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=4835 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.80.178 waku 75887c72116ffe0897165baf8a60e8592161c9b4f7a7b7a3c9f11c27f444fa56
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 026496b6dfca. Exiting log stream.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 75887c72116f. Setting up logs at ./log/docker/node1_2024-11-07_09-02-12__ca0b6d29-690d-416d-949e-6f6ca5fc57f7__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 4831
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:4831/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:4831/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.80.178/tcp/4832/p2p/16Uiu2HAmLD8X5B3fGkJSmFN9BKxgefgtRdCp6nt5qY6ptM6ftWHs","/ip4/172.18.80.178/tcp/4833/ws/p2p/16Uiu2HAmLD8X5B3fGkJSmFN9BKxgefgtRdCp6nt5qY6ptM6ftWHs"],"enrUri":"enr:-L24QE8zcdv-A-5hYd_NGf_g_vHBnBAUc9hQLw1GPNE3c6AIZ8qWDWC2qeKHCiLft-cvDGVfc2rE6QT8U4iMx4uxM0gCgmlkgnY0gmlwhKwSULKKbXVsdGlhZGRyc5YACASsElCyBhLgAAoErBJQsgYS4d0DgnJzhQADAQAAiXNlY3AyNTZrMaEDcD2hdt-EtQbes-e0h1xYuNJrr2Db6d5QO5q_1QdENN6DdGNwghLgg3VkcIIS4oV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image wakuorg/nwaku:latest
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2024-11-07_09-02-12__ca0b6d29-690d-416d-949e-6f6ca5fc57f7__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.1.8
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['13374', '13375', '13376', '13377', '13378']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:436 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:165 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:167 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 13374:13374 -p 13375:13375 -p 13376:13376 -p 13377:13377 -p 13378:13378 wakuorg/nwaku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=13376 --rest-port=13374 --tcp-port=13375 --discv5-udp-port=13377 --rest-address=0.0.0.0 --nat=extip:172.18.1.8 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=0e9f1e0ee1c18f62c6596d5d0f91acad103a4231babfbd2ced9b51d7898d8cde --max-connections=1000 --filter-subscription-timeout=600 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=13378 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QE8zcdv-A-5hYd_NGf_g_vHBnBAUc9hQLw1GPNE3c6AIZ8qWDWC2qeKHCiLft-cvDGVfc2rE6QT8U4iMx4uxM0gCgmlkgnY0gmlwhKwSULKKbXVsdGlhZGRyc5YACASsElCyBhLgAAoErBJQsgYS4d0DgnJzhQADAQAAiXNlY3AyNTZrMaEDcD2hdt-EtQbes-e0h1xYuNJrr2Db6d5QO5q_1QdENN6DdGNwghLgg3VkcIIS4oV3YWt1MgU --filternode=/ip4/172.18.80.178/tcp/4832/p2p/16Uiu2HAmLD8X5B3fGkJSmFN9BKxgefgtRdCp6nt5qY6ptM6ftWHs
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.1.8 waku c11c69b3f28636514b4934ae2c411245ac15c365f3cab7addb4d9e9b06265681
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID c11c69b3f286. Setting up logs at ./log/docker/node2_2024-11-07_09-02-12__ca0b6d29-690d-416d-949e-6f6ca5fc57f7__wakuorg_nwaku:latest.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:179 Started container from image wakuorg/nwaku:latest. REST: 13374
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:13374/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:279 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:13374/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.1.8/tcp/13375/p2p/16Uiu2HAkyTznWHnULjNFGM1wcfCZxtBoP2ZkKnh1CjSdisnfHDQS","/ip4/172.18.1.8/tcp/13376/ws/p2p/16Uiu2HAkyTznWHnULjNFGM1wcfCZxtBoP2ZkKnh1CjSdisnfHDQS"],"enrUri":"enr:-L24QHFTy0-PK2kWv03KlDSj6ZH0W0Kq8kae4Tkz0JAbq-fiEyN5f4sOmdcG3ZBuCXae5yk0xnKAgS2qUWpCqorEn1gCgmlkgnY0gmlwhKwSAQiKbXVsdGlhZGRyc5YACASsEgEIBjQ_AAoErBIBCAY0QN0DgnJzhQADAQAAiXNlY3AyNTZrMaECPAcsMhfdRLXyWZ2rVcd3p6HqdSJGTLSeh05uAgEll_-DdGNwgjQ_g3VkcII0QYV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:284 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:13374/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.80.178/tcp/4832/p2p/16Uiu2HAmLD8X5B3fGkJSmFN9BKxgefgtRdCp6nt5qY6ptM6ftWHs"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:4831/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:13374/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "623ccacc-ebba-4e19-a9d7-cefc1f4d7c84", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"623ccacc-ebba-4e19-a9d7-cefc1f4d7c84","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:13374/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:13374/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id 75887c72116f
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:223 Stopping container with id c11c69b3f286
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 75887c72116f. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:230 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.