{"uid":"1fcc4c4118b5269c","name":"test_publish_with_ephemeral","fullName":"tests.relay.test_publish.TestRelayPublish#test_publish_with_ephemeral","historyId":"9d0e7dcb8c95631a9b5786fe83856984","time":{"start":1705573411315,"stop":1705573411533,"duration":218},"status":"failed","statusMessage":"AssertionError: Ephemeral that failed: [True, False]\nassert not [True, False]","statusTrace":"tests/relay/test_publish.py:179: in test_publish_with_ephemeral\n    assert not failed_ephemeral, f\"Ephemeral that failed: {failed_ephemeral}\"\nE   AssertionError: Ephemeral that failed: [True, False]\nE   assert not [True, False]","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"set_allure_env_variables","time":{"start":1705572838854,"stop":1705572838854,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"test_id","time":{"start":1705573408020,"stop":1705573408020,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"test_setup","time":{"start":1705573408020,"stop":1705573408021,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"close_open_nodes","time":{"start":1705573408020,"stop":1705573408020,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"attach_logs_on_fail","time":{"start":1705573408020,"stop":1705573408020,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"relay_setup","time":{"start":1705573408021,"stop":1705573408021,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"setup_main_relay_nodes","time":{"start":1705573408021,"stop":1705573411193,"duration":3172},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"subscribe_main_relay_nodes","time":{"start":1705573411193,"stop":1705573411200,"duration":7},"status":"passed","steps":[{"name":"ensure_relay_subscriptions_on_nodes","time":{"start":1705573411194,"stop":1705573411199,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"node_list","value":"[<src.node.waku_node.WakuNode object at 0x7f2343e82f90>, <src.node.waku_node.WakuNode object at 0x7f2343e9b4a0>]"},{"name":"pubsub_topic_list","value":"['/waku/2/rs/0/1']"}],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0},{"name":"relay_warm_up","time":{"start":1705573411200,"stop":1705573411314,"duration":114},"status":"passed","steps":[{"name":"wait_for_published_message_to_reach_relay_peer","time":{"start":1705573411200,"stop":1705573411314,"duration":114},"status":"passed","steps":[{"name":"check_published_message_reaches_relay_peer","time":{"start":1705573411200,"stop":1705573411314,"duration":114},"status":"passed","steps":[{"name":"assert_received_message","time":{"start":1705573411310,"stop":1705573411311,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"sent_message","value":"{'payload': 'UmVsYXkgd29ya3MhIQ==', 'contentTopic': '/test/1/waku-relay/proto', 'timestamp': 1705573411199895040}"},{"name":"index","value":"0"}],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"assert_received_message","time":{"start":1705573411314,"stop":1705573411314,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"sent_message","value":"{'payload': 'UmVsYXkgd29ya3MhIQ==', 'contentTopic': '/test/1/waku-relay/proto', 'timestamp': 1705573411199895040}"},{"name":"index","value":"0"}],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0}],"attachments":[],"parameters":[{"name":"message","value":"{'payload': 'UmVsYXkgd29ya3MhIQ==', 'contentTopic': '/test/1/waku-relay/proto', 'timestamp': 1705573411199895040}"},{"name":"pubsub_topic","value":"None"},{"name":"message_propagation_delay","value":"0.1"},{"name":"sender","value":"None"},{"name":"peer_list","value":"None"}],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0}],"attachments":[],"parameters":[{"name":"timeout_duration","value":"120"},{"name":"time_between_retries","value":"1"},{"name":"pubsub_topic","value":"None"},{"name":"sender","value":"None"},{"name":"peer_list","value":"None"}],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: Ephemeral that failed: [True, False]\nassert not [True, False]","statusTrace":"tests/relay/test_publish.py:179: in test_publish_with_ephemeral\n    assert not failed_ephemeral, f\"Ephemeral that failed: {failed_ephemeral}\"\nE   AssertionError: Ephemeral that failed: [True, False]\nE   assert not [True, False]","steps":[{"name":"create_message","time":{"start":1705573411315,"stop":1705573411315,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"ephemeral","value":"True"}],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"check_published_message_reaches_relay_peer","time":{"start":1705573411315,"stop":1705573411423,"duration":108},"status":"failed","statusMessage":"AssertionError: Incorrect field: ephemeral. Published: True Received: None\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/steps/relay.py\", line 88, in check_published_message_reaches_relay_peer\n    waku_message.assert_received_message(message)\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/waku_message.py\", line 46, in assert_received_message\n    assert str(message.ephemeral) == str(sent_message[\"ephemeral\"]), assert_fail_message(\"ephemeral\")\n","steps":[{"name":"assert_received_message","time":{"start":1705573411423,"stop":1705573411423,"duration":0},"status":"failed","statusMessage":"AssertionError: Incorrect field: ephemeral. Published: True Received: None\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/waku_message.py\", line 46, in assert_received_message\n    assert str(message.ephemeral) == str(sent_message[\"ephemeral\"]), assert_fail_message(\"ephemeral\")\n","steps":[],"attachments":[],"parameters":[{"name":"sent_message","value":"{'payload': 'UmVsYXkgd29ya3MhIQ==', 'contentTopic': '/test/1/waku-relay/proto', 'timestamp': 1705573411314952960, 'ephemeral': True}"},{"name":"index","value":"0"}],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0}],"attachments":[],"parameters":[{"name":"message","value":"{'payload': 'UmVsYXkgd29ya3MhIQ==', 'contentTopic': '/test/1/waku-relay/proto', 'timestamp': 1705573411314952960, 'ephemeral': True}"},{"name":"pubsub_topic","value":"None"},{"name":"message_propagation_delay","value":"0.1"},{"name":"sender","value":"None"},{"name":"peer_list","value":"None"}],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0},{"name":"create_message","time":{"start":1705573411424,"stop":1705573411424,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"ephemeral","value":"False"}],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"check_published_message_reaches_relay_peer","time":{"start":1705573411424,"stop":1705573411532,"duration":108},"status":"failed","statusMessage":"AssertionError: Incorrect field: ephemeral. Published: False Received: None\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/steps/relay.py\", line 88, in check_published_message_reaches_relay_peer\n    waku_message.assert_received_message(message)\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/waku_message.py\", line 46, in assert_received_message\n    assert str(message.ephemeral) == str(sent_message[\"ephemeral\"]), assert_fail_message(\"ephemeral\")\n","steps":[{"name":"assert_received_message","time":{"start":1705573411531,"stop":1705573411531,"duration":0},"status":"failed","statusMessage":"AssertionError: Incorrect field: ephemeral. Published: False Received: None\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/waku-interop-tests/waku-interop-tests/src/node/waku_message.py\", line 46, in assert_received_message\n    assert str(message.ephemeral) == str(sent_message[\"ephemeral\"]), assert_fail_message(\"ephemeral\")\n","steps":[],"attachments":[],"parameters":[{"name":"sent_message","value":"{'payload': 'UmVsYXkgd29ya3MhIQ==', 'contentTopic': '/test/1/waku-relay/proto', 'timestamp': 1705573411424241664, 'ephemeral': False}"},{"name":"index","value":"0"}],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0}],"attachments":[],"parameters":[{"name":"message","value":"{'payload': 'UmVsYXkgd29ya3MhIQ==', 'contentTopic': '/test/1/waku-relay/proto', 'timestamp': 1705573411424241664, 'ephemeral': False}"},{"name":"pubsub_topic","value":"None"},{"name":"message_propagation_delay","value":"0.1"},{"name":"sender","value":"None"},{"name":"peer_list","value":"None"}],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0}],"attachments":[{"uid":"84451cb2bc644f01","name":"log","source":"84451cb2bc644f01.txt","type":"text/plain","size":25248}],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":6,"attachmentsCount":1},"afterStages":[{"name":"test_setup::0","time":{"start":1705573411546,"stop":1705573411548,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"close_open_nodes::0","time":{"start":1705573411549,"stop":1705573416889,"duration":5340},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"attach_logs_on_fail::0","time":{"start":1705573416890,"stop":1705573416893,"duration":3},"status":"passed","steps":[],"attachments":[{"uid":"10ad487514a4d05b","name":"node1_2024-01-18_10-23-28__2d625733-5f9f-4fec-8955-9fe140b6b090__harbor.status.im_wakuorg_go-waku:latest.log","source":"10ad487514a4d05b.txt","type":"text/plain","size":50060},{"uid":"508d7a2953b51153","name":"node2_2024-01-18_10-23-28__2d625733-5f9f-4fec-8955-9fe140b6b090__harbor.status.im_wakuorg_go-waku:latest.log","source":"508d7a2953b51153.txt","type":"text/plain","size":56706}],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2},{"name":"set_allure_env_variables::0","time":{"start":1705573525837,"stop":1705573525838,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0}],"labels":[{"name":"tag","value":"@pytest.mark.usefixtures('setup_main_relay_nodes', 'subscribe_main_relay_nodes', 'relay_warm_up')"},{"name":"parentSuite","value":"tests.relay"},{"name":"suite","value":"test_publish"},{"name":"subSuite","value":"TestRelayPublish"},{"name":"host","value":"fv-az837-944"},{"name":"thread","value":"2028-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.relay.test_publish"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c4f9c1545d8316fc","status":"failed","statusDetails":"AssertionError: Ephemeral that failed: [True, False]\nassert not [True, False]","time":{"start":1705573400720,"stop":1705573400941,"duration":221}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["@pytest.mark.usefixtures('setup_main_relay_nodes', 'subscribe_main_relay_nodes', 'relay_warm_up')"]},"source":"1fcc4c4118b5269c.json","parameterValues":[]}