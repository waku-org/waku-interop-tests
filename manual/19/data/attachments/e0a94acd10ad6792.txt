[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_no_content_topic with id: 2025-01-17_12-37-00__930a8ab6-1c93-4b1d-bd83-16ab58548887
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image quay.io/wakuorg/nwaku-pr:3242
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-17_12-37-00__930a8ab6-1c93-4b1d-bd83-16ab58548887__quay.io_wakuorg_nwaku-pr:3242.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.10.238
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['30164', '30165', '30166', '30167', '30168']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 30164:30164 -p 30165:30165 -p 30166:30166 -p 30167:30167 -p 30168:30168 quay.io/wakuorg/nwaku-pr:3242 --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=30166 --rest-port=30164 --tcp-port=30165 --discv5-udp-port=30167 --rest-address=0.0.0.0 --nat=extip:172.18.10.238 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=fde0bf88fcf6139ed560cfbfaeddd3ceeeacf51be008668b1dbded1cbaac2ba5 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=30168 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.10.238 waku 2eb2604198e1ca2b198b325d01b61f21234dbf99b7c5c6e0d36a6f2ae99ac2eb
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 2eb2604198e1. Setting up logs at ./log/docker/node1_2025-01-17_12-37-00__930a8ab6-1c93-4b1d-bd83-16ab58548887__quay.io_wakuorg_nwaku-pr:3242.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image quay.io/wakuorg/nwaku-pr:3242. REST: 30164
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container afc53a5bc46f. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30164/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30164/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.10.238/tcp/30165/p2p/16Uiu2HAkuZrLN9ZUZw6UjdbvS26RwD1SDPTJzcChAnxKxfb4PFss","/ip4/172.18.10.238/tcp/30166/ws/p2p/16Uiu2HAkuZrLN9ZUZw6UjdbvS26RwD1SDPTJzcChAnxKxfb4PFss"],"enrUri":"enr:-L24QCE1f-xMv93tRYzox8EnU44MmskbwblSIK_WEMuoRgDUNZILG-pIIWDb4eTM89EKKa-CX94Jv7Ewuk97kkyaTj0CgmlkgnY0gmlwhKwSCu6KbXVsdGlhZGRyc5YACASsEgruBnXVAAoErBIK7gZ11t0DgnJzhQADAQAAiXNlY3AyNTZrMaECAhhaxCuZ3keaShHiQ7tU3mvzUC7S1sF6Xzqw37R8HF6DdGNwgnXVg3VkcIJ114V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image quay.io/wakuorg/nwaku-pr:3242
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-17_12-37-00__930a8ab6-1c93-4b1d-bd83-16ab58548887__quay.io_wakuorg_nwaku-pr:3242.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.238.43
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['47069', '47070', '47071', '47072', '47073']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 47069:47069 -p 47070:47070 -p 47071:47071 -p 47072:47072 -p 47073:47073 quay.io/wakuorg/nwaku-pr:3242 --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=47071 --rest-port=47069 --tcp-port=47070 --discv5-udp-port=47072 --rest-address=0.0.0.0 --nat=extip:172.18.238.43 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=64c9934a9b6ffc8be88967a770e3cacdc7aae01b2ceb5afe082fdf1ad5b8579b --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=47073 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QCE1f-xMv93tRYzox8EnU44MmskbwblSIK_WEMuoRgDUNZILG-pIIWDb4eTM89EKKa-CX94Jv7Ewuk97kkyaTj0CgmlkgnY0gmlwhKwSCu6KbXVsdGlhZGRyc5YACASsEgruBnXVAAoErBIK7gZ11t0DgnJzhQADAQAAiXNlY3AyNTZrMaECAhhaxCuZ3keaShHiQ7tU3mvzUC7S1sF6Xzqw37R8HF6DdGNwgnXVg3VkcIJ114V3YWt1MgU --filternode=/ip4/172.18.10.238/tcp/30165/p2p/16Uiu2HAkuZrLN9ZUZw6UjdbvS26RwD1SDPTJzcChAnxKxfb4PFss
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.238.43 waku 70f41340cf5e155795d002676dd45a7c1360e87b8ba8face7b842cb6d14017ee
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 70f41340cf5e. Setting up logs at ./log/docker/node2_2025-01-17_12-37-00__930a8ab6-1c93-4b1d-bd83-16ab58548887__quay.io_wakuorg_nwaku-pr:3242.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image quay.io/wakuorg/nwaku-pr:3242. REST: 47069
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:47069/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:47069/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.238.43/tcp/47070/p2p/16Uiu2HAmQiPyuSZ9h4AAp7sQ5H2BVVs4V3ZsZjkYESp2ckfyT4uj","/ip4/172.18.238.43/tcp/47071/ws/p2p/16Uiu2HAmQiPyuSZ9h4AAp7sQ5H2BVVs4V3ZsZjkYESp2ckfyT4uj"],"enrUri":"enr:-L24QHDHAMThxJlUMcOmb5E0DxHUNSIIAGRS7I7lkLa7loTnRDjuebKZJYZT_o809UwWklrQcBZ2HSdLUx3AjsBylSECgmlkgnY0gmlwhKwS7iuKbXVsdGlhZGRyc5YACASsEu4rBrfeAAoErBLuKwa3390DgnJzhQADAQAAiXNlY3AyNTZrMaEDsyu0ndeDb_yQpGDsXpGMkDf26qcW1ljpd90BzoqXi-6DdGNwgrfeg3VkcIK34IV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:47069/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.10.238/tcp/30165/p2p/16Uiu2HAkuZrLN9ZUZw6UjdbvS26RwD1SDPTJzcChAnxKxfb4PFss"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:30164/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:47069/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "3850caa4-6d02-43a5-af8a-28b4c2187247", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"3850caa4-6d02-43a5-af8a-28b4c2187247","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:47069/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:47069/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 2eb2604198e1
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 70f41340cf5e
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 2eb2604198e1. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.