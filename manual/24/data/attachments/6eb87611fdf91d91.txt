[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_all_with_invalid_request_id with id: 2025-01-30_11-11-42__eece1ab0-6491-42b8-ad69-9fcf58458f78
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image quay.io/wakuorg/nwaku-pr:3234
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-30_11-11-42__eece1ab0-6491-42b8-ad69-9fcf58458f78__quay.io_wakuorg_nwaku-pr:3234.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.184.144
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['52669', '52670', '52671', '52672', '52673']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 52669:52669 -p 52670:52670 -p 52671:52671 -p 52672:52672 -p 52673:52673 quay.io/wakuorg/nwaku-pr:3234 --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=52671 --rest-port=52669 --tcp-port=52670 --discv5-udp-port=52672 --rest-address=0.0.0.0 --nat=extip:172.18.184.144 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=6c2ce94960fc5ccea865093dfd5fb0f9eefa472a489dd82d8eeee39fcef8eeb3 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=52673 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.184.144 waku 582e0d5bdc0d00547355c4f9a49450ac44435dde6a9e9070407f3f9edf296756
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 582e0d5bdc0d. Setting up logs at ./log/docker/node1_2025-01-30_11-11-42__eece1ab0-6491-42b8-ad69-9fcf58458f78__quay.io_wakuorg_nwaku-pr:3234.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image quay.io/wakuorg/nwaku-pr:3234. REST: 52669
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 4112164f99f1. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:52669/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:52669/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.184.144/tcp/52670/p2p/16Uiu2HAmVsX2jGvd1dUYQQbUgBPNczf9jHuD7wzWteGuvhDbpR6L","/ip4/172.18.184.144/tcp/52671/ws/p2p/16Uiu2HAmVsX2jGvd1dUYQQbUgBPNczf9jHuD7wzWteGuvhDbpR6L"],"enrUri":"enr:-L24QCG3d2Q0gGgDPzf7UT7FW1Zovxtmf075-nZzBoH7G73Qe5PD64mRvh6jePjRKTz8P-TEw4H75lkxSGhR_ssNQM0CgmlkgnY0gmlwhKwSuJCKbXVsdGlhZGRyc5YACASsEriQBs2-AAoErBK4kAbNv90DgnJzhQADAQAAiXNlY3AyNTZrMaED_8xWYnTDwqgj-mKiDODwS9cbjoc_7k6KKKCTfnmdZg2DdGNwgs2-g3VkcILNwIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image quay.io/wakuorg/nwaku-pr:3234
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-30_11-11-42__eece1ab0-6491-42b8-ad69-9fcf58458f78__quay.io_wakuorg_nwaku-pr:3234.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.101.25
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['33213', '33214', '33215', '33216', '33217']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 33213:33213 -p 33214:33214 -p 33215:33215 -p 33216:33216 -p 33217:33217 quay.io/wakuorg/nwaku-pr:3234 --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=33215 --rest-port=33213 --tcp-port=33214 --discv5-udp-port=33216 --rest-address=0.0.0.0 --nat=extip:172.18.101.25 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=ba268dc79afa4a7ceb9360f5de440ab5fb373bdf4abd4bdcebebb7d1b9eca436 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=33217 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QCG3d2Q0gGgDPzf7UT7FW1Zovxtmf075-nZzBoH7G73Qe5PD64mRvh6jePjRKTz8P-TEw4H75lkxSGhR_ssNQM0CgmlkgnY0gmlwhKwSuJCKbXVsdGlhZGRyc5YACASsEriQBs2-AAoErBK4kAbNv90DgnJzhQADAQAAiXNlY3AyNTZrMaED_8xWYnTDwqgj-mKiDODwS9cbjoc_7k6KKKCTfnmdZg2DdGNwgs2-g3VkcILNwIV3YWt1MgU --filternode=/ip4/172.18.184.144/tcp/52670/p2p/16Uiu2HAmVsX2jGvd1dUYQQbUgBPNczf9jHuD7wzWteGuvhDbpR6L
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.101.25 waku faa27f655897f4523ed20e3806e90bccb6e57f1e242676b647523b11c6fb8415
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID faa27f655897. Setting up logs at ./log/docker/node2_2025-01-30_11-11-42__eece1ab0-6491-42b8-ad69-9fcf58458f78__quay.io_wakuorg_nwaku-pr:3234.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image quay.io/wakuorg/nwaku-pr:3234. REST: 33213
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33213/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33213/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.101.25/tcp/33214/p2p/16Uiu2HAmSExs24S4GLfZnP1wCRCSj1gETZvKcJjtdoQEU6zCyq4e","/ip4/172.18.101.25/tcp/33215/ws/p2p/16Uiu2HAmSExs24S4GLfZnP1wCRCSj1gETZvKcJjtdoQEU6zCyq4e"],"enrUri":"enr:-L24QBGbqJQs3z3EI406bS-IymywahwRRj71MiSKzDQl8yCzG1mrLFWE14jlEglzCdImxlvow_BHWW_SKT8vtNkky-MCgmlkgnY0gmlwhKwSZRmKbXVsdGlhZGRyc5YACASsEmUZBoG-AAoErBJlGQaBv90DgnJzhQADAQAAiXNlY3AyNTZrMaEDydv-5vHZfrCaikEDH7-Ih8ZrmY3vjQTbCXLLyeAMtmODdGNwgoG-g3VkcIKBwIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:33213/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.184.144/tcp/52670/p2p/16Uiu2HAmVsX2jGvd1dUYQQbUgBPNczf9jHuD7wzWteGuvhDbpR6L"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:52669/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:33213/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "8072e0c6-b7dc-474d-a500-5adf78796839", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"8072e0c6-b7dc-474d-a500-5adf78796839","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:33213/filter/v2/subscriptions/all" -H "Content-Type: application/json" -d '{"requestId": 1}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:33213/filter/v2/subscriptions/all. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 582e0d5bdc0d
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id faa27f655897
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 582e0d5bdc0d. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.