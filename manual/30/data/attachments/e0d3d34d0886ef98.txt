2025-02-06 15:36:25.358 DEBUG [tests.conftest] Running fixture setup: test_id
2025-02-06 15:36:25.359 DEBUG [tests.conftest] Running test: test_publish_with_missing_payload with id: 2025-02-06_15-36-25__691ae157-8e23-4e6d-ba57-c3bf7b16ead2
2025-02-06 15:36:25.359 DEBUG [src.steps.common] Running fixture setup: common_setup
2025-02-06 15:36:25.359 DEBUG [src.steps.relay] Running fixture setup: relay_setup
2025-02-06 15:36:25.359 DEBUG [src.steps.relay] Running fixture setup: setup_main_relay_nodes
2025-02-06 15:36:25.366 DEBUG [src.node.docker_mananger] Docker client initialized with image quay.io/wakuorg/nwaku-pr:3281
2025-02-06 15:36:25.366 DEBUG [src.node.waku_node] WakuNode instance initialized with log path ./log/docker/node1_2025-02-06_15-36-25__691ae157-8e23-4e6d-ba57-c3bf7b16ead2__quay.io_wakuorg_nwaku-pr:3281.log
2025-02-06 15:36:25.366 DEBUG [src.node.waku_node] Starting Node...
2025-02-06 15:36:25.366 DEBUG [src.node.docker_mananger] Attempting to create or retrieve network waku
2025-02-06 15:36:25.367 DEBUG [src.node.docker_mananger] Network waku already exists
2025-02-06 15:36:25.368 DEBUG [src.node.docker_mananger] Generated random external IP 172.18.154.220
2025-02-06 15:36:25.368 DEBUG [src.node.docker_mananger] Generated ports ['8171', '8172', '8173', '8174', '8175']
2025-02-06 15:36:25.368 DEBUG [src.node.waku_node] RLN credentials were not set
2025-02-06 15:36:25.368 INFO [src.node.waku_node] RLN credentials not set or credential store not available, starting without RLN
2025-02-06 15:36:25.368 DEBUG [src.node.waku_node] Using volumes []
2025-02-06 15:36:25.368 DEBUG [src.node.docker_mananger] docker run -i -t -p 8171:8171 -p 8172:8172 -p 8173:8173 -p 8174:8174 -p 8175:8175 quay.io/wakuorg/nwaku-pr:3281 --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=8173 --rest-port=8171 --tcp-port=8172 --discv5-udp-port=8174 --rest-address=0.0.0.0 --nat=extip:172.18.154.220 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=1ddda9cd5a999d8720becaa487df26195e6b8ba89ec7b8eef0e7b7f1cd1d6b88 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=8175 --metrics-logging=true --relay=true
2025-02-06 15:36:25.592 DEBUG [src.node.docker_mananger] docker network connect --ip 172.18.154.220 waku 6ace36a5542c8289f8ed17eca59f79bd4979d55ce10290e09b8399cd8f5bcd85
2025-02-06 15:36:25.645 DEBUG [src.node.docker_mananger] Container started with ID 6ace36a5542c. Setting up logs at ./log/docker/node1_2025-02-06_15-36-25__691ae157-8e23-4e6d-ba57-c3bf7b16ead2__quay.io_wakuorg_nwaku-pr:3281.log
2025-02-06 15:36:25.645 DEBUG [src.node.waku_node] Started container from image quay.io/wakuorg/nwaku-pr:3281. REST: 8171
2025-02-06 15:36:25.646 DEBUG [src.libs.common] Sleeping for 1 seconds
2025-02-06 15:36:25.668 ERROR [src.node.docker_mananger] Max retries reached for container af035a79fe65. Exiting log stream.
2025-02-06 15:36:26.157 ERROR [src.node.docker_mananger] Max retries reached for container 3c7d2b0aad9c. Exiting log stream.
2025-02-06 15:36:26.646 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:8171/health" -H "Content-Type: application/json" -d 'None'
2025-02-06 15:36:26.649 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
2025-02-06 15:36:26.649 INFO [src.node.waku_node] Node protocols are initialized !!
2025-02-06 15:36:26.649 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:8171/debug/v1/info" -H "Content-Type: application/json" -d 'None'
2025-02-06 15:36:26.651 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.154.220/tcp/8172/p2p/16Uiu2HAmGGJ95tJWCT33kVdnWN5Rv9f6XCuqpLdpYG7E9scPvDV1","/ip4/172.18.154.220/tcp/8173/ws/p2p/16Uiu2HAmGGJ95tJWCT33kVdnWN5Rv9f6XCuqpLdpYG7E9scPvDV1"],"enrUri":"enr:-L24QE3Q7yYOpOeC2bqSqcFN6ovMBdzzBuKortzYFXdlojaef9inDyJmNpIGxlhHmZWeN87EwHhZAeJQigvVaH3mmbQCgmlkgnY0gmlwhKwSmtyKbXVsdGlhZGRyc5YACASsEprcBh_sAAoErBKa3AYf7d0DgnJzhQADAQAAiXNlY3AyNTZrMaEDNZ6A-vgQPFqioJhWMveJB8K5xDB0p1hGUYbq6kOinBCDdGNwgh_sg3VkcIIf7oV3YWt1MgE"}'
2025-02-06 15:36:26.651 INFO [src.node.waku_node] REST service is ready !!
2025-02-06 15:36:26.657 DEBUG [src.node.docker_mananger] Docker client initialized with image wakuorg/go-waku:latest
2025-02-06 15:36:26.658 DEBUG [src.node.waku_node] WakuNode instance initialized with log path ./log/docker/node2_2025-02-06_15-36-25__691ae157-8e23-4e6d-ba57-c3bf7b16ead2__wakuorg_go-waku:latest.log
2025-02-06 15:36:26.658 DEBUG [src.node.waku_node] Starting Node...
2025-02-06 15:36:26.658 DEBUG [src.node.docker_mananger] Attempting to create or retrieve network waku
2025-02-06 15:36:26.659 DEBUG [src.node.docker_mananger] Network waku already exists
2025-02-06 15:36:26.659 DEBUG [src.node.docker_mananger] Generated random external IP 172.18.41.167
2025-02-06 15:36:26.659 DEBUG [src.node.docker_mananger] Generated ports ['31438', '31439', '31440', '31441', '31442']
2025-02-06 15:36:26.660 DEBUG [src.node.waku_node] RLN credentials were not set
2025-02-06 15:36:26.660 INFO [src.node.waku_node] RLN credentials not set or credential store not available, starting without RLN
2025-02-06 15:36:26.660 DEBUG [src.node.waku_node] Using volumes []
2025-02-06 15:36:26.660 DEBUG [src.node.docker_mananger] docker run -i -t -p 31438:31438 -p 31439:31439 -p 31440:31440 -p 31441:31441 -p 31442:31442 wakuorg/go-waku:latest --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=DEBUG --rest-relay-cache-capacity=100 --websocket-port=31440 --rest-port=31438 --tcp-port=31439 --discv5-udp-port=31441 --rest-address=0.0.0.0 --nat=extip:172.18.41.167 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=1f28d2ae1ca1e12b8b7f776f2fab06f7047ccf63cf5b46847b41300e0fa47d51 --min-relay-peers-to-publish=1 --rest-filter-cache-capacity=50 --peer-store-capacity=10 --relay=true --discv5-bootstrap-node=enr:-L24QE3Q7yYOpOeC2bqSqcFN6ovMBdzzBuKortzYFXdlojaef9inDyJmNpIGxlhHmZWeN87EwHhZAeJQigvVaH3mmbQCgmlkgnY0gmlwhKwSmtyKbXVsdGlhZGRyc5YACASsEprcBh_sAAoErBKa3AYf7d0DgnJzhQADAQAAiXNlY3AyNTZrMaEDNZ6A-vgQPFqioJhWMveJB8K5xDB0p1hGUYbq6kOinBCDdGNwgh_sg3VkcIIf7oV3YWt1MgE
2025-02-06 15:36:26.879 DEBUG [src.node.docker_mananger] docker network connect --ip 172.18.41.167 waku 8904fde5994bf354ae56d09c70621d6915354aa34acf99f59cb365c2dc9d76a1
2025-02-06 15:36:26.942 DEBUG [src.node.docker_mananger] Container started with ID 8904fde5994b. Setting up logs at ./log/docker/node2_2025-02-06_15-36-25__691ae157-8e23-4e6d-ba57-c3bf7b16ead2__wakuorg_go-waku:latest.log
2025-02-06 15:36:26.943 DEBUG [src.node.waku_node] Started container from image wakuorg/go-waku:latest. REST: 31438
2025-02-06 15:36:26.944 DEBUG [src.libs.common] Sleeping for 1 seconds
2025-02-06 15:36:27.944 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:31438/debug/v1/info" -H "Content-Type: application/json" -d 'None'
2025-02-06 15:36:27.947 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'{"enrUri":"enr:-J-4QEK5espmsntVBVrbnYIUJJiGubgd00z47LG4aOpXLP8OYy3WFxpwgRSOitB38KWb40PtrACKNjvHPFIY0B7URnuGAZTb58QtgmlkgnY0gmlwhKwRAAOCcnODAAMAiXNlY3AyNTZrMaECQLqTr8AsA1yEgI8KGER_Nxres8jItO8UtCawRnIWt8-DdGNwgnrPg3VkcIJ60YV3YWt1MgE","listenAddresses":["/ip4/127.0.0.1/tcp/31439/p2p/16Uiu2HAkynM5iphJyQP9VrASaMJameTxnG5ZavkGqTsyFEiLKDw4","/ip4/127.0.0.1/tcp/31440/ws/p2p/16Uiu2HAkynM5iphJyQP9VrASaMJameTxnG5ZavkGqTsyFEiLKDw4","/ip4/172.17.0.3/tcp/31439/p2p/16Uiu2HAkynM5iphJyQP9VrASaMJameTxnG5ZavkGqTsyFEiLKDw4","/ip4/172.17.0.3/tcp/31440/ws/p2p/16Uiu2HAkynM5iphJyQP9VrASaMJameTxnG5ZavkGqTsyFEiLKDw4"]}'
2025-02-06 15:36:27.947 INFO [src.node.waku_node] REST service is ready !!
2025-02-06 15:36:27.948 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:31438/admin/v1/peers" -H "Content-Type: application/json" -d '{"multiaddr": "/ip4/172.18.154.220/tcp/8172/p2p/16Uiu2HAmGGJ95tJWCT33kVdnWN5Rv9f6XCuqpLdpYG7E9scPvDV1", "protocols": ["/vac/waku/relay/2.0.0"], "shards": [0, 1, 2, 3, 4, 5, 6, 7, 8]}'
2025-02-06 15:36:27.965 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'null'
2025-02-06 15:36:27.966 DEBUG [src.steps.relay] Running fixture setup: subscribe_main_relay_nodes
2025-02-06 15:36:27.969 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:8171/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
2025-02-06 15:36:27.973 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-06 15:36:27.973 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:31438/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
2025-02-06 15:36:27.976 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'true'
2025-02-06 15:36:27.977 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:8171/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-06 15:36:27.989 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-06 15:36:27.989 DEBUG [src.libs.common] Sleeping for 0.1 seconds
2025-02-06 15:36:28.089 DEBUG [src.steps.relay] Checking that peer NODE_1:quay.io/wakuorg/nwaku-pr:3281 can find the published message
2025-02-06 15:36:28.089 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:8171/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
2025-02-06 15:36:28.092 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1738856187977750016,"ephemeral":false}]'
2025-02-06 15:36:28.094 DEBUG [src.steps.relay] Checking that peer NODE_2:wakuorg/go-waku:latest can find the published message
2025-02-06 15:36:28.094 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:31438/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
2025-02-06 15:36:28.095 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'null'
2025-02-06 15:36:29.097 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:8171/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-06 15:36:29.101 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'OK'
2025-02-06 15:36:29.101 DEBUG [src.libs.common] Sleeping for 0.1 seconds
2025-02-06 15:36:29.202 DEBUG [src.steps.relay] Checking that peer NODE_1:quay.io/wakuorg/nwaku-pr:3281 can find the published message
2025-02-06 15:36:29.202 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:8171/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
2025-02-06 15:36:29.205 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1738856189096707072,"ephemeral":false}]'
2025-02-06 15:36:29.206 DEBUG [src.steps.relay] Checking that peer NODE_2:wakuorg/go-waku:latest can find the published message
2025-02-06 15:36:29.206 INFO [src.node.api_clients.base_client] curl -v -X GET "http://127.0.0.1:31438/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
2025-02-06 15:36:29.208 INFO [src.node.api_clients.base_client] Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1738856189096707072,"ephemeral":false}]'
2025-02-06 15:36:29.209 INFO [src.steps.relay] WARM UP successful!!
2025-02-06 15:36:29.210 INFO [src.node.api_clients.base_client] curl -v -X POST "http://127.0.0.1:8171/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
2025-02-06 15:36:29.212 ERROR [src.node.api_clients.base_client] HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:8171/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1. Response content: b'Invalid content body, could not decode. Unable to deserialize data'
2025-02-06 15:36:29.214 DEBUG [tests.conftest] Running fixture teardown: test_setup
2025-02-06 15:36:29.215 DEBUG [tests.conftest] Running fixture teardown: close_open_nodes
2025-02-06 15:36:29.215 DEBUG [src.node.waku_node] Stopping container with id 6ace36a5542c
2025-02-06 15:36:29.790 DEBUG [src.node.waku_node] Container stopped.
2025-02-06 15:36:29.790 DEBUG [src.node.waku_node] Stopping container with id 8904fde5994b
2025-02-06 15:36:30.277 DEBUG [src.node.waku_node] Container stopped.
2025-02-06 15:36:30.278 DEBUG [tests.conftest] Running fixture teardown: check_waku_log_errors
2025-02-06 15:36:30.285 DEBUG [src.node.docker_mananger] No errors found in the waku logs.
2025-02-06 15:36:30.287 DEBUG [src.node.docker_mananger] No errors found in the waku logs.
