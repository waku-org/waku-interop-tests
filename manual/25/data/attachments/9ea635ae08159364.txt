[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_no_content_topic with id: 2025-01-30_11-46-01__16084b7d-12f2-4e2c-a280-22673666c890
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image quay.io/wakuorg/nwaku-pr:3234
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-30_11-46-01__16084b7d-12f2-4e2c-a280-22673666c890__quay.io_wakuorg_nwaku-pr:3234.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.166.5
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['43350', '43351', '43352', '43353', '43354']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 43350:43350 -p 43351:43351 -p 43352:43352 -p 43353:43353 -p 43354:43354 quay.io/wakuorg/nwaku-pr:3234 --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=43352 --rest-port=43350 --tcp-port=43351 --discv5-udp-port=43353 --rest-address=0.0.0.0 --nat=extip:172.18.166.5 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=afd1fb07428f413bcbfeef32b6f17578ebd8fd2eab4c53a0f05bca4b990c6b2c --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=43354 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.166.5 waku ac0c4cc000e8152966bfbf1640ff96b6c8cdb3ff1067211e880412c9ccd13e35
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID ac0c4cc000e8. Setting up logs at ./log/docker/node1_2025-01-30_11-46-01__16084b7d-12f2-4e2c-a280-22673666c890__quay.io_wakuorg_nwaku-pr:3234.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image quay.io/wakuorg/nwaku-pr:3234. REST: 43350
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container e3049560e9eb. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:43350/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:43350/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.166.5/tcp/43351/p2p/16Uiu2HAmSgW7aUkzLwjoVUE8YLDycjKscoCzMCx381tRZdzfGkJs","/ip4/172.18.166.5/tcp/43352/ws/p2p/16Uiu2HAmSgW7aUkzLwjoVUE8YLDycjKscoCzMCx381tRZdzfGkJs"],"enrUri":"enr:-L24QPKG7r8ZfJ1XtN0B4C6Ci36y_Yr1xSdaJMirYbRnAtZXTa9L5KLzlyiNHnYpBijtZ-dHQsDRT7jyiWKjVxm9KPsCgmlkgnY0gmlwhKwSpgWKbXVsdGlhZGRyc5YACASsEqYFBqlXAAoErBKmBQapWN0DgnJzhQADAQAAiXNlY3AyNTZrMaED0GbaANagTbaaXuLHlbjqSA4HNPGkU9S6HVb6bZYI8XCDdGNwgqlXg3VkcIKpWYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image quay.io/wakuorg/nwaku-pr:3234
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-30_11-46-01__16084b7d-12f2-4e2c-a280-22673666c890__quay.io_wakuorg_nwaku-pr:3234.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.60.96
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['10353', '10354', '10355', '10356', '10357']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 10353:10353 -p 10354:10354 -p 10355:10355 -p 10356:10356 -p 10357:10357 quay.io/wakuorg/nwaku-pr:3234 --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=10355 --rest-port=10353 --tcp-port=10354 --discv5-udp-port=10356 --rest-address=0.0.0.0 --nat=extip:172.18.60.96 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=37a2c8fa66ad495dbcce36cc1d98c6c9a6daa61f000c7f4e64ebea57cac7bfe9 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=10357 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QPKG7r8ZfJ1XtN0B4C6Ci36y_Yr1xSdaJMirYbRnAtZXTa9L5KLzlyiNHnYpBijtZ-dHQsDRT7jyiWKjVxm9KPsCgmlkgnY0gmlwhKwSpgWKbXVsdGlhZGRyc5YACASsEqYFBqlXAAoErBKmBQapWN0DgnJzhQADAQAAiXNlY3AyNTZrMaED0GbaANagTbaaXuLHlbjqSA4HNPGkU9S6HVb6bZYI8XCDdGNwgqlXg3VkcIKpWYV3YWt1MgU --filternode=/ip4/172.18.166.5/tcp/43351/p2p/16Uiu2HAmSgW7aUkzLwjoVUE8YLDycjKscoCzMCx381tRZdzfGkJs
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.60.96 waku 03a7a8603d82c75b29510684538de2379a9b0a9fbe1cbf489036a1dd6cba264c
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 03a7a8603d82. Setting up logs at ./log/docker/node2_2025-01-30_11-46-01__16084b7d-12f2-4e2c-a280-22673666c890__quay.io_wakuorg_nwaku-pr:3234.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image quay.io/wakuorg/nwaku-pr:3234. REST: 10353
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10353/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:10353/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.60.96/tcp/10354/p2p/16Uiu2HAmB2GvcWhSZyoHGZvqxZ1irAP6L4eZ31H1oZ6n4GYc5Fza","/ip4/172.18.60.96/tcp/10355/ws/p2p/16Uiu2HAmB2GvcWhSZyoHGZvqxZ1irAP6L4eZ31H1oZ6n4GYc5Fza"],"enrUri":"enr:-L24QJWDnZgWWqE_lnZ6iS4uBvaedAlc9e3VamKuOBPQxMBVL3dytuUz4-3d8fvNHGrC7xKCObf7GzHhHvMHjTCBMe4CgmlkgnY0gmlwhKwSPGCKbXVsdGlhZGRyc5YACASsEjxgBihyAAoErBI8YAYoc90DgnJzhQADAQAAiXNlY3AyNTZrMaEC57yQZCNA0VM2NhA9lKYNaTFJBHpJlWsRXaVQbFnVcXODdGNwgihyg3VkcIIodIV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:10353/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.166.5/tcp/43351/p2p/16Uiu2HAmSgW7aUkzLwjoVUE8YLDycjKscoCzMCx381tRZdzfGkJs"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:43350/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:10353/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "d9b1ad94-53f4-4627-a91a-0d36ce0fc3b9", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"d9b1ad94-53f4-4627-a91a-0d36ce0fc3b9","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:10353/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:10353/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id ac0c4cc000e8
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 03a7a8603d82
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container ac0c4cc000e8. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.