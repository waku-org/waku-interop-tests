[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_while_peer_is_paused with id: 2025-01-17_11-08-14__88f132c6-d3c2-4e9c-9036-8ef05ef481ca
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image quay.io/wakuorg/nwaku-pr:3244
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-17_11-08-14__88f132c6-d3c2-4e9c-9036-8ef05ef481ca__quay.io_wakuorg_nwaku-pr:3244.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.167.104
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['37542', '37543', '37544', '37545', '37546']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 37542:37542 -p 37543:37543 -p 37544:37544 -p 37545:37545 -p 37546:37546 quay.io/wakuorg/nwaku-pr:3244 --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=37544 --rest-port=37542 --tcp-port=37543 --discv5-udp-port=37545 --rest-address=0.0.0.0 --nat=extip:172.18.167.104 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=72cd2adcc4cf3b10acde43435b18bb73feca4aece273f2a6d5bebf18866dbbe4 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=37546 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.167.104 waku edbdb01e775111f7213c8747d20da870e82a4a224c37f0ac1a816d3538e6b03a
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID edbdb01e7751. Setting up logs at ./log/docker/node1_2025-01-17_11-08-14__88f132c6-d3c2-4e9c-9036-8ef05ef481ca__quay.io_wakuorg_nwaku-pr:3244.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image quay.io/wakuorg/nwaku-pr:3244. REST: 37542
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container b6810fe24969. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:37542/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:37542/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.167.104/tcp/37543/p2p/16Uiu2HAmM2xw8vNwcn2w3deQoErMkZpYfdwEhqk6cnA4WPYfnZz7","/ip4/172.18.167.104/tcp/37544/ws/p2p/16Uiu2HAmM2xw8vNwcn2w3deQoErMkZpYfdwEhqk6cnA4WPYfnZz7"],"enrUri":"enr:-L24QH4i8iqDP4PAs2MxfE8GEv13CxAD-Xwb0dVYio9FbNRKGBSbSLwaNIxFpb5410tJNWHB7rraqCIUk4HEgzZpevMCgmlkgnY0gmlwhKwSp2iKbXVsdGlhZGRyc5YACASsEqdoBpKnAAoErBKnaAaSqN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDfH6r8a4NjAZ7NjRJhmM4T1GJyKFOCHUu9hhxNbxEHDiDdGNwgpKng3VkcIKSqYV3YWt1MgE"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image quay.io/wakuorg/nwaku-pr:3244
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-17_11-08-14__88f132c6-d3c2-4e9c-9036-8ef05ef481ca__quay.io_wakuorg_nwaku-pr:3244.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.41.189
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['19830', '19831', '19832', '19833', '19834']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 19830:19830 -p 19831:19831 -p 19832:19832 -p 19833:19833 -p 19834:19834 quay.io/wakuorg/nwaku-pr:3244 --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=19832 --rest-port=19830 --tcp-port=19831 --discv5-udp-port=19833 --rest-address=0.0.0.0 --nat=extip:172.18.41.189 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=dcd6e9befd0d3aadfc4c3ad5befbbfe7cd9ae37acdd209f090bc9568e4586a74 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=19834 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-L24QH4i8iqDP4PAs2MxfE8GEv13CxAD-Xwb0dVYio9FbNRKGBSbSLwaNIxFpb5410tJNWHB7rraqCIUk4HEgzZpevMCgmlkgnY0gmlwhKwSp2iKbXVsdGlhZGRyc5YACASsEqdoBpKnAAoErBKnaAaSqN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDfH6r8a4NjAZ7NjRJhmM4T1GJyKFOCHUu9hhxNbxEHDiDdGNwgpKng3VkcIKSqYV3YWt1MgE
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.41.189 waku 06d04d69b377eac470ecd3846610a4a31aa591a146394de3f415c72fdbbb9d55
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 06d04d69b377. Setting up logs at ./log/docker/node2_2025-01-17_11-08-14__88f132c6-d3c2-4e9c-9036-8ef05ef481ca__quay.io_wakuorg_nwaku-pr:3244.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image quay.io/wakuorg/nwaku-pr:3244. REST: 19830
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:19830/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:19830/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.41.189/tcp/19831/p2p/16Uiu2HAmLSKt8dVkvC5LNnuNmU67nM27a5MbgoFriJfrutFLVgXt","/ip4/172.18.41.189/tcp/19832/ws/p2p/16Uiu2HAmLSKt8dVkvC5LNnuNmU67nM27a5MbgoFriJfrutFLVgXt"],"enrUri":"enr:-L24QH2vgLSegZB_ZQmvJ-OkPkJ9W4pvTE2LwX8nRatdy199ATbhjDe5OsQPXax9VWJKu1g0FrBD4bcTM0STzoGazBECgmlkgnY0gmlwhKwSKb2KbXVsdGlhZGRyc5YACASsEim9Bk13AAoErBIpvQZNeN0DgnJzhQADAQAAiXNlY3AyNTZrMaEDc58Hj2m_VY69Qde29J9HYSGGWpSeGZv6j_TspTl9dIuDdGNwgk13g3VkcIJNeYV3YWt1MgE"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:19830/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.167.104/tcp/37543/p2p/16Uiu2HAmM2xw8vNwcn2w3deQoErMkZpYfdwEhqk6cnA4WPYfnZz7"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:37542/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:19830/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:37542/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:quay.io/wakuorg/nwaku-pr:3244 can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:37542/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1737112097127635968,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:quay.io/wakuorg/nwaku-pr:3244 can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:19830/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1737112097127635968,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[35mDEBUG   [0m src.node.waku_node:waku_node.py:254 Pausing container with id 06d04d69b377
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:37542/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.node.waku_node:waku_node.py:259 Unpause container with id 06d04d69b377
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:19830/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1737112097239850496,"ephemeral":false}]'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id edbdb01e7751
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 06d04d69b377
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container edbdb01e7751. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.