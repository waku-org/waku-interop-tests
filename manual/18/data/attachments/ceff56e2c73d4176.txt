[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_all_with_invalid_request_id with id: 2025-01-17_11-53-52__5cce87e4-c8e7-40dd-847e-2485f457fa75
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image quay.io/wakuorg/nwaku-pr:3240
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-17_11-53-52__5cce87e4-c8e7-40dd-847e-2485f457fa75__quay.io_wakuorg_nwaku-pr:3240.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.225.154
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['36054', '36055', '36056', '36057', '36058']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 36054:36054 -p 36055:36055 -p 36056:36056 -p 36057:36057 -p 36058:36058 quay.io/wakuorg/nwaku-pr:3240 --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=36056 --rest-port=36054 --tcp-port=36055 --discv5-udp-port=36057 --rest-address=0.0.0.0 --nat=extip:172.18.225.154 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=4cddc9a0eecc3918e844dadcfa21ba0f8fb7e0f9fee0ccc8b70cab6dcb77f1ce --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=36058 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.225.154 waku 9908272a06d6b2e8ab49bb0b2823e589fe7454e8ea82a87a9bd00de53d673594
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 9908272a06d6. Setting up logs at ./log/docker/node1_2025-01-17_11-53-52__5cce87e4-c8e7-40dd-847e-2485f457fa75__quay.io_wakuorg_nwaku-pr:3240.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image quay.io/wakuorg/nwaku-pr:3240. REST: 36054
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 8337c9ca9762. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:36054/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:36054/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.225.154/tcp/36055/p2p/16Uiu2HAmDjyUjgSWhvn7ssr27ttV7vBFLzHup26T754YY3T4GU7A","/ip4/172.18.225.154/tcp/36056/ws/p2p/16Uiu2HAmDjyUjgSWhvn7ssr27ttV7vBFLzHup26T754YY3T4GU7A"],"enrUri":"enr:-L24QHthBDRpWaBJunsquyZoImF8OPvCPIEUC6EmpmxsP6WMXWms9m9Mvq5I7ILfNsvq7INY9VXA0XnU-mR0J_3QA4ECgmlkgnY0gmlwhKwS4ZqKbXVsdGlhZGRyc5YACASsEuGaBozXAAoErBLhmgaM2N0DgnJzhQADAQAAiXNlY3AyNTZrMaEDECKa_ksxZ3sXHUb6jGIQWbzJi5ZLG3cMohxq2onYZPmDdGNwgozXg3VkcIKM2YV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image quay.io/wakuorg/nwaku-pr:3240
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-17_11-53-52__5cce87e4-c8e7-40dd-847e-2485f457fa75__quay.io_wakuorg_nwaku-pr:3240.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.213.59
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['27125', '27126', '27127', '27128', '27129']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 27125:27125 -p 27126:27126 -p 27127:27127 -p 27128:27128 -p 27129:27129 quay.io/wakuorg/nwaku-pr:3240 --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=27127 --rest-port=27125 --tcp-port=27126 --discv5-udp-port=27128 --rest-address=0.0.0.0 --nat=extip:172.18.213.59 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=5ae7eeb2b4dae5f31bd1297dbce879edaa175adaef287daade1b0dc2d84fff41 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=27129 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QHthBDRpWaBJunsquyZoImF8OPvCPIEUC6EmpmxsP6WMXWms9m9Mvq5I7ILfNsvq7INY9VXA0XnU-mR0J_3QA4ECgmlkgnY0gmlwhKwS4ZqKbXVsdGlhZGRyc5YACASsEuGaBozXAAoErBLhmgaM2N0DgnJzhQADAQAAiXNlY3AyNTZrMaEDECKa_ksxZ3sXHUb6jGIQWbzJi5ZLG3cMohxq2onYZPmDdGNwgozXg3VkcIKM2YV3YWt1MgU --filternode=/ip4/172.18.225.154/tcp/36055/p2p/16Uiu2HAmDjyUjgSWhvn7ssr27ttV7vBFLzHup26T754YY3T4GU7A
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.213.59 waku b2da5aa5c305ef9a9dbada5b31713e46fccaa483625615ceb38d8624f13ebde2
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID b2da5aa5c305. Setting up logs at ./log/docker/node2_2025-01-17_11-53-52__5cce87e4-c8e7-40dd-847e-2485f457fa75__quay.io_wakuorg_nwaku-pr:3240.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image quay.io/wakuorg/nwaku-pr:3240. REST: 27125
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:27125/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:27125/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.213.59/tcp/27126/p2p/16Uiu2HAmMnbey26e1XKsUYzkgy7LtXbpWzaz6RZ4RwQQPoZygYXt","/ip4/172.18.213.59/tcp/27127/ws/p2p/16Uiu2HAmMnbey26e1XKsUYzkgy7LtXbpWzaz6RZ4RwQQPoZygYXt"],"enrUri":"enr:-L24QE3yRPAjAti_w8IgdZVGKIjpQGlNY9zIx_puypEKRt_yVVraq9Fimx-bkc39bAyFij6I7c_kzGrBhEiXxgO8YGkCgmlkgnY0gmlwhKwS1TuKbXVsdGlhZGRyc5YACASsEtU7Bmn2AAoErBLVOwZp990DgnJzhQADAQAAiXNlY3AyNTZrMaEDh6wqz9XNiznCe6j0ntecglnu8OKwoA4Sc8L5bYN6RXODdGNwgmn2g3VkcIJp-IV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:27125/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.225.154/tcp/36055/p2p/16Uiu2HAmDjyUjgSWhvn7ssr27ttV7vBFLzHup26T754YY3T4GU7A"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:36054/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:27125/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "880c6b49-7d3f-4e8d-9691-d38a9878aebd", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"880c6b49-7d3f-4e8d-9691-d38a9878aebd","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:27125/filter/v2/subscriptions/all" -H "Content-Type: application/json" -d '{"requestId": 1}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:27125/filter/v2/subscriptions/all. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 9908272a06d6
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id b2da5aa5c305
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 9908272a06d6. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.