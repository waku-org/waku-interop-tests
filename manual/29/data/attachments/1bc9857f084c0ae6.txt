[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_all_with_invalid_request_id with id: 2025-01-31_15-43-01__051468c8-24b2-4138-87c7-66a3210e3e68
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image quay.io/wakuorg/nwaku-pr:3267
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-31_15-43-01__051468c8-24b2-4138-87c7-66a3210e3e68__quay.io_wakuorg_nwaku-pr:3267.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.198.132
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['50707', '50708', '50709', '50710', '50711']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 50707:50707 -p 50708:50708 -p 50709:50709 -p 50710:50710 -p 50711:50711 quay.io/wakuorg/nwaku-pr:3267 --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=50709 --rest-port=50707 --tcp-port=50708 --discv5-udp-port=50710 --rest-address=0.0.0.0 --nat=extip:172.18.198.132 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=b7d5fc399caa6a61bf8ea2a47ed0a970cae47d7eaeec3b38b485fddee77970ab --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=50711 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.198.132 waku 52c982954d1c4e10dc54a48c2ae5b50fa6d04bd4494f3f5b5bb0263ecbe56ffe
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 52c982954d1c. Setting up logs at ./log/docker/node1_2025-01-31_15-43-01__051468c8-24b2-4138-87c7-66a3210e3e68__quay.io_wakuorg_nwaku-pr:3267.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image quay.io/wakuorg/nwaku-pr:3267. REST: 50707
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container da34143e2a01. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:50707/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:50707/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.198.132/tcp/50708/p2p/16Uiu2HAm4vaiAMKWHZNQSGKMeXWevqmFfCSQSJCgWmaNHG8NaXe6","/ip4/172.18.198.132/tcp/50709/ws/p2p/16Uiu2HAm4vaiAMKWHZNQSGKMeXWevqmFfCSQSJCgWmaNHG8NaXe6"],"enrUri":"enr:-L24QIooHFDKO8S4BgBXG2dFRP_cvhEjIdZG8I3tPw8fAdiHcB5Hp15idIJXUNdQyTyTXFEp3BOG3AxmWyLsuzUPdMMCgmlkgnY0gmlwhKwSxoSKbXVsdGlhZGRyc5YACASsEsaEBsYUAAoErBLGhAbGFd0DgnJzhQADAQAAiXNlY3AyNTZrMaECjSERStaIbTx9EJFqh0NKY_1h6XkPu4g7t7PPzL6lGDeDdGNwgsYUg3VkcILGFoV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image quay.io/wakuorg/nwaku-pr:3267
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-31_15-43-01__051468c8-24b2-4138-87c7-66a3210e3e68__quay.io_wakuorg_nwaku-pr:3267.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.36.192
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['64974', '64975', '64976', '64977', '64978']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 64974:64974 -p 64975:64975 -p 64976:64976 -p 64977:64977 -p 64978:64978 quay.io/wakuorg/nwaku-pr:3267 --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=64976 --rest-port=64974 --tcp-port=64975 --discv5-udp-port=64977 --rest-address=0.0.0.0 --nat=extip:172.18.36.192 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=fb5f9e34550bf1d1e558eb6c42dbada3abcff7fb9fc2d68fb3c828eb46bb16fe --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=64978 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QIooHFDKO8S4BgBXG2dFRP_cvhEjIdZG8I3tPw8fAdiHcB5Hp15idIJXUNdQyTyTXFEp3BOG3AxmWyLsuzUPdMMCgmlkgnY0gmlwhKwSxoSKbXVsdGlhZGRyc5YACASsEsaEBsYUAAoErBLGhAbGFd0DgnJzhQADAQAAiXNlY3AyNTZrMaECjSERStaIbTx9EJFqh0NKY_1h6XkPu4g7t7PPzL6lGDeDdGNwgsYUg3VkcILGFoV3YWt1MgU --filternode=/ip4/172.18.198.132/tcp/50708/p2p/16Uiu2HAm4vaiAMKWHZNQSGKMeXWevqmFfCSQSJCgWmaNHG8NaXe6
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.36.192 waku 03622cc7ddcc3a1036e96e614c68287f39c4c0246bdf2b991d0e5908cea82fa3
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 03622cc7ddcc. Setting up logs at ./log/docker/node2_2025-01-31_15-43-01__051468c8-24b2-4138-87c7-66a3210e3e68__quay.io_wakuorg_nwaku-pr:3267.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image quay.io/wakuorg/nwaku-pr:3267. REST: 64974
[35mDEBUG   [0m src.libs.common:common.py:47 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:64974/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:64974/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.36.192/tcp/64975/p2p/16Uiu2HAmTNo4xoLMw5qtZRk1Rm7wZu3ducy2h7bVMhfRwJ2d9wUR","/ip4/172.18.36.192/tcp/64976/ws/p2p/16Uiu2HAmTNo4xoLMw5qtZRk1Rm7wZu3ducy2h7bVMhfRwJ2d9wUR"],"enrUri":"enr:-L24QP7kMoc_wa1D5LRCROyvzdiQikEcp4I9ruAzyNj0nc5xR3-ixVUIQfOSFKOQYySFD9JKhrwqavBHQa9xLrjYwHQCgmlkgnY0gmlwhKwSJMCKbXVsdGlhZGRyc5YACASsEiTABv3PAAoErBIkwAb90N0DgnJzhQADAQAAiXNlY3AyNTZrMaED2rlBQkBcUEDyZg1EQQQVFYlCX3sqeQhVf7L4MoeIHi6DdGNwgv3Pg3VkcIL90YV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:64974/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.198.132/tcp/50708/p2p/16Uiu2HAm4vaiAMKWHZNQSGKMeXWevqmFfCSQSJCgWmaNHG8NaXe6"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:50707/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:64974/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1cfbe034-c049-4551-926a-3434f94b28c8", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"1cfbe034-c049-4551-926a-3434f94b28c8","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:64974/filter/v2/subscriptions/all" -H "Content-Type: application/json" -d '{"requestId": 1}'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:64974/filter/v2/subscriptions/all. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 52c982954d1c
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 03622cc7ddcc
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 52c982954d1c. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.