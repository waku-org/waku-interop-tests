[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_pubsub_topic_list_instead_of_string with id: 2025-01-17_16-35-54__35d00832-ed94-42af-86ec-74783cf7dd0d
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image quay.io/wakuorg/nwaku-pr:3244
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-17_16-35-54__35d00832-ed94-42af-86ec-74783cf7dd0d__quay.io_wakuorg_nwaku-pr:3244.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.225.34
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['26708', '26709', '26710', '26711', '26712']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 26708:26708 -p 26709:26709 -p 26710:26710 -p 26711:26711 -p 26712:26712 quay.io/wakuorg/nwaku-pr:3244 --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=26710 --rest-port=26708 --tcp-port=26709 --discv5-udp-port=26711 --rest-address=0.0.0.0 --nat=extip:172.18.225.34 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=5fe18aedf7871bdc496f1add6a743c052924d37eb13d22fcc152fff389224be1 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=26712 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.225.34 waku f3962fec84a197e497bb73aab38c55d2edba4685a30a8f0ad705b7a7f2a785fd
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID f3962fec84a1. Setting up logs at ./log/docker/node1_2025-01-17_16-35-54__35d00832-ed94-42af-86ec-74783cf7dd0d__quay.io_wakuorg_nwaku-pr:3244.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image quay.io/wakuorg/nwaku-pr:3244. REST: 26708
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 367440ec4b8d. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:26708/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:26708/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.225.34/tcp/26709/p2p/16Uiu2HAmGtmYKWB6DgUzRHeBAW7hi5hAoXF3BfzfvxCQFX76Zf6g","/ip4/172.18.225.34/tcp/26710/ws/p2p/16Uiu2HAmGtmYKWB6DgUzRHeBAW7hi5hAoXF3BfzfvxCQFX76Zf6g"],"enrUri":"enr:-L24QAJv1lNCTXAwRJMq0diaIBBpzAl0JpQscPRiYcLk5YQOFEsE06K3ukgu5SJtULDpRvAOc7esT6MaNQ8wvE3joLkCgmlkgnY0gmlwhKwS4SKKbXVsdGlhZGRyc5YACASsEuEiBmhVAAoErBLhIgZoVt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDPvZlGQuBH6CAvNFZWrUd4XNsAbh16aPydLGaqU6oZDGDdGNwgmhVg3VkcIJoV4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image quay.io/wakuorg/nwaku-pr:3244
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-17_16-35-54__35d00832-ed94-42af-86ec-74783cf7dd0d__quay.io_wakuorg_nwaku-pr:3244.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.13.120
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['31791', '31792', '31793', '31794', '31795']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 31791:31791 -p 31792:31792 -p 31793:31793 -p 31794:31794 -p 31795:31795 quay.io/wakuorg/nwaku-pr:3244 --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=31793 --rest-port=31791 --tcp-port=31792 --discv5-udp-port=31794 --rest-address=0.0.0.0 --nat=extip:172.18.13.120 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=0fdb9b8ca0eb7ae466ce975581ee92be6ea7ab118205a125c8ced81109db67ad --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=31795 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QAJv1lNCTXAwRJMq0diaIBBpzAl0JpQscPRiYcLk5YQOFEsE06K3ukgu5SJtULDpRvAOc7esT6MaNQ8wvE3joLkCgmlkgnY0gmlwhKwS4SKKbXVsdGlhZGRyc5YACASsEuEiBmhVAAoErBLhIgZoVt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDPvZlGQuBH6CAvNFZWrUd4XNsAbh16aPydLGaqU6oZDGDdGNwgmhVg3VkcIJoV4V3YWt1MgU --filternode=/ip4/172.18.225.34/tcp/26709/p2p/16Uiu2HAmGtmYKWB6DgUzRHeBAW7hi5hAoXF3BfzfvxCQFX76Zf6g
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.13.120 waku 613b684503dd9add08dec97af00fe138164348fbfe652eee0b077072f2c57144
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 613b684503dd. Setting up logs at ./log/docker/node2_2025-01-17_16-35-54__35d00832-ed94-42af-86ec-74783cf7dd0d__quay.io_wakuorg_nwaku-pr:3244.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image quay.io/wakuorg/nwaku-pr:3244. REST: 31791
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:31791/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:31791/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.13.120/tcp/31792/p2p/16Uiu2HAkuUAu3EsbNGahEuL11pRg9t1XiqTg5uwQ784LkjqADtW3","/ip4/172.18.13.120/tcp/31793/ws/p2p/16Uiu2HAkuUAu3EsbNGahEuL11pRg9t1XiqTg5uwQ784LkjqADtW3"],"enrUri":"enr:-L24QLuiYXAq2m3PSD43eGwNpTt8M23gxaNR0cAFeTntTufhOucTyVEz_V5d-vvIWIyHV36wOmygN5P65TUWqqG2vHgCgmlkgnY0gmlwhKwSDXiKbXVsdGlhZGRyc5YACASsEg14BnwwAAoErBINeAZ8Md0DgnJzhQADAQAAiXNlY3AyNTZrMaECAKPb_djQ_FCgPJjdFTI2UYVovsSt45lRoOfqX5nFaTCDdGNwgnwwg3VkcIJ8MoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:31791/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.225.34/tcp/26709/p2p/16Uiu2HAmGtmYKWB6DgUzRHeBAW7hi5hAoXF3BfzfvxCQFX76Zf6g"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:26708/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:31791/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "4fa89b46-e531-4915-b211-71bd63e8a7e6", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"4fa89b46-e531-4915-b211-71bd63e8a7e6","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:31791/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": ["/waku/2/rs/3/1"]}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:31791/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id f3962fec84a1
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 613b684503dd
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container f3962fec84a1. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.