[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_update_subscription_with_invalid_request_id with id: 2025-01-24_10-38-45__7f7d2940-0eed-4c3d-9b42-68343684c05f
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image harbor.status.im/wakuorg/nwaku:test-debug-flag
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-24_10-38-45__7f7d2940-0eed-4c3d-9b42-68343684c05f__harbor.status.im_wakuorg_nwaku:test-debug-flag.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.57.236
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['18356', '18357', '18358', '18359', '18360']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 18356:18356 -p 18357:18357 -p 18358:18358 -p 18359:18359 -p 18360:18360 harbor.status.im/wakuorg/nwaku:test-debug-flag --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=18358 --rest-port=18356 --tcp-port=18357 --discv5-udp-port=18359 --rest-address=0.0.0.0 --nat=extip:172.18.57.236 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=c1ac53ce576790a053b8c4cd6b0bd71fc3d6555f8ab7a47e2c5b8bdb77ccc6e6 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=18360 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.57.236 waku 240dbedda22590c702fadbe51a8f4136684aa34f6c125b0f6f9a85caed114464
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 240dbedda225. Setting up logs at ./log/docker/node1_2025-01-24_10-38-45__7f7d2940-0eed-4c3d-9b42-68343684c05f__harbor.status.im_wakuorg_nwaku:test-debug-flag.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image harbor.status.im/wakuorg/nwaku:test-debug-flag. REST: 18356
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 32b59c6674cc. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:18356/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:18356/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.57.236/tcp/18357/p2p/16Uiu2HAmC1B1aSy1zeeB3fQ79U8yJRnqn4BbXtgC7f7KEJMD4oTd","/ip4/172.18.57.236/tcp/18358/ws/p2p/16Uiu2HAmC1B1aSy1zeeB3fQ79U8yJRnqn4BbXtgC7f7KEJMD4oTd"],"enrUri":"enr:-L24QI6JY-2dov2UdYNvDQLEooAsACnWqGI6iVhK63hNCiLvHAEa2EIUQvQJXU3Q2JyiUHCzvWBt1I-wn3AzCUNUVykCgmlkgnY0gmlwhKwSOeyKbXVsdGlhZGRyc5YACASsEjnsBke1AAoErBI57AZHtt0DgnJzhQADAQAAiXNlY3AyNTZrMaEC9k_7koDkz84tPjB94O33eyzw4ZzIfGw_kHG0woJFFviDdGNwgke1g3VkcIJHt4V3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image harbor.status.im/wakuorg/nwaku:test-debug-flag
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-24_10-38-45__7f7d2940-0eed-4c3d-9b42-68343684c05f__harbor.status.im_wakuorg_nwaku:test-debug-flag.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.180.91
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['7908', '7909', '7910', '7911', '7912']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 7908:7908 -p 7909:7909 -p 7910:7910 -p 7911:7911 -p 7912:7912 harbor.status.im/wakuorg/nwaku:test-debug-flag --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=7910 --rest-port=7908 --tcp-port=7909 --discv5-udp-port=7911 --rest-address=0.0.0.0 --nat=extip:172.18.180.91 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=18da03e725def05f753e83eae3b5ab53c5149ae27fdaacbbfa3a3988ce1bef7b --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=7912 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QI6JY-2dov2UdYNvDQLEooAsACnWqGI6iVhK63hNCiLvHAEa2EIUQvQJXU3Q2JyiUHCzvWBt1I-wn3AzCUNUVykCgmlkgnY0gmlwhKwSOeyKbXVsdGlhZGRyc5YACASsEjnsBke1AAoErBI57AZHtt0DgnJzhQADAQAAiXNlY3AyNTZrMaEC9k_7koDkz84tPjB94O33eyzw4ZzIfGw_kHG0woJFFviDdGNwgke1g3VkcIJHt4V3YWt1MgU --filternode=/ip4/172.18.57.236/tcp/18357/p2p/16Uiu2HAmC1B1aSy1zeeB3fQ79U8yJRnqn4BbXtgC7f7KEJMD4oTd
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.180.91 waku 911d6504e481727bb74fa6c838b859e945aa0703f7e9bf509d21cff4668378d4
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 911d6504e481. Setting up logs at ./log/docker/node2_2025-01-24_10-38-45__7f7d2940-0eed-4c3d-9b42-68343684c05f__harbor.status.im_wakuorg_nwaku:test-debug-flag.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image harbor.status.im/wakuorg/nwaku:test-debug-flag. REST: 7908
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7908/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:7908/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.180.91/tcp/7909/p2p/16Uiu2HAmUAhcX49DagKHniPQuu1fKkwCE2JgjafnoyJB8on2hZbM","/ip4/172.18.180.91/tcp/7910/ws/p2p/16Uiu2HAmUAhcX49DagKHniPQuu1fKkwCE2JgjafnoyJB8on2hZbM"],"enrUri":"enr:-L24QIlbwfDmemxsWD0AAQSRVx4WANX9j5qKqeVPnzk0gqoaOwZ-aMYBxy3tM4-66-BVsyO31f8P3YyK5XhRvL_2mYoCgmlkgnY0gmlwhKwStFuKbXVsdGlhZGRyc5YACASsErRbBh7lAAoErBK0WwYe5t0DgnJzhQADAQAAiXNlY3AyNTZrMaED5nvNl7Yw7D0_XVSRgy3J38QmysEqAikbsPlEaO-8qbiDdGNwgh7lg3VkcIIe54V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:7908/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.57.236/tcp/18357/p2p/16Uiu2HAmC1B1aSy1zeeB3fQ79U8yJRnqn4BbXtgC7f7KEJMD4oTd"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:18356/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:7908/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "a1fe1b97-61ad-4cd5-96c8-a46973d0548d", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"a1fe1b97-61ad-4cd5-96c8-a46973d0548d","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X PUT "http://127.0.0.1:7908/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": 1, "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:7908/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 240dbedda225
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 911d6504e481
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 240dbedda225. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.