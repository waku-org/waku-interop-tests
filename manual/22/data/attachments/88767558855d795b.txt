[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_publish_with_payload_less_than_150_kb with id: 2025-01-24_10-36-16__f36fd048-09e2-4342-988a-ae5acadfc3b1
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.relay:relay.py:28 Running fixture setup: relay_setup
[35mDEBUG   [0m src.steps.relay:relay.py:34 Running fixture setup: setup_main_relay_nodes
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image harbor.status.im/wakuorg/nwaku:test-debug-flag
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-24_10-36-16__f36fd048-09e2-4342-988a-ae5acadfc3b1__harbor.status.im_wakuorg_nwaku:test-debug-flag.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.50.92
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['44384', '44385', '44386', '44387', '44388']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 44384:44384 -p 44385:44385 -p 44386:44386 -p 44387:44387 -p 44388:44388 harbor.status.im/wakuorg/nwaku:test-debug-flag --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=44386 --rest-port=44384 --tcp-port=44385 --discv5-udp-port=44387 --rest-address=0.0.0.0 --nat=extip:172.18.50.92 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=59333fbe9a2edbe6bdfdf8eac11ab7c0bba1ed7ed82bd02087689c0caee5ea3b --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=44388 --metrics-logging=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.50.92 waku 826e4b0326eab287654369db5c860f8f2775a4d35f29aa0cb3ab244afaf37453
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 826e4b0326ea. Setting up logs at ./log/docker/node1_2025-01-24_10-36-16__f36fd048-09e2-4342-988a-ae5acadfc3b1__harbor.status.im_wakuorg_nwaku:test-debug-flag.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image harbor.status.im/wakuorg/nwaku:test-debug-flag. REST: 44384
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 6d2b3d6b6e80. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:44384/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:44384/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.50.92/tcp/44385/p2p/16Uiu2HAmQ6xoKY4Xj71kzsFXs9yb4bDNaVjmedQXtS2iXGoj4j5D","/ip4/172.18.50.92/tcp/44386/ws/p2p/16Uiu2HAmQ6xoKY4Xj71kzsFXs9yb4bDNaVjmedQXtS2iXGoj4j5D"],"enrUri":"enr:-L24QCsNHJP_0fIpUkRBrFv9nVBTj7xVwtTdlIqZ6qSZ5OzTK3njMjWOnjffq-M0Hpdt0PVt_gii8kuF7eSE_JfCp0sCgmlkgnY0gmlwhKwSMlyKbXVsdGlhZGRyc5YACASsEjJcBq1hAAoErBIyXAatYt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDqhfnPWeBtTEKxnjJr-zeDmph97Q--r_OtpvQAcACVnSDdGNwgq1hg3VkcIKtY4V3YWt1MgE"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image harbor.status.im/wakuorg/nwaku:test-debug-flag
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-24_10-36-16__f36fd048-09e2-4342-988a-ae5acadfc3b1__harbor.status.im_wakuorg_nwaku:test-debug-flag.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.201.124
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['34540', '34541', '34542', '34543', '34544']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 34540:34540 -p 34541:34541 -p 34542:34542 -p 34543:34543 -p 34544:34544 harbor.status.im/wakuorg/nwaku:test-debug-flag --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=34542 --rest-port=34540 --tcp-port=34541 --discv5-udp-port=34543 --rest-address=0.0.0.0 --nat=extip:172.18.201.124 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=a392bb73cedc5a32ec4e268aabe3bbdcab11eb8efc1bd91b71dd7e36cc798003 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=34544 --metrics-logging=true --relay=true --discv5-bootstrap-node=enr:-L24QCsNHJP_0fIpUkRBrFv9nVBTj7xVwtTdlIqZ6qSZ5OzTK3njMjWOnjffq-M0Hpdt0PVt_gii8kuF7eSE_JfCp0sCgmlkgnY0gmlwhKwSMlyKbXVsdGlhZGRyc5YACASsEjJcBq1hAAoErBIyXAatYt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDqhfnPWeBtTEKxnjJr-zeDmph97Q--r_OtpvQAcACVnSDdGNwgq1hg3VkcIKtY4V3YWt1MgE
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.201.124 waku fd7baadeb89f4e443e87b7ed1bd29424367c4de53cb4d58cd01271a6da4e2d66
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID fd7baadeb89f. Setting up logs at ./log/docker/node2_2025-01-24_10-36-16__f36fd048-09e2-4342-988a-ae5acadfc3b1__harbor.status.im_wakuorg_nwaku:test-debug-flag.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image harbor.status.im/wakuorg/nwaku:test-debug-flag. REST: 34540
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:34540/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:34540/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.201.124/tcp/34541/p2p/16Uiu2HAmLR9dh8sNmXGTVNSA2ft9ngPKt9QNacbZgTbRqZSMCyLz","/ip4/172.18.201.124/tcp/34542/ws/p2p/16Uiu2HAmLR9dh8sNmXGTVNSA2ft9ngPKt9QNacbZgTbRqZSMCyLz"],"enrUri":"enr:-L24QECKPQc86e3AXgEkhiF6wsA9g5Ncsridd1rsQ48hk5kYTAGzw5t-0OxieeRC2N3pX65kVBwFDWNows3Z428WKbQCgmlkgnY0gmlwhKwSyXyKbXVsdGlhZGRyc5YACASsEsl8BobtAAoErBLJfAaG7t0DgnJzhQADAQAAiXNlY3AyNTZrMaEDc1HcNWLr2eFEJfncT3nu-OnjfV98_p1odVCSKUn0sf-DdGNwgobtg3VkcIKG74V3YWt1MgE"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:34540/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.50.92/tcp/44385/p2p/16Uiu2HAmQ6xoKY4Xj71kzsFXs9yb4bDNaVjmedQXtS2iXGoj4j5D"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.relay:relay.py:59 Running fixture setup: subscribe_main_relay_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:44384/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:34540/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:44384/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "UmVsYXkgd29ya3MhIQ==", "contentTopic": "/test/1/waku-relay/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:harbor.status.im/wakuorg/nwaku:test-debug-flag can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:44384/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1737714979617407232,"ephemeral":false}]'
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:harbor.status.im/wakuorg/nwaku:test-debug-flag can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:34540/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"UmVsYXkgd29ya3MhIQ==","contentTopic":"/test/1/waku-relay/proto","version":0,"timestamp":1737714979617407232,"ephemeral":false}]'
[32mINFO    [0m src.steps.relay:relay.py:71 WARM UP successful!!
[35mDEBUG   [0m tests.relay.test_publish:test_publish.py:49 Running test with payload length of 102400 bytes
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 2 seconds
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_1:harbor.status.im/wakuorg/nwaku:test-debug-flag can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:44384/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[35mDEBUG   [0m src.steps.relay:relay.py:123 Checking that peer NODE_2:harbor.status.im/wakuorg/nwaku:test-debug-flag can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:34540/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:custom_logger.py:10 Log line was discarded because it's longer than max_log_line_length=5000
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 826e4b0326ea
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id fd7baadeb89f
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 826e4b0326ea. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.