[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_subscribe_with_extra_field with id: 2025-01-24_10-35-39__8fc1824a-b4e5-4482-820f-04daca991b15
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image harbor.status.im/wakuorg/nwaku:test-debug-flag
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-24_10-35-39__8fc1824a-b4e5-4482-820f-04daca991b15__harbor.status.im_wakuorg_nwaku:test-debug-flag.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.174.3
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['33606', '33607', '33608', '33609', '33610']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 33606:33606 -p 33607:33607 -p 33608:33608 -p 33609:33609 -p 33610:33610 harbor.status.im/wakuorg/nwaku:test-debug-flag --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=33608 --rest-port=33606 --tcp-port=33607 --discv5-udp-port=33609 --rest-address=0.0.0.0 --nat=extip:172.18.174.3 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=108fa7d0aabbf104ef2faa48671ef0a9e73a1a35c2bc6510b2564dcbb88c1aae --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=33610 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.174.3 waku c9366eddededaf3574208836256cf4731ec4e545389c15bf38efe03aa8473db0
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID c9366eddeded. Setting up logs at ./log/docker/node1_2025-01-24_10-35-39__8fc1824a-b4e5-4482-820f-04daca991b15__harbor.status.im_wakuorg_nwaku:test-debug-flag.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image harbor.status.im/wakuorg/nwaku:test-debug-flag. REST: 33606
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 2692e4b86e18. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33606/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33606/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.174.3/tcp/33607/p2p/16Uiu2HAm8ni8s7dvfv4Wj2NebF4vA2wW9jotRCdsSJ3aZq1ef161","/ip4/172.18.174.3/tcp/33608/ws/p2p/16Uiu2HAm8ni8s7dvfv4Wj2NebF4vA2wW9jotRCdsSJ3aZq1ef161"],"enrUri":"enr:-L24QBdTyNeBB4At70UhFioTMjYg0iC4DtPMbqSzJq1MWXDbGSgNd9HL5m6p4cdubolI10I9Xa3ojmYfnhkFqmUH4FsCgmlkgnY0gmlwhKwSrgOKbXVsdGlhZGRyc5YACASsEq4DBoNHAAoErBKuAwaDSN0DgnJzhQADAQAAiXNlY3AyNTZrMaECxouQtodFE_YbvwVpGQWjHdwi6SUcysz9h5Xn9P1mg2KDdGNwgoNHg3VkcIKDSYV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image harbor.status.im/wakuorg/nwaku:test-debug-flag
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-24_10-35-39__8fc1824a-b4e5-4482-820f-04daca991b15__harbor.status.im_wakuorg_nwaku:test-debug-flag.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.120.25
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['33064', '33065', '33066', '33067', '33068']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 33064:33064 -p 33065:33065 -p 33066:33066 -p 33067:33067 -p 33068:33068 harbor.status.im/wakuorg/nwaku:test-debug-flag --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=33066 --rest-port=33064 --tcp-port=33065 --discv5-udp-port=33067 --rest-address=0.0.0.0 --nat=extip:172.18.120.25 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=4174adef41ba1d5f5001cdf3e9c0a4aa7dfc7eababdd5f11eebc25b68e6a4be7 --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=33068 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QBdTyNeBB4At70UhFioTMjYg0iC4DtPMbqSzJq1MWXDbGSgNd9HL5m6p4cdubolI10I9Xa3ojmYfnhkFqmUH4FsCgmlkgnY0gmlwhKwSrgOKbXVsdGlhZGRyc5YACASsEq4DBoNHAAoErBKuAwaDSN0DgnJzhQADAQAAiXNlY3AyNTZrMaECxouQtodFE_YbvwVpGQWjHdwi6SUcysz9h5Xn9P1mg2KDdGNwgoNHg3VkcIKDSYV3YWt1MgU --filternode=/ip4/172.18.174.3/tcp/33607/p2p/16Uiu2HAm8ni8s7dvfv4Wj2NebF4vA2wW9jotRCdsSJ3aZq1ef161
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.120.25 waku d1830b0fd9a736f2bee833c7940e0ce0c977a44be16552eda531bf7f21782f30
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID d1830b0fd9a7. Setting up logs at ./log/docker/node2_2025-01-24_10-35-39__8fc1824a-b4e5-4482-820f-04daca991b15__harbor.status.im_wakuorg_nwaku:test-debug-flag.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image harbor.status.im/wakuorg/nwaku:test-debug-flag. REST: 33064
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33064/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:33064/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.120.25/tcp/33065/p2p/16Uiu2HAkzqYfP4QDNkaPGKuuhKMx3fcevLWgHhL86TtLnpoYRQUV","/ip4/172.18.120.25/tcp/33066/ws/p2p/16Uiu2HAkzqYfP4QDNkaPGKuuhKMx3fcevLWgHhL86TtLnpoYRQUV"],"enrUri":"enr:-L24QNtgkl3dnLsQ1uaRUloaH8jVUBmlq6v1ToiYOZNBQXN2LVMyCD5l3SZDHI9zjldLEQwKQYcmln1uOTPaDA54kncCgmlkgnY0gmlwhKwSeBmKbXVsdGlhZGRyc5YACASsEngZBoEpAAoErBJ4GQaBKt0DgnJzhQADAQAAiXNlY3AyNTZrMaECUGgZpTOGK7Hc2af4GbKMm7up9f2xIdYUKp9qY0zgPyaDdGNwgoEpg3VkcIKBK4V3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:33064/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.174.3/tcp/33607/p2p/16Uiu2HAm8ni8s7dvfv4Wj2NebF4vA2wW9jotRCdsSJ3aZq1ef161"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:33606/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:33064/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "e5334418-7c34-406b-ba1d-dfbbb642a2cf", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"e5334418-7c34-406b-ba1d-dfbbb642a2cf","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:33064/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1", "extraField": "extraValue"}'
[1m[31mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:33064/filter/v2/subscriptions. Response content: b'{"requestId":"unknown","statusDesc":"BAD_REQUEST: Failed to decode request: (status: 400 Bad Request, headers: , kind: Error, errobj: (status: 400 Bad Request, message: \\"Invalid content body, could not decode. Unable to deserialize data\\", contentType: \\"text/plain\\"))"}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id c9366eddeded
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id d1830b0fd9a7
[1m[31mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container c9366eddeded. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.