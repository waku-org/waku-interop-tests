[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_filter_unsubscribe_from_all_subscribed_content_topics with id: 2025-01-23_11-39-17__e3ea61f2-07c2-4279-a6f6-8567931a2e30
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.filter:filter.py:28 Running fixture setup: filter_setup
[35mDEBUG   [0m src.steps.filter:filter.py:34 Running fixture setup: setup_main_relay_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image harbor.status.im/wakuorg/nwaku:test-debug-flag
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node1_2025-01-23_11-39-17__e3ea61f2-07c2-4279-a6f6-8567931a2e30__harbor.status.im_wakuorg_nwaku:test-debug-flag.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.255.49
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['30897', '30898', '30899', '30900', '30901']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 30897:30897 -p 30898:30898 -p 30899:30899 -p 30900:30900 -p 30901:30901 harbor.status.im/wakuorg/nwaku:test-debug-flag --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=30899 --rest-port=30897 --tcp-port=30898 --discv5-udp-port=30900 --rest-address=0.0.0.0 --nat=extip:172.18.255.49 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=d0e584867ee20bfabc56cfa6b955e7e817fba2a5deaabbf6ddc9c648108fbb6e --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=30901 --metrics-logging=true --relay=true --filter=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.255.49 waku b23c1d364d728525536aca5931012c7e764288d39e90118d5dc069c5c8899d5e
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID b23c1d364d72. Setting up logs at ./log/docker/node1_2025-01-23_11-39-17__e3ea61f2-07c2-4279-a6f6-8567931a2e30__harbor.status.im_wakuorg_nwaku:test-debug-flag.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image harbor.status.im/wakuorg/nwaku:test-debug-flag. REST: 30897
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container a588389b7abf. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30897/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:30897/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.255.49/tcp/30898/p2p/16Uiu2HAmNHqptMBCdbqXEBMmxof87n3d3p1jQQyAgUJkrP4idgiN","/ip4/172.18.255.49/tcp/30899/ws/p2p/16Uiu2HAmNHqptMBCdbqXEBMmxof87n3d3p1jQQyAgUJkrP4idgiN"],"enrUri":"enr:-L24QHjho60WmLfHSV07tkwUUGLj_CpGPM_-sRxjHNBNBAKSMh6NzJFvpN376Kv0rKweeVZtzUP-IF_nzBLrF4mumTQCgmlkgnY0gmlwhKwS_zGKbXVsdGlhZGRyc5YACASsEv8xBniyAAoErBL_MQZ4s90DgnJzhQADAQAAiXNlY3AyNTZrMaEDjyoIr2U-l3vKscjPv55fgrvNuWvjIckA4Or3WYTq1OuDdGNwgniyg3VkcIJ4tIV3YWt1MgU"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.steps.filter:filter.py:39 Running fixture setup: setup_main_filter_node
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image harbor.status.im/wakuorg/nwaku:test-debug-flag
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/node2_2025-01-23_11-39-17__e3ea61f2-07c2-4279-a6f6-8567931a2e30__harbor.status.im_wakuorg_nwaku:test-debug-flag.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.85.229
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['19763', '19764', '19765', '19766', '19767']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 19763:19763 -p 19764:19764 -p 19765:19765 -p 19766:19766 -p 19767:19767 harbor.status.im/wakuorg/nwaku:test-debug-flag --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=19765 --rest-port=19763 --tcp-port=19764 --discv5-udp-port=19766 --rest-address=0.0.0.0 --nat=extip:172.18.85.229 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=d7bc2bd626e9472a6de859b3cb8dd2e18ddc9abbf439b2a3f2ecfc2929d8aadb --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=19767 --metrics-logging=true --relay=false --discv5-bootstrap-node=enr:-L24QHjho60WmLfHSV07tkwUUGLj_CpGPM_-sRxjHNBNBAKSMh6NzJFvpN376Kv0rKweeVZtzUP-IF_nzBLrF4mumTQCgmlkgnY0gmlwhKwS_zGKbXVsdGlhZGRyc5YACASsEv8xBniyAAoErBL_MQZ4s90DgnJzhQADAQAAiXNlY3AyNTZrMaEDjyoIr2U-l3vKscjPv55fgrvNuWvjIckA4Or3WYTq1OuDdGNwgniyg3VkcIJ4tIV3YWt1MgU --filternode=/ip4/172.18.255.49/tcp/30898/p2p/16Uiu2HAmNHqptMBCdbqXEBMmxof87n3d3p1jQQyAgUJkrP4idgiN
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.85.229 waku 307c5ef2deaebf3e4a7b5260cb22ebb84f4771137496757406f50651c5c5aea1
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 307c5ef2deae. Setting up logs at ./log/docker/node2_2025-01-23_11-39-17__e3ea61f2-07c2-4279-a6f6-8567931a2e30__harbor.status.im_wakuorg_nwaku:test-debug-flag.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image harbor.status.im/wakuorg/nwaku:test-debug-flag. REST: 19763
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:19763/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:19763/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.85.229/tcp/19764/p2p/16Uiu2HAm1zQMsr5kBoxuTcoVke6uNCrdfTKB7vVgS8xLusK3DKVi","/ip4/172.18.85.229/tcp/19765/ws/p2p/16Uiu2HAm1zQMsr5kBoxuTcoVke6uNCrdfTKB7vVgS8xLusK3DKVi"],"enrUri":"enr:-L24QNEYPDMaxAU2AXfdAZYr2rKfUJ5G55ybfUfElF5VPFQqDK_y2SeXF3joE7F2DdFeYbmYpBPIm4kqix2VxzdxxcMCgmlkgnY0gmlwhKwSVeWKbXVsdGlhZGRyc5YACASsElXlBk00AAoErBJV5QZNNd0DgnJzhQADAQAAiXNlY3AyNTZrMaECYYigpW3yXUTSBTMXdZc9DLhr4q8dzuhbXImv6FDno8mDdGNwgk00g3VkcIJNNoV3YWt1MgA"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:19763/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.255.49/tcp/30898/p2p/16Uiu2HAmNHqptMBCdbqXEBMmxof87n3d3p1jQQyAgUJkrP4idgiN"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.filter:filter.py:47 Running fixture setup: subscribe_main_nodes
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:30897/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:19763/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "e57a4cd0-8bf3-4640-8646-8450840367d1", "contentFilters": ["/test/1/waku-filter/proto"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"e57a4cd0-8bf3-4640-8646-8450840367d1","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:30897/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/1"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:19763/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "3b662135-aaec-4929-b9bc-676c839dc761", "contentFilters": ["Hello World!", "1234567890"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"3b662135-aaec-4929-b9bc-676c839dc761","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:30897/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "RmlsdGVyIHdvcmtzISE=", "contentTopic": "1234567890", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.filter:filter.py:98 Checking that peer NODE_2:harbor.status.im/wakuorg/nwaku:test-debug-flag can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:19763/filter/v2/messages/1234567890" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'[{"payload":"RmlsdGVyIHdvcmtzISE=","contentTopic":"1234567890","version":0,"timestamp":1737632360503849216,"ephemeral":false}]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X DELETE "http://127.0.0.1:19763/filter/v2/subscriptions" -H "Content-Type: application/json" -d '{"requestId": "1", "contentFilters": ["Hello World!", "1234567890"], "pubsubTopic": "/waku/2/rs/3/1"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"1","statusDesc":"OK"}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:30897/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F1" -H "Content-Type: application/json" -d '{"payload": "RmlsdGVyIHdvcmtzISE=", "contentTopic": "1234567890", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.1 seconds
[35mDEBUG   [0m src.steps.filter:filter.py:98 Checking that peer NODE_2:harbor.status.im/wakuorg/nwaku:test-debug-flag can find the published message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:19763/filter/v2/messages/1234567890" -H "Content-Type: application/json" -d 'None'
[31m[1mERROR   [0m src.node.api_clients.base_client:base_client.py:16 HTTP error occurred: 400 Client Error: Bad Request for url: http://127.0.0.1:19763/filter/v2/messages/1234567890. Response content: b'Not subscribed to topic: 1234567890'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id b23c1d364d72
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 307c5ef2deae
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container b23c1d364d72. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.