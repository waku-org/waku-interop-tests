[35mDEBUG   [0m tests.conftest:conftest.py:51 Running fixture setup: test_id
[35mDEBUG   [0m tests.conftest:conftest.py:57 Running test: test_main_node_relay_and_store__peer_only_relay with id: 2025-01-23_11-59-30__5c7118a4-92e6-4929-bcbb-5f27678c7aac
[35mDEBUG   [0m src.steps.common:common.py:18 Running fixture setup: common_setup
[35mDEBUG   [0m src.steps.store:store.py:31 Running fixture setup: store_setup
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image harbor.status.im/wakuorg/nwaku:test-debug-flag
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/publishing_node1_2025-01-23_11-59-30__5c7118a4-92e6-4929-bcbb-5f27678c7aac__harbor.status.im_wakuorg_nwaku:test-debug-flag.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.32.11
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['2006', '2007', '2008', '2009', '2010']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 2006:2006 -p 2007:2007 -p 2008:2008 -p 2009:2009 -p 2010:2010 harbor.status.im/wakuorg/nwaku:test-debug-flag --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=2008 --rest-port=2006 --tcp-port=2007 --discv5-udp-port=2009 --rest-address=0.0.0.0 --nat=extip:172.18.32.11 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=beecdce12cd7cc0abdfff0f69ce8f6cad5cdc070edc66c222605cbce92949feb --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=2010 --metrics-logging=true --store=true --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.32.11 waku 28d9b1340e9295e0d0799914110c68540669d2ebe8f072050e7c836db75ae5eb
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 28d9b1340e92. Setting up logs at ./log/docker/publishing_node1_2025-01-23_11-59-30__5c7118a4-92e6-4929-bcbb-5f27678c7aac__harbor.status.im_wakuorg_nwaku:test-debug-flag.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image harbor.status.im/wakuorg/nwaku:test-debug-flag. REST: 2006
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container a14c06063d1b. Exiting log stream.
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:2006/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:2006/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.32.11/tcp/2007/p2p/16Uiu2HAmRTGkizmZaDqxQ2f2Ax8XRUwrx1N8MrXrVnsrciG43zMj","/ip4/172.18.32.11/tcp/2008/ws/p2p/16Uiu2HAmRTGkizmZaDqxQ2f2Ax8XRUwrx1N8MrXrVnsrciG43zMj"],"enrUri":"enr:-L24QIp0FTdytQDfzjCpaeps1AAXmhHEhZhdqDERJDbZ3vFwQ5vB5-aoV3v-NRZRQBqz0x93DbMjUSo0_KYSojB9AhgCgmlkgnY0gmlwhKwSIAuKbXVsdGlhZGRyc5YACASsEiALBgfXAAoErBIgCwYH2N0DgnJzhQADAQAAiXNlY3AyNTZrMaEDvieCKg9LepwcPsjSzwXDAzW-bPfcmK-a7lNONTJHalaDdGNwggfXg3VkcIIH2YV3YWt1MgM"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:19 Docker client initialized with image harbor.status.im/wakuorg/nwaku:test-debug-flag
[35mDEBUG   [0m src.node.waku_node:waku_node.py:85 WakuNode instance initialized with log path ./log/docker/store_node1_2025-01-23_11-59-30__5c7118a4-92e6-4929-bcbb-5f27678c7aac__harbor.status.im_wakuorg_nwaku:test-debug-flag.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:89 Starting Node...
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:22 Attempting to create or retrieve network waku
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:25 Network waku already exists
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:108 Generated random external IP 172.18.33.248
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:101 Generated ports ['1992', '1993', '1994', '1995', '1996']
[35mDEBUG   [0m src.node.waku_node:waku_node.py:439 RLN credentials were not set
[32mINFO    [0m src.node.waku_node:waku_node.py:168 RLN credentials not set or credential store not available, starting without RLN
[35mDEBUG   [0m src.node.waku_node:waku_node.py:170 Using volumes []
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:49 docker run -i -t -p 1992:1992 -p 1993:1993 -p 1994:1994 -p 1995:1995 -p 1996:1996 harbor.status.im/wakuorg/nwaku:test-debug-flag --listen-address=0.0.0.0 --rest=true --rest-admin=true --websocket-support=true --log-level=TRACE --rest-relay-cache-capacity=100 --websocket-port=1994 --rest-port=1992 --tcp-port=1993 --discv5-udp-port=1995 --rest-address=0.0.0.0 --nat=extip:172.18.33.248 --peer-exchange=true --discv5-discovery=true --cluster-id=3 --nodekey=cbee9fbabea4b0fd5bf4c8fe9a6d250dbb6a571173b7aec4aa4caa0cdc8ef24a --shard=0 --metrics-server=true --metrics-server-address=0.0.0.0 --metrics-server-port=1996 --metrics-logging=true --discv5-bootstrap-node=enr:-L24QIp0FTdytQDfzjCpaeps1AAXmhHEhZhdqDERJDbZ3vFwQ5vB5-aoV3v-NRZRQBqz0x93DbMjUSo0_KYSojB9AhgCgmlkgnY0gmlwhKwSIAuKbXVsdGlhZGRyc5YACASsEiALBgfXAAoErBIgCwYH2N0DgnJzhQADAQAAiXNlY3AyNTZrMaEDvieCKg9LepwcPsjSzwXDAzW-bPfcmK-a7lNONTJHalaDdGNwggfXg3VkcIIH2YV3YWt1MgM --storenode=/ip4/172.18.32.11/tcp/2007/p2p/16Uiu2HAmRTGkizmZaDqxQ2f2Ax8XRUwrx1N8MrXrVnsrciG43zMj --store=false --relay=true
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:55 docker network connect --ip 172.18.33.248 waku 2432d1d387f019b5f320561aede4128f255497fedc69c8eb14702e4fff2feb7b
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:58 Container started with ID 2432d1d387f0. Setting up logs at ./log/docker/store_node1_2025-01-23_11-59-30__5c7118a4-92e6-4929-bcbb-5f27678c7aac__harbor.status.im_wakuorg_nwaku:test-debug-flag.log
[35mDEBUG   [0m src.node.waku_node:waku_node.py:182 Started container from image harbor.status.im/wakuorg/nwaku:test-debug-flag. REST: 1992
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 1 seconds
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:1992/health" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"nodeHealth":"Ready","protocolsHealth":[]}'
[32mINFO    [0m src.node.waku_node:waku_node.py:282 Node protocols are initialized !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:1992/debug/v1/info" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"listenAddresses":["/ip4/172.18.33.248/tcp/1993/p2p/16Uiu2HAmPSQvFEg2P8P5N448w34KQyfyqB186i3FPbn6moDgdt95","/ip4/172.18.33.248/tcp/1994/ws/p2p/16Uiu2HAmPSQvFEg2P8P5N448w34KQyfyqB186i3FPbn6moDgdt95"],"enrUri":"enr:-L24QKI-U3b3p3UxZa1IeGC3WzQDn74VJL1vaTsFw7nup5JqENnkT5ZeLPxOUTmBuQxx9B6EdU-8wySVDrrttu3fO0oCgmlkgnY0gmlwhKwSIfiKbXVsdGlhZGRyc5YACASsEiH4BgfJAAoErBIh-AYHyt0DgnJzhQADAQAAiXNlY3AyNTZrMaEDoDfI-FkTbMzIcEAzvpblno3T6RgXuNIX7rUdOTnkixCDdGNwggfJg3VkcIIHy4V3YWt1MgE"}'
[32mINFO    [0m src.node.waku_node:waku_node.py:287 REST service is ready !!
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:1992/admin/v1/peers" -H "Content-Type: application/json" -d '["/ip4/172.18.32.11/tcp/2007/p2p/16Uiu2HAmRTGkizmZaDqxQ2f2Ax8XRUwrx1N8MrXrVnsrciG43zMj"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:2006/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/0"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:1992/relay/v1/subscriptions" -H "Content-Type: application/json" -d '["/waku/2/rs/3/0"]'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.steps.store:store.py:132 Relaying message
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X POST "http://127.0.0.1:2006/relay/v1/messages/%2Fwaku%2F2%2Frs%2F3%2F0" -H "Content-Type: application/json" -d '{"payload": "U3RvcmUgd29ya3MhIQ==", "contentTopic": "/myapp/1/latest/proto", "timestamp": '$(date +%s%N)'}'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'OK'
[35mDEBUG   [0m src.libs.common:common.py:35 Sleeping for 0.2 seconds
[35mDEBUG   [0m src.steps.store:store.py:218 Checking that peer harbor.status.im/wakuorg/nwaku:test-debug-flag can find the stored messages
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:2006/store/v3/messages?pubsubTopic=%2Fwaku%2F2%2Frs%2F3%2F0&pageSize=5&ascending=true" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"","statusCode":200,"statusDesc":"OK","messages":[{"messageHash":"v11ORiwLC149ULecI3GDzZnhfPvWFAirTaPHs3Yyxy0="}]}'
[35mDEBUG   [0m src.steps.store:store.py:218 Checking that peer harbor.status.im/wakuorg/nwaku:test-debug-flag can find the stored messages
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:37 curl -v -X GET "http://127.0.0.1:1992/store/v3/messages?pubsubTopic=%2Fwaku%2F2%2Frs%2F3%2F0&pageSize=5&ascending=true" -H "Content-Type: application/json" -d 'None'
[32mINFO    [0m src.node.api_clients.base_client:base_client.py:22 Response status code: 200. Response content: b'{"requestId":"62d7dc7d1db897e989a7","statusCode":200,"statusDesc":"OK","messages":[{"messageHash":"v11ORiwLC149ULecI3GDzZnhfPvWFAirTaPHs3Yyxy0="}]}'
[35mDEBUG   [0m tests.conftest:conftest.py:59 Running fixture teardown: test_setup
[35mDEBUG   [0m tests.conftest:conftest.py:83 Running fixture teardown: close_open_nodes
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 28d9b1340e92
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:226 Stopping container with id 2432d1d387f0
[31m[1mERROR   [0m src.node.docker_mananger:docker_mananger.py:89 Max retries reached for container 28d9b1340e92. Exiting log stream.
[35mDEBUG   [0m src.node.waku_node:waku_node.py:233 Container stopped.
[35mDEBUG   [0m tests.conftest:conftest.py:98 Running fixture teardown: check_waku_log_errors
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.
[35mDEBUG   [0m src.node.docker_mananger:docker_mananger.py:144 No errors found in the waku logs.